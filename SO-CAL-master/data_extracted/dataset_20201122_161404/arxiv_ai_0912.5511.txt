We address the problem of belief change in (nonmonotonic) logic programming under answer set semantics.
Unlike previous approaches to belief change in logic programming, our formal techniques are analogous to those of distance-based belief revision in propositional logic.
In developing our results, we build upon the model theory of logic programs furnished by SE models.
Since SE models provide a formal, monotonic characterisation of logic programs, we can adapt techniques from the area of belief revision to belief change in logic programs.
We introduce methods for revising and merging logic programs, respectively.
For the former, we study both subset-based revision as well as cardinality-based revision, and we show that they satisfy the majority of the AGM postulates for revision.
For merging, we consider operators following arbitration merging and IC merging, respectively.
We also present encodings for computing the revision as well as the merging of logic programs within the same logic programming framework, giving rise to a direct implementation of our approach in terms of off-the-shelf answer set solvers.
These encodings reflect in turn the fact that our change operators do not increase the complexity of the base formalism.
