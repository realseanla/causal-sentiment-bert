We examine the practicality for a user of using Answer Set Programming (ASP) for representing logical formalisms.
We choose as an example a formalism aiming at capturing causal explanations from causal information.
We provide an implementation, showing the naturalness and relative efficiency of this translation job.
We are interested in the ease for writing an ASP program, in accordance with the claimed ``declarative'' aspect of ASP.
Limitations of the earlier systems (poor data structure and difficulty in reusing pieces of programs) made that in practice, the ``declarative aspect'' was more theoretical than practical.
We show how recent improvements in working ASP systems facilitate a lot the translation, even if a few improvements could still be useful.
