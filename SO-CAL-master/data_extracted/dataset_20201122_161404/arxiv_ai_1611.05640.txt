When a processing unit relies on data from external streams, we may face the problem that the stream data needs to be rearranged in a way that allows the unit to perform its task(s).
On arrival of new data, we must decide whether there is sufficient information available to start processing or whether to wait for more data.
Furthermore, we need to ensure that the data meets the input specification of the processing step.
In the case of multiple input streams it is also necessary to coordinate which data from which incoming stream should form the input of the next process instantiation.
In this work, we propose a declarative approach as an interface between multiple streams and a processing unit.
The idea is to specify via answer-set programming how to arrange incoming data in packages that are suitable as input for subsequent processing.
Our approach is intended for use in asynchronous multi-context systems (aMCSs), a recently proposed framework for loose coupling of knowledge representation formalisms that allows for online reasoning in a dynamic environment.
Contexts in aMCSs process data streams from external sources and other contexts.
