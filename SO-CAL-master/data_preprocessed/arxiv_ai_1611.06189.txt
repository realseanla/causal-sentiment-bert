A/DT directed/JJ graph/NN where/WRB there/EX is/VBZ exactly/RB one/CD edge/NN between/IN every/DT pair/NN of/IN vertices/NNS is/VBZ called/VBN a/DT {/-LRB- \/SYM em/PRP tournament/NN }/-RRB- ./.
Finding/VBG the/DT "/`` best/JJS "/`` set/NN of/IN vertices/NNS of/IN a/DT tournament/NN is/VBZ a/DT well/RB studied/VBN problem/NN in/IN social/JJ choice/NN theory/NN ./.
A/DT {/-LRB- \/SYM em/PRP tournament/NN solution/NN }/-RRB- takes/VBZ a/DT tournament/NN as/IN input/NN and/CC outputs/NNS a/DT subset/NN of/IN vertices/NNS of/IN the/DT input/NN tournament/NN ./.
However/RB ,/, in/IN many/JJ applications/NNS ,/, for/IN example/NN ,/, choosing/VBG the/DT best/JJS set/NN of/IN drugs/NNS from/IN a/DT given/VBN set/NN of/IN drugs/NNS ,/, the/DT edges/NNS of/IN the/DT tournament/NN are/VBP given/VBN only/RB implicitly/RB and/CC knowing/VBG the/DT orientation/NN of/IN an/DT edge/NN is/VBZ costly/JJ ./.
In/IN such/JJ scenarios/NNS ,/, we/PRP would/MD like/VB to/TO know/VB the/DT best/JJS set/NN of/IN vertices/NNS (/-LRB- according/VBG to/IN some/DT tournament/NN solution/NN )/-RRB- by/IN "/`` querying/VBG "/'' as/IN few/JJ edges/NNS as/IN possible/JJ ./.
We/PRP ,/, in/IN this/DT paper/NN ,/, precisely/RB study/VB this/DT problem/NN for/IN commonly/RB used/VBN tournament/NN solutions/NNS :/: given/VBN an/DT oracle/NN access/NN to/IN the/DT edges/NNS of/IN a/DT tournament/NN T/NN ,/, find/VB $/$ f/LS (/-LRB- T/NN )/-RRB- $/$ by/IN querying/VBG as/IN few/JJ edges/NNS as/IN possible/JJ ,/, for/IN a/DT tournament/NN solution/NN f/NN ./.
We/PRP first/RB show/VBP that/IN the/DT set/NN of/IN Condorcet/NNP non-losers/NNS in/IN a/DT tournament/NN can/MD be/VB found/VBN by/IN querying/VBG $/$ 2n/CD -/HYPH \/SYM lfloor/NN \/SYM log/NN n/NN \/SYM rfloor/NN -2/NN $/$ edges/VBZ only/RB and/CC this/DT is/VBZ tight/JJ in/IN the/DT sense/NN that/IN every/DT algorithm/NN for/IN finding/VBG the/DT set/NN of/IN Condorcet/NNP non-losers/NNS needs/VBZ to/TO query/VB at/IN least/RBS $/$ 2n/CD -/HYPH \/SYM lfloor/NN \/SYM log/NN n/NN \/SYM rfloor/NN -2/NN $/$ edges/NNS in/IN the/DT worst/JJS case/NN ,/, where/WRB $/$ n/NN $/$ is/VBZ the/DT number/NN of/IN vertices/NNS in/IN the/DT input/NN tournament/NN ./.
We/PRP then/RB move/VBP on/IN to/TO study/VB other/JJ popular/JJ tournament/NN solutions/NNS and/CC show/VBP that/IN any/DT algorithm/NN for/IN finding/VBG the/DT Copeland/NNP set/NN ,/, the/DT Slater/NNP set/NN ,/, the/DT Markov/NNP set/NN ,/, the/DT bipartisan/JJ set/NN ,/, the/DT uncovered/VBN set/NN ,/, the/DT Banks/NNS set/VBN ,/, and/CC the/DT top/JJ cycle/NN must/MD query/VB $/$ \/SYM Omega/NN (/-LRB- n/NN ^/SYM 2/CD )/-RRB- $/$ edges/NNS in/IN the/DT worst/JJS case/NN ./.
On/IN the/DT positive/JJ side/NN ,/, we/PRP are/VBP able/JJ to/TO circumvent/VB our/PRP$ strong/JJ query/NN complexity/NN lower/JJR bound/JJ results/NNS by/IN proving/VBG that/DT ,/, if/IN the/DT size/NN of/IN the/DT top/JJ cycle/NN of/IN the/DT input/NN tournament/NN is/VBZ at/IN most/RBS $/$ k/CD $/$ ,/, then/RB we/PRP can/MD find/VB all/PDT the/DT tournament/NN solutions/NNS mentioned/VBN above/RB by/IN querying/VBG $/$ O/UH (/-LRB- nk/NNP \/SYM frac/NNP {/-LRB- n/NN \/SYM log/NN n/NN }/-RRB- {/-LRB- \/SYM log/NN (/-LRB- 1/CD -/SYM \/SYM frac/SYM {/-LRB- 1/CD }/-RRB- {/-LRB- k/CD }/-RRB- )/-RRB- }/-RRB- )/-RRB- $/$ edges/VBZ only/RB ./.
