We/PRP explore/VBP a/DT method/NN for/IN computing/VBG admissible/JJ heuristic/NN evaluation/NN functions/VBZ for/IN search/NN problems/NNS ./.
It/PRP utilizes/VBZ pattern/NN databases/NNS ,/, which/WDT are/VBP precomputed/VBN tables/NNS of/IN the/DT exact/JJ cost/NN of/IN solving/VBG various/JJ subproblems/NNS of/IN an/DT existing/VBG problem/NN ./.
Unlike/IN standard/JJ pattern/NN database/NN heuristics/NNS ,/, however/RB ,/, we/PRP partition/VBP our/PRP$ problems/NNS into/IN disjoint/NN subproblems/NNS ,/, so/IN that/IN the/DT costs/NNS of/IN solving/VBG the/DT different/JJ subproblems/NNS can/MD be/VB added/VBN together/RB without/IN overestimating/VBG the/DT cost/NN of/IN solving/VBG the/DT original/JJ problem/NN ./.
Previously/RB ,/, we/PRP showed/VBD how/WRB to/TO statically/RB partition/VB the/DT sliding/VBG -/HYPH tile/NN puzzles/NNS into/IN disjoint/NN groups/NNS of/IN tiles/NNS to/IN compute/VB an/DT admissible/JJ heuristic/NN ,/, using/VBG the/DT same/JJ partition/NN for/IN each/DT state/NN and/CC problem/NN instance/NN ./.
Here/RB we/PRP extend/VBP the/DT method/NN and/CC show/VBP that/IN it/PRP applies/VBZ to/IN other/JJ domains/NNS as/RB well/RB ./.
We/PRP also/RB present/VBP another/DT method/NN for/IN additive/JJ heuristics/NNS which/WDT we/PRP call/VBP dynamically/RB partitioned/VBN pattern/NN databases/NNS ./.
Here/RB we/PRP partition/VBP the/DT problem/NN into/IN disjoint/NN subproblems/NNS for/IN each/DT state/NN of/IN the/DT search/NN dynamically/RB ./.
We/PRP discuss/VBP the/DT pros/NNS and/CC cons/NNS of/IN each/DT of/IN these/DT methods/NNS and/CC apply/VB both/DT methods/NNS to/TO three/CD different/JJ problem/NN domains/NNS :/: the/DT sliding/VBG -/HYPH tile/NN puzzles/NNS ,/, the/DT 4/CD -/HYPH peg/NN Towers/NNP of/IN Hanoi/NNP problem/NN ,/, and/CC finding/VBG an/DT optimal/JJ vertex/NN cover/NN of/IN a/DT graph/NN ./.
We/PRP find/VBP that/IN in/IN some/DT problem/NN domains/NNS ,/, static/NN partitioning/NN is/VBZ most/RBS effective/JJ ,/, while/IN in/IN others/NNS dynamic/JJ partitioning/NN is/VBZ a/DT better/JJR choice/NN ./.
In/IN each/DT of/IN these/DT problem/NN domains/NNS ,/, either/CC statically/RB partitioned/VBN or/CC dynamically/RB partitioned/VBN pattern/NN database/NN heuristics/NNS are/VBP the/DT best/JJS known/VBN heuristics/NNS for/IN the/DT problem/NN ./.
