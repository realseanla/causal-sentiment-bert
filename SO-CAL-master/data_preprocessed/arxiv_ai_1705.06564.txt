We/PRP introduce/VBP a/DT stepping/VBG methodology/NN for/IN answer/NN -/HYPH set/VBN programming/NN (/-LRB- ASP/NN )/-RRB- that/WDT allows/VBZ for/IN debugging/NN answer/NN -/HYPH set/NN programs/NNS and/CC is/VBZ based/VBN on/IN the/DT stepwise/JJ application/NN of/IN rules/NNS ./.
Similar/JJ to/IN debugging/VBG in/IN imperative/JJ languages/NNS ,/, where/WRB the/DT behaviour/NN of/IN a/DT program/NN is/VBZ observed/VBN during/IN a/DT step/NN -/HYPH by/IN -/HYPH step/NN execution/NN ,/, stepping/VBG for/IN ASP/NN allows/VBZ for/IN observing/VBG the/DT effects/NNS that/WDT rule/VBP applications/NNS have/VBP in/IN the/DT computation/NN of/IN an/DT answer/NN set/VBN ./.
While/IN the/DT approach/NN is/VBZ inspired/VBN from/IN debugging/NN in/IN imperative/JJ programming/NN ,/, it/PRP is/VBZ conceptually/RB different/JJ to/IN stepping/VBG in/IN other/JJ paradigms/NNS due/IN to/IN non-determinism/NN and/CC declarativity/NN that/WDT are/VBP inherent/JJ to/IN ASP/NN ./.
In/IN particular/JJ ,/, unlike/IN statements/NNS in/IN an/DT imperative/JJ program/NN that/WDT are/VBP executed/VBN following/VBG a/DT strict/JJ control/NN flow/NN ,/, there/EX is/VBZ no/DT predetermined/JJ order/NN in/IN which/WDT to/TO consider/VB rules/NNS in/IN ASP/NN during/IN a/DT computation/NN ./.
In/IN our/PRP$ approach/NN ,/, the/DT user/NN is/VBZ free/JJ to/TO decide/VB which/WDT rule/NN to/TO consider/VB active/JJ in/IN the/DT next/JJ step/NN following/VBG his/PRP$ or/CC her/PRP$ intuition/NN ./.
This/DT way/NN ,/, one/PRP can/MD focus/VB on/IN interesting/JJ parts/NNS of/IN the/DT debugging/NN search/NN space/NN ./.
Bugs/NNS are/VBP detected/VBN during/IN stepping/VBG by/IN revealing/VBG differences/NNS between/IN the/DT actual/JJ semantics/NNS of/IN the/DT program/NN and/CC the/DT expectations/NNS of/IN the/DT user/NN ./.
As/IN a/DT solid/JJ formal/JJ basis/NN for/IN stepping/VBG ,/, we/PRP develop/VBP a/DT framework/NN of/IN computations/NNS for/IN answer/NN -/HYPH set/NN programs/NNS ./.
For/IN fully/RB supporting/VBG different/JJ solver/NN languages/NNS ,/, we/PRP build/VBP our/PRP$ framework/NN on/IN an/DT abstract/JJ ASP/NN language/NN that/WDT is/VBZ sufficiently/RB general/JJ to/TO capture/VB different/JJ solver/NN languages/NNS ./.
To/IN this/DT end/NN ,/, we/PRP make/VBP use/NN of/IN abstract/JJ constraints/NNS as/IN an/DT established/VBN abstraction/NN for/IN popular/JJ language/NN constructs/NNS such/JJ as/IN aggregates/NNS ./.
Stepping/NN has/VBZ been/VBN implemented/VBN in/IN SeaLion/NNP ,/, an/DT integrated/JJ development/NN environment/NN for/IN ASP/NNP ./.
We/PRP illustrate/VBP stepping/VBG using/VBG an/DT example/NN scenario/NN and/CC discuss/VB the/DT stepping/VBG plugin/NN of/IN SeaLion/NNP ./.
Moreover/RB ,/, we/PRP elaborate/VBP on/IN methodological/JJ aspects/NNS and/CC the/DT embedding/NN of/IN stepping/VBG in/IN the/DT ASP/NN development/NN process/NN ./.
