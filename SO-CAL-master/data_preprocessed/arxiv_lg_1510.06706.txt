Convolutional/JJ networks/NNS (/-LRB- ConvNets/NNP )/-RRB- have/VBP become/VBN a/DT popular/JJ approach/NN to/IN computer/NN vision/NN ./.
It/PRP is/VBZ important/JJ to/TO accelerate/VB ConvNet/NNP training/NN ,/, which/WDT is/VBZ computationally/RB costly/JJ ./.
We/PRP propose/VBP a/DT novel/JJ parallel/JJ algorithm/NN based/VBN on/IN decomposition/NN into/IN a/DT set/NN of/IN tasks/NNS ,/, most/JJS of/IN which/WDT are/VBP convolutions/NNS or/CC FFTs/NNS ./.
Applying/VBG Brent/NNP 's/POS theorem/NN to/IN the/DT task/NN dependency/NN graph/NN implies/VBZ that/IN linear/JJ speedup/NN with/IN the/DT number/NN of/IN processors/NNS is/VBZ attainable/JJ within/IN the/DT PRAM/NN model/NN of/IN parallel/JJ computation/NN ,/, for/IN wide/JJ network/NN architectures/NNS ./.
To/TO attain/VB such/JJ performance/NN on/IN real/JJ shared/VBN -/HYPH memory/NN machines/NNS ,/, our/PRP$ algorithm/NN computes/VBZ convolutions/NNS converging/VBG on/IN the/DT same/JJ node/NN of/IN the/DT network/NN with/IN temporal/JJ locality/NN to/TO reduce/VB cache/NN misses/VBZ ,/, and/CC sums/VBZ the/DT convergent/JJ convolution/NN outputs/NNS via/IN an/DT almost/RB wait/VB -/HYPH free/VB concurrent/JJ method/NN to/TO reduce/VB time/NN spent/VBN in/IN critical/JJ sections/NNS ./.
We/PRP implement/VBP the/DT algorithm/NN with/IN a/DT publicly/RB available/JJ software/NN package/NN called/VBN ZNN/NNP ./.
Benchmarking/VBG with/IN multi-core/JJ CPUs/NNS shows/VBZ that/IN ZNN/NNP can/MD attain/VB speedup/NN roughly/RB equal/JJ to/IN the/DT number/NN of/IN physical/JJ cores/NNS ./.
We/PRP also/RB show/VBP that/IN ZNN/NNP can/MD attain/VB over/IN 90x/CD speedup/NN on/IN a/DT many/JJ -/HYPH core/NN CPU/NN (/-LRB- Xeon/NNP Phi/NNP Knights/NNPS Corner/NNP )/-RRB- ./.
These/DT speedups/NNS are/VBP achieved/VBN for/IN network/NN architectures/NNS with/IN widths/NNS that/WDT are/VBP in/IN common/JJ use/NN ./.
The/DT task/NN parallelism/NN of/IN the/DT ZNN/NNP algorithm/NN is/VBZ suited/VBN to/IN CPUs/NNS ,/, while/IN the/DT SIMD/NNP parallelism/NN of/IN previous/JJ algorithms/NNS is/VBZ compatible/JJ with/IN GPUs/NNS ./.
Through/IN examples/NNS ,/, we/PRP show/VBP that/IN ZNN/NNP can/MD be/VB either/CC faster/RBR or/CC slower/RBR than/IN certain/JJ GPU/NN implementations/NNS depending/VBG on/IN specifics/NNS of/IN the/DT network/NN architecture/NN ,/, kernel/NN sizes/NNS ,/, and/CC density/NN and/CC size/NN of/IN the/DT output/NN patch/NN ./.
ZNN/NNP may/MD be/VB less/RBR costly/JJ to/TO develop/VB and/CC maintain/VB ,/, due/IN to/IN the/DT relative/JJ ease/NN of/IN general/JJ -/HYPH purpose/NN CPU/NN programming/NN ./.
