Using/VBG an/DT interactive/JJ theorem/NN prover/NN to/IN reason/NN about/RB programs/NNS involves/VBZ a/DT sequence/NN of/IN interactions/NNS where/WRB the/DT user/NN challenges/VBZ the/DT theorem/NN prover/NN with/IN conjectures/VBZ ./.
Invariably/RB ,/, many/JJ of/IN the/DT conjectures/VBZ posed/VBN are/VBP in/IN fact/NN false/JJ ,/, and/CC users/NNS often/RB spend/VBP considerable/JJ effort/NN examining/VBG the/DT theorem/NN prover/NN 's/POS output/NN before/IN realizing/VBG this/DT ./.
We/PRP present/VBP a/DT synergistic/JJ integration/NN of/IN testing/NN with/IN theorem/NN proving/NN ,/, implemented/VBN in/IN the/DT ACL2/NN Sedan/NN (/-LRB- ACL2s/NN )/-RRB- ,/, for/IN automatically/RB generating/VBG concrete/JJ counterexamples/NNS ./.
Our/PRP$ method/NN uses/VBZ the/DT full/JJ power/NN of/IN the/DT theorem/NN prover/NN and/CC associated/VBN libraries/NNS to/TO simplify/VB conjectures/VBZ ;/: this/DT simplification/NN can/MD transform/VB conjectures/VBZ for/IN which/WDT finding/VBG counterexamples/NNS is/VBZ hard/RB into/IN conjectures/VBZ where/WRB finding/VBG counterexamples/NNS is/VBZ trivial/JJ ./.
In/IN fact/NN ,/, our/PRP$ approach/NN even/RB leads/VBZ to/IN better/JJR theorem/NN proving/NN ,/, e.g./FW ,/, if/IN testing/NN shows/VBZ that/IN a/DT generalization/NN step/NN leads/VBZ to/IN a/DT false/JJ conjecture/NN ,/, we/PRP force/VBP the/DT theorem/NN prover/NN to/TO backtrack/VB ,/, allowing/VBG it/PRP to/TO pursue/VB more/JJR fruitful/JJ options/NNS that/WDT may/MD yield/VB a/DT proof/NN ./.
The/DT focus/NN of/IN the/DT paper/NN is/VBZ on/IN the/DT engineering/NN of/IN a/DT synergistic/JJ integration/NN of/IN testing/NN with/IN interactive/JJ theorem/NN proving/NN ;/: this/DT includes/VBZ extending/VBG ACL2/NN with/IN new/JJ functionality/NN that/WDT we/PRP expect/VBP to/TO be/VB of/IN general/JJ interest/NN ./.
We/PRP also/RB discuss/VBP our/PRP$ experience/NN in/IN using/VBG ACL2s/NNS to/TO teach/VB freshman/NN students/NNS how/WRB to/TO reason/VB about/IN their/PRP$ programs/NNS ./.
