We/PRP provide/VBP the/DT first/JJ oracle/NN efficient/JJ sublinear/NN regret/NN algorithms/NNS for/IN adversarial/JJ versions/NNS of/IN the/DT contextual/JJ bandit/NN problem/NN ./.
In/IN this/DT problem/NN ,/, the/DT learner/NN repeatedly/RB makes/VBZ an/DT action/NN on/IN the/DT basis/NN of/IN a/DT context/NN and/CC receives/VBZ reward/NN for/IN the/DT chosen/VBN action/NN ,/, with/IN the/DT goal/NN of/IN achieving/VBG reward/NN competitive/JJ with/IN a/DT large/JJ class/NN of/IN policies/NNS ./.
We/PRP analyze/VBP two/CD settings/NNS :/: i/LS )/-RRB- in/IN the/DT transductive/JJ setting/VBG the/DT learner/NN knows/VBZ the/DT set/NN of/IN contexts/NNS a/FW priori/FW ,/, ii/CD )/-RRB- in/IN the/DT small/JJ separator/NN setting/NN ,/, there/EX exists/VBZ a/DT small/JJ set/NN of/IN contexts/NNS such/JJ that/IN any/DT two/CD policies/NNS behave/VBP differently/RB in/IN one/CD of/IN the/DT contexts/NNS in/IN the/DT set/NN ./.
Our/PRP$ algorithms/NNS fall/VBP into/IN the/DT follow/VB the/DT perturbed/VBN leader/NN family/NN and/CC achieve/VB regret/NN $/$ O/UH (/-LRB- T/NN ^/SYM {/-LRB- 3/4/CD }/-RRB- \/SYM sqrt/NN {/-LRB- K/NN \/SYM log/NN (/-LRB- N/NN )/-RRB- }/-RRB- )/-RRB- $/$ in/IN the/DT transductive/JJ setting/NN and/CC $/$ O/UH (/-LRB- T/NN ^/SYM {/-LRB- 2/3/CD }/-RRB- d/NN ^/SYM {/-LRB- 3/4/CD }/-RRB- K/NNP \/SYM sqrt/NNP {/-LRB- \/SYM log/NN (/-LRB- N/NN )/-RRB- }/-RRB- )/-RRB- $/$ in/IN the/DT separator/NN setting/NN ,/, where/WRB $/$ K$/CD is/VBZ the/DT number/NN of/IN actions/NNS ,/, $/$ N$/CD is/VBZ the/DT number/NN of/IN baseline/NN policies/NNS ,/, and/CC $/$ d/LS $/$ is/VBZ the/DT size/NN of/IN the/DT separator/NN ./.
We/PRP actually/RB solve/VB the/DT more/RBR general/JJ adversarial/JJ contextual/JJ semi-bandit/NN linear/JJ optimization/NN problem/NN ,/, whilst/IN in/IN the/DT full/JJ information/NN setting/NN we/PRP address/VBP the/DT even/RB more/RBR general/JJ contextual/JJ combinatorial/JJ optimization/NN ./.
We/PRP provide/VBP several/JJ extensions/NNS and/CC implications/NNS of/IN our/PRP$ algorithms/NNS ,/, such/JJ as/IN switching/VBG regret/NN and/CC efficient/JJ learning/NN with/IN predictable/JJ sequences/NNS ./.
