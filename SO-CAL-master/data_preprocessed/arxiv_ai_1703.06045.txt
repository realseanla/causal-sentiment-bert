We/PRP discuss/VBP the/DT computational/JJ complexity/NN of/IN approximating/VBG maximum/NN a/DT posteriori/JJ inference/NN in/IN sum/NN -/HYPH product/NN networks/NNS ./.
We/PRP first/RB show/VBP NP/NN -/HYPH hardness/NN in/IN three/CD -/HYPH level/NN trees/NNS by/IN a/DT reduction/NN from/IN maximum/JJ independent/JJ set/NN ;/: this/DT implies/VBZ non-approximability/NN within/IN a/DT sublinear/JJ factor/NN ./.
We/PRP show/VBP that/IN this/DT is/VBZ a/DT tight/JJ bound/VBN ,/, as/IN we/PRP can/MD find/VB an/DT approximation/NN within/IN a/DT linear/JJ factor/NN in/IN three/CD -/HYPH level/NN networks/NNS ./.
We/PRP then/RB show/VBP that/IN in/IN four/CD -/HYPH level/NN trees/NNS it/PRP is/VBZ NP/NNP -/HYPH hard/JJ to/TO approximate/VB the/DT problem/NN within/IN a/DT factor/NN $/$ 2/CD ^/SYM {/-LRB- f/NN (/-LRB- n/NN )/-RRB- }/-RRB- $/$ for/IN any/DT sublinear/NN function/NN $/$ f/LS $/$ of/IN the/DT size/NN of/IN the/DT input/NN $/$ n/NN $/$ ./.
Again/RB ,/, this/DT is/VBZ bound/VBN is/VBZ tight/JJ ,/, as/IN we/PRP prove/VBP that/IN the/DT usual/JJ max/NN -/HYPH product/NN algorithm/NN finds/VBZ (/-LRB- in/IN any/DT network/NN )/-RRB- approximations/NNS within/IN factor/NN $/$ 2/CD ^/SYM {/-LRB- c/NN n/NN }/-RRB- $/$ from/IN some/DT constant/JJ $/$ c/NN &lt;/SYM 1/CD $/$ ./.
Last/JJ ,/, we/PRP present/VBP a/DT simple/JJ algorithm/NN ,/, and/CC show/VBP that/IN it/PRP provably/RB produces/VBZ solutions/NNS at/IN least/RBS as/RB good/JJ as/RB ,/, and/CC potentially/RB much/RB better/JJR than/IN ,/, the/DT max/NN -/HYPH product/NN algorithm/NN ./.
