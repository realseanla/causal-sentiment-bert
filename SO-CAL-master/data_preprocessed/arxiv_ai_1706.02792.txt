We/PRP present/VBP a/DT new/JJ preprocessing/JJ algorithm/NN for/IN embedding/VBG the/DT nodes/NNS of/IN a/DT given/JJ edge/NN -/HYPH weighted/VBN undirected/JJ graph/NN into/IN a/DT Euclidean/JJ space/NN ./.
In/IN this/DT space/NN ,/, the/DT Euclidean/JJ distance/NN between/IN any/DT two/CD nodes/NNS approximates/VBZ the/DT length/NN of/IN the/DT shortest/JJS path/NN between/IN them/PRP in/IN the/DT given/VBN graph/NN ./.
Later/RB ,/, at/IN runtime/NN ,/, a/DT shortest/JJS path/NN between/IN any/DT two/CD nodes/NNS can/MD be/VB computed/VBN using/VBG A/DT */SYM search/NN with/IN the/DT Euclidean/JJ distances/NNS as/IN heuristic/NN estimates/NNS ./.
Our/PRP$ preprocessing/JJ algorithm/NN ,/, dubbed/VBN FastMap/NNP ,/, is/VBZ inspired/VBN by/IN the/DT Data/NNP Mining/NNP algorithm/NN of/IN the/DT same/JJ name/NN and/CC runs/VBZ in/IN near/JJ -/HYPH linear/JJ time/NN ./.
Hence/RB ,/, FastMap/NNP is/VBZ orders/NNS of/IN magnitude/NN faster/RBR than/IN competing/VBG approaches/NNS that/WDT produce/VBP a/DT Euclidean/JJ embedding/NN using/VBG Semidefinite/NNP Programming/NNP ./.
Our/PRP$ FastMap/NNP algorithm/NN also/RB produces/VBZ admissible/JJ and/CC consistent/JJ heuristics/NNS and/CC therefore/RB guarantees/VBZ the/DT generation/NN of/IN optimal/JJ paths/NNS ./.
Moreover/RB ,/, FastMap/NNP works/VBZ on/IN general/JJ undirected/JJ graphs/NNS for/IN which/WDT many/JJ traditional/JJ heuristics/NNS ,/, such/JJ as/IN the/DT Manhattan/NNP Distance/NNP heuristic/NN ,/, are/VBP not/RB always/RB well/RB defined/VBN ./.
Empirically/RB too/RB ,/, we/PRP demonstrate/VBP that/IN the/DT FastMap/NNP heuristic/NN is/VBZ competitive/JJ with/IN other/JJ state/NN -/HYPH of/IN -/HYPH the/DT -/HYPH art/NN heuristics/NNS like/IN the/DT Differential/NNP heuristic/NN ./.
