{
  "name" : "1706.05125.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ "Mike Lewis", "Denis Yarats", "Yann N. Dauphin", "Devi Parikh", "Dhruv Batra" ],
    "emails" : [ "mikelewis@fb.com", "denisy@fb.com", "ynd@fb.com", "parikh@gatech.edu", "dbatra@gatech.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n70 6.\n05 12\n5v 1\n[ cs\n.A I]\n1 6\nJu n\n20 17\ncooperative settings, where agents with different goals attempt to agree on common decisions. Negotiations require complex communication and reasoning skills, but success is easy to measure, making this an interesting task for AI. We gather a large dataset of human-human negotiations on a multi-issue bargaining task, where agents who cannot observe each other’s reward functions must reach an agreement (or a deal) via natural language dialogue. For the first time, we show it is possible to train end-to-end models for negotiation, which must learn both linguistic and reasoning skills with no annotated dialogue states. We also introduce dialogue rollouts, in which the model plans ahead by simulating possible complete continuations of the conversation, and find that this technique dramatically improves performance. Our code and dataset are publicly available.1"
    }, {
      "heading" : "1 Introduction",
      "text" : "Intelligent agents often need to cooperate with others who have different goals, and typically use natural language to agree on decisions. Negotiation is simultaneously a linguistic and a reasoning problem, in which an intent must be formulated and then verbally realised. Such dialogues contain both cooperative and adversarial elements, and require agents to understand, plan, and generate utterances to achieve their goals (Traum et al., 2008; Asher et al., 2012).\nWe collect the first large dataset of natural language negotiations between two people, and show\n1 https://github.com/facebookresearch/end-to-end-negotiator\nthat end-to-end neural models can be trained to negotiate by maximizing the likelihood of human actions. This approach is scalable and domainindependent, but does not model the strategic skills required for negotiating well. We further show that models can be improved by training and decoding to maximize reward instead of likelihood—by training with self-play reinforcement learning, and using rollouts to estimate the expected reward of utterances during decoding.\nTo study semi-cooperative dialogue, we gather a dataset of 5808 dialogues between humans on a negotiation task. Users were shown a set of items with a value for each, and asked to agree how to divide the items with another user who has a different, unseen, value function (Figure 1).\nWe first train recurrent neural networks to imitate human actions. We find that models trained to maximise the likelihood of human utterances can generate fluent language, but make comparatively poor negotiators, which are overly willing to compromise. We therefore explore two methods for improving the model’s strategic reasoning skills— both of which attempt to optimise for the agent’s goals, rather than simply imitating humans:\nFirstly, instead of training to optimise likelihood, we show that our agents can be considerably improved using self play, in which pre-trained models practice negotiating with each other in order to optimise performance. To avoid the models diverging from human language, we interleave reinforcement learning updates with supervised updates. For the first time, we show that end-toend dialogue agents trained using reinforcement learning outperform their supervised counterparts in negotiations with humans.\nSecondly, we introduce a new form of planning for dialogue called dialogue rollouts, in which an agent simulates complete dialogues during decoding to estimate the eward of utterances. We show\nthat decoding to maximise the reward function (rather than likelihood) significantly improves performance against both humans and machines.\nAnalysing the performance of our agents, we find evidence of sophisticated negotiation strategies. For example, we find instances of the model feigning interest in a valueless issue, so that it can later ‘compromise’ by conceding it. Deceit is a complex skill that requires hypothesising the other agent’s beliefs, and is learnt relatively late in child development (Talwar and Lee, 2002). Our agents have learnt to deceive without any explicit human design, simply by trying to achieve their goals.\nThe rest of the paper proceeds as follows: §2 describes the collection of a large dataset of humanhuman negotiation dialogues. §3 describes a baseline supervised model, which we then show can be improved by goal-based training (§4) and decoding (§5). §6 measures the performance of our models and humans on this task, and §7 gives a detailed analysis and suggests future directions."
    }, {
      "heading" : "2 Data Collection",
      "text" : ""
    }, {
      "heading" : "2.1 Overview",
      "text" : "To enable end-to-end training of negotiation agents, we first develop a novel negotiation task and curate a dataset of human-human dialogues for this task. This task and dataset follow our proposed general framework for studying semicooperative dialogue. Initially, each agent is shown an input specifying a space of possible actions and a reward function which will score the outcome of the negotiation. Agents then sequentially take turns of either sending natural language messages, or selecting that a final decision has been reached. When one agent selects that an\nagreement has been made, both agents independently output what they think the agreed decision was. If conflicting decisions are made, both agents are given zero reward."
    }, {
      "heading" : "2.2 Task",
      "text" : "Our task is an instance of multi issue bargaining (Fershtman, 1990), and is based on DeVault et al. (2015). Two agents are both shown the same collection of items, and instructed to divide them so that each item assigned to one agent.\nEach agent is given a different randomly generated value function, which gives a non-negative value for each item. The value functions are constrained so that: (1) the total value for a user of all items is 10; (2) each item has non-zero value to at least one user; and (3) some items have nonzero value to both users. These constraints enforce that it is not possible for both agents to receive a maximum score, and that no item is worthless to both agents, so the negotiation will be competitive. After 10 turns, we allow agents the option to complete the negotiation with no agreement, which is worth 0 points to both users. We use 3 item types (books, hats, balls), and between 5 and 7 total items in the pool. Figure 1 shows our interface."
    }, {
      "heading" : "2.3 Data Collection",
      "text" : "We collected a set of human-human dialogues using Amazon Mechanical Turk. Workers were paid $0.15 per dialogue, with a $0.05 bonus for maximal scores. We only used workers based in the United States with a 95% approval rating and at least 5000 previous HITs. Our data collection interface was adapted from that of Das et al. (2016).\nWe collected a total of 5808 dialogues, based on 2236 unique scenarios (where a scenario is the\navailable items and values for the two users). We held out a test set of 252 scenarios (526 dialogues). Holding out test scenarios means that models must generalise to new situations."
    }, {
      "heading" : "3 Likelihood Model",
      "text" : "We propose a simple but effective baseline model for the conversational agent, in which a sequenceto-sequence model is trained to produce the complete dialogue, conditioned on an agent’s input."
    }, {
      "heading" : "3.1 Data Representation",
      "text" : "Each dialogue is converted into two training examples, showing the complete conversation from the perspective of each agent. The examples differ on their input goals, output choice, and whether utterances were read or written.\nTraining examples contain an input goal g, specifying the available items and their values, a dialogue x, and an output decision o specifying which items each agent will receive. Specifically, we represent g as a list of six integers corresponding to the count and value of each of the three item types. Dialogue x is a list of tokens x0..T containing the turns of each agent interleaved with symbols marking whether a turn was written by the agent or their partner, terminating in a special token indicating one agent has marked that an agree-\nment has been made. Output o is six integers describing how many of each of the three item types are assigned to each agent. See Figure 2."
    }, {
      "heading" : "3.2 Supervised Learning",
      "text" : "We train a sequence-to-sequence network to generate an agent’s perspective of the dialogue conditioned on the agent’s input goals (Figure 3a).\nThe model uses 4 recurrent neural networks, implemented as GRUs (Cho et al., 2014): GRUw, GRUg, GRU−→o , and GRU←−o .\nThe agent’s input goals g are encoded using GRUg. We refer to the final hidden state as h g . The model then predicts each token xt from left to right, conditioned on the previous tokens and hg . At each time step t, GRUw takes as input the previous hidden state ht−1, previous token xt−1 (embedded with a matrix E), and input encoding hg . Conditioning on the input at each time step helps the model learn dependencies between language and goals.\nht = GRUw(ht−1, [Ext−1, h g]) (1)\nThe token at each time step is predicted with a softmax, which uses weight tying with the embedding matrix E (Mao et al., 2015):\npθ(xt|x0..t−1, g) ∝ exp(E Tht) (2)\nNote that the model predicts both agent’s words, enabling its use as a forward model in Section 5.\nAt the end of the dialogue, the agent outputs a set of tokens o representing the decision. We generate each output conditionally independently, using a separate classifier for each. The classifiers share bidirectional GRUo and attention mechanism (Bahdanau et al., 2014) over the dialogue, and additionally conditions on the input goals.\nh −→o t = GRU−→o (h −→o t−1, [Ext, ht]) (3) h ←−o t = GRU←−o (h ←−o t+1, [Ext, ht]) (4)\nhot = [h ←−o t , h −→o t ] (5) hat = W [tanh(W ′hot )] (6) αt = exp(w · hat ) ∑\nt′ exp(w · h a t′)\n(7)\nhs = tanh(W s[hg, ∑\nt\nαtht]) (8)\nThe output tokens are predicted using softmax:\npθ(oi|x0..t, g) ∝ exp(W oihs) (9)\nThe model is trained to minimize the negative log likelihood of the token sequence x0..T conditioned on the input goals g, and of the outputs o conditioned on x and g. The two terms are weighted with a hyperparameter α.\nL(θ) =− ∑\nx,g\n∑\nt\nlog pθ(xt|x0..t−1, g)\n︸ ︷︷ ︸\nToken prediction loss\n− α ∑\nx,g,o\n∑\nj\nlog pθ(oj |x0..T , g)\n︸ ︷︷ ︸\nOutput choice prediction loss\n(10)\nUnlike the Neural Conversational Model (Vinyals and Le, 2015), our approach shares all parameters for reading and generating tokens."
    }, {
      "heading" : "3.3 Decoding",
      "text" : "During decoding, the model must generate an output token xt conditioned on dialogue history x0..t−1 and input goals g, by sampling from pθ:\nxt ∼ pθ(xt|x0..t−1, g) (11)\nIf the model generates a special end-of-turn token, it then encodes a series of tokens output by the other agent, until its next turn (Figure 3b).\nThe dialogue ends when either agent outputs a special end-of-dialogue token. The model then outputs a set of choices o. We choose each item independently, but enforce consistency by checking the solution is in a feasible set O:\no∗ = argmax o∈O\n∏\ni\npθ(oi|x0..T , g) (12)\nIn our task, a solution is feasible if each item is assigned to exactly one agent. The space of solutions is small enough to be tractably enumerated."
    }, {
      "heading" : "4 Goal-based Training",
      "text" : "Supervised learning aims to imitate the actions of human users, but does not explicitly attempt to maximise an agent’s goals. Instead, we explore pre-training with supervised learning, and then fine-tuning against the evaluation metric using reinforcement learning. Similar two-stage learning strategies have been used previously (e.g. Li et al. (2016); Das et al. (2017)).\nDuring reinforcement learning, an agent A attempts to improve its parameters from conversations with another agent B. While the other agent B could be a human, in our experiments we used our fixed supervised model that was trained to imitate humans. The second model is fixed as we found that updating the parameters of both agents led to divergence from human language. In effect,\nagent A learns to improve by simulating conversations with the help of a surrogate forward model.\nAgent A reads its goals g and then generates tokens x0..n by sampling from pθ. When x generates an end-of-turn marker, it then reads in tokens xn+1..m generated by agent B. These turns alternate until one agent emits a token ending the dialogue. Both agents then output a decision o and collect a reward from the environment (which will be 0 if they output different decisions). We denote the subset of tokens generated by A as XA (e.g. tokens with incoming arrows in Figure 3b).\nAfter a complete dialogue has been generated, we update agent A’s parameters based on the outcome of the negotiation. Let rA be the score agent A achieved in the completed dialogue, T be the length of the dialogue, γ be a discount factor that rewards actions at the end of the dialogue more strongly, and µ be a running average of completed dialogue rewards so far2. We define the future reward R for an action xt ∈ X A as follows:\nR(xt) = ∑\nxt∈XA\nγT−t(rA(o)− µ) (13)\nWe then optimise the expected reward of each\naction xt ∈ X A:\nLRLθ = Ext∼pθ(xt|x0..t−1,g)[R(xt)] (14)\nThe gradient of LRLθ is calculated as in REINFORCE (Williams, 1992):\n∇θL RL θ =\n∑\nxt∈XA\nExt[R(xt)∇θ log(pθ(xt|x0..t−1, g))]\n(15)\n2As all rewards are non-negative, we instead re-scale them by subtracting the mean reward found during self play. Shifting in this way can reduce the variance of our estimator.\nAlgorithm 1 Dialogue Rollouts algorithm.\n1: procedure ROLLOUT(x0..i, g) 2: u∗ ← ∅ 3: for c ∈ {1..C} do ⊲ C candidate moves 4: j ← i 5: do ⊲ Rollout to end of turn 6: j ← j + 1 7: xj ∼ pθ(xj |x0..j−1, g) 8: while xk /∈ {read:, choose:} 9: u ← xi+1..xj ⊲ u is candidate move 10: for s ∈ {1..S} do ⊲ S samples per move 11: k ← j ⊲ Start rollout from end of u 12: while xk 6= choose: do ⊲ Rollout to end of dialogue 13: k ← k + 1 14: xk ∼ pθ(xk|x0..k−1, g)\n⊲ Calculate rollout output and reward 15: o ← argmaxo′∈O p(o\n′|x0..k, g) 16: R(u) ← R(u) + r(o)p(o′|x0..k, g) 17: if R(u) > R(u∗) then 18: u∗ ← u 19: return u∗ ⊲ Return best move"
    }, {
      "heading" : "5 Goal-based Decoding",
      "text" : "Likelihood-based decoding (§3.3) may not be optimal. For instance, an agent may be choosing between accepting an offer, or making a counter offer. The former will often have a higher likelihood under our model, as there are fewer ways to agree than to make another offer, but the latter may lead to a better outcome. Goal-based decoding also allows more complex dialogue strategies. For example, a deceptive utterance is likely to have a low model score (as users were generally honest in the supervised data), but may achieve high reward.\nWe instead explore decoding by maximising expected reward. We achieve this by using pθ as a\nforward model for the complete dialogue, and then deterministically computing the reward. Rewards for an utterance are averaged over samples to calculate expected future reward (Figure 4).\nWe use a two stage process: First, we generate c candidate utterances U = u0..c, representing possible complete turns that the agent could make, which are generated by sampling from pθ until the end-of-turn token is reached. Let x0..n−1 be current dialogue history. We then calculate the expected reward R(u) of candidate utterance u = xn,n+k by repeatedly sampling xn+k+1,T from pθ, then choosing the best output o using Equation 12, and finally deterministically computing the reward r(o). The reward is scaled by the probability of the output given the dialogue, because if the agents select different outputs then they both receive 0 reward.\nR(xn..n+k) = Ex(n+k+1..T ;o)∼pθ [r(o)pθ(o|x0..T )]\n(16)\nWe then return the utterance maximizing R.\nu∗ = argmax u∈U R(u) (17)\nWe use 5 rollouts for each of 10 candidate turns."
    }, {
      "heading" : "6 Experiments",
      "text" : ""
    }, {
      "heading" : "6.1 Training Details",
      "text" : "We implement our models using PyTorch. All hyper-parameters were chosen on a development dataset. The input tokens are embedded into a 64-dimensional space, while the dialogue tokens are embedded with 256-dimensional embeddings (with no pre-training). The input GRUg has a hidden layer of size 64 and the dialogue GRUw is of size 128. The output GRU−→o and GRU←−o both have a hidden state of size 256, the size of hs is 256 as well. During supervised training, we optimise using stochastic gradient descent with a minibatch size of 16, an initial learning rate of 1.0, Nesterov momentum with µ=0.1 (Nesterov, 1983), and clipping gradients whose L2 norm exceeds 0.5. We train the model for 30 epochs and pick the snapshot of the model with the best validation perplexity. We then annealed the learning rate by a factor of 5 each epoch. We weight the terms in the loss function (Equation 10) using α=0.5. We do not train against output decisions where humans selected different agreements. Tokens occurring fewer than 20 times are replaced with an ‘unknown’ token.\nDuring reinforcement learning, we use a learning rate of 0.1, clip gradients above 1.0, and use a discount factor of γ=0.95. After every 4 reinforcement learning updates, we make a supervised update with mini-batch size 16 and learning rate 0.5, and we clip gradients at 1.0. We used 4086 simulated conversations.\nWhen sampling words from pθ, we reduce the variance by doubling the values of logits (i.e. using temperature of 0.5)."
    }, {
      "heading" : "6.2 Comparison Systems",
      "text" : "We compare the performance of the following: LIKELIHOOD uses supervised training and decoding (§3), RL is fine-tuned with goal-based selfplay (§4), ROLLOUTS uses supervised training combined with goal-based decoding using rollouts (§5), and RL+ROLLOUTS uses rollouts with a base model trained with reinforcement learning."
    }, {
      "heading" : "6.3 Intrinsic Evaluation",
      "text" : "For development, we use measured the perplexity of user generated utterances, conditioned on the input and previous dialogue.\nResults are shown in Table 3, and show that the simple LIKELIHOOD model produces the most human-like responses, and the alternative training and decoding strategies cause a divergence from human language. Note however, that this divergence may not necessarily correspond to lower quality language—it may also indicate different strategic decisions about what to say. Results in §6.4 show all models could converse with humans."
    }, {
      "heading" : "6.4 End-to-End Evaluation",
      "text" : "We measure end-to-end performance in dialogues both with the likelihood-based agent and with humans on Mechanical Turk, on held out scenarios.\nHumans were told that they were interacting with other humans, as they had been during the collection of our dataset (and few appeared to realize they were in conversation with machines).\nWe measure the following statistics:\nScore: The average score for each agent (which could be a human or model), out of 10. Agreement: The percentage of dialogues where both agents agreed on the same decision. Pareto Optimality: The percentage of Pareto optimal solutions for agreed deals (a solution is Pareto optimal if neither agent’s score can be improved without lowering the other’s score). Lower scores indicate inefficient negotiations.\nResults are shown in Table 1. Firstly, we see that the RL and ROLLOUTS models achieve significantly better results when negotiating with the LIKELIHOOD model, particularly the RL+ROLLOUTS model. The percentage of Pareto optimal solutions also increases, showing a better exploration of the solution space. Compared to human-human negotiations (Table 2), the best models achieve a higher agreement rate, better scores, and similar Pareto efficiency. This result confirms that attempting to maximise reward can outperform simply imitating humans.\nSimilar trends hold in dialogues with humans, with goal-based reasoning outperforming imitation learning. The ROLLOUTS model achieves comparable scores to its human partners, and the RL+ROLLOUTS model actually achieves higher scores. However, we also find significantly more cases of the goal-based models failing to agree a deal with humans—largely a consequence of their more aggressive negotiation tactics (see §7)."
    }, {
      "heading" : "7 Analysis",
      "text" : "Table 1 shows large gains from goal-based methods. In this section, we explore the strengths and weaknesses of our models.\nGoal-based models negotiate harder. The RL+ROLLOUTS model has much longer dialogues with humans than LIKELIHOOD (7.2 turns vs. 5.3 on average), indicating that the model is accepting deals less quickly, and negotiating harder.\nA negative consequence of this more aggressive negotiation strategy is that humans were more likely to walk away with no deal, which is reflected in the lower agreement rates. Even though failing to agree was worth 0 points, people often preferred this course over capitulating to an uncompromising opponent—a factor not well captured by the simulated partner in reinforcement learning training or rollouts (as reflected by the larger gains from goal-based models in dialogues with the LIKELIHOOD model). In particular, the goal-based models are prone to simply rephrasing the same demand each turn, which is a more effective strategy against the LIKELIHOOD model than humans. Future work should address this issue.\nFigure 5 shows an example of our goal-based model stubbornly negotiating until it achieves a good outcome.\nModels learn to be deceptive. Deception can be an effective negotiation tactic. We found numerous cases of our models initially feigning interest in a valueless item, only to later ‘compromise’ by conceding it. Figure 7 shows an example.\nModels produce meaningful novel sentences. One interesting question is whether our models are capable of generating novel sentences in the new circumstances they find themselves in, or if they simply repeat messages from the training data verbatim. We find that 76% of messages produced by the LIKELIHOOD model in self-play were found in the training data. Wemanually examined the novel\nutterances produced by our model, and found that the overwhelming majority were fluent English sentences in isolation—showing that the model has learnt a good language model for the domain (in addition to results that show it uses language effectively to achieve its goals). These results suggest that although neural models are prone to the safer option of repeating sentences from training data, they are capable of generalising when necessary. Future work should choose domains that force a higher degree of diversity in utterances.\nMaintaining multi-sentence coherence is challenging. One common linguistic error we see RL+ROLLOUTS make is to start a message by indicating agreement (e.g. I agree or Deal), but then going on to propose a counter offer—a behaviour that human partners found frustrating. One explanation is that the model has learnt that in the supervised data, messages beginning with I agree are often at the end of the dialogue, and partners rarely reply with further negotiation—so the models using rollouts and reinforcement learning believe this tactic will help their offer to be accepted."
    }, {
      "heading" : "8 Related Work",
      "text" : "Most work on goal orientated dialogue systems has assumed that state representations are anno-\ntated in the training data (Williams and Young, 2007; Henderson et al., 2014; Wen et al., 2016). The use of state annotations allows a cleaner separation of the reasoning and natural language aspects of dialogues, but our end-to-end approach makes data collection cheaper and allows tasks where it is unclear how to annotate state. Bordes and Weston (2016) explore end-toend goal orientated dialogue with a supervised model—we show improvements over supervised learning with goal-based training and decoding. Recently, He et al. (2017) use task-specific rules to combine the task input and dialogue history into a more structured state representation than ours.\nReinforcement learning (RL) has been applied in many dialogue settings. RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016). In contrast, our end-toend approach has no explicit dialogue manager. Li et al. (2016) improve metrics such as diversity for non-goal-orientated dialogue using RL, which would make an interesting extension to our work. Das et al. (2017) use reinforcement learning to improve cooperative bot-bot dialogues. RL has also been used to allow agents to invent new languages (Das et al., 2017; Mordatch and Abbeel, 2017). To our knowledge, our model is the first to use RL to improve the performance of an end-toend goal orientated dialogue system in dialogues with humans.\nWork on learning end-to-end dialogues has concentrated on ‘chat’ settings, without explicit goals (Ritter et al., 2011; Vinyals and Le, 2015; Li et al., 2015). These dialogues contain a much greater diversity of vocabulary than our domain, but do not\nhave the challenging adversarial elements. Such models are notoriously hard to evaluate (Liu et al., 2016), because the huge diversity of reasonable responses, whereas our task has a clear objective. Our end-to-end approach would also be much more straightforward to integrate into a generalpurpose dialogue agent than one that relied on annotated dialogue states (Dodge et al., 2016).\nThere is a substantial literature on multi-agent bargaining in game-theory, e.g. Nash Jr (1950). There has also been computational work on modelling negotiations (Baarslag et al., 2013)—our work differs in that agents communicate in unrestricted natural language, rather than pre-specified symbolic actions, and our focus on improving performance relative to humans rather than other automated systems. Our task is based on that of DeVault et al. (2015), who study natural language negotiations for pedagogical purposes—their version includes speech rather than textual dialogue, and embodied agents, which would make interesting extensions to our work. The only automated natural language negotiations systems we are aware of have first mapped language to domainspecific logical forms, and then focused on choosing the next dialogue act (Rosenfeld et al., 2014; Cuayáhuitl et al., 2015; Keizer et al., 2017). Our end-to-end approach is the first to to learn comprehension, reasoning and generation skills in a domain-independent data driven way.\nOur use of a combination of supervised and reinforcement learning for training, and stochastic rollouts for decoding, builds on strategies used in game playing agents such as AlphaGo (Silver et al., 2016). Our work is a step towards real-world applications for these techniques. Our use of rollouts could be extended by choosing the other agent’s responses based on sampling, using Monte Carlo Tree Search (MCTS) (Kocsis and Szepesvári, 2006). However, our setting has a higher branching factor than in domains where MCTS has been successfully applied, such as Go (Silver et al., 2016)—future work should explore scaling tree search to dialogue modelling."
    }, {
      "heading" : "9 Conclusion",
      "text" : "We have introduced end-to-end learning of natural language negotiations as a task for AI, arguing that it challenges both linguistic and reasoning skills while having robust evaluation metrics. We gathered a large dataset of human-human ne-\ngotiations, which contain a variety of interesting tactics. We have shown that it is possible to train dialogue agents end-to-end, but that their ability can be much improved by training and decoding to maximise their goals, rather than likelihood. There remains much potential for future work, particularly in exploring other reasoning strategies, and in improving the diversity of utterances without diverging from human language. We will also explore other negotiation tasks, to investigate whether models can learn to share negotiation strategies across domains."
    }, {
      "heading" : "Acknowledgments",
      "text" : "We would like to thank Luke Zettlemoyer and the anonymous EMNLP reviewers for their insightful comments, and the Mechanical Turk workers who helped us collect data."
    } ],
    "references" : [ {
      "title" : "Modelling Strategic Conversation: The STAC project",
      "author" : [ "Nicholas Asher", "Alex Lascarides", "Oliver Lemon", "Markus Guhe", "Verena Rieser", "Philippe Muller", "Stergos Afantenos", "Farah Benamara", "Laure Vieu", "Pascal Denis" ],
      "venue" : "Proceedings of SemDial",
      "citeRegEx" : "Asher et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Asher et al\\.",
      "year" : 2012
    }, {
      "title" : "Evaluating Practical Negotiating Agents: Results and Analysis of the 2011",
      "author" : [ "Tim Baarslag", "Katsuhide Fujita", "Enrico H Gerding", "Koen Hindriks", "Takayuki Ito", "Nicholas R Jennings", "Catholijn Jonker", "Sarit Kraus", "Raz Lin", "Valentin Robu" ],
      "venue" : null,
      "citeRegEx" : "Baarslag et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Baarslag et al\\.",
      "year" : 2013
    }, {
      "title" : "Neural Machine Translation by Jointly Learning to Align and Translate",
      "author" : [ "Dzmitry Bahdanau", "KyunghyunCho", "Yoshua Bengio." ],
      "venue" : "arXiv preprint arXiv:1409.0473 .",
      "citeRegEx" : "Bahdanau et al\\.,? 2014",
      "shortCiteRegEx" : "Bahdanau et al\\.",
      "year" : 2014
    }, {
      "title" : "Learning End-to-End Goal-oriented Dialog",
      "author" : [ "Antoine Bordes", "Jason Weston." ],
      "venue" : "arXiv preprint arXiv:1605.07683 .",
      "citeRegEx" : "Bordes and Weston.,? 2016",
      "shortCiteRegEx" : "Bordes and Weston.",
      "year" : 2016
    }, {
      "title" : "On the properties of neural machine translation: Encoder-decoder approaches",
      "author" : [ "Kyunghyun Cho", "Bart Van Merriënboer", "Dzmitry Bahdanau", "Yoshua Bengio." ],
      "venue" : "arXiv preprint arXiv:1409.1259 .",
      "citeRegEx" : "Cho et al\\.,? 2014",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Strategic Dialogue Management via Deep Reinforcement Learning",
      "author" : [ "Heriberto Cuayáhuitl", "Simon Keizer", "Oliver Lemon." ],
      "venue" : "arXiv preprint arXiv:1511.08099 .",
      "citeRegEx" : "Cuayáhuitl et al\\.,? 2015",
      "shortCiteRegEx" : "Cuayáhuitl et al\\.",
      "year" : 2015
    }, {
      "title" : "Visual Dialog",
      "author" : [ "Abhishek Das", "Satwik Kottur", "Khushi Gupta", "Avi Singh", "Deshraj Yadav", "José MF Moura", "Devi Parikh", "Dhruv Batra." ],
      "venue" : "arXiv preprint arXiv:1611.08669 .",
      "citeRegEx" : "Das et al\\.,? 2016",
      "shortCiteRegEx" : "Das et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning Cooperative Visual Dialog Agents with Deep Reinforcement Learning",
      "author" : [ "Abhishek Das", "Satwik Kottur", "José MF Moura", "Stefan Lee", "Dhruv Batra." ],
      "venue" : "arXiv preprint arXiv:1703.06585 .",
      "citeRegEx" : "Das et al\\.,? 2017",
      "shortCiteRegEx" : "Das et al\\.",
      "year" : 2017
    }, {
      "title" : "Toward Natural Turn-taking in a Virtual Human Negotiation Agent",
      "author" : [ "David DeVault", "Johnathan Mell", "Jonathan Gratch." ],
      "venue" : "AAAI Spring Symposium on Turn-taking and Coordination in HumanMachine Interaction. AAAI Press, Stanford, CA.",
      "citeRegEx" : "DeVault et al\\.,? 2015",
      "shortCiteRegEx" : "DeVault et al\\.",
      "year" : 2015
    }, {
      "title" : "Evaluating Prerequisite Qualities for Learning End-to-End Dialog Systems",
      "author" : [ "Jesse Dodge", "Andreea Gane", "Xiang Zhang", "Antoine Bordes", "Sumit Chopra", "Alexander H. Miller", "Arthur Szlam", "Jason Weston." ],
      "venue" : "ICLR abs/1511.06931.",
      "citeRegEx" : "Dodge et al\\.,? 2016",
      "shortCiteRegEx" : "Dodge et al\\.",
      "year" : 2016
    }, {
      "title" : "Policy Networks with Two-stage Training for Dialogue Systems",
      "author" : [ "Mehdi Fatemi", "Layla El Asri", "Hannes Schulz", "Jing He", "Kaheer Suleman." ],
      "venue" : "arXiv preprint arXiv:1606.03152 .",
      "citeRegEx" : "Fatemi et al\\.,? 2016",
      "shortCiteRegEx" : "Fatemi et al\\.",
      "year" : 2016
    }, {
      "title" : "The Importance of the Agenda in Bargaining",
      "author" : [ "Chaim Fershtman." ],
      "venue" : "Games and Economic Behavior 2(3):224–238.",
      "citeRegEx" : "Fershtman.,? 1990",
      "shortCiteRegEx" : "Fershtman.",
      "year" : 1990
    }, {
      "title" : "POMDPbased Dialogue Manager Adaptation to Extended Domains",
      "author" : [ "Milica Gašic", "Catherine Breslin", "Matthew Henderson", "Dongho Kim", "Martin Szummer", "Blaise Thomson", "Pirros Tsiakoulis", "Steve Young." ],
      "venue" : "Proceedings of SIGDIAL.",
      "citeRegEx" : "Gašic et al\\.,? 2013",
      "shortCiteRegEx" : "Gašic et al\\.",
      "year" : 2013
    }, {
      "title" : "Learning symmetric collaborative dialogue agents with dynamic knowledge graph embeddings",
      "author" : [ "H. He", "A. Balakrishnan", "M. Eric", "P. Liang." ],
      "venue" : "Association for Computational Linguistics (ACL).",
      "citeRegEx" : "He et al\\.,? 2017",
      "shortCiteRegEx" : "He et al\\.",
      "year" : 2017
    }, {
      "title" : "The Second Dialog State Tracking Challenge",
      "author" : [ "Matthew Henderson", "Blaise Thomson", "Jason Williams." ],
      "venue" : "15th Annual Meeting of the Special Interest Group on Discourse and Dialogue. volume 263.",
      "citeRegEx" : "Henderson et al\\.,? 2014",
      "shortCiteRegEx" : "Henderson et al\\.",
      "year" : 2014
    }, {
      "title" : "Evaluating Persuasion Strategies and Deep Reinforcement Learning methods for Negotiation",
      "author" : [ "Simon Keizer", "Markus Guhe", "Heriberto Cuayáhuitl", "Ioannis Efstathiou", "Klaus-Peter Engelbrecht", "Mihai Dobre", "Alexandra Lascarides", "Oliver Lemon" ],
      "venue" : null,
      "citeRegEx" : "Keizer et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Keizer et al\\.",
      "year" : 2017
    }, {
      "title" : "Bandit based Monte-Carlo Planning",
      "author" : [ "Levente Kocsis", "Csaba Szepesvári." ],
      "venue" : "European conference on machine learning. Springer, pages 282–293.",
      "citeRegEx" : "Kocsis and Szepesvári.,? 2006",
      "shortCiteRegEx" : "Kocsis and Szepesvári.",
      "year" : 2006
    }, {
      "title" : "A Diversity-promoting Objective Function for Neural Conversation Models",
      "author" : [ "Jiwei Li", "Michel Galley", "Chris Brockett", "Jianfeng Gao", "Bill Dolan." ],
      "venue" : "arXiv preprint arXiv:1510.03055 .",
      "citeRegEx" : "Li et al\\.,? 2015",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2015
    }, {
      "title" : "Deep Reinforcement Learning for Dialogue Generation",
      "author" : [ "Jiwei Li", "Will Monroe", "Alan Ritter", "Michel Galley", "Jianfeng Gao", "Dan Jurafsky." ],
      "venue" : "arXiv preprint arXiv:1606.01541 .",
      "citeRegEx" : "Li et al\\.,? 2016",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2016
    }, {
      "title" : "How NOT To Evaluate Your Dialogue System: An Empirical Study of Unsupervised Evaluation Metrics for Dialogue Response Generation",
      "author" : [ "Chia-Wei Liu", "Ryan Lowe", "Iulian V. Serban", "Michael Noseworthy", "Laurent Charlin", "Joelle Pineau." ],
      "venue" : "In",
      "citeRegEx" : "Liu et al\\.,? 2016",
      "shortCiteRegEx" : "Liu et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning Like a Child: Fast Novel Visual Concept Learning From Sentence Descriptions of Images",
      "author" : [ "Junhua Mao", "Xu Wei", "Yi Yang", "Jiang Wang", "Zhiheng Huang", "Alan L. Yuille." ],
      "venue" : "The IEEE International Conference on Computer Vision (ICCV).",
      "citeRegEx" : "Mao et al\\.,? 2015",
      "shortCiteRegEx" : "Mao et al\\.",
      "year" : 2015
    }, {
      "title" : "Emergence of Grounded Compositional Language in Multi-Agent Populations",
      "author" : [ "Igor Mordatch", "Pieter Abbeel." ],
      "venue" : "arXiv preprint arXiv:1703.04908 .",
      "citeRegEx" : "Mordatch and Abbeel.,? 2017",
      "shortCiteRegEx" : "Mordatch and Abbeel.",
      "year" : 2017
    }, {
      "title" : "The Bargaining Problem",
      "author" : [ "John F Nash Jr." ],
      "venue" : "Econometrica: Journal of the Econometric Society pages 155–162.",
      "citeRegEx" : "Jr.,? 1950",
      "shortCiteRegEx" : "Jr.",
      "year" : 1950
    }, {
      "title" : "A Method of Solving a Convex Programming Problem with Convergence Rate O (1/k2)",
      "author" : [ "Yurii Nesterov." ],
      "venue" : "Soviet Mathematics Doklady. volume 27, pages 372–376.",
      "citeRegEx" : "Nesterov.,? 1983",
      "shortCiteRegEx" : "Nesterov.",
      "year" : 1983
    }, {
      "title" : "Sampleefficient Batch Reinforcement Learning for Dialogue Management Optimization",
      "author" : [ "Olivier Pietquin", "Matthieu Geist", "Senthilkumar Chandramohan", "Hervé Frezza-Buet." ],
      "venue" : "ACM Trans. Speech Lang. Process. 7(3):7:1–7:21.",
      "citeRegEx" : "Pietquin et al\\.,? 2011",
      "shortCiteRegEx" : "Pietquin et al\\.",
      "year" : 2011
    }, {
      "title" : "Reinforcement Learning for Adaptive Dialogue Systems: A Datadriven Methodology for Dialogue Management and Natural Language Generation",
      "author" : [ "Verena Rieser", "Oliver Lemon." ],
      "venue" : "Springer Science & Business Media.",
      "citeRegEx" : "Rieser and Lemon.,? 2011",
      "shortCiteRegEx" : "Rieser and Lemon.",
      "year" : 2011
    }, {
      "title" : "Data-driven Response Generation in Social Media",
      "author" : [ "Alan Ritter", "Colin Cherry", "William B Dolan." ],
      "venue" : "Proceedings of the Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, pages 583–593.",
      "citeRegEx" : "Ritter et al\\.,? 2011",
      "shortCiteRegEx" : "Ritter et al\\.",
      "year" : 2011
    }, {
      "title" : "NegoChat: A Chat-based Negotiation Agent",
      "author" : [ "Avi Rosenfeld", "Inon Zuckerman", "Erel Segal-Halevi", "Osnat Drein", "Sarit Kraus." ],
      "venue" : "Proceedings of the 2014 International Conference on Autonomous Agents andMulti-agent Systems. International Foun-",
      "citeRegEx" : "Rosenfeld et al\\.,? 2014",
      "shortCiteRegEx" : "Rosenfeld et al\\.",
      "year" : 2014
    }, {
      "title" : "Mastering the Game of Go with Deep Neural Networks",
      "author" : [ "David Silver", "Aja Huang", "Chris J Maddison", "Arthur Guez", "Laurent Sifre", "George Van Den Driessche", "Julian Schrittwieser", "Ioannis Antonoglou", "Veda Panneershelvam", "Marc Lanctot" ],
      "venue" : null,
      "citeRegEx" : "Silver et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Silver et al\\.",
      "year" : 2016
    }, {
      "title" : "Optimizing Dialogue Management with Reinforcement Learning: Experiments with the NJFun System",
      "author" : [ "Satinder Singh", "Diane Litman", "Michael Kearns", "Marilyn Walker." ],
      "venue" : "Journal of Artificial Intelligence Research 16:105–133.",
      "citeRegEx" : "Singh et al\\.,? 2002",
      "shortCiteRegEx" : "Singh et al\\.",
      "year" : 2002
    }, {
      "title" : "Development of lying to conceal a transgression: Children’s control of expressive behaviour during verbal deception",
      "author" : [ "Victoria Talwar", "Kang Lee." ],
      "venue" : "International Journal of Behavioral Development 26(5):436–444.",
      "citeRegEx" : "Talwar and Lee.,? 2002",
      "shortCiteRegEx" : "Talwar and Lee.",
      "year" : 2002
    }, {
      "title" : "Multi-party, Multiissue, Multi-strategy Negotiation for Multi-modal Virtual Agents",
      "author" : [ "David Traum", "Stacy C. Marsella", "Jonathan Gratch", "Jina Lee", "Arno Hartholt." ],
      "venue" : "Proceedings of the 8th International Conference on Intelligent Virtual Agents.",
      "citeRegEx" : "Traum et al\\.,? 2008",
      "shortCiteRegEx" : "Traum et al\\.",
      "year" : 2008
    }, {
      "title" : "A Neural Conversational Model",
      "author" : [ "Oriol Vinyals", "Quoc Le." ],
      "venue" : "arXiv preprint arXiv:1506.05869 .",
      "citeRegEx" : "Vinyals and Le.,? 2015",
      "shortCiteRegEx" : "Vinyals and Le.",
      "year" : 2015
    }, {
      "title" : "A Networkbased End-to-End Trainable Task-oriented Dialogue System",
      "author" : [ "Tsung-Hsien Wen", "David Vandyke", "Nikola Mrksic", "Milica Gasic", "Lina M Rojas-Barahona", "Pei-Hao Su", "Stefan Ultes", "Steve Young." ],
      "venue" : "arXiv preprint arXiv:1604.04562 .",
      "citeRegEx" : "Wen et al\\.,? 2016",
      "shortCiteRegEx" : "Wen et al\\.",
      "year" : 2016
    }, {
      "title" : "Partially Observable Markov Decision Processes for Spoken Dialog Systems",
      "author" : [ "Jason D Williams", "Steve Young." ],
      "venue" : "Computer Speech & Language 21(2):393–422.",
      "citeRegEx" : "Williams and Young.,? 2007",
      "shortCiteRegEx" : "Williams and Young.",
      "year" : 2007
    }, {
      "title" : "Simple Statistical Gradientfollowing Algorithms for Connectionist Reinforcement Learning",
      "author" : [ "Ronald J Williams." ],
      "venue" : "Machine learning 8(3-4):229–256.",
      "citeRegEx" : "Williams.,? 1992",
      "shortCiteRegEx" : "Williams.",
      "year" : 1992
    } ],
    "referenceMentions" : [ {
      "referenceID" : 31,
      "context" : "Such dialogues contain both cooperative and adversarial elements, and require agents to understand, plan, and generate utterances to achieve their goals (Traum et al., 2008; Asher et al., 2012).",
      "startOffset" : 153,
      "endOffset" : 193
    }, {
      "referenceID" : 0,
      "context" : "Such dialogues contain both cooperative and adversarial elements, and require agents to understand, plan, and generate utterances to achieve their goals (Traum et al., 2008; Asher et al., 2012).",
      "startOffset" : 153,
      "endOffset" : 193
    }, {
      "referenceID" : 30,
      "context" : "Deceit is a complex skill that requires hypothesising the other agent’s beliefs, and is learnt relatively late in child development (Talwar and Lee, 2002).",
      "startOffset" : 132,
      "endOffset" : 154
    }, {
      "referenceID" : 11,
      "context" : "Our task is an instance of multi issue bargaining (Fershtman, 1990), and is based on DeVault et al.",
      "startOffset" : 50,
      "endOffset" : 67
    }, {
      "referenceID" : 8,
      "context" : "Our task is an instance of multi issue bargaining (Fershtman, 1990), and is based on DeVault et al. (2015). Two agents are both shown the same collection of items, and instructed to divide them so that each item assigned to one agent.",
      "startOffset" : 85,
      "endOffset" : 107
    }, {
      "referenceID" : 6,
      "context" : "Our data collection interface was adapted from that of Das et al. (2016).",
      "startOffset" : 55,
      "endOffset" : 73
    }, {
      "referenceID" : 4,
      "context" : "The model uses 4 recurrent neural networks, implemented as GRUs (Cho et al., 2014): GRUw, GRUg, GRU−→o , and GRU←−o .",
      "startOffset" : 64,
      "endOffset" : 82
    }, {
      "referenceID" : 20,
      "context" : "The token at each time step is predicted with a softmax, which uses weight tying with the embedding matrix E (Mao et al., 2015):",
      "startOffset" : 109,
      "endOffset" : 127
    }, {
      "referenceID" : 2,
      "context" : "The classifiers share bidirectional GRUo and attention mechanism (Bahdanau et al., 2014) over the dialogue, and additionally conditions on the input goals.",
      "startOffset" : 65,
      "endOffset" : 88
    }, {
      "referenceID" : 32,
      "context" : "Unlike the Neural Conversational Model (Vinyals and Le, 2015), our approach shares all parameters for reading and generating tokens.",
      "startOffset" : 39,
      "endOffset" : 61
    }, {
      "referenceID" : 15,
      "context" : "Li et al. (2016); Das et al.",
      "startOffset" : 0,
      "endOffset" : 17
    }, {
      "referenceID" : 6,
      "context" : "(2016); Das et al. (2017)).",
      "startOffset" : 8,
      "endOffset" : 26
    }, {
      "referenceID" : 35,
      "context" : "t−1,g)[R(xt)] (14) The gradient of L θ is calculated as in REINFORCE (Williams, 1992):",
      "startOffset" : 69,
      "endOffset" : 85
    }, {
      "referenceID" : 23,
      "context" : "1 (Nesterov, 1983), and clipping gradients whose L2 norm exceeds 0.",
      "startOffset" : 2,
      "endOffset" : 18
    }, {
      "referenceID" : 34,
      "context" : "tated in the training data (Williams and Young, 2007; Henderson et al., 2014; Wen et al., 2016).",
      "startOffset" : 27,
      "endOffset" : 95
    }, {
      "referenceID" : 14,
      "context" : "tated in the training data (Williams and Young, 2007; Henderson et al., 2014; Wen et al., 2016).",
      "startOffset" : 27,
      "endOffset" : 95
    }, {
      "referenceID" : 33,
      "context" : "tated in the training data (Williams and Young, 2007; Henderson et al., 2014; Wen et al., 2016).",
      "startOffset" : 27,
      "endOffset" : 95
    }, {
      "referenceID" : 3,
      "context" : "Bordes and Weston (2016) explore end-toend goal orientated dialogue with a supervised model—we show improvements over supervised learning with goal-based training and decoding.",
      "startOffset" : 0,
      "endOffset" : 25
    }, {
      "referenceID" : 3,
      "context" : "Bordes and Weston (2016) explore end-toend goal orientated dialogue with a supervised model—we show improvements over supervised learning with goal-based training and decoding. Recently, He et al. (2017) use task-specific rules to combine the task input and dialogue history into a more structured state representation than ours.",
      "startOffset" : 0,
      "endOffset" : 204
    }, {
      "referenceID" : 29,
      "context" : "RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016).",
      "startOffset" : 103,
      "endOffset" : 211
    }, {
      "referenceID" : 24,
      "context" : "RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016).",
      "startOffset" : 103,
      "endOffset" : 211
    }, {
      "referenceID" : 25,
      "context" : "RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016).",
      "startOffset" : 103,
      "endOffset" : 211
    }, {
      "referenceID" : 12,
      "context" : "RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016).",
      "startOffset" : 103,
      "endOffset" : 211
    }, {
      "referenceID" : 10,
      "context" : "RL has been widely used to improve dialogue managers, which manage transitions between dialogue states (Singh et al., 2002; Pietquin et al., 2011; Rieser and Lemon, 2011; Gašic et al., 2013; Fatemi et al., 2016).",
      "startOffset" : 103,
      "endOffset" : 211
    }, {
      "referenceID" : 7,
      "context" : "RL has also been used to allow agents to invent new languages (Das et al., 2017; Mordatch and Abbeel, 2017).",
      "startOffset" : 62,
      "endOffset" : 107
    }, {
      "referenceID" : 21,
      "context" : "RL has also been used to allow agents to invent new languages (Das et al., 2017; Mordatch and Abbeel, 2017).",
      "startOffset" : 62,
      "endOffset" : 107
    }, {
      "referenceID" : 8,
      "context" : ", 2013; Fatemi et al., 2016). In contrast, our end-toend approach has no explicit dialogue manager. Li et al. (2016) improve metrics such as diversity for non-goal-orientated dialogue using RL, which would make an interesting extension to our work.",
      "startOffset" : 8,
      "endOffset" : 117
    }, {
      "referenceID" : 6,
      "context" : "Das et al. (2017) use reinforcement learning to improve cooperative bot-bot dialogues.",
      "startOffset" : 0,
      "endOffset" : 18
    }, {
      "referenceID" : 26,
      "context" : "Work on learning end-to-end dialogues has concentrated on ‘chat’ settings, without explicit goals (Ritter et al., 2011; Vinyals and Le, 2015; Li et al., 2015).",
      "startOffset" : 98,
      "endOffset" : 158
    }, {
      "referenceID" : 32,
      "context" : "Work on learning end-to-end dialogues has concentrated on ‘chat’ settings, without explicit goals (Ritter et al., 2011; Vinyals and Le, 2015; Li et al., 2015).",
      "startOffset" : 98,
      "endOffset" : 158
    }, {
      "referenceID" : 17,
      "context" : "Work on learning end-to-end dialogues has concentrated on ‘chat’ settings, without explicit goals (Ritter et al., 2011; Vinyals and Le, 2015; Li et al., 2015).",
      "startOffset" : 98,
      "endOffset" : 158
    }, {
      "referenceID" : 19,
      "context" : "Such models are notoriously hard to evaluate (Liu et al., 2016), because the huge diversity of reasonable responses, whereas our task has a clear objective.",
      "startOffset" : 45,
      "endOffset" : 63
    }, {
      "referenceID" : 9,
      "context" : "Our end-to-end approach would also be much more straightforward to integrate into a generalpurpose dialogue agent than one that relied on annotated dialogue states (Dodge et al., 2016).",
      "startOffset" : 164,
      "endOffset" : 184
    }, {
      "referenceID" : 1,
      "context" : "There has also been computational work on modelling negotiations (Baarslag et al., 2013)—our work differs in that agents communicate in unrestricted natural language, rather than pre-specified symbolic actions, and our focus on improving performance relative to humans rather than other automated systems.",
      "startOffset" : 65,
      "endOffset" : 88
    }, {
      "referenceID" : 27,
      "context" : "The only automated natural language negotiations systems we are aware of have first mapped language to domainspecific logical forms, and then focused on choosing the next dialogue act (Rosenfeld et al., 2014; Cuayáhuitl et al., 2015; Keizer et al., 2017).",
      "startOffset" : 184,
      "endOffset" : 254
    }, {
      "referenceID" : 5,
      "context" : "The only automated natural language negotiations systems we are aware of have first mapped language to domainspecific logical forms, and then focused on choosing the next dialogue act (Rosenfeld et al., 2014; Cuayáhuitl et al., 2015; Keizer et al., 2017).",
      "startOffset" : 184,
      "endOffset" : 254
    }, {
      "referenceID" : 15,
      "context" : "The only automated natural language negotiations systems we are aware of have first mapped language to domainspecific logical forms, and then focused on choosing the next dialogue act (Rosenfeld et al., 2014; Cuayáhuitl et al., 2015; Keizer et al., 2017).",
      "startOffset" : 184,
      "endOffset" : 254
    }, {
      "referenceID" : 18,
      "context" : "Nash Jr (1950). There has also been computational work on modelling negotiations (Baarslag et al.",
      "startOffset" : 5,
      "endOffset" : 15
    }, {
      "referenceID" : 1,
      "context" : "There has also been computational work on modelling negotiations (Baarslag et al., 2013)—our work differs in that agents communicate in unrestricted natural language, rather than pre-specified symbolic actions, and our focus on improving performance relative to humans rather than other automated systems. Our task is based on that of DeVault et al. (2015), who study natural language negotiations for pedagogical purposes—their version includes speech rather than textual dialogue, and embodied agents, which would make interesting extensions to our work.",
      "startOffset" : 66,
      "endOffset" : 357
    }, {
      "referenceID" : 28,
      "context" : "Our use of a combination of supervised and reinforcement learning for training, and stochastic rollouts for decoding, builds on strategies used in game playing agents such as AlphaGo (Silver et al., 2016).",
      "startOffset" : 183,
      "endOffset" : 204
    }, {
      "referenceID" : 16,
      "context" : "Our use of rollouts could be extended by choosing the other agent’s responses based on sampling, using Monte Carlo Tree Search (MCTS) (Kocsis and Szepesvári, 2006).",
      "startOffset" : 134,
      "endOffset" : 163
    }, {
      "referenceID" : 28,
      "context" : "However, our setting has a higher branching factor than in domains where MCTS has been successfully applied, such as Go (Silver et al., 2016)—future work should explore scaling tree search to dialogue modelling.",
      "startOffset" : 120,
      "endOffset" : 141
    } ],
    "year" : 2017,
    "abstractText" : "Much of human dialogue occurs in semicooperative settings, where agents with different goals attempt to agree on common decisions. Negotiations require complex communication and reasoning skills, but success is easy to measure, making this an interesting task for AI. We gather a large dataset of human-human negotiations on a multi-issue bargaining task, where agents who cannot observe each other’s reward functions must reach an agreement (or a deal) via natural language dialogue. For the first time, we show it is possible to train end-to-end models for negotiation, which must learn both linguistic and reasoning skills with no annotated dialogue states. We also introduce dialogue rollouts, in which the model plans ahead by simulating possible complete continuations of the conversation, and find that this technique dramatically improves performance. Our code and dataset are publicly available.",
    "creator" : "LaTeX with hyperref package"
  }
}