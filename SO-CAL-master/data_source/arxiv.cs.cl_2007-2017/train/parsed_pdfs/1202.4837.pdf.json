{
  "name" : "1202.4837.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "The GF Mathematics Library*",
    "authors" : [ "Jordi Saludes", "Sebastian Xambó" ],
    "emails" : [ "jordi.saludes@upc.edu", "sebastia.xambo@upc.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "P. Quaresma and R.-J. Back (Eds.); THedu’11 EPTCS 79, 2012, pp. 102–110, doi:10.4204/EPTCS.79.6\nc© J. Saludes & S. Xambó This work is licensed under the Creative Commons Attribution License.\nThe GF Mathematics Library*\nJordi Saludes Universitat Politècnica de Catalunya\nSistemes Avançats de Control\njordi.saludes@upc.edu\nSebastian Xambó Universitat Politècnica de Catalunya\nMA2, Edifici OMEGA, Barcelona (Spain)\nsebastia.xambo@upc.edu\nThis paper is devoted to present the Mathematics Grammar Library, a system for multilingual mathematical text processing. We explain the context in which it originated, its current design and functionality and the current development goals. We also present two prototype services and comment on possible future applications in the area of artificial mathematics assistants."
    }, {
      "heading" : "1 Introduction",
      "text" : "An archetypal meeting point for natural language processing and mathematics education is the realm of word problems [4, 14, 15], a realm in which mechanised mathematics assistants (MMA) are expected to play an ever more prominent role in the years to come.\nThe following example, to which we will refer later on (last subsection of 3), is meant to illustrate in a concrete way the idea of a word problem:\nA farm has ducks and rabbits. There are 100 animals and they have 260 legs. How many ducks and rabbits are there in the farm?\nWe envision the Mathematics Grammar Library (MGL) presented in this paper as an enabling technology for multilingual dialog systems capable of helping students in solving and learning how to solve word problems. This confidence is grounded on the MGL potential capabilities for dealing effectively with a mixture of text and mathematical expressions, capabilities that in turn depend crucially on the formal abstract way in which the semantics is captured.\nSince formal semantics is amenable to algorithmic processing, the library can manage, in addition to parsing and rendering natural language with mathematical expressions, powerful interactions with ancillary Computer Algebra Systems (CAS) or Computer Theorem Provers (CTP). As these are key ingredients for advanced MMAs, our working hypothesis is that MGL is a good basis on which to build useful MMA’s for learning and teaching (cf. [17, 18] for some general clues on e-learning technologies).\nIn this context, the current general aim for MGL is to provide natural language services for mathematical constructs at the level of high school and college freshmen linear algebra and calculus. At the present stage, the concrete goal is to provide rendering of simple mathematical exercises in multiple languages (see [5] for a demo of the expressions available and also the examples in Section 3).\nFor reading convenience, we include a short glossary of terms that will be used in the rest of the paper.\nGF Grammatical Framework: A programming language for multilingual grammar applications. Based on functional programming and type theory, the framework supports abstract grammars, which allow to capture meaning in a formal way, and concrete grammars, which enable multilingual\n* The research leading to these results has received funding from the European Union’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no. FP7-ICT-247914.\nrendering. See [9, 10]. The library MGL is programmed in GF, in a way that is comparable to how numerical libraries are compiled from C or Fortran sources.\nOPENMATH A de facto standard for mathematical semantics, and usually abbreviated as OM. It is “an extensible standard for representing the semantics of mathematical objects, allowing them to be exchanged between computer programs, stored in databases, or published on the worldwide web” (see [8]). It is structured in Content Dictionaries (CD’s), each of which defines a collection of mathematical objects.\nSAGE Aimed at “creating a viable free open source alternative to Magma, Maple, Mathematica and Matlab”, SAGE is the result of an on-going collective endeavour led by William Stein. See [7, 12] for a description of the system and its functionalities.\nWEBALT European digital content for the global networks project (Contract Number EDC-22253). Developed in 2005 and 2006, WEBALT aimed at using existing standards for representing mathematics on the web and existing linguistic technologies to produce language-independent mathematical didactical material. See [2, 3]."
    }, {
      "heading" : "2 Background",
      "text" : "For a closer view of MGL, let us look briefly at its origins. The idea behind MGL was born, to a good extend, on reflecting about one of the key results of the WEBALT project. In summary, the unfolding of this reflection went as follows.\nOne of the aims of WEBALT was to produce a proof-of-concept platform for the creation of a multilingual repository of simple mathematical problems with guaranteed quality of the (machine) translations, in both linguistic and mathematical terms. The languages envisioned were Catalan, English, Finnish, French, Italian and Spanish. Of these, Finnish, with its great complexities, could not be raised to the same level of functionality as the others.\nThe WebALT prototype was successful and, as far as we know, that endeavour brought about the first application of the GF system for the multilingual translation of simple mathematical questions. The powerful GF scheme, based on the perfect interlocking of abstract and concrete grammars, was found to be a very sound choice, but the solution had several shortcomings that could not be addressed in that project. For the present purposes, the following three were the most appealing:\n• The grammars did not work for later versions of GF (>2.9).\n• The library was not modular with respect to semantic processing, and hence not easy to maintain.\n• It included too few languages, especially as seen from an European perspective.\nThe springboard for the present library was the need to properly solve these problems, inasmuch as this was regarded as one of the most promising prerequisites for all further advanced developments in machine processing of mathematical texts. Thus the main tasks were:\n• To design a modular mathematics library structured according to the semantic standards (content dictionaries) of OPENMATH.\n• To code it in the much more expressive GF 3.1 for the few languages mentioned above, and\n• To write new code for a few additional languages (Bulgarian, Finnish, German, Romanian and Swedish).\nThe first two points amount to a tidying of the original WEBALT programming methods. The third point represents not merely an addition of a few more languages, but a thourough testing of the methods and procedures enforced in the preceding steps. This testing is important in order to secure the rules for the inclusion of further languages and for a controlled uniform extension of the available grammars.\nTo end this section, we include a few notions about the GF system that will ease the considerations about MGL in the next section. For a thourough reference about GF, see [10].\nAny GF application begins by specifying its abstract syntax. This syntax contains declarations of categories (the GF name for types) and functions (the GF name for constructor signatures) and has to capture the semantic structure of the application domain. For example, to let Nat stand for the type of natural numbers and Prop for propositions about natural numbers, the GF syntax is\ncat Nat, Prop ;\nThat ‘zero is a natural number’ and that ‘the successor of any natural number is a natural number’ can be expressed as follows:\nfun Zero : Nat ; Succ : Nat -> Nat ;\nThe signatures for ‘even number’ and ‘prime number’ can be captured with\nfun Even, Prime : Nat -> Prop ;\nFinally, we can abstract the logical ‘not’, ‘and’ and ‘or’ as follows:\nfun Not : Prop -> Prop ; And, Or : Prop -> Prop -> Prop ;\nIn practical terms, these declarations would form the body of an abstract module that would have the form\nabstract Arith = {<body>}\nwhere Arith is the name of the module."
    }, {
      "heading" : "3 The MGL library",
      "text" : "As in any application coded in GF, we need to specify what categories will be used. In the case of MGL, the most relevant categories are in correspondence with all possible combinations of Variable and Value with the mathematical types Number, Set, Tensor and Function. Thus the category VarNum denotes a numeric variable like x, while ValSet denotes an actual set like “the domain of the natural logarithm”. The distinction between variables and values allows us to type-check productions like lambda abstractions that require a variable as the first argument. Variables can be promoted to values when needed.\nThe library is organised in a matrix-like form, with an horizontal axis ranging over the targeted natural languages. At the moment these are: Bulgarian, Catalan, English, Finnish, French, German, Italian, Polish, Romanian, Spanish, Swedish and Urdu. In addition, the mathematical typesetting system LATEX has also been included, and also a natural language interface to SAGE that allows to elicit results from this sophisticated computational environment with commands expressed in any of the natural languages currently available.\nThe vertical axis is for complexity and contains, from bottom to top, three layers:\nGround. It deals with literals, indices and variables.\nOpenMath. It is modelled after the OM Content Dictionaries (CD’s), in the sense that in this layer there is an MGL module for each CD.\nOperations. This layer takes care of simple mathematical exercises. These appear in drilling materials and usually begin with directives such as ‘Compute’, ‘Find’, ‘Prove’, ‘Give an example of’, . . . .\nThe following tree is an example of what can be expressed in the OpenMath layer:\nmkProp (lt_num\n(abs (plus (BaseValNum (Var2Num x) (Var2Num y)))) (plus (BaseValNum (abs (Var2Num x)) (abs (Var2Num y)))))\nWhen linearized, say with the Spanish concrete grammar, it yields\nEl valor absoluto de la suma de x y de y es menor que la suma del valor absoluto de x y del valor absoluto de y\nSimilarly, the tree\nDoSelectFromN (Var2Num y) (domain (inverse tanh)) (mkProp\n(gt_num (At cosh (Var2Num y)) pi))\ngives, when linearized with the English concrete grammar:\nSelect y from the domain of the inverse of the hyperbolic tangent such that the hyperbolic cosine of y is greater than pi.\nWe end this section by describing two prototype services driven by MGL: the Mathbar demo and the gfsage service.\nMathbar demo\nTo access this demo, see [5]. Now consider, for example, the sentence “Gamma is greater than pi raised to x”, which can be easily composed by choosing Eng in the From slot and repeatedly choosing the desired word among the continuation options presented at each stage. If we further choose All in the To slot, we get the results shown in the screenshot.\nAt the bottom, we can see the typesetting of LATEX of the expression “\\gamma > \\piˆ x”:\nγ > πx\nRemark. There are a few details in some of the concrete grammars that have to be improved. In the case of Polish, ‘podniesiona’ should be ‘podniesione’, because ‘pi’ is neutral in that language, and ‘wieksza’ should be ‘wiȩksza’ (Adam Slaski, private communication). There is also a slight inconsistency in the rendering of ‘Gamma’, since in French, Italian and Romanian it appears with ‘g’ while for all other it goes with ‘G’. Actually it is not hard to modify the linearizations so that they produce ‘π’, ‘γ’ and ‘Γ’ instead of ‘pi’, ‘gamma’ and ‘Gamma’.\nRemark. In the Mathbar demo there is the button “Try Google Translate”. When we try for the different languages, there are cases in which we get the same result (Catalan, Romanian, Spanish, Swedish), but in others the result is different, and often wrong:\nBul Fin Gamma on suurempi kuin PI nostetaan x Fre Gamma est supérieure à Pi portée à x Ger Gamma größer als pi um x erhöht Ita Gamma è superiore a pi elevato a x Pol Gamma jest wiȩksza niż pi podniesiony do x Urd\nSAGE commands in natural language\nAnother recently developed prototype based on MGL is gfsage. It enables to express SAGE commands in natural language and get the results expressed likewise. The tool starts a SAGE notebook server in the background (as described in Simple Sage Server API, [13]), reads the pgf grammar file and translates the\nqueries from the chosen natural language to the concrete grammar for SAGE. This is passed to the SAGE server for evaluation. Each computation runs in a different worksheet cell and the server replies with a done or a computing message. In this case the program waits for completion of the computation and then writes the answer.\nFrom the GF side, what is send to SAGE is always in the category Command. What is returned by SAGE is in the category Answer. There are 3 kinds of Commands:\n• Asking for a computation. Compute: Kind -> Value Kind -> Command. SAGE gives back a ReturnBlock with the cell number and the answer (a string). We could now construct a short Answer by using:\n– Simple: k ∈ Kind -> Value k -> Answer (“it is 5”), or\n– Feedback: k ∈ Kind -> Value k -> Value k -> Answer (“the factorial of 3 is 6”), that combines the question (the first Value k) with the SAGE answer.\n• Assuming propositions. Assume: Prop -> Command. SAGE silently accepts the command by returning an EmptyBlock (with cell number) but we want it to be more assertive, so we reinject the Prop into Assumed: Prop -> Answer (“I assume that x is greater than 2”)\n• Binding Values to Variables. Assign: k ∈ Kind -> Var k -> Value k -> Command (“assign 2 to x”). We expect SAGE to return an EmptyBlock followed by Assigned: k ∈ Kind -> Var k -> Value k -> Answer (“2 is now assigned to x”).\nHere are some illustrations:\nsage> compute the sum of 1, 2, 3, 4 and 5. [4] 15 answer: it is 15\nsage> compute the summation of x when x ranges from 1 to 100. [7] 5050 answer: it is 5050\nsage> compute the integral of the cosine on the open interval from 0 to the quotient of pi and 2. [8] 1 answer: it is 1\nsage> compute the integral of the function mapping x to the square root of x on the closed interval from 1 to 2. waiting... [4] 4/3*sqrt(2) - 2/3 answer: it is 4/3*sqrt(2) - 2/3\nsage> compute the sum of x and y. [4] x + y answer: it is x plus y.\nsage> compute the sum of x and 5. [5] x + 5 answer: it is x plus 5.\nsage> compute the sum of 4 and 5. [6] 9 answer: it is 9.\nDealing with word problems\nLet us return to our word problem example in Section 1 in order to consider the difficulties posed by a full computer representation of its more relevant aspects, and also to point out some hints about how to achieve it. First of all, there is the question that human readers are expected to make sense of information that is not stated explicitely but which they usually infer from the semantic context. In our example, it is enough to write the inferred assertions next to the assertions given in the word problem. Notice that some of the inferences amount to making explicit the implicit references.\nA farm has ducks and rabbits. 1. A farm has no animals other than ducks and rabbits.\nThere are 100 animals 2. There are 100 animals in the farm.\nand they have 260 legs. 3. The animals in the farm have 260 legs.\nHow many ducks and rabbits are there in the farm? 4. How many ducks are there in the farm?\nHow many rabbits are there in the farm?\nLet us proceed now with a few hints about how the right-hand side statements in the table could be elicited from the left-hand side ones.\n1. The line can be parsed except for farm, ducks and rabbits, which are unknown to MGL. It can be inferred, however (using the structure available from the GF parser), that these unknowns are common nouns. Then a query to Wordnet [16] finds entries compatible with this assumption. From the determinants used, we deduce that there is an instance f of the entity FARM (F) and that there are entities DUCK and RABBIT (D and R, respectively). The verb has is a priori related to the IN predicate:\nf ∈ F, |D∩ IN( f )| ≥ 1,* |R∩ IN( f )| ≥ 1,* A∩ IN( f )\\ (D∪R) = /0.\n2. Animals is a new common noun leading to a new entity A. Another query to Wordnet reveals that it is, in fact, an hypernym of duck and rabbit:\n|A∩ IN( f )|= 100, D,R⊂ A.\n3. The noun legs gives rise to another entity (L) and the occurrence of have introduces a new version of IN: |L∩ IN(A∩ IN( f ))|= 260. 4. Wordnet points out that a farm is a location, so there probably refers to f . A how many question\nasks for d = |D∩ IN( f )| and r = |R∩ IN( f )|.\n* It is not hard to have instances of the problem whose solution has no rabbits (or no ducks). This may come as a surprise to the student, but it is mathematically acceptable by common practice. If we were to follow this convention, then we would drop these inequalities."
    }, {
      "heading" : "4 Conclusions and further work",
      "text" : "In this paper we have described a GF library, which we call MGL, for multilingual mathematical text processing. We have also indicated how it originated in the WEBALT project, its relation to GF, and its present functionality. After a first step in which the main concern was tidying and modularizing the WEBALT prototype for simple mathematics exercises in five languages, we have extended it, in a second step, with four more languages (Finnish was considered in the first step, but it had to be worked out from scratch in the second step). We have also showed that LATEX and SAGE can be approached with the same methodology. In particular, gfsage allows to interact with SAGE by expressing the commands in natural language.\nFurther work has three main lines:\n• Addition of new languages, like Danish, Dutch, Norwegian, Portuguese, Russian, . . . This is a continuation of the first two steps referred to above and our assessment is that it can be done reliably with the methods and procedures established so far. To some extent, the library modules for a new language can be generated automatically up to a point in which the remaining work corresponds to natives in that language.\n• Describing a systematic procedure for the uniform and reliable extension of the grammars according to new semantic needs. This is an important step that is being researched from several angles. One important point is to ascertain when a piece of mathematical text requires functionalities (categories, constructors, operations) not yet covered by MGL.\n• Advancing in the use of MGL for the production of ever more sophisticated artificial mathematics assistants. This is also the focus of current research that includes a collaboration with statistical machine translation methods, as in principle they can suggest grammatical structures out of a corpus of mathematical sentences. One important element will be an extended version of gfsage that will enable to harness a powerful CAS system such as SAGE by means of commands expressed in natural languages. We also envision a similar prototype to harness the capabilities of CTPs. After this, we hope that we will be in a position to produce a MMA that can help students in solving and learning how to solve word problems of the kind we have been considering.\nHow to get MGL\nThe living end of the library is publicly available using subversion as:\nsvn co svn://molto-project.eu/mgl\nA stable version can be found at:\nsvn co svn://molto-project.eu/tags/D6.1"
    }, {
      "heading" : "Acknowledgments",
      "text" : "The authors are much grateful to the referees for pointing out several ways in which this paper could be improved, especially by insisting that we made more explicit the features of our work that are closer to the conference scope. We are also thankful to Pedro Quaresma for his kind and helpful handling of the correspondence concerning this paper."
    } ],
    "references" : [ {
      "title" : "Teaching mathematical reasoning in secondary school classrooms",
      "author" : [ "K. Brodie", "K. Coetzee" ],
      "venue" : null,
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2010
    }, {
      "title" : "WebALT! Deliver Mathematics Everywhere",
      "author" : [ "O. Caprotti" ],
      "venue" : "Proceedings of SITE",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2006
    }, {
      "title" : "Multilingual Delivery of Online Tests in Mathematics",
      "author" : [ "O. Caprotti", "M. Seppälä" ],
      "venue" : "Proceedings of Online Educa Berlin",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2006
    }, {
      "title" : "Making sense of realistic word problems: portraying working class ‘failure’ on a division with remainder problem",
      "author" : [ "Barry Cooper", "Tony Harries" ],
      "venue" : "International Journal of Research & Method in Education",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2005
    }, {
      "title" : "Book Review: Adding depth to portraits of mathematical inquiry Karin Brodie (2010) Teaching mathematical reasoning in secondary school classrooms",
      "author" : [ "V. Hand" ],
      "venue" : "Educational Studies in Mathematics",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2012
    }, {
      "title" : "SAGE for Newbies. Sagemath.org. Available at http://sage.math.washington.edu/ home/tkosan/newbies_book",
      "author" : [ "T. Kosan" ],
      "venue" : null,
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2007
    }, {
      "title" : "OpenMath. Available at http://www.openmath.org",
      "author" : [ "P. Libbrecht" ],
      "venue" : null,
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2010
    }, {
      "title" : "Grammatical Framework. Available at http://www.grammaticalframework.org",
      "author" : [ "A. Ranta" ],
      "venue" : null,
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2010
    }, {
      "title" : "Grammatical Framework: Programming with Multilingual Grammars",
      "author" : [ "A. Ranta" ],
      "venue" : null,
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2011
    }, {
      "title" : "Making Sense of Word Problems",
      "author" : [ "Ch. Selter" ],
      "venue" : "Educational Studies in Mathematics",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2000
    }, {
      "title" : "B",
      "author" : [ "L. Verschaffel" ],
      "venue" : "Greer & E. De Corte ",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2000
    }, {
      "title" : "How to solve word problems in mathematics",
      "author" : [ "D. Wayne" ],
      "venue" : null,
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2001
    }, {
      "title" : "R",
      "author" : [ "S. Xambó", "H. Bass", "G. Bolanos" ],
      "venue" : "Seiler & M. Seppälä ",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "O",
      "author" : [ "S. Xambó" ],
      "venue" : "Caprotti & M. Seppälä ",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2008
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "An archetypal meeting point for natural language processing and mathematics education is the realm of word problems [4, 14, 15], a realm in which mechanised mathematics assistants (MMA) are expected to play an ever more prominent role in the years to come.",
      "startOffset" : 116,
      "endOffset" : 127
    }, {
      "referenceID" : 10,
      "context" : "An archetypal meeting point for natural language processing and mathematics education is the realm of word problems [4, 14, 15], a realm in which mechanised mathematics assistants (MMA) are expected to play an ever more prominent role in the years to come.",
      "startOffset" : 116,
      "endOffset" : 127
    }, {
      "referenceID" : 11,
      "context" : "An archetypal meeting point for natural language processing and mathematics education is the realm of word problems [4, 14, 15], a realm in which mechanised mathematics assistants (MMA) are expected to play an ever more prominent role in the years to come.",
      "startOffset" : 116,
      "endOffset" : 127
    }, {
      "referenceID" : 12,
      "context" : "[17, 18] for some general clues on e-learning technologies).",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 13,
      "context" : "[17, 18] for some general clues on e-learning technologies).",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 7,
      "context" : "See [9, 10].",
      "startOffset" : 4,
      "endOffset" : 11
    }, {
      "referenceID" : 8,
      "context" : "See [9, 10].",
      "startOffset" : 4,
      "endOffset" : 11
    }, {
      "referenceID" : 6,
      "context" : "It is “an extensible standard for representing the semantics of mathematical objects, allowing them to be exchanged between computer programs, stored in databases, or published on the worldwide web” (see [8]).",
      "startOffset" : 204,
      "endOffset" : 207
    }, {
      "referenceID" : 5,
      "context" : "See [7, 12] for a description of the system and its functionalities.",
      "startOffset" : 4,
      "endOffset" : 11
    }, {
      "referenceID" : 1,
      "context" : "See [2, 3].",
      "startOffset" : 4,
      "endOffset" : 10
    }, {
      "referenceID" : 2,
      "context" : "See [2, 3].",
      "startOffset" : 4,
      "endOffset" : 10
    }, {
      "referenceID" : 8,
      "context" : "For a thourough reference about GF, see [10].",
      "startOffset" : 40,
      "endOffset" : 44
    }, {
      "referenceID" : 3,
      "context" : "[4] 15 answer: it is 15",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 5,
      "context" : "[7] 5050 answer: it is 5050",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 6,
      "context" : "[8] 1 answer: it is 1",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] 4/3*sqrt(2) - 2/3 answer: it is 4/3*sqrt(2) - 2/3",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] x + y answer: it is x plus y.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 4,
      "context" : "[6] 9 answer: it is 9.",
      "startOffset" : 0,
      "endOffset" : 3
    } ],
    "year" : 2013,
    "abstractText" : "An archetypal meeting point for natural language processing and mathematics education is the realm of word problems [4, 14, 15], a realm in which mechanised mathematics assistants (MMA) are expected to play an ever more prominent role in the years to come. The following example, to which we will refer later on (last subsection of 3), is meant to illustrate in a concrete way the idea of a word problem:",
    "creator" : "LaTeX with hyperref package"
  }
}