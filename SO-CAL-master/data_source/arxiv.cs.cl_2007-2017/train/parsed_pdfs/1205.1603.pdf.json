{
  "name" : "1205.1603.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "PARSING OF MYANMAR SENTENCES WITH FUNCTION TAGGING",
    "authors" : [ "Win Win Thant", "Tin Myat Htwe", "Ni Lar Thein" ],
    "emails" : [ "winwinthant@gmail.com", "nilarthein@gmail.com", "tinmyathtwe@gmail.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "KEYWORDS Function tagging, Parsing, Naive Bayes theory, Context free grammar, Myanmar sentences"
    }, {
      "heading" : "1. INTRODUCTION",
      "text" : "The natural language processing community is in the strong position of having many available approaches to solve some of its most fundamental problems [1]. We have taken Myanmar language for information processing. Myanmar is an agglutinative language with a very productive inflectional system. This means that for any NLP application on Myanmar to be successful, some amount of functional analysis is necessary. Without it, the development of grammatical relations would not be feasible due to the sparse data problem bound to exist in the training data. Our approach is a part of the Myanmar to English machine translation project. If high quality translation is to be achieved, language understanding is a necessity. One problem in Myanmar language processing is the lack of grammatical regularity in the language. This leads to very complex Myanmar grammar in order to obtain satisfactory results, which in term increases the complexity in the parsing process, it is desired that simple grammar is to be used.\nOur proposed method makes use of two components. They are function tagging and parsing. Function tags are useful for any application trying to follow the thread of the text –they find the ‘who does what’ of each clause, which can be useful to gain information about the situation or to learn more about the behaviour of words in the sentence [2]. The goal of function tagging is to assign syntactic categories like subject, object, time and location to each word in the text document. In case of function tagging, we use Naive Bayes theory and the functional annotated tagged corpus. Parsing is the process of analyzing a text or sentence that is made up of a sequence of words called tokens, and to determine its grammatical structure with respect to a given grammatical rules. The goal of the second one is to produce the parse tree of the sentences in Myanmar text.\nIn our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar. A small corpus annotated manually serves as training data because the large scale Myanmar Corpus is unavailable at present. Since the large-scale annotated corpora, such as Penn Treebank, have been built in English, statistical knowledge extracted from them has been shown to be more and more crucial for natural language disambiguation [5]. As a distinctive language, Myanmar has many characteristics different from English. The use of statistical information efficiently in Myanmar language is still a virgin land waiting to explore.\nThe rest of the paper is organized as in the followings. Next, in the Related Work section, we analyze previous efforts related to the tasks of function tagging and parsing. Section 3 explains Myanmar language. Section 4 describes about corpus statistics. Section 5 explains the procedure of proposed system. Section 6 includes the function tag sets. Section 7 describes about the proposed grammar for Myanmar language. Function tagging model is presented in section 8. Section 9 describes about parsing of Myanmar simple and complex sentences. Section 10 explains about experimental results. Finally the conclusion of the paper is presented."
    }, {
      "heading" : "2. RELATED WORK",
      "text" : "Blaheta and Johnson [6] addressed the task of function tags assignment. They used a statistical algorithm based on a set of features grouped in trees, rather than chains. The advantage was that features can better contribute to overall performance for cases when several features are sparse. When such features are conditioned in a chain model the sparseness of a feature can have a dilution effect of an ulterior (conditioned) one.\nMihai Lintean and Vasile Rus[7] described the use of two machine learning techniques, naive Bayes and decision trees, to address the task of assigning function tags to nodes in a syntactic parse tree. They used a set of features inspired from Blaheta and Johnson [6]. The set of classes they used in their model corresponds to the set of functional tags in Penn Treebank. To generate the training data, they have considered only nodes with functional tags, ignoring nodes unlabeled with such tags. They trained the classifiers on sections 1-21 from Wall Street Journal (WSJ) part of Penn Treebank and used section 23 to evaluate the generated classifiers.\nYong-uk Park and Hyuk-chul Kwon [8] tried to disambiguate for syntactic analysis system by many dependency rules and segmentation. Segmentation is made during parsing. If two adjacent morphemes have no syntactic relations, their syntactic analyzer makes new segment between these two morphemes, and find out all possible partial parse trees of that segmentation and combine them into complete parse trees. Also they used adjacent-rule and adverb subcategorization to disambiguate of syntactic analysis. Their syntactic analyzer system used morphemes for the basic unit of parsing. They made all possible partial parse trees on each segmentation process, and tried to combine them into complete parse trees.\nMark-Jan Nederhof and Giorgio Satta[9] considered the problem of parsing non-recursive context-free grammars, i.e., context-free grammars that generate finite languages and presented two tabular algorithms for these grammars. They presented their parsing algorithm, based on the CYK (Cocke–Younger–Kasami) algorithm and Earley’s alogrithm. As parsing CFG (contextfree grammar), they have taken a small hand-written grammar of about 100 rules. They have ordered the input grammars by size, according to the number of nonterminals (or the number of nodes in the forest, following the terminology by Langkilde (2000)).\nKyongho Min and William H. Wilson [10] discussed the robustness of four efficient syntactic error-correcting parsing algorithms that are based on chart parsing with a context-free grammar. They implemented four versions of a bottom-up error-correcting chart parser: a basic bottom-up chart parser, and chart parsers employing selectivity, top-down filtering, and a combination of selectivity and a top-down filtering. They detected and corrected syntactic errors using a system\ncomponent called IFSCP (Ill-Formed Sentence Chart Parser) described by Min & Wilson (1994), together with a spelling correction module. They tested 4 different lengths of sentences (3, 5, 7, and 11) and 5 different error types, with a grammar of 210 context-free rules designed to parse a simple declarative sentence with no conjunctions, passivisation, or relative clauses."
    }, {
      "heading" : "3. MYANMAR LANGUAGE",
      "text" : "Myanmar (formerly known as Burma) is one of the South-East Asian countries. There are 135 ethnic groups living in Myanmar. These ethnic groups speak more than one language and use different scripts to present their respective languages. There are a total of 109 languages spoken by the people living in Myanmar [11]. The Myanmar language is the official language and is more than one thousand years old."
    }, {
      "heading" : "3.1. Features of Myanmar Language",
      "text" : "Generally Myanmar sentence follows the subject, object, and verb pattern. However the interchange of subject, object is acceptable. Unlike English language Myanmar is syntax of relatively free-phrase-order language. Myanmar phrases can be written in any order as long as the verb phrase is at the end of sentence. This can be easily illustrated with the example “သူသည္ စာအုပ္ကုိ စားပြဲေပၚတြင္ ထားသည္။” (He places the book on the table) as shown in table 1. All are valid sentences [12].\nIn all the cases, subject is သူ (He), object is စာအုပ္ကို (the book), place is စားပြဲေပၚတြင္ (on the table) and verb is ထားသည္ (places). From the above example, it is clear that phrase order does not determine the functional structure in Myanmar language and permits scrambling. Myanmar language follows Subject-Object-Verb orders in contradiction with English language."
    }, {
      "heading" : "3.2. Issues of Myanmar Language",
      "text" : "The highly agglutinative language like Myanmar, nouns and verbs get inflected. Many times we need to depend on syntactic function or context to decide upon whether the particular word is a noun or adjective or adverb or post position [12]. This leads to the complexity in Myanmar grammatical relations. A noun may be categorized as common, proper or compound. Similarly, verb may be finite, infinite, gerund or contingent.\nA number of issues are affecting the function tagging for Myanmar language.\n The subject or object of the sentence can be skipped, and still be a valid sentence. For example: ရန္ကုန္ - သုိ႔ - သြားသည္။ Yangon - to - go (Go to Yangon)\n Myanmar language makes prominent usage of particles, which are untranslatable words that are suffixed or prefixed to words to indicate level of respect, grammatical tense, or mood. For example: ေမာင္ေမာင္ - မ်ား - ပထမ - ဆု - ရ - လွ်င္ - သူ႔မိဘမ်ား - က - အံ့ၾသ - လိမ့္မည္။ Mg Mg - particle - first - prize - wins - if - his parents - PPM - surprise - will (If Mg Mg wins the first prize, his parents will surprise.)  In Myanmar language, an adjective can specialize before or after a noun unlike other languages. For example: သူသည္ - ခ်မ္းသာေသာ - လူ -တစ္ေယာက္ -ျဖစ္သည္။ He - rich - man - a - is (or) သူသည္ - လူ - ခ်မ္းသာ - တစ္ေယာက္ -ျဖစ္သည္။ He - man - rich - a - is (He is a rich man.)\n The subject /object can be another sentence, which does not contain subject or object. For example: ကေလးမ်ားသစ္ပင္ေအာက္တြင္ကစားေနသည္ ကုိ ကၽြန္ေတာ္ျမင္သည္။ (I see the children playing under the tree.)  The postpositions of subject phrases or object phrases can be hidden. For example: သူသည္- ဆရာ၀န္ -တစ္ေယာက္ - ျဖစ္သည္။ He - doctor - a - is (or) သူ - ဆရာ၀န္ - တစ္ေယာက္ - ျဖစ္သည္။ He - doctor - a - is (He is a doctor.)\n The postpositions of time phrases or place phrases can be omitted. For example: သူမ - ေက်ာင္း - သုိ႔ - သြားသည္။ She - school - to - goes (or) သူမ - ေက်ာင္း - သြားသည္။ She - school - goes (She goes to school.)\nThese issues will cause a lot of problem during function tagging, and a lot of possible tags will be resulted."
    }, {
      "heading" : "3.3. Grammar of Myanmar Language",
      "text" : "Grammar studies the rules behind languages. The aspect of grammar that does not concern meaning directly is called syntax. Myanmar (syntax: SOV), because of its use of postposition (wi.Bat), would probably be defined as a “postpositional language”, whereas English (syntax: SVO) because of its use of preposition would probably be defined as a “prepositional language”.\nThere are really only two parts of speech in Myanmar, the noun and the verb, instead of the usually accepted eight parts (Pe Maung Tin 1956:195). Most Myanmar linguists [13] accepted there are eight parts of speech in Myanmar. Myanmar nouns and verbs need the help of suffixes or particles to show grammatical relations.\nFor example: ေက်ာင္းသူမ်ားသာ ဂုဏ္ထူးရသည္။ သူတုိ႔သည္ အတန္းထဲမွာ ႐ိွၾက၏။\nMyanmar is a highly verb-prominent language and that suppression of the subject and omission of personal pronouns in connected text result in a reduced role of nominals. This observation misses the critical role of postposition particles marking sentential arguments and also of the verb itself being so marked. The key to the view of Myanmar being structures by nominals is found in the role of the particles. Some particles modify the word's part of speech. Among the most prominent of these is the particle အ, which is prefixed to verbs and adjectives to form nouns or adverbs.There is a wide variety of particles in Myanmar [14].\nFor example: သူတုိ႔သည္ မႏ ၱေလးတြင္ ၈ ရက္ တိတိ လည္ခဲ့သည္။\nStewart remarked that \"The Grammar of Burmese is almost entirely a matter of the correct use of particles\"(Stewart 1956: xi). How one understands the role of the particles is probably a matter of one's purpose."
    }, {
      "heading" : "3.4. Syntacic Structure of Myanmar Language",
      "text" : "It is known that many postpositions can be used in a Myanmar sentence. If the words can be misplaced in a sentence, the sentence can be abnormal. There are two kinds of sentence as a sentence construction. They are simple sentence (SS) and complex sentence (CS). In simple sentence, other phrases such as object, time, and place can be added between subject and verb. There are two kinds of clause in a complex sentence called independent clause(IC) and dependent clause (DC).There must be at least one independent clause in a sentence. But there can be more than one dependent clause in it. IC contains sentence’s final particle (sfp) at the end of a sentence [15].\nSS=IC+sfp CS=DC...+IC+sfp\nIC may be noun phrase or verb or combination of both.\nIC=N... (မ်က္မွန္ႏွင့္ေက်ာင္းသား) IC=V (စား) IC=N...+V (ဘုရားမွာပန္းနဲ႔ဆီမီးလွဴ)\nDC is the same as IC but it must contain a clause marker (cm) in the end.\nDC=N...+cm (ေက်ာင္းကဆရာ+ပဲ) DC=V+cm (ေရာက္+ရင္) DC=N...+V+cm (စိတ္ထား+ျဖဴ+မွ)"
    }, {
      "heading" : "4. CORPUS STATISTICS",
      "text" : "Corpus is a large and structured set of texts. It is used to do statistical analysis, checking occurrences or validating linguistic rules on a specific universe. Besides, it is a fundamental basis of many researches in Natural Language Processing (NLP). Building of the corpus will be helpful for development NLP tools (such as grammar rules, spelling checking, etc). However, there are very few creations and researches of corpora in Myanmar, comparing to other language such as English.\nWe collected several types of Myanmar texts to construct a corpus. Our corpus is to be built manually. We extended the POS tagged corpus that is proposed in [3]. The chunk and function\ntags are manually added to the POS tagged corpus. The number of sentences is about 3900 sentences with average word length 15 and it is not a balanced corpus that is a bit biased on Myanmar textbooks of middle school. The corpus size is bigger and bigger because the tested sentences are automatically added to the corpus. In table 2, Myanmar grammar books and websites are text collections. Example corpus sentence is shown in figure 1."
    }, {
      "heading" : "5. PROPOSED SYSTEM",
      "text" : "The procedure of the proposed approach is shown in the following figure."
    }, {
      "heading" : "6. FUNCTION TAGSET",
      "text" : "Function tagging is a process of assigning syntactic categories like subject, object, time and location to each word in the text document. These are conceptually appealing by encoding an event in the format of “who did what to whom, where, when”, which provides useful semantic\ninformation of the sentences. We use the function tags that is proposed in [16] because it is easier to maintain and can add new language features. The function tagset is shown in table 3."
    }, {
      "heading" : "7. PROPOSED GRAMMAR FOR MYANMAR SENTENCES",
      "text" : "Since it is impossible to cover all types of sentences in Myanmar language, we have taken some portion of the sentence and try to make grammar for them. Myanmar is free-phrase-order language. In Myanmar language, we see that one sentence can be written in different forms for the same meaning, i.e. the positions of the tags are not fixed. So we cannot restrict the grammar rule for one sentence. The grammar rule may be very long, but we have to accept it. The grammar rule we have tried to make, may not work for all the sentences in Myanmar language because we have not considered all types of sentences. Some of the sentences are shown below, which are used to make the grammar rules. သူ-သည္-ေက်ာင္း-သုိ႔-သြား-သည္။ (Subj-Pla-Verb) သူ-သည္-ေက်ာင္းသားတစ္ေယာက္-ျဖစ-္သည္။ (Subj-PcomplS-Verb) ေကာင္စီ၀င္-အျဖစ္-သူ႔-ကို-လူထု-က-ေရြး-သည္။ (PcomplO-Obj-Subj-Verb) ေမာင္လွ-သည္-ေခြး-ကုိ-တုတ္-ျဖင္-့ရုိက္-သည္။ (Subj-Obj-Use-Verb) သူ-သည္-ဆရာ႔-ကို-စာအုပ္-ေပး-သည္။ (Subj-Obj-Iobj-Verb) သူမ-သည္-လူနာမ်ား-ကို-ေဆြမ်ိဳးမ်ား-ကဲ႔သို႔-ျပဳစ-ုသည္။ (Subj-Obj-Sim-Verb) ကေလးမ်ား-သည္-အေဖာ္-ေၾကာင့္-ပ်က္စီး-သည္။ (Subj-Cau-Verb) သစ္႐ြက္တို႔-သည္-တေပါင္းလ-၌-ေၾကြ-သည္။ (Subj-Tim-Verb) တရားသူၾကီး-သည္-ခိုးမႈ-ကုိ-တရား႐ုံး-၌-နံနက္-က-စစ္ေဆး-သည္။ (Subj-Obj-Pla-Tim-Verb) အေမသည္-သူ႔သားအတြက္-မုန္႔ကုိ-ေစ်းမွ-မနက္က-ဝယ္ခဲ႔သည္။ (Subj-Aim-Obj-Pla-Tim-Verb)\nOur proposed grammar for Myanmar Sentences:\nSentence →I-sent | I-sent CC I-sent | CCM I-sent | Obj-sent I-sent | Subj-sent I-sent I-sent →Subj Obj Pla Active | Subj Active | Com Pla Active | Subj PcomplS Active CC →CCS | CCP Subj -sent →I-sent CCA Subj Obj -sent →I-sent CCA Obj Subj →PSubj SubjP Subj →Subj Obj →PObj ObjP Obj →Obj Pla →PPla PlaP PcomplO →PPcomplO PcomplOP Use →PUse UseP Sim →PSim SimP"
    }, {
      "heading" : "8. FUNCTION TAGGING",
      "text" : ""
    }, {
      "heading" : "8.1 Naive Bayes Classifier",
      "text" : "Before one can build naive Bayesian based classifier, one needs to collect training data. The training data is a set of problem instances. Each instance consists of values for each of the defined features of the underlying model and the corresponding class, i.e. function tag in our case. The development of a Naive Bayes classifier involves learning how much each function tag should be trusted for the decisions it makes [17]. It is well-matched to the function tagging problem.\nThe Naïve Bayesian classifier is a term in Bayesian statistics dealing with a simple probabilistic classifier based on applying Bayes’ theorem with strong (naïve) independence assumptions. It assumes independence among input features. Therefore, given an input vector, its target class can be found by choosing the one with the highest posterior probability. The probability model for a classifier is a conditional model.\nP (ck|x1, x2, … , xi) =P(ck)* P(x1,x2,…,xi | ck) (1) Let X=x1, x2, x3, … (xi, i >=1 and X are features)\nC=c1, c2, c3, … (ck , k>=1 and C are classes) P (ck|x1, x2, … , xi) is referred to as the posterior probability P (ck) as the prior probability P(x1, x2,…,xi|ck) as the log likelihood"
    }, {
      "heading" : "8.2. Function Tagging by Using Naïve Bayes Theory",
      "text" : "The labels such as subject, object, time, etc. are named as function tags. By function, it is meant that action or state which a sentence describes. The system operates at word-level with the assumption that input sentences are pre-segmented, pos-tagged and chunked.\nEach proposed function tag is regarded as a class and the task is to find what class/tag a given word in a sentence belongs to a set of predefined classes/tags. A feature is a POS tag word with category. The category of a word is added to the POS tag to obtain more accurate lexical information. It can be formed from the features of that word.\nFor example: Ma Ma is a clever student.\nMa Ma [ မမ(n.person) သည္(ppm.subj) ] clever [ စာေတာ္ေသာ(adj.dem) ] student [ေက်ာင္းသူ(n.person)] a [ တစ္(part.number) ေယာက္(part.type) ] is [ ျဖစ္(v.common) သည္ (sf.declarative) ]\nNoun has 16 categories such as animals, person, objects, food, location, etc. There are 47 categories in our corpus. We show some features of Myanmar words as shown in table 4.\nIn Myanmar language, some words have same meaning but in different features as shown in table 5. For example:\n• Ma Ma and Hla Hla are friends. • He lives with his uncle. • He hits the dog with the stick.\nIn these three sentences, English words (and, with, with) have the same Myanmar meaning (ႏွင့္).\nA class is a one of the proposed function tags. Same word may have different function tags as shown in table 6.\nThere are many chunks in a sentence such as NC (noun chunk), PPC (postpositional chunk), AC (adjectival chunk), RC (adverbial chunk), CC (conjunctional chunk), SFC (sentence’s final chunk) and VC (verb chunk). The chunk types are shown in table 7.\nA chunk contains a Myanmar head word and its modifier. It can contain more than one POS tag and one of the POS tags is selected with respect to the chunk type. In the following chunk, the POS tag (n.animals) is selected with respect to the chunk type (NC).\nFor example: NC [ေခြး/n.animals,တစ္/part.number,ေကာင္/part.type]\nIf the noun chunk (NC) contains more than one noun, the last noun (n.food) is selected as a main word according to the nature of Myanmar language.\nFor example: NC [ေဆာင္းရာသီ/n.time,သီးႏံွပင္/n.food,မ်ား/part.number]\nThere are many possible function tags (t1, t2…tk) for each POS tag with category (pc). These possible tags are retrieved from the training corpus by using the following equation that is prior probability as shown in Table 8.\nP (tk|pc) = C (tk,pc)/C(pc) (2)\nObj:0.0299, PCom:0.0149 pron.possessive PIobj:0.1111, PSubj:0.2222, PObj:0.6667 cc.chunk CCC:1.0 adj.dem PcomplS:0.0192, Ada:0.9808 n.animal Subj:0.1212, PObj:0.3333, PcomplS:0.1212, PSubj:0.2727, PSim:0.0606, Obj:0.0303, PAim:0.0303, PUse:0.0303 v.common Active:1.0 part.eg PcomplOP:0.5455, SimP:0.4545\nWe calculate the probability between next function tags (n1, n2…nj) and previous possible tags by using the following equation that is log likelihood as shown in Table 9.\nP (nj|tk) = C (nj,tk)/C(tk) (3)\nPossible function tags are disambiguated by using Naïve Bayesian method. We multiply the probabilities from (2) and (3) and choose the function tag with the largest number as the posterior probability.\nTechnically, the task of function tags assignment is to generate a sentence that has correct function tags attached to certain words.\nOur description of the function tagging process refers to the example as shown in figure 3, which illustrates the sentence (“မမႏွင့္လွလွသည္ ေက်ာင္းသုိ႔ စက္ဘီးျဖင့္ သြားသည္။” (Ma Ma and Hla Hla go to school by bicycle). This sentence is represented as a sequence of word-tags as “noun verb conjunction noun ppm pronoun verb”. It is described as a sequence of chunk as “NC VC CC NC PPC NC VC SFC”.\n(a)The input POS-tagged and chunk sentence (b) The output sentence with function tags"
    }, {
      "heading" : "9. Parsing",
      "text" : ""
    }, {
      "heading" : "9.1. Context Free Grammar for Myanmar Sentences",
      "text" : "The LANGUAGE defined by a CFG (context-free grammar) is the set of strings derivable from the start symbol S (for Sentence). The core of a CFG grammar is a set of production rules that replaces single variables with strings of variables and symbols. The grammar generates all strings that, starting with a special start variable, can be obtained by applying the production rules until no variables remain. A CFG is usually thought in two ways: a device for generating sentences, or a device if assigning a structure to a given sentence. We use CFG for grammatical relations of function tags.\nA CFG is a 4-tuple <N,,P,S> consisting of • A set of non-terminal symbols N • A set of terminal symbols  • A set of productions P\n– A-> α – A is a non-terminal – α is a string of symbols from the infinite set of strings (U N)*\n• A designated start symbol S"
    }, {
      "heading" : "9.2. Parsing Simple Sentences",
      "text" : "A simple sentence contains one subject and one verb. We can construct simple sentences in many different forms.\n• Constructed by adding adjective and adverb Adjective + Subject + Adjective + Object + Adverb + Verb ဝေသာ +ေကာင္ေလးသည္ + ခ်ိဳေသာ + ကိတ္မုန္႔ကုိ + လ်င္ျမန္စြာ + စားသည္။ Fat + boy + sweet + cake + quickly +eat (A fat boy eats quickly the sweet cake.)\n• Constructed by using different set of phrases Subject phrase + Object phrase + Verb ဦးဘ၏သားသည္ + ဦးထုပ္အနီႏွင့္ေကာင္ေလးကုိ +ရွာသည္။ U Ba’s son + boy with the red hat + find (U Ba’s son finds a boy with the red hat.)\n• Constructed by omitting subject Object + Time + Verb ဆံပင္ကုိ +တနဂၤေႏြေန႔တြင္+ေလွ်ာ္သည္။ Hair + in Sunday + wash (Wash the hair in Sunday.)\n• Constructed by omitting verb Subject + Subject’s complement+ Sentence’s final particle သူက + ဆရာ +ပါ။ He + teacher + null (He is a teacher.)\nConsider a simple declarative sentence “သူတုိ႔သည္ ေမာင္ဘကုိ ေခါင္းေဆာင္ အျဖစ္ ေရြးခ်ယ္ခ့ဲ သည္။” (They selected Mg Ba as a leader).\nThe structure of the above sentence is Subj-Obj-PcomplO-Active. This is a correct sentence according to the Myanmar literature.\n(a) NC[သူတုိ႔/pron.possessive]#PPC[သည္/ppm.subj]#NC[ေမာင္ဘ/n.person]#PPC[ကုိ/ppm.obj]#NC [ေခါင္းေဆာင္/n.person]#PPC[အျဖစ္/part.eg]#VC[ေရြးခ်ယ္/v.common,ခဲ့/part.support]#SFC[သည္/ sf]။\n(b) PSubj[သူတုိ႔]#SubjP[သည္]#PObj[ေမာင္ဘ]#ObjP[ကုိ]#PPcomplO[ေခါင္းေဆာင္ ]#PcomplOP[အျဖစ္] # Active[ေရြးခ်ယ္ခဲ့သည္]။\n(c) Sentence [start] I-sent [Sentence→I-sent] Subj Obj PcomplO Active [I-sent→ Subj Obj PcomplO Active] PSubj SubjP Obj PcomplO Active [Subj → PSubj SubjP] PSubj SubjP PObj ObjP PcomplO Active [Obj → PObj ObjP] PSubj SubjP PObj ObjP PPcomplO PcomplOP Active [PcomplO→PPcomplO PcomplOP ]"
    }, {
      "heading" : "9.3. Parsing Complex Sentences",
      "text" : "Complex sentence has more than one verb. It contains at least two simple sentences. Simple sentences are joined with postpositions, particles or conjunctions. There are three types of complex sentences."
    }, {
      "heading" : "9.3.1. Two simple sentences are joined with postpositions",
      "text" : "Consider a complex sentence “သူေရကူးေနသည္ ကုိ ကၽြန္ေတာ္ ေတြ႔သည္။” (I see that he is swimming).\nIn this sentence, two simple sentence သူေရကူးေနသည္ (he is swimming) and ကၽြန္ေတာ္ ေတြ႔သည္ (I see) is joined by postposition ကုိ (that). The structure of the above sentence is Subj-Active-CCPSubj-Active. This is a correct sentence according to the Myanmar literature.\n(a) NC [သူ/pron.person] # VC [ေရကူးေနသည္/v.common] # CC [ကို/cc.obj] # NC [ကၽြန္ေတာ္/pron.person] # VC [ေတြ႔/v.common] # SFC [သည္/sf]။\n(b) Subj[သူ] # Active[ေရကူးေနသည္] # CCP[ကုိ] # Subj[ကၽြန္ေတာ္] # Active[ေတြ႔သည္]။ (c)\nSentence [start] I-sent CCP I-sent [Sentence→I-sent CCP I-sent] Subj Active CCP I-sent [I-sent→ Subj Active] Subj Active CCP Subj Active [I-sent→Subj Active]"
    }, {
      "heading" : "9.3.2. Two simple sentences are joined with particles",
      "text" : "In figure 7, the sentence “အေဖေပးေသာစာအုပသ္ည္ ေကာင္းသည္။” (The book that is given by my father is good.) is illustrated. It is described as a sequence of chunk as “NC VC CC NC PPC AC SFC” and the sentence structure (Sentence) contains separate constituents for the subject sentence (Subj-sent) and independent sentence (I-sent), which contains other phrases.\n(a) NC [အေဖ/n.person] # VC [ေပး/v.common] # CC [ေသာ/cc.adj] # NC [စာအုပ/္n.objects] # PPC [သည္/ppm.subj] # AC [ေကာင္း/adj.dem] # SFC [သည္/sf]။\n(b) Subj[အေဖ]#Active[ေပး]#CCA[ေသာ]#PObj[စာအုပ္]#ObjP[သည္]#Active[ေကာင္းသည္]။ (c)\nSentence [start] Subj-sent I-sent [Sentence→Subj-sent I-sent] I-Sent CCA Subj I-sent [Subj-sent→ I-Sent CCA Subj] Subj Active CCA Subj I-sent [I-sent→Subj Active] Subj Active CCA PSubj SubjP I-sent [Subj → PSubj SubjP] Subj Active CCA PSubj SubjP Ada [I-sent → Ada ]"
    }, {
      "heading" : "9.3.3. Two simple sentences are joined with conjunctions",
      "text" : "Consider a complex sentence “သူလိမၼာ ေသာေၾကာင့္ ဆရာမ်ားက သူ႔ကို ခ်စ္ၾကသည္။” (As he is clever, the teachers love him). In this sentence, two simple sentence သူလိမၼာ (he is clever) and ဆရာမ်ားက သူ႔ကုိ ခ်စ္ၾကသည္ (the teachers love him) is joined by postposition ေသာေၾကာင့္ (as). The structure of the above sentence is Subj-Ada-CCS- Subj-Obj-Active. This is a correct sentence according to the Myanmar literature.\n(a) NC [သူ/pron.person] # AC [လိမၼာ/adj.dem] # CC [ေသာေၾကာင့/္cc.sent] # NC [ဆရာမ်ား/n.objects] # PPC [က/ppm.subj] # NC [သူ႔/pron.possessive] # PPC [ကုိ/ppm.obj] # VC [ခ်စ္ၾက/v.common] # SFC [သည္/sf]။\n(b) Subj[သူ]#Ada[လိမၼာ]#CCS[ေသာေၾကာင့္]#PSubj[ဆရာမ်ား]#SubjP[က]#PObj [သူ႔/pron.possessive] # ObjP [ကုိ/ppm.obj] # VC [ခ်စ္ၾက/v.common] # SFC [သည္/sf]။\n(c) Sentence [start] I-sent CCS I-sent [Sentence→I-sent CCS I-sent] Subj Ada CCS I-sent [I-sent→Subj Ada] Subj Ada CCS Subj Obj Active [I-sent→Subj Obj Active] Subj Ada CCS PSubj SubjP Obj Active [Subj → PSubj SubjP] Subj Ada CCS PSubj SubjP PObj ObjP Active [Obj → PObj ObjP]"
    }, {
      "heading" : "10. EXPERIMENTAL RESULTS",
      "text" : "In our corpus, all sentences can be further classified as two sets. One is simple sentence set, in which every sentence has no more than 15 words. The other is complex sentence set, in which every sentence has more than 15 words. There are 1600 simple sentences and 2300 complex sentences in the corpus.\nFor evaluation purpose, different numbers of sentences collecting from Myanmar textbooks of middle school and Myanmar historical books are used as a test set. There are about 2200 sentences in the test set. After implementation of the system using the grammar, it has been seen that the system can easily generates the parse tree for a sentence if the sentence structure satisfies the grammar rules. Our program tests only the sentence structure according to the\ngrammar rules. So if the sentence structure satisfies the grammar rule, program recognizes the sentence as a correct sentence and generates a parse tree. Otherwise it gives output as an error. Table 10 shows the overall performance for the proposed system. The proposed system yield 96.68% of precision, 93.05% of recall and 94.83% of f-measure for simple sentence. Performance comparisons between the various sentence types are shown in figure 8."
    }, {
      "heading" : "11. CONCLUSION AND FUTURE WORK",
      "text" : "In the task of assigning function tag, we chose Naïve Bayes model for its simplicity and user-friendliness. We apply context-free grammar for parsing because it is easier to maintain and can add new language features. The parse tree can be built by using\nfunction tags. As function tagging is a pre-processing step for parsing, the errors occurred in the task of function tagging affect the parse tree. The corpus may be balanced because Naïve Bayesian framework probability simply describes uncertainty. The corpus creation is time consuming. The corpus is the resource for the development of Myanmar to English translation system and we expect the corpus to be continually expanded in the future because the tested sentence can be added into the corpus. In this work we have considered limited number of Myanmar sentences to construct the grammar rules. In future work we have to consider as many sentences as we can and some more tags for constructing the grammar rules because Myanmar language is a free-phrase-order language. Word position for one sentence may not be same in the other sentences. So we can not restrict the grammar rules for some limited number of sentences."
    } ],
    "references" : [ {
      "title" : "Function tagging",
      "author" : [ "D Blaheta" ],
      "venue" : "Ph.D. Dissertation,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2003
    }, {
      "title" : "Assigning automatically Part-of-Speech tags to build tagged corpus for Myanmar language",
      "author" : [ "Phyu Hnin Myint" ],
      "venue" : "The Fifth Conference on Parallel Soft Computing,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2010
    }, {
      "title" : "Chunk Tagged Corpus Creation for Myanmar Language",
      "author" : [ "Phyu Hnin Myint" ],
      "venue" : "In Proceedings of the ninth International Conference on Computer Applications,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2011
    }, {
      "title" : "Statistical parsing with a context-free grammar and word statistics",
      "author" : [ "Eugene Charniak" ],
      "venue" : "In Proceedings of the Fourteenth National Conference on Artificial Intelligence,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 1997
    }, {
      "title" : "Assigning function tags to parsed text",
      "author" : [ "D. Blaheta", "M Johnson" ],
      "venue" : "In Proceedings of the 1st Annual Meeting of the North American Chapter of the Association for Computational Linguistics,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2000
    }, {
      "title" : "Naive Bayes and Decision Trees for Function Tagging",
      "author" : [ "Mihai Lintean", "Vasile Rus" ],
      "venue" : "In Proceedings of the International Conference of the Florida Artificial Intelligence Research Society (FLAIRS)",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2007
    }, {
      "title" : "Korean Syntactic Analysis using Dependency Rules and Segmentation ",
      "author" : [ "Yong-uk Park", "Hyuk-chul Kwon" ],
      "venue" : "Proceedings of the Seventh International Conference on Advanced Language Processing and Web Information Technology(ALPIT2008),",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2008
    }, {
      "title" : "Parsing Non-Recursive Context-Free Grammars",
      "author" : [ "Mark-Jan Nederhof", "Giorgio Satta" ],
      "venue" : "In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL ANNUAL'02),",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2002
    }, {
      "title" : "Are Efficient Natural Language Parsers Robust?",
      "author" : [ "Kyongho Min", "William H. Wilson" ],
      "venue" : "School of Computer Science & Engineering,University",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2052
    }, {
      "title" : "ျမန္မာသဒၵါဖြဲ႔စည္းပံု Ph.D. Dissertation, Myanmar Department, University of Educaion",
      "author" : [ "U Ko Lay" ],
      "venue" : null,
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2003
    }, {
      "title" : "Naive Bayes for function tagging in Myanmar Language",
      "author" : [ "Win Win Thant" ],
      "venue" : "The Fifth Conference on Parallel Soft Computing,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2010
    }, {
      "title" : "The Simple Bayesian Classifier as a Classification Algorithm",
      "author" : [ "Leon Versteegen" ],
      "venue" : null,
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 1999
    }, {
      "title" : "Chunk parsing revisited",
      "author" : [ "Y. Tsuruoka", "K. Tsujii" ],
      "venue" : "In Proceedings of the Ninth International Workshop on Parsing Technologies",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2005
    }, {
      "title" : "A New Statistical Parser Based on Bigram Lexical Dependencies",
      "author" : [ "Michael Collins" ],
      "venue" : "In Proceedings of ACL-96,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 1996
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Function tags are useful for any application trying to follow the thread of the text –they find the ‘who does what’ of each clause, which can be useful to gain information about the situation or to learn more about the behaviour of words in the sentence [2].",
      "startOffset" : 254,
      "endOffset" : 257
    }, {
      "referenceID" : 1,
      "context" : "In our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar.",
      "startOffset" : 161,
      "endOffset" : 164
    }, {
      "referenceID" : 2,
      "context" : "In our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar.",
      "startOffset" : 164,
      "endOffset" : 167
    }, {
      "referenceID" : 3,
      "context" : "Since the large-scale annotated corpora, such as Penn Treebank, have been built in English, statistical knowledge extracted from them has been shown to be more and more crucial for natural language disambiguation [5].",
      "startOffset" : 213,
      "endOffset" : 216
    }, {
      "referenceID" : 4,
      "context" : "Blaheta and Johnson [6] addressed the task of function tags assignment.",
      "startOffset" : 20,
      "endOffset" : 23
    }, {
      "referenceID" : 5,
      "context" : "Mihai Lintean and Vasile Rus[7] described the use of two machine learning techniques, naive Bayes and decision trees, to address the task of assigning function tags to nodes in a syntactic parse tree.",
      "startOffset" : 28,
      "endOffset" : 31
    }, {
      "referenceID" : 4,
      "context" : "They used a set of features inspired from Blaheta and Johnson [6].",
      "startOffset" : 62,
      "endOffset" : 65
    }, {
      "referenceID" : 6,
      "context" : "Yong-uk Park and Hyuk-chul Kwon [8] tried to disambiguate for syntactic analysis system by many dependency rules and segmentation.",
      "startOffset" : 32,
      "endOffset" : 35
    }, {
      "referenceID" : 7,
      "context" : "Mark-Jan Nederhof and Giorgio Satta[9] considered the problem of parsing non-recursive context-free grammars, i.",
      "startOffset" : 35,
      "endOffset" : 38
    }, {
      "referenceID" : 8,
      "context" : "Wilson [10] discussed the robustness of four efficient syntactic error-correcting parsing algorithms that are based on chart parsing with a context-free grammar.",
      "startOffset" : 7,
      "endOffset" : 11
    }, {
      "referenceID" : 9,
      "context" : "IC contains sentence’s final particle (sfp) at the end of a sentence [15].",
      "startOffset" : 69,
      "endOffset" : 73
    }, {
      "referenceID" : 1,
      "context" : "We extended the POS tagged corpus that is proposed in [3].",
      "startOffset" : 54,
      "endOffset" : 57
    }, {
      "referenceID" : 10,
      "context" : "We use the function tags that is proposed in [16] because it is easier to maintain and can add new language features.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 11,
      "context" : "The development of a Naive Bayes classifier involves learning how much each function tag should be trusted for the decisions it makes [17].",
      "startOffset" : 134,
      "endOffset" : 138
    } ],
    "year" : 2011,
    "abstractText" : "This paper describes the use of Naive Bayes to address the task of assigning function tags and context free grammar (CFG) to parse Myanmar sentences. Part of the challenge of statistical function tagging for Myanmar sentences comes from the fact that Myanmar has free-phrase-order and a complex morphological system. Function tagging is a pre-processing step for parsing. In the task of function tagging, we use the functional annotated corpus and tag Myanmar sentences with correct segmentation, POS (part-of-speech) tagging and chunking information. We propose Myanmar grammar rules and apply context free grammar (CFG) to find out the parse tree of function tagged Myanmar sentences. Experiments show that our analysis achieves a good result with parsing of simple sentences and three types of complex sentences.",
    "creator" : "Microsoft Word - Final extended version _AIAA- 61_"
  }
}