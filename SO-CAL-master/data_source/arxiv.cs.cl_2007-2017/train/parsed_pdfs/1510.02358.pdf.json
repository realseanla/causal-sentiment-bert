{
  "name" : "1510.02358.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ "jvera@alumnos.uai.cl", "pedro.montealegre@univ-orleans.fr", "eric.chacc@uai.cl" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n51 0.\n02 35\n8v 1\n[ cs\n.C L\n] 8\nO ct\nand negotiation of linguistic conventions. In this paper, we define an automata networks approach to the Naming Game. Two problems are faced: (1) the definition of an automata networks for multi-party communicative interactions; and (2) the proof of convergence for three different orders in which the individuals are updated (updating schemes). Finally, computer simulations are explored in two-dimensional lattices with the purpose to recover the main features of the Naming Game and to describe the dynamics under different updating schemes.\nKeywords Naming Game · Linguistic conventions · Automata networks"
    }, {
      "heading" : "1 Introduction",
      "text" : "The Naming Game [10,11,1] has been conceived to explore the role of self-organization in the development of linguistic conventions. The model attempts to answer a crucial question: how on a population of agents without any kind of “telepathy” and only from local\nJ. Vera Facultad de Ingenieŕıa y Ciencias, Universidad Adolfo Ibáñez, Avda. Diagonal Las Torres 2640, Peñalolén, Santiago, Chile. E-mail: jvera@alumnos.uai.cl\nP. Montealegre Université d’Orléans, INSA Centre Val de Loire, LIFO EA 4022, Orléans, France E-mail: pedro.montealegre@univ-orleans.fr\nE. Goles Facultad de Ingenieŕıa y Ciencias, Universidad Adolfo Ibáñez, Avda. Diagonal Las Torres 2640, Peñalolén, Santiago, Chile. E-mail: eric.chacc@uai.cl\ninteractions it arises a shared communication system? In the Naming Game, the agents are characterized by a memory in which they store words. At each time step, pairwise speaker-hearer interactions involve negotiation of conventions. First, an agent (the speaker) selects a word from its inventory and it conveys the word to the hearer. Second, the hearer faces with two possibilities: (1) if the word does not belong to the hearer’s memory, the hearer adds the word to its memory (an unsuccessful interaction); otherwise, (2) both speaker and hearer cancel all the other words in their memories, except the word (a success of local consensus). These procedures can be understand as part of the lateral inhibition strategy [10,12]. If each convention is associated to a score measuring its amount of success, the score will decrease in the case of unsuccessful communicative interactions, and the convention will be less used. In consequence, the outcome of the strategies is the self-organization of consensus: the successful words will be more common, the individuals will align their own languages and there will be an increasing of the chance of successful interactions.\nGiven the self-organized nature of the negotiation of linguistic conventions, automata networks provides an adequate mathematical framework [8,14] (specially, asynchronous cellular automata [3]). Automata networks are extremely simple models where each cell of a set of vertices (a network) evolves following a local rule based on the states of “nearby” cells. Typically, automata networks are updated synchronously, that is, all cells change their state at the same time. In an asynchronous model, only one vertex is updated at each time step. In this way, it is possible to model the typical updating scheme of the Naming Game (a speaker-hearer pair is selected at random at each time step). The perspective of this work is based on a mathematical model that\ncaptures the essential aspects of the problem. Despite of the above, the model will exhibit several features of language formation, and in particular, of the typical dynamics of the Naming Game.\nThe dialogue is not a simple sequence of individual (or pairwise) actions, but also a form of joint activity that requires cooperation and coordination between participants [4]. Crucially, many features of the dialogue are not focused on the topic of the conversation but rather to introduce cooperation and interaction clues. Inside the dialogue, it has been observed that language users tend to convergence in their choice of constructions or referring expressions. This phenomenon is called alignment. Particularly, in our model the individuals are located on the vertices of a network. Communicative interactions occur between a vertex and its neighbors (or nearby vertices in the network). At these interactions, the negotiation game involves the alignment of the languages associated to multiple individuals. In this work, regarding to cooperative features in dialogue we would ask: to what extent the development of linguistic conventions is influenced by the order in which the individuals are updated? The main purpose of this paper is twofold: (1) to prove the convergence under different updating schemes of an automata networks version of a multi-party Naming Game; and (2) to validate the dynamics of the automata networks model by reproducing the main dynamical properties of the Naming Game. In a practical sense, the main purpose of this paper allow us to give a simple proof of the convergence of the Naming Game.\nThe work is organized as follows. The section 2 explains basic notions and the local rules of the automata networks model. Next, we present convergence results for the three updating schemes considered: sequential, fully asynchronous and synchronous. This is followed by computer simulations focused on reproducing the main features of the Naming Game dynamics. Finally, we give a brief discussion about the relations between our results and the formation and evolution of language.\n2 Model\n2.1 Basic notions\nThe individuals are located on the vertices of a connected (there is a path between any pair of vertices), simple (without loops) and undirected graph G = (P, I), where P = {1, ..., n} is the set of vertices (the population) and I is the set of edges (or possible interactions between individuals). In order to specify the number of participants of the communicative interactions, the neighborhood of the vertex u ∈ P is defined as the set\nVu = {v ∈ P : (u, v) ∈ I}. We stress that the vertex u uniquely interacts with its neighbors, located on Vu.\nA set of p words W is considered. Each individual is completely characterized by its state that evolves during communicative interactions. The state associated to the individual u ∈ P is the pair (Mu, xu), where Mu ⊆ W is the memory in which the individual u stores words and xu ∈ Mu is a word that u conveys to its neighbors of Vu. The set of words conveyed by the neighbors of the vertex u is denoted Wu = {xv : v ∈ Vu}. Since the formation of a language does not involve any kind of “telepathy”, the vertex u only has access to the set Wu. It is reasonable to think that the vertex u plays the role of “hearer” (it hears the words conveyed by the neighbors of u), and the vertices of Vu play the role of “speaker” (they convey words to the vertex u). In general, communicative interactions in the automata networks model involve multiple speakers (the neighbors) and one hearer (the central vertex).\nThe definition of speakers and hearers in the naming automata relates to the problem studied by [7]. Language requires the joint development of two abilities: (1) the ability to utter signals imbricated with contextual features, and (2) the ability to respond to these signals. Nevertheless, it is interesting to ask why the agents evolve these abilities in the case that there are no advantages or an increasing of survival chances for both speakers and hearers. To answer this question, [7] shows that in general a condition in which a language can emerge even it involves benefits only to hearers but not to speakers is cultural transmission (or alignment, in the terms of this paper).\nIn the automata networks model, each agent plays the double role of speaker and hearer. When the neighbors of an individual are updated, the individual conveys a word, so it acts as a speaker. On the other hand, when the individual is choosen (according to the updating scheme) it receives the words conveyed by its neighbors, then it acts as a hearer. However, these roles are asymmetrical. In fact, only when an individual plays the role of hearer he might decide to update its state regarding to the words conveyed by its neighbors. Therefore, the naming automata is a model centered in the propensity of hearers to align their languages in order to share linguistic conventions.\n2.2 Automata networks\nOn the graph G, we define the naming automata as the tuple A = (G, Q, (fu : u ∈ P ), φ), where\n– Q is the set of all possible states of the vertices (Q =\nP(W ) × W , where P(W ) means the set of subsets of W ); – (fu : u ∈ P ) is the family of local rules. The state of a given vertex u evolves taking into account the states of its neighbors of Vu; and – φ is a function, the updating scheme, that gives\nthe order in which the vertices are updated. Three types of updating schemes are considered: the sequential scheme, where vertices are updated one by one in a prescribed order (in other terms, a permutation of the set of vertices); the fully-asynchronous scheme, where vertices are updated one by one in an uniformly at random order; and the synchronous scheme, where all vertices are updated at the same time.\nThe three schemes model different ways in which the communicative interactions occur along time. For both sequential and fully asynchronous schemes, at each time step only one vertex is selected and then only this vertex may vary. In particular, the fully asynchronous scheme is close to the order in which the individuals are updated in the Naming Game. By contrast, the synchronous scheme supposes that all individuals are updated at the same time. Crucially, this kind of communication is possible because inside each interaction between a vertex and its neighbors uniquely the “central” vertex changes. The dynamics of the automata is defined by the set of local rules and the updating scheme. The time evolves in discrete steps t > 0. A configuration X(t) at t is the set of states {(Mu, xu)}u∈P (more precisely, a configuration at t is {(Mu(t), xu(t))}u∈P ). Here, only initial configurations of the form {({xu}, xu)}u∈P are considered. At each time step t > 0, one vertex, say u ∈ P , is choosen (for the synchronous scheme all individuals are updated at the same time. So, it is sufficient to describe the evolution of one cell). The configuration X(t+ 1) at time step t + 1 is given by the application of the local rule fu on the vertex u. The mathematical framework of this paper imposes a drastic constraint on the evolution of the dynamics: at each time step, only the “central” vertex of each neighborhood changes its state. This decision is based on the set of words conveyed by the neighbors. Thus, the vertices align their languages when they play the role of “hearer”. In contrast, “unsuccessful” interactions in the Naming Game supposes that at the same time step both speaker and hearer cancel all the words in their memories, except one of them. This kind of pairwise updates are forbidden for the naming automata.\nFor two configurations X1, X2, we say that the automata reaches X2 from X1 if starting from configura-\ntionX1, applying the local rule over the vertices according to the updating scheme for some number of steps, the configurationX2 is obtained. For synchronous or sequential updating schemes, in a finite number of steps the naming automata will reach an attractor : a cycle (a finite periodic set of configurations) or a fixed point (a configuration which is invariant under the application of local rules). We will call the transient time to the maximum, taken over the set of configurations, of the number of steps required to reach for the first time an attractor. In a similar way, we define an attractor for the fully-asynchronous updating scheme as a set of configurations S such that for any pair of configurations X1, X2 ∈ S, there is a non-zero probability of reaching X2 from X1. The transient time in this context will be the maximum, taken over the set of configurations, of the expected time for reaching for the first time a configuration on some attractor.\nThe interpretation of a fixed point within our framework to the formation of language is simple: a fixed point is equivalent to the final consensus configuration of the Naming Game, where all individuals agree about the linguistic convention. Regarding to the cycles, the synchronous dynamics reaches cycles of size 2 (and also fixed points). This means that the entire population negotiates at the same time between two different words in successive time steps.\n2.3 Two actions based on the Naming Game\nTo model the alignment process [12], the local rule involves two actions which update the state pair (Mu, xu) of the vertex u ∈ P :\n– the addition (a) updates Mu by adding words; and – the collapse (c) updates Mu by cancelling all its\nwords, except one of them.\nAs we have noticed, both actions arise from the lateral inhibition strategy [10,12]. The addition of words attempts to increase the chance of future successful interactions. The collapse is the result of local consensus within interactions (the individuals defect the remaining words in “successful” conversations). In this paper, two simple forms of these actions are considered. First, the individuals add all the unknown words. This means that the vertex u ∈ P will add any word (conveyed by its neighbors) x ∈ Wu, so that x /∈ Mu. Second, in the case that Wu ⊆ Mu (all received words belong to the memory), the constraints of the automata networks model imposes the introduction of a mechanism that allows to discriminate between words. Indeed, the vertex\nu receives one word from each neighbor of Vu. In accordance with [9], we imagine a population of early hominids for which leopards represents a higher risk than cows. So, the word “leopard” may be more valuable than “cow”. Within the Relevance Theory framework [13], we suppose that these words differ in their degree of relevance related to specific linguistic contexts. To assign different values to the words, each agent is endowed with an internal total order for the set of words (equivalently, if we consider W ⊆ Z the agents are endowed with the order <). The individuals choice to collapse in the minimum word conveyed in the neighborhood.\n2.4 Local rules\nSuppose that at time step t the vertex u ∈ P has been selected according to the updating scheme (for the synchronous scheme, u represents any vertex). Let Wu the set of all words conveyed by the neighbors of the vertex u. We write Wu = Bu ∪ Nu, where Bu = {xv | (v ∈ Vu) ∧ (xv ∈ Mu)} and Nu = {xv | (v ∈ Vu) ∧ (xv /∈ Mu)}. The subset Bu ⊆ Wu contains the words conveyed by the neighbors, which belong to the memory Mu. In contrast, Nu ⊆ Wu contains the words of Wu which do not belong to Mu. Addition is denoted (a). Collapse is denoted (c). In formal terms, the local rule fu reads\nfu =\n{\nif ∅ 6= Nu, (a) (Mi ∪Nu, xu) if ∅ = Nu, (c) ({min(Bu)},min(Bu))\n(1)\nThe rule means that in the case that ∅ 6= Nu (that is, there are words of Wu that the vertex u does not know) the memory Mu is updated by adding the words of Nu. In the other case (∅ = Nu), the vertex u collapse its memory in the minimum of the set Bu (Bu = Wu). It is noticed that the conveyed word xu may change in collapses (for examples of the dynamics, see Fig. 1 and Fig. 2).\nFor the dynamics of the naming automata, it is straightforward to notice that the fixed points are of the form {({x}, x)}u∈P , for x ∈ W (that is, all individuals share the same word x). To see this fact, we analyse a simple example. The configuration X is defined as follows: all vertices share the state ({x}, x), except the vertex u ∈ P , which is associated to the state ({y}, y) with x < y, x, y ∈ W . Then, X is not a fixed point of the dynamics. Indeed, the vertex u may add the word x and then u may collapse in the word x (because x < y). In consequence, any configuration different to a fixed point will imply that the dynamics is not finished."
    }, {
      "heading" : "5 4 12 12 5 1414 12 8 8 14 9 9 8 13 13 9 1010 13 6 6 10 3 3 6 15 15 3 1111 15 7 7 11 1 1 7 0 0 1 2 2 0 4 4 2 5",
      "text" : ""
    }, {
      "heading" : "3 Convergence results",
      "text" : "An interesting problem related to the development of consensus on linguistic conventions is to give mathematical arguments about convergence. Given the mathematical framework of this paper, the problem becomes in to count (in the worst case) the number of simulation steps needed to stop the dynamics. This means to prove that after a finite number of time steps the population reaches an agreed linguistic convention. Despite other works have been solved similar tasks (see [2]), a strengthen of this paper is to give a simple proof of the convergence under different updating schemes.\nFirst of all, a sequential updating scheme is considered. Since this scheme is defined by a permutation of the population of individuals, each vertex is updated after that all the other vertices have been updated. In the worst case, each time step supposes that one individual adds one word. This process ends when some individual has all possible words, that is, after p − 1 steps (there are p words). Since the population has size n, after n(p − 1) steps the individuals must collapse their memories. Then, at step t∗ = n(p− 1) all individuals have been collapsed at least once. As we will show in detail in the first theorem, the minimum conveyed word at t∗ propagates in the system until reach a fixed point where all individuals convey this minimum word.\nThe convergence results for the sequential and fully asynchronous schemes are summarized by the following theorem:\nTheorem 1 Consider a population of n individuals playing the naming automata A with the set of p words W and the updating scheme φ. Then,\n(I) if φ is a sequential scheme, A converges to fixed points in at most O(n2p) steps; (II) if φ is a fully-asynchronous scheme, A converges to a fixed point in expected time O(n2p log(n)).\nProof (I) Initially there are p words. Then, in at most p − 1 updates a vertex has collapsed for the first time (in the worst case the vertex must add every possible word, one at a time). This implies that in n(p−1) steps (p−1 updates of each vertex) all vertices have collapsed at least one time. Letm be the minimum conveyed word at step t∗ = n(p − 1), and let u be a vertex such that xu = m (in more precise terms, m = min({xu}u∈P )).\nSince u has collapsed at least one time, the updating scheme is sequential, and m is the minimum word, then u must have another neighbor v ∈ Vu conveying m. In consequence, after t∗ both vertices u and v will remain conveying m, and at each time a neighbor of any of these two vertices will necessarily collapse in the word m. The graph has a diameter of O(n) and each np steps\nit occurs a collapse. Therefore, in at most O(n2p) steps the system converges to a fixed point where all vertices convey the same word m.\n(II) In the fully-asynchronous updating scheme, at each time step a single vertex is picked independently and uniformly at random. We will show that the expected convergence time grows by a factor of O(log(n)) with respect to the (deterministic) sequential scheme. Notice that in the proof of the part (I) it is shown that after updating O(np) times each vertex, a fixed point is reached. From the well known coupon collector’s problem (see, for example, [6]), the expected number of steps required to update at least once every vertex in the graph (or pick every coupon) is O(n log(n)). Since in a fully asynchronous updating scheme each step is independent to the others, the result follows.\nIn (I) and (II), it seems to be crucial a particular aspect of the automata networks model. As we have described, the introduction of multi-party communication (that is, multi-speakers) is necessarily accompanied with a word discrimination mechanism: the “hearer” (the “central” vertex of each neighborhood) prefers to collapse in the minimum word conveyed by its neighbors. Specially, this mechanism is involved in the convergence proof in our multi-party version of the Naming Game (in particular, Theorem 1 (II)).\nNow, we present the convergence proof for the synchronous scheme. The result needs the definition of an “energy” operator. This kind of approach has been very fruitful within the automata networks framework (see, for example, [5]). Our interest on an “energy” functional arises from a physicist interpretation. The energy measures the amount of local unstability of the configuration. We assign to each vertex u ∈ P the sum of all pairs xu+xv, where v ∈ Vu; summing this quantity over all vertices defines the total energy of the configuration at that time. From an initial configuration, the energy will be not increasing over time.\nTheorem 2 Consider a population of n individuals playing the naming automata A with the set of p words W and the synchronous updating scheme. Then, A converges to fixed points or cycles with period 2 in at most O(mp) steps, where m is the number of edges of the graph G = (P, I).\nProof Let X(0) = (({x1}, x1), . . . , ({xn}, xn)) be the initial condition. Then, the “energy” operator\nE(t) = ∑\nu∈P\n∑\nv∈Vu\n(xu(t+ 2) + xv(t+ 2)) (2)\nis non-increasing. To prove this fact, we will show\nthat any u ∈ P and v ∈ Vu satisfy\nxu(t+ 2) + xv(t+ 2) ≤ xu(t) + xv(t) (3)\nIn the first place, we notice that at step t = 0 every vertex is associated to a different memory of size 1, and every vertex is updated synchronously. Then,\n– even steps imply collapses; and – odd steps imply additions\nIn other words, eventual changes in the conveyed word occur in the collapse action associated to even steps. Therefore, at the odd step t− 1 each vertex has in its memory all the words conveyed by its neighbors. So, the next even step t is the result of a collapse in the minimum word (conveyed by its neighbors). As consequence, u ∈ P and v ∈ Vu satisfy\nxu(t+ 2) ≤ min{xv(t) : v ∈ Vu} ≤ xv(t) (4)\nxv(t+ 2) ≤ min{xw(t) : w ∈ Vv} ≤ xu(t) (5)\nFrom the previous inequalities, we have that xu(t+ 2)+xv(t+2) = xu(t)+xv(t) if and only if for any u ∈ P and v ∈ Vu xu(t + 2) = xu(t) and xv(t + 2) = xv(t) or xu(t+2) = xv(t) and xv(t+2) = xu(t). In consequence, the dynamics under synchronous scheme converges to fixed points or cycles of length 2.\nIn the previous proof, two elements play a crucial role: the existence of an order endowed with each individual and the fact that the local rule is centered on “hearers”. The second element allows to consider a synchronous negotiation of linguistic conventions. This kind of dynamics is equivalent to the existence of a global “clock” which conducts the order of the updates. Both theorems show that the absence of a global clock (sequential and fully synchronous schemes) and the presence of a global clock (the synchronous scheme) suppose the convergence to fixed points (or cycles). An interesting question is to ask about the intermediate behavior between the two kind of “clocks”, that is, a dynamics so that at each time step only a subset of the vertices is updated synchronously [3].\nIn the next section, we give computational arguments to justify that the previous mathematical results are related to the convergence of the Naming Game. Centered on low-dimensional lattices, the naming automata reproduces (specially the dynamics under fully asynchronous scheme) the main dynamical features of the Naming Game.\n4 Simulating the naming automata\n4.1 Simulation protocol\nTo explicitly describe the dynamics of the naming automata, two macroscopic measures are defined [1]. The total number of words of the system,\nnw(t) = ∑\nu∈P\n|Mu| (6)\nwhere |Mu| is the size of the setMu; and the number of different words (or synonyms),\nnd(t) = | ⋃\nu∈P\nMu| (7)\nwhere ⋃\nu∈P Mu represents the union of all sets Mu,\nu ∈ P . The simulation protocol is defined by the following elements:\n– averages of nw(t) and nd(t) over 100 initial condi-\ntions where each vertex is associated to a different\nstate of the form ({x}, x), x ∈ W . – three updating schemes: one sequential, fully asyn-\nchronous and synchronous.\n– a periodic lattice with Von Neumann neighborhood\n(four neighbors) with n = 2562 = 65536 vertices for both sequential and fully asynchronous schemes, and n = 642 = 4096 vertices for the synchronous scheme. – nw(t) and nd(t) are measured after n vertex updates\n(for the synchronous scheme, one time step supposes n vertex updates).\n4.2 Results\nThe naming automata under fully asynchronous updating scheme seems to reproduce the typical behavior observed for low-dimensional lattices in the Naming Game [1], as shown in Fig. 3 (black lines). Indeed, the dynamics exhibits the three typical domains of the evolution of the Naming Game. First, since at the beginning the individuals convey different words, a very fast increasing in nw(t) and a drastic decreasing in nd(t) are observed. Then, a peak in the number of words is reached at nw(t) ∼ 3n. Finally, the dynamics enters in a very slow decreasing of nw(t). The convergence is reached at t ∼ 300 steps (only the first 50 steps are showed).\nThe dynamics under sequential scheme present several remarkable aspects, as shown in Fig. 3 (red depicted lines). The evolution of the number of words\nreaches a very sharp peak of nw(t) ∼ 5n. This means that at the peak all individuals adds all the words conveyed by their neighbors (since each vertex has four neighbors). Another interesting feature of the dynamics is that after the peak the dynamics reaches another local maximum at t ∼ 3. This fact requires further mathematical explanations.\nSynchronous dynamics is exhibited in Fig. 4 (blue lines). As we have shown, the dynamics exhibits a periodic behavior. Approximately after 150 time steps (one step means that all individuals have been updated) the dynamics enters in a periodic behavior with cycles of length 2. Thereby, the number of words nw(t) oscil-\nlates between n and 2n, whereas nd(t) converges to 2. In fact, even steps imply collapses (nw(t) = n) and odd steps imply additions (nw(t) = 2n). Small “ladder” steps in the decreasing evolution of nd(t) show that at odd times only additions are allowed (and then the conveyed words remain fixed)."
    }, {
      "heading" : "5 Discussion",
      "text" : "In this paper, it has been introduced a new theoretical framework to study the development of linguistic conventions, and in general, the formation and evolution of language. The work proposes two important elements to be discussed. First, the main features of the Naming\nGame are reproduced through an automata networks model of multi-party negotiation of linguistic conventions. In this sense, a new theoretical framework to test hypothesis about the formation of language is defined. Second, simple mathematical proofs about the convergence under different updating schemes are presented.\nFuture work could involve the role of topology on the dynamics of the naming automata and the influences of memory capacities in the negotiation of agreement about linguistic conventions.\nAcknowledgements We like to thank CONICYT-Chile under the grants FONDECYT 1140090 (E.G.), ECOS BASALCMM (DIM, U. Chile) (E.G.), ECOS C12E05 (E.G.) and Doctoral scholarship (P.M. and J.V.)."
    } ],
    "references" : [ {
      "title" : "Sharp transition towards shared vocabularies in multiagent systems",
      "author" : [ "A. Baronchelli", "M. Felici", "E. Caglioti", "V. Loreto", "L. Steels" ],
      "venue" : "J. Stat. Mech. (P06014)",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "How to reach linguistic consensus: A proof of convergence for the naming game",
      "author" : [ "B. DeVylder", "K. Tuyls" ],
      "venue" : "The Journal of Theoretical Biology 242(4), 818–831",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "A guided tour of asynchronous cellular automata",
      "author" : [ "N. Fatès" ],
      "venue" : "J. Kari, M. Kutrib, A. Malcher (eds.) Cellular Automata and Discrete Complex Systems, Lecture Notes in Computer Science, vol. 8155, pp. 15–30. Springer Berlin Heidelberg",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Decreasing energy functions as a tool for studying threshold networks",
      "author" : [ "E. Goles-Chacc", "F. Fogelman-Soulié", "D. Pellegrin" ],
      "venue" : "Discrete Applied Mathematics 12(3), 261–277",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 1985
    }, {
      "title" : "Probability and Random Processes",
      "author" : [ "G. Grimmett", "D. Stirzaker" ],
      "venue" : " Probability and Random Processes. OUP Oxford",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "How can we explain the emergence of a language that benefits the hearer but not the speaker",
      "author" : [ "M. Mirolli", "D. Parisi" ],
      "venue" : "Connection Science 17(3-4),",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2005
    }, {
      "title" : "Theory of Self-Reproducing Automata",
      "author" : [ "J. von Neumann" ],
      "venue" : "University of Illinois Press, Champain, IL",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 1966
    }, {
      "title" : "The evolution of language",
      "author" : [ "M.A. Nowak", "D.C. Krakauer" ],
      "venue" : "Proceedings of the National Academy of Sciences 96(14), 8028–8033",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "A self-organizing spatial vocabulary",
      "author" : [ "L. Steels" ],
      "venue" : "Artificial Life 2(3), 319–332",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 1995
    }, {
      "title" : "Self-organizing vocabularies",
      "author" : [ "L. Steels" ],
      "venue" : "Proceedings of Artificial Life V, Nara, Japan, pp. 179–184. Nara, Japan",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Modeling the cultural evolution of language",
      "author" : [ "L. Steels" ],
      "venue" : "Physics of Life Reviews 8(4), 339–356",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Relevance theory",
      "author" : [ "D. Wilson", "D. Sperber" ],
      "venue" : "Handbook of Pragmatics",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2004
    }, {
      "title" : "A New Kind of Science",
      "author" : [ "S. Wolfram" ],
      "venue" : "Wolfram Media",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2002
    } ],
    "referenceMentions" : [ {
      "referenceID" : 8,
      "context" : "The Naming Game [10,11,1] has been conceived to explore the role of self-organization in the development of linguistic conventions.",
      "startOffset" : 16,
      "endOffset" : 25
    }, {
      "referenceID" : 9,
      "context" : "The Naming Game [10,11,1] has been conceived to explore the role of self-organization in the development of linguistic conventions.",
      "startOffset" : 16,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "The Naming Game [10,11,1] has been conceived to explore the role of self-organization in the development of linguistic conventions.",
      "startOffset" : 16,
      "endOffset" : 25
    }, {
      "referenceID" : 8,
      "context" : "These procedures can be understand as part of the lateral inhibition strategy [10,12].",
      "startOffset" : 78,
      "endOffset" : 85
    }, {
      "referenceID" : 10,
      "context" : "These procedures can be understand as part of the lateral inhibition strategy [10,12].",
      "startOffset" : 78,
      "endOffset" : 85
    }, {
      "referenceID" : 6,
      "context" : "Given the self-organized nature of the negotiation of linguistic conventions, automata networks provides an adequate mathematical framework [8,14] (specially, asynchronous cellular automata [3]).",
      "startOffset" : 140,
      "endOffset" : 146
    }, {
      "referenceID" : 12,
      "context" : "Given the self-organized nature of the negotiation of linguistic conventions, automata networks provides an adequate mathematical framework [8,14] (specially, asynchronous cellular automata [3]).",
      "startOffset" : 140,
      "endOffset" : 146
    }, {
      "referenceID" : 2,
      "context" : "Given the self-organized nature of the negotiation of linguistic conventions, automata networks provides an adequate mathematical framework [8,14] (specially, asynchronous cellular automata [3]).",
      "startOffset" : 190,
      "endOffset" : 193
    }, {
      "referenceID" : 5,
      "context" : "The definition of speakers and hearers in the naming automata relates to the problem studied by [7].",
      "startOffset" : 96,
      "endOffset" : 99
    }, {
      "referenceID" : 5,
      "context" : "To answer this question, [7] shows that in general a condition in which a language can emerge even it involves benefits only to hearers but not to speakers is cultural transmission (or alignment, in the terms of this paper).",
      "startOffset" : 25,
      "endOffset" : 28
    }, {
      "referenceID" : 10,
      "context" : "To model the alignment process [12], the local rule involves two actions which update the state pair (Mu, xu) of the vertex u ∈ P :",
      "startOffset" : 31,
      "endOffset" : 35
    }, {
      "referenceID" : 8,
      "context" : "As we have noticed, both actions arise from the lateral inhibition strategy [10,12].",
      "startOffset" : 76,
      "endOffset" : 83
    }, {
      "referenceID" : 10,
      "context" : "As we have noticed, both actions arise from the lateral inhibition strategy [10,12].",
      "startOffset" : 76,
      "endOffset" : 83
    }, {
      "referenceID" : 7,
      "context" : "In accordance with [9], we imagine a population of early hominids for which leopards represents a higher risk than cows.",
      "startOffset" : 19,
      "endOffset" : 22
    }, {
      "referenceID" : 11,
      "context" : "Within the Relevance Theory framework [13], we suppose that these words differ in their degree of relevance related to specific linguistic contexts.",
      "startOffset" : 38,
      "endOffset" : 42
    }, {
      "referenceID" : 1,
      "context" : "Despite other works have been solved similar tasks (see [2]), a strengthen of this paper is to give a simple proof of the convergence under different updating schemes.",
      "startOffset" : 56,
      "endOffset" : 59
    }, {
      "referenceID" : 4,
      "context" : "From the well known coupon collector’s problem (see, for example, [6]), the expected number of steps required to update at least once every vertex in the graph (or pick every coupon) is O(n log(n)).",
      "startOffset" : 66,
      "endOffset" : 69
    }, {
      "referenceID" : 3,
      "context" : "This kind of approach has been very fruitful within the automata networks framework (see, for example, [5]).",
      "startOffset" : 103,
      "endOffset" : 106
    }, {
      "referenceID" : 2,
      "context" : "An interesting question is to ask about the intermediate behavior between the two kind of “clocks”, that is, a dynamics so that at each time step only a subset of the vertices is updated synchronously [3].",
      "startOffset" : 201,
      "endOffset" : 204
    }, {
      "referenceID" : 0,
      "context" : "To explicitly describe the dynamics of the naming automata, two macroscopic measures are defined [1].",
      "startOffset" : 97,
      "endOffset" : 100
    }, {
      "referenceID" : 0,
      "context" : "The naming automata under fully asynchronous updating scheme seems to reproduce the typical behavior observed for low-dimensional lattices in the Naming Game [1], as shown in Fig.",
      "startOffset" : 158,
      "endOffset" : 161
    } ],
    "year" : 2017,
    "abstractText" : "The Naming Game has been studied to explore the role of self-organization in the development and negotiation of linguistic conventions. In this paper, we define an automata networks approach to the Naming Game. Two problems are faced: (1) the definition of an automata networks for multi-party communicative interactions; and (2) the proof of convergence for three different orders in which the individuals are updated (updating schemes). Finally, computer simulations are explored in two-dimensional lattices with the purpose to recover the main features of the Naming Game and to describe the dynamics under different updating schemes.",
    "creator" : "LaTeX with hyperref package"
  }
}