{"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Mar-2016", "title": "Optimized Polynomial Evaluation with Semantic Annotations", "abstract": "In this paper we discuss how semantic annotations can be used to introduce mathematical algorithmic information of the underlying imperative code to enable compilers to produce code transformations that will enable better performance. By using this approaches not only good performance is achieved, but also better programmability, maintainability and portability across different hardware architectures. To exemplify this we will use polynomial equations of different degrees.", "histories": [["v1", "Fri, 4 Mar 2016 16:13:24 GMT  (101kb,D)", "https://arxiv.org/abs/1603.01520v1", null], ["v2", "Thu, 10 Mar 2016 14:17:38 GMT  (102kb,D)", "http://arxiv.org/abs/1603.01520v2", null], ["v3", "Fri, 11 Mar 2016 11:31:59 GMT  (102kb,D)", "http://arxiv.org/abs/1603.01520v3", "Part of the Program Transformation for Programmability in Heterogeneous Architectures (PROHA) workshop, Barcelona, Spain, 12th March 2016, 7 pages, LaTeX, 4 PNG figures"]], "reviews": [], "SUBJECTS": "cs.PL cs.CL", "authors": ["daniel rubio bonilla", "colin w glass", "jan kuper"], "accepted": false, "id": "1603.01520"}
