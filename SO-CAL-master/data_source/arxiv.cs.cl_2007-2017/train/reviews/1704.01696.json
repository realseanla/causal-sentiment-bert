{"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Apr-2017", "title": "A Syntactic Neural Model for General-Purpose Code Generation", "abstract": "We consider the problem of parsing natural language descriptions into source code written in a general-purpose programming language like Python. Existing data-driven methods treat this problem as a language generation task without considering the underlying syntax of the target programming language. Informed by previous work in semantic parsing, in this paper we propose a novel neural architecture powered by a grammar model to explicitly capture the target syntax as prior knowledge. Experiments find this an effective way to scale up to generation of complex programs from natural language descriptions, achieving state-of-the-art results that well outperform previous code generation and semantic parsing approaches.", "histories": [["v1", "Thu, 6 Apr 2017 03:13:46 GMT  (818kb,D)", "http://arxiv.org/abs/1704.01696v1", "To appear in ACL 2017"]], "COMMENTS": "To appear in ACL 2017", "reviews": [], "SUBJECTS": "cs.CL cs.PL cs.SE", "authors": ["pengcheng yin", "graham neubig"], "accepted": true, "id": "1704.01696"}
