{"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Apr-2017", "title": "GaKCo: a Fast GApped k-mer string Kernel using COunting", "abstract": "String Kernel (SK) techniques, especially those using gapped $k$-mers as features (gk), have obtained great success in classifying sequences like DNA, protein, and text. However, the state-of-the-art gk-SK runs extremely slow when we increase the dictionary size ($\\Sigma$) or allow more mismatches ($M$). This is because current gk-SK uses a trie-based algorithm to calculate co-occurrence of mismatched substrings resulting in a time cost proportional to $O(\\Sigma^{M})$. We propose a \\textbf{fast} algorithm for calculating \\underline{Ga}pped $k$-mer \\underline{K}ernel using \\underline{Co}unting (GaKCo). GaKCo uses associative arrays to calculate the co-occurrence of substrings using cumulative counting. This algorithm is fast, scalable to larger $\\Sigma$ and $M$, and naturally parallelizable. We provide a rigorous asymptotic analysis that compares GaKCo with the state-of-the-art gk-SK. Theoretically, the time cost of GaKCo is independent of the $\\Sigma^{M}$ term that slows down the trie-based approach. Experimentally, we observe that GaKCo achieves the same accuracy as the state-of-the-art and outperforms its speed by factors of 2, 100, and 4, on classifying sequences of DNA (5 datasets), protein (12 datasets), and character-based English text (2 datasets), respectively", "histories": [["v1", "Mon, 24 Apr 2017 21:43:21 GMT  (890kb,D)", "http://arxiv.org/abs/1704.07468v1", null], ["v2", "Sun, 30 Apr 2017 20:12:01 GMT  (1797kb,D)", "http://arxiv.org/abs/1704.07468v2", null], ["v3", "Mon, 18 Sep 2017 17:25:17 GMT  (1786kb,D)", "http://arxiv.org/abs/1704.07468v3", "@ECML 2017"]], "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.CC cs.CL cs.DS", "authors": ["ritambhara singh", "arshdeep sekhon", "kamran kowsari", "jack lanchantin", "beilun wang", "yanjun qi"], "accepted": false, "id": "1704.07468"}
