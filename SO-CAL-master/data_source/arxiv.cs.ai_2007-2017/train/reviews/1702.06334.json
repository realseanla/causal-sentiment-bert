{"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Feb-2017", "title": "Synthesizing Imperative Programs from Examples Guided by Static Analysis", "abstract": "We present a novel algorithm that synthesizes imperative programs for introductory programming courses. Given a set of input-output examples and a partial program, our algorithm generates a complete program that is consistent with every example. Our key idea is to combine enumerative program synthesis and static analysis, which aggressively prunes out a large search space while guaranteeing to find, if any, a correct solution. We have implemented our algorithm in a tool, called SIMPL, and evaluated it on 30 problems used in introductory programming courses. The results show that SIMPL is able to solve the benchmark problems in 6.6 seconds on average.", "histories": [["v1", "Tue, 21 Feb 2017 11:29:28 GMT  (35kb)", "https://arxiv.org/abs/1702.06334v1", null], ["v2", "Tue, 13 Jun 2017 09:13:33 GMT  (35kb)", "http://arxiv.org/abs/1702.06334v2", "The paper is accepted in Static Analysis Symposium (SAS) '17. The submission version is somewhat different from the version in arxiv. The final version will be uploaded after the camera-ready version is ready"]], "reviews": [], "SUBJECTS": "cs.PL cs.AI", "authors": ["sunbeom so", "hakjoo oh"], "accepted": false, "id": "1702.06334"}
