{
  "name" : "1401.2011.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ "halpern@cs.cornell.edu", "w-kets@kellogg.northwestern.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 1.\n20 11"
    }, {
      "heading" : "1 Introduction",
      "text" : "In the study of multi-agent modal logics, it is implicitly assumed that all agents interpret all formulas the same way. While they may have different beliefs regarding whether a formula ϕ is true, they agree on what ϕ means. Formally, this is captured by the fact that the truth of ϕ does not depend on the agent.\nOf course, in the real world, there is ambiguity; different agents may interpret the same utterance in different ways. For example, consider a public announcement p. Each player i may interpret p as corresponding to some event Ei, where Ei may be different from Ej if i 6= j. This seems natural: even if people have a common background, they may still disagree on how\nto interpret certain phenomena or new information. Someone may interpret a smile as just a sign of friendliness; someone else may interpret it as a “false” smile, concealing contempt; yet another person may interpret it as a sign of sexual interest.\nTo model this formally, we can use a straightforward approach already used in [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player. But once we allow such ambiguity, further subtleties arise. Returning to the announcement p, not only can it be interpreted differently by different players, it may not even occur to the players that others may interpret the announcement in a different way. Thus, for example, i may believe that Ei is common knowledge. The assumption that each player believes that her interpretation is how everyone interprets the announcement is but one assumption we can make about ambiguity. It is also possible that player i may be aware that there is more than one interpretation of p, but believes that player j is aware of only one interpretation. For example, think of a politician making an ambiguous statement which he realizes that different constituencies will interpret differently, but will not realize that there are other possible interpretations. In this paper, we investigate a number of different semantics of ambiguity that correspond to some standard assumptions that people make with regard to ambiguous statements, and investigate their relationship.\nOur interest in ambiguity was originally motivated by a seminal result in game theory: Aumann’s [1976] theorem showing that players cannot “agree to disagree.” More precisely, this theorem says that agents with a common prior on a state space cannot have common knowledge that they have different posteriors. This result has been viewed as paradoxical in the economics literature. Trade in a stock market seems to require common knowledge of disagreement (about the value of the stock being traded), yet we clearly observe a great deal of trading. One well known explanation for the disagreement is that we do not in fact have common priors: agents start out with different beliefs. In a companion paper [Halpern and Kets 2013], we provide a different explanation, in terms of ambiguity. It is easy to show that we can agree to disagree when there is ambiguity, even if there is a common prior.\nAlthough our work is motivated by applications in economics, ambiguity has long been a concern in philosophy, linguistics, and natural language processing. For example, there has been a great deal of work on word-sense disambiguation (i.e., trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey. However, there does not seem to be much work on incorporating ambiguity into a logic. Apart from the literature on the logic of context and on underspecification (see Van Deemter and Peters [1996]), the only papers that we are aware of that does this are ones by Monz [1999] and Kuijer [2013]. Monz allows for statements that have multiple interpretations, just as we do. But rather than incorporating the ambiguity directly into the logic, he considers updates by ambiguous statements.\nKuijer models the fact that ambiguous statements can have multiple meanings by using a nondeterministic propositional logic, which, roughly speaking allows him to consider all the meanings simultaneously. He then defines a notion of implication such that an ambiguous statement A entails another ambiguous statement B if and only if every possible interpreta-\ntions of A entails every possible interpretation of B. This idea of considering all possible interpretations of an ambiguous statement actually has a long tradition in the philosophy literature. For example, Lewis [1982] considers assigning truth values to an ambiguous formula φ by considering all possible disambiguations of φ. This leads to a semantics where a formula can, for example, have the truth value {true, false}. Lewis views this as a potential justification for relevance logic (a logic where a formula can be true, false, both, or neither; cf. [Rescher and Brandom 1979]). Our approach is somewhat different. We assume that each agent uses only one interpretation of a given ambiguous formula φ, but an agent may consider it possible that another agent interprets φ differently. In our applications, this seems to be the most appropriate way to dealing with ambiguity (especially when it comes to considering the strategic implications of ambiguity).\nThere are also connections between ambiguity and vagueness. Although the two notions are different—a term is vague if it is not clear what its meaning is, and is ambiguous if it can have multiple meanings, Halpern [2009] also used agent-dependent interpretations in his model of vagueness, although the issues that arose were quite different from those that concern us here.\nGiven the widespread interest in ambiguity, in this paper we focus on the logic of ambiguity. We introduce the logic in Section 2. The rest of the paper is devoted to arguing that, in some sense, ambiguity is not necessary. In Section 3, we show that a formula is satisfiable in a structure with ambiguity (i.e., one where different agents interpret formulas differently) if and only if it is satisfiable in a structure without ambiguity. Then in Section 4, we show that, by extending the language so that we can talk explicitly about how agents interpret formulas, we do not need structures with ambiguity. Despite that, we argue in Section 5 that we it is useful to be able to model ambiguity directly, rather than indirectly."
    }, {
      "heading" : "2 Syntax and Semantics",
      "text" : ""
    }, {
      "heading" : "2.1 Syntax",
      "text" : "We want a logic where players use a fixed common language, but each player may interpret formulas in the language differently. Although we do not need probability for the points we want to make in this paper, for the applications that we have in mind it is also important for the agents to be able to reason about their probalistic beliefs. Thus, we take as our base logic a propositional logic for reasoning about probability.\nThe syntax of the logic is straightforward (and is, indeed, essentially the syntax already used in papers going back to Fagin and Halpern [1994]). There is a finite, nonempty set N = {1, . . . , n} of players, and a countable, nonempty set Φ of primitive propositions. Let LCn (Φ) be the set of formulas that can be constructed starting from Φ, and closing off under conjunction, negation, the modal operators {CBG}G⊆N,G 6=∅, and the formation of probability formulas. (We omit the Φ if it is irrelevant or clear from context.) Probability formulas are constructed as\nfollows. If ϕ1, . . . , ϕk are formulas, and a1, . . . , ak, b ∈ Q, then for i ∈ N ,\na1pr i(ϕ1) + . . .+ akpr i(ϕk) ≥ b\nis a probability formula, where pr i(ϕ) denotes the probability that player i assigns to a formula ϕ. Note that this syntax allows for nested probability formulas. We use the abbreviation Biϕ for pr i(ϕ) = 1, EB 1 Gϕ for ∧i∈GBiϕ, and EB m+1 G ϕ for EB m GEB 1 Gϕ for m = 1, 2 . . .. Finally, we take true to be the abbreviation for a fixed tautology such as p ∨ ¬p."
    }, {
      "heading" : "2.2 Epistemic probability structures",
      "text" : "There are standard approaches for interpreting this language [Fagin and Halpern 1994], but they all assume that there is no ambiguity, that is, that all players interpret the primitive propositions the same way. To allow for different interpretations, we use an approach used earlier [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player.\nAn (epistemic probability) structure (over Φ) has the form\nM = (Ω, (Πj)j∈N , (Pj)j∈N , (πj)j∈N),\nwhere Ω is the state space, and for each i ∈ N , Πi is a partition of Ω, Pi is a function that assigns to each ω ∈ Ω a probability space Pi(ω) = (Ωi,ω,Fi,ω, µi,ω), and πi is an interpretation that associates with each state a truth assignment to the primitive propositions in Φ. That is, πi(ω)(p) ∈ {true, false} for all ω and each primitive proposition p. Intuitively, πi describes player i’s interpretation of the primitive propositions. Standard models use only a single interpretation π; this is equivalent in our framework to assuming that π1 = · · · = πn. We call a structure where π1 = · · · = πn a common-interpretation structure; we call a structure where πi 6= πj for some agents i and j a structure with ambiguity. Denote by [[p]]i the set of states where i assigns the value true to p. The partitions Πi are called information partitions. While it is more standard in the philosophy and computer science literature to use models where there is a binary relation Ki on Ω for each agent i that describes i’s accessibility relation on states, we follow the common approach in economics of working with information partitions here, as that makes it particularly easy to define a player’s probabilistic beliefs. Assuming information partitions corresponds to the case that Ki is an equivalence relation (and thus defines a partition). The intuition is that a cell in the partition Πi is defined by some information that i received, such as signals or observations of the world. Intuitively, agent i receives the same information at each state in a cell of Πi. Let Πi(ω) denote the cell of the partition Πi containing ω. Finally, the probability space Pi(ω) = (Ωi,ω,Fi,ω, µi,ω) describes the beliefs of player i at state ω, with µi,ω a probability measure defined on the subspace Ωi,ω of the state space Ω. The σ-algebra Fi,ω consists of the subsets of Ωi,ω to which µi,ω can assign a probability. (If Ωi,ω is finite, we typically take Fi,ω = 2Ωi,ω , the set of all subsets of Ωi,ω.) The interpretation is that µi,ω(E) is the probability that i assigns to event E ∈ Fi,ω in state ω.\nThroughout this paper, we make the following assumptions regarding the probability assignments Pi, i ∈ N :\nA1. For all ω ∈ Ω, Ωi,ω = Πi(ω).\nA2. For all ω ∈ Ω, if ω′ ∈ Πi(ω), then Pi(ω′) = Pi(ω).\nA3. For all j ∈ N, ω, ω′ ∈ Ω, Πi(ω) ∩Πj(ω′) ∈ Fi,ω.\nFurthermore, we make the following joint assumption on players’ interpretations and information partitions:\nA4. For all ω ∈ Ω, i ∈ N , and primitive proposition p ∈ Φ, Πi(ω) ∩ [[p]]i ∈ Fi,ω.\nThese are all standard assumptions. A1 says that the set of states to which player i assigns probability at state ω is just the set Πi(ω) of worlds that i considers possible at state ω. A2 says that the probability space used is the same at all the worlds in a cell of player i’s partition. Intuitively, this says that player i knows his probability space. Informally, A3 says that player i can assign a probability to each of j’s cells, given his information. A4 says that primitive propositions (as interpreted by player i) are measurable according to player i."
    }, {
      "heading" : "2.3 Prior-generated beliefs",
      "text" : "One assumption that we do not necessarily make, but want to examine in this framework, is the common-prior assumption. The common-prior assumption is an instance of a more general assumption, that beliefs are generated from a prior, which we now define. The intuition is that players start with a prior probability; they then update the prior in light of their information. Player i’s information is captured by her partition Πi. Thus, if i’s prior is νi, then we would expect µi,ω to be νi(· | Πi(ω)).\nDefinition 2.1 An epistemic probability structure M = (Ω, (Πj)j∈N , (Pj)j∈N , (πj)j∈N) has prior-generated beliefs (generated by (F1, ν1), . . . , (Fn, νn)) if, for each player i, there exist probability spaces (Ω,Fi, νi) such that\n• for all i, j ∈ N and ω ∈ Ω, Πj(ω) ∈ Fi;\n• for all i ∈ N and ω ∈ Ω, Pi(ω) = (Πi(ω),Fi | Πi(ω), µi,ω), where Fi | Πi(ω) is the restriction of Fi to Πi(ω),1 and µi,ω(E) = νi(E | Πi(ω)) for all E ∈ Fi | Πi(ω) if νi(Πi(ω)) > 0. (There are no constraints on νi,ω if νi(Πi(ω)) = 0.)\nIt is easy to check that if M has prior-generated beliefs, then M satisfies A1, A2, and A3. More interestingly for our purposes, the converse also holds for a large class of structures. Say that a structure is countably partitioned if for each player i, the information partition Πi has countably many elements, i.e., Πi is a finite or countably infinite collection of subsets of Ω.\n1Recall that the restriction of Fi to Πi(ω) is the σ-algebra {B ∩ Πi(ω) : B ∈ Fi}.\nProposition 2.2 If a structure M has prior-generated beliefs, then M satisfies A1, A2, and A3. Moreover, every countably partitioned structure that satisfies A1, A2, and A3 is one with prior-generated beliefs, with the priors νi satisfying νi(Πi(ω)) > 0 for each player i ∈ N and state ω ∈ Ω.\nProof. The first part is immediate. To prove the second claim, suppose that M is a structure satisfying A1–A3. Let Fi be the unique algebra generated by ∪ω∈ΩFi,ω. To define νi, if there are Ni < ∞ cells in the partition Πi, define νi(ω) = 1Niµi,ω(ω). Otherwise, if the collection Πi is countably infinite, order the elements of Πi as p1i , p 2 i , . . .. Choose some state ωk ∈ p k i for each k, with associated probability space Pi(ωk) = (Ωi,ωk ,Fi,ωk , µi,ωk). By A2, each choice of ωk in pki gives the same probability measure µi,ωk . Define νi = ∑ k 1 2k µi,ωk . It is easy to see that νi is a probability measure on Ω, and that M is generated by (F1, ν1), . . . , (Fn, νn).\nNote that the requirement that that M is countably partitioned is necessary to ensure that we can have νi(Πi(ω)) > 0 for each player i and state ω.\nIn light of Proposition 2.2, when it is convenient, we will talk of a structure satisfying A1–A3 as being generated by (F1, ν1), . . . , (Fn, νn).\nThe common-prior assumption discussed in the introduction is essentially just the special case of prior-generated beliefs where all the priors are identical."
    }, {
      "heading" : "2.4 Capturing ambiguity",
      "text" : "We use epistemic probability structures to give meaning to formulas. Since primitive propositions are interpreted relative to players, we must allow the interpretation of arbitrary formulas to depend on the player as well. Exactly how we do this depends on what further assumptions we make about what players know about each other’s interpretations. There are many assumptions that could be made. We focus on two of them here, ones that we believe arise in applications of interest, and then reconsider them under the assumption that there may be some ambiguity about the partitions.\nBelieving there is no ambiguity The first approach is appropriate for situations where players may interpret statements differently, but it does not occur to them that there is another way of interpreting the statement. Thus, in this model, if there is a public announcement, all players will think that their interpretation of the announcement is common knowledge. We write (M,ω, i) out ϕ to denote that ϕ is true at state ω according to player i (that is, according to i’s interpretation of the primitive propositions in ϕ). The superscript out denotes outermost scope, since the formulas are interpreted relative to the “outermost” player, namely the player i on the left-hand side of out . We define out , as usual, by induction.\nIf p is a primitive proposition,\n(M,ω, i) out p iff πi(ω)(p) = true.\nThis just says that player i interprets a primitive proposition p according to his interpretation function πi. This clause is common to all our approaches for dealing with ambiguity.\nFor conjunction and negation, as is standard,\n(M,ω, i) out ¬ϕ iff (M,ω, i) 6 outϕ,\n(M,ω, i) out ϕ ∧ ψ iff (M,ω, i) out ϕ and (M,ω, i) out ψ.\nNow consider a probability formula of the form a1pr j(ϕ1)+ . . .+akpr j(ϕk) ≥ b. The key feature that distinguishes this semantics is how i interprets j’s beliefs. This is where we capture the intuition that it does not occur to i that there is another way of interpreting the formulas other than the way she does. Let\n[[ϕ]]outi = {ω : (M,ω, i) out ϕ}.\nThus, [[ϕ]]outi is the event consisting of the set of states where ϕ is true, according to i. Note that A1 and A3 guarantee that the restriction of Ωj,ω to Πi(ω) belongs to Fi,ω. Assume inductively that [[ϕ1]]outi ∩ Ωj,ω, . . . , [[ϕk]] out\ni ∩ Ωj,ω ∈ Fj,ω. The base case of this induction, where ϕ is a primitive proposition, is immediate from A3 and A4, and the induction assumption clearly extends to negations and conjunctions. We now define\n(M,ω, i) out a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b iff\na1µj,ω([[ϕ1]] out i ∩ Ωj,ω) + . . .+ akµj,ω([[ϕk]] out i ∩ Ωj,ω) ≥ b.\nNote that it easily follows from A2 that (M,ω, i) out a1pr j(ϕ1) + . . . + akpr j(ϕk) ≥ b if and only if (M,ω′, i) out a1pr j(ϕ1) + . . . + akpr j(ϕk) ≥ b for all ω\n′ ∈ Πj(ω). Thus, [[a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b]]i is a union of cells of Πj , and hence [[a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b]]i ∩ Ωj,ω ∈ Fj,ω.\nWith this semantics, according to player i, player j assigns ϕ probability b if and only if the set of worlds where ϕ holds according to i has probability b according to j. Intuitively, although i “understands” j’s probability space, player i is not aware that j may interpret ϕ differently from the way she (i) does. That i understands j’s probability space is plausible if we assume that there is a common prior and that i knows j’s partition (this knowledge is embodied in the assumption that i intersects [[ϕk]]outi with Ωj,ω when assessing what probability j assigns to ϕk).2\nGiven our interpretation of probability formulas, the interpretation of Bjϕ and EB kϕ fol-\nlows. For example, (M,ω, i) out Bjϕ iff µj,ω([[ϕ]] out i ) = 1.\n2Note that at state ω, player i will not in general know that it is state ω. In particular, even if we assume that i knows which element of j’s partition contains ω, i will not in general know which of j’s cells describes j’s current information. But we assume that i does know that if the state is ω, then j’s information is described by Ωj,ω. Thus, as usual, “(M, i, ω) out ϕ” should perhaps be understood as “according to i, ϕ is true if the actual world is ω”. This interpretational issue arises even without ambiguity in the picture.\nFor readers more used to belief defined in terms of a possibility relation, note that if the probability measure µj,ω is discrete (i.e., all sets are µj,ω-measurable, and µj,ω(E) = ∑ ω′∈E µj,ω(ω\n′) for all subsets E ⊂ Πj(ω)), we can define Bj = {(ω, ω′) : µj,ω(ω′) > 0}; that is, (ω, ω′) ∈ Bj if, in state ω, agent j gives state ω′ positive probability. In that case, (M,ω, i) out Bjϕ iff (M,ω′, i) out ϕ for all ω′ such that (ω, ω′) ∈ Bj . That is, (M,ω, i) out Bjϕ iff ϕ is true according to i in all the worlds to which j assigns positive probability at ω.\nIt is important to note that (M,ω, i) ϕ does not imply (M,ω, i) Biϕ: while (M,ω, i) out\nϕ means “ϕ is true at ω according to i’s interpretation,” this does not mean that i believes ϕ at state ω. The reason is that i can be uncertain as to which state is the actual state. For i to believe ϕ at ω, ϕ would have to be true (according to i’s interpretation) at all states to which i assigns positive probability.\nFinally, we define\n(M,ω, i) out CBGϕ iff (M,ω, i) out EBkGϕ for k = 1, 2, . . .\nfor any nonempty subset G ⊆ N of players.\nAwareness of possible ambiguity We now consider the second way of interpreting formulas. This is appropriate for players who realize that other players may interpret formulas differently. We write (M,ω, i) in ϕ to denote that ϕ is true at state ω according to player i using this interpretation, which is called innermost scope. The definition of in is identical to that of out except for the interpretation of probability formulas. In this case, we have\n(M,ω, i) in a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b iff\na1µj,ω([[ϕ1]] in j ∩ Ωj,ω) + . . .+ akµj,ω([[ϕk]] in j ∩ Ωj,ω) ≥ b,\nwhere [[ϕ]]inj is the set of states ω such that (M,ω, j) in ϕ. Hence, according to player i, player j assigns ϕ probability b if and only if the set of worlds where ϕ holds according to j has probability b according to j. Intuitively, now i realizes that j may interpret ϕ differently from the way that she (i) does, and thus assumes that j uses his (j’s) interpretation to evaluate the probability of ϕ. Again, in the case that µj,ω is discrete, this means that (M,ω, i) in Bjϕ iff (M,ω′, j) in ϕ for all ω′ such that (ω, ω′) ∈ Bj .\nNote for future reference that if ϕ is a probability formula or a formula of the form CBGϕ′, then it is easy to see that (M,ω, i) in ϕ if and only if (M,ω, j) in ϕ; we sometimes write (M,ω) in ϕ in this case. Clearly, out and in agree in the common-interpretation case, and we can write . There is a sense in which innermost scope is able to capture the intuitions behind outermost scope. Specifically, we can capture the intuition that player i is convinced that all players interpret everything just as he (i) does by assuming that in all worlds ω′ that player i considers possible, πi(ω′) = πj(ω′) for all players j.\nAmbiguity about information partitions Up to now, we have assumed that players “understand” each other’s probability spaces. This may not be so reasonable in the presence of\nambiguity and prior-generated beliefs. We want to model the following type of situation. Players receive information, or signals, about the true state of the world, in the form of strings (formulas). Each player understands what signals he and other players receive in different states of the world, but players may interpret signals differently. For instance, player i may understand that j sees a red car if ω is the true state of the world, but i may or may not be aware that j has a different interpretation of “red” than i does. In the latter case, i does not have a full understanding of j’s information structure.\nWe would like to think of a player’s information as being characterized by a formula (intuitively, the formula that describes the signals received). Even if the formulas that describe each information set are commonly known, in the presence of ambiguity, they might be interpreted differently.\nTo make this precise, let Φ∗ be the set of formulas that is obtained from Φ by closing off under negation and conjunction. That is, Φ∗ consists of all propositional formulas that can be formed from the primitive propositions in Φ. Since the formulas in Φ∗ are not composed of probability formulas, and thus do not involve any reasoning about interpretations, we can extend the function πi(·) to Φ∗ in a straightforward way, and write [[ϕ]]i for the set of the states of the world where the formula ϕ ∈ Φ∗ is true according to i.\nThe key new assumption that we make to model players’ imperfect understanding of the other players’ probability spaces is that i’s partition cell at ω is described by a formula ϕi,ω ∈ Φ∗. Roughly speaking, this means that Πi(ω) should consist of all states where the formula ϕi,ω is true. More precisely, we take Πi(ω) to consist of all states where φi,ω is true according to i. If player j understands that i may be using a different interpretation than he does (i.e., the appropriate semantics are the innermost-scope semantics), then j correctly infers that the set of states that i thinks are possible in ω is Πi(ω) = [[ϕi,ω]]i. But if j does not understand that i may interpret formulas in a different way (i.e., under outermost scope), then he thinks that the set of states that i thinks are possible in ω is given by [[ϕi,ω]]j . Of course, [[ϕi,ω]]j does not in general coincide with Πi(ω). Indeed, [[ϕi,ω]]j may even be empty. If this happens, j might well wonder if i is interpreting things the same way that he (j) is. In any case, we require that j understand that these formulas form a partition and that ω belongs to [[ϕi,ω]]j . Thus, we consider structures that satisfy A1–A5, and possibly A6 (when we use outermost scope semantics).\nA5. For each i ∈ N and ω ∈ Ω, there is a formula ϕi,ω ∈ Φ∗ such that Πi(ω) = [[ϕi,ω]]i.\nA6. For each i, j ∈ N , the collection {[[ϕi,ω]]j : ω ∈ Ω} is a partition of Ω and for all ω ∈ Ω, ω ∈ [[ϕi,ω]]j .\nAssumption A6 ensure that the signals for player i define an information partition according to every player j when we consider the outermost scope semantics. With innermost scope, this already follows from A5 and the definition of Πi(ω).\nWe can now define analogues of outermost scope and innermost scope in the presence of ambiguous information. Thus, we define two more truth relations, out ,ai and in,ai . (The “ai” here stands for “ambiguity of information”.) The only difference between out ,ai and\nout is in the semantics of probability formulas. In giving the semantics in a structure M , we assume that M has prior-generated beliefs, generated by (F1, ν1), . . . , (Fn, νn). As we observed in Proposition 2.2, this assumption is without loss of generality as long as the structure is countably partitioned. However, the choice of prior beliefs is relevant, as we shall see, so we have to be explicit about them. When i evaluates j’s probability at a state ω, instead of using µj,ω, player i uses νj(· | [[ϕj,ω]]i). When i = j, these two approaches agree, but in general they do not. Thus, assuming that M satisfies A5 and A6 (which are the appropriate assumptions for the outermost-scope semantics), we have\n(M,ω, i) out ,ai a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b iff a1νj([[ϕ1]] out ,ai i | [[ϕj,ω]] out ,ai i ) + . . .\n+akνj([[ϕk]] out ,ai i | [[ϕj,ω]] out ,ai i ) ≥ b,\nwhere [[ψ]]out ,aii = {ω ′ : (M,ω, i) out ,ai ψ}.\nThat is, at ω ∈ Ω, player j receives the information (a string) ϕj,ω, which he interprets as [[ϕj,ω]]j . Player i understands that j receives the information ϕj,ω in state ω, but interprets this as [[ϕj,ω]]i. This models a situation such as the following. In state ω, player j sees a red car, and thinks possible all states of the world where he sees a car that is red (according to j). Player i knows that at world ω player j will see a red car (although she may not know that the actual world is ω, and thus does not know what color of car player j actually sees). However, i has a somewhat different interpretation of “red car” (or, more precisely, of j seeing a red car) than j; i’s interpretation corresponds to the event [[ϕj,ω]]i. Since i understands that j’s beliefs are determined by conditioning her prior νj on her information, i can compute what she believes j’s beliefs are.\nWe can define in,ai in an analogous way. Thus, the semantics for formulas that do not involve probability formulas are as given by in , while the semantics of probability formulas is defined as follows (where M is assumed to satisfy A5, which is the appropriate assumption for the innermost-scope semantics):\n(M,ω, i) in,ai a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b iff a1νj([[ϕ1]] in,ai j | [[ϕj,ω]] in,ai j ) + . . .\n+akνj([[ϕk]] in,ai j | [[ϕj,ω]] in,ai j ) ≥ b.\nNote that although we have written [[ϕj,ω]] in,ai i , since ϕj,ω is a propositional formula, [[ϕj,ω]] in,ai i = [[ϕj,ω]] out ,ai i = [[ϕj,ω]] out i = [[ϕj,ω]] in\ni . It is important that ϕj,ω is a propositional formula here; otherwise, we would have circularities in the definition, and would somehow need to define [[ϕj,ω]] in,ai i .\nAgain, here it may be instructive to consider the definition of Bjϕ in the case that µj,ω is discrete for all ω. In this case, Bj becomes the set {(ω, ω′) : νj(ω′ | [[ϕj,ω]] in,ai j ) > 0. That is, state ω′ is considered possible by player j in state ω if agent j gives ω′ positive probability after conditioning his prior νj on (his interpretation of) the information ϕj,ω he receives in state ω. With this definition of Bj , we have, as expected, (M,ω, i) in,ai Bjϕ iff (M,ω′, i) in,ai ϕ for all ω′ such that (ω, ω′) ∈ Bj .\nThe differences in the different semantics arise only when we consider probability formulas. If we go back to our example with the red car, we now have a situation where player j sees a red car in state ω, and thinks possible all states where he sees a red car. Player i knows that in state ω, player j sees a car that he (j) interprets to be red, and that this determines his posterior. Since i understands j’s notion of seeing a red car, she has a correct perception of j’s posterior in each state of the world. Thus, the semantics for in,ai are identical to those for in (restricted to the class of structures with prior-generated beliefs that satisfy A5), though the information partitions are not predefined, but rather generated by the signals.\nNote that, given an epistemic structure M satisfying A1–A4, there are many choices for νi that allow M to be viewed as being generated by prior beliefs. All that is required of νj is that for all ω ∈ Ω and E ∈ Fj,ω such that E ⊆ [[ϕj,ω]] out ,ai j , it holds that νj(E ∩ [[ϕj,ω]] out ,ai j )/νj([[ϕj,ω]] out ,ai j ) = µj,ω(E). However, because [[ϕj,ω]] out ,ai i may not be a subset of [[ϕj,ω]] out ,ai j = Πj(ω), we can have two prior probabilities νj and ν ′ j that generate the same posterior beliefs for j, and still have νj([[ϕk]] out ,ai i | [[ϕj,ω]] out ,ai i ) 6= ν ′ j([[ϕk]] out ,ai i | [[ϕj,ω]] out ,ai i ) for some formulas ϕk. Thus, we must be explicit about our choice of priors here."
    }, {
      "heading" : "3 Common interpretations suffice",
      "text" : "In this section, we show in there is a sense in which we do not need structures with ambiguity. Specifically, we show that the same formulas are valid in common-interpretation structures as in structures that do not have a common interpretation, no matter what semantics we use, even if we have ambiguity about information partitions.\nTo make this precise, we need some notation. Fix a nonempty, countable set Ψ of primitive propositions, and let M(Ψ) be the class of all structures that satisfy A1–A4 and that are defined over some nonempty subset Φ of Ψ such that Ψ \\ Φ is countably infinite.3 Given a subset Φ of Ψ, a formula ϕ ∈ LCn (Φ), and a structure M ∈ M(Ψ) over Φ, we say that ϕ is valid in M according to outermost scope, and write M out ϕ, if (M,ω, i) out ϕ for all ω ∈ Ω and i ∈ N . Given ϕ ∈ Ψ, say that ϕ is valid according to outermost scope in a class N ⊆ M(Ψ) of structures, and write N out ϕ, if M out ϕ for all M ∈ N defined over a set Φ ⊂ Ψ of primitive propositions that includes all the primitive propositions that appear in ϕ.\nWe get analogous definitions by replacing out by in , out ,ai and in,ai throughout (in the latter two cases, we have to restrict N to structures that satisfy A5 and A6 or just A5, respectively, in addition to A1–A4). Finally, given a class of structures N , let Nc be the subclass of N in which players have a common interpretation. Thus, Mc(Ψ) denotes the structures in M(Ψ) with a common interpretation. Let Mai(Ψ) denote all structures in M(Ψ)\n3Most of our results hold if we just consider the set of structures defined over some fixed set Φ of primitive propositions. However, for one of our results, we need to be able to add fresh primitive propositions to the language. Thus, we allow the set Φ of primitive propositions to vary over the structures we consider, but require Ψ \\ Φ to be countably infinite so that there are always “fresh” primitive propositions that we can add to the language.\nwith prior-generated beliefs that satisfy A5 and A6 (where we assume that the prior ν that describes the initial beliefs is given explicitly).4\nTheorem 3.1 For all formulas ϕ ∈ LCn (Ψ), the following are equivalent:\n(a) Mc(Ψ) ϕ;\n(b) M(Ψ) out ϕ;\n(c) M(Ψ) in ϕ;\n(d) Maic (Ψ) ϕ;\n(e) Mai(Ψ) out ,ai ϕ;\n(f) Mai(Ψ) in,ai ϕ.\nProof. Since the set of structures with a common interpretation is a subset of the set of structures, it is immediate that (c) and (b) both imply (a). Similarly, (e) and (f) both imply (d). The fact that (a) implies (b) is also immediate. For suppose that Mc(Ψ) ϕ and that M = (Ω, (Πj)j∈N , (Pj)j∈N , (πj)j∈N) ∈ M(Ψ) is a structure over a set Φ ⊂ Ψ of primitive propositions that contains the primitive propositions that appear in ϕ. We must show that M out ϕ. Thus, we must show that (M,ω, i) out ϕ for all ω ∈ Ω and i ∈ N . Fix ω ∈ Ω and i ∈ N , and let M ′i = (Ω, (Πj)j∈N , (Pj)j∈N , (π ′ j)j∈N), where π ′ j = πi for all j. Thus, M ′i is a common-interpretation structure over Φ, where the interpretation coincides with i’s interpretation in M . Clearly M ′i satisfies A1–A4, so M ′ i ∈ Mc(Ψ). It is easy to check that (M,ω, i) out ψ if and only if (M ′i , ω, i) ψ for all states ω ∈ Ω and all formulas ψ ∈ L C n (Φ). Since M ′i ϕ, we must have that (M,ω, i) out ϕ, as desired.\nTo see that (a) implies (c), given a structure M = (Ω, (Πj)j∈N , (Pj)j∈N , (πj)j∈N) ∈ M(Ψ) over some set Φ ⊂ Ψ of primitive propositions and a player j ∈ N , let Ωj be a disjoint copy of Ω; that is, for every state ω ∈ Ω, there is a corresponding state ωj ∈ Ωj . Let Ω′ = Ω1∪ . . .∪Ωn. Given E ⊆ Ω, let the corresponding subset Ej ⊆ Ωj be the set {ωj : ω ∈ E}, and let E ′ be the subset of Ω′ corresponding to E, that is, E ′ = {ωj : ω ∈ E, j ∈ N}.\nDefine M ′ = (Ω′, (Π′j)j∈N , (P ′ j)j∈N , (π ′ j)j∈N), where Ω ′ = Ω1∪ . . .∪Ωn and, for all ω ∈ Ω and i, j ∈ N , we have\n• Π′i(ωj) = (Πi(ω)) ′;\n• πi(ωj)(p) = πj(ω)(p) for a primitive proposition p ∈ Φ;\n• P ′i(ωj) = (Ω ′ i,ωj ,F ′i,ωj , µ ′ i,ωj ), where Ω′i,ωj = Ω ′ i,ω, F ′ i,ωj = {Eℓ : E ∈ Fi,ω, ℓ ∈ N}, µ′i,ωj(Ei) = µi,ω(E), µ ′ i,ωj (Eℓ) = 0 if ℓ 6= i.\n4For ease of exposition, we assume A6 even when dealing with innermost scope.\nThus, π1 = · · · = πn, so that M ′ is a common-interpretation structure; on a state ωj , these interpretations are all determined by πj . Also note that the support of the probability measure µ′i,ωj is contained in Ωi, so for different players i, the probability measures µ ′ i,ωj\nhave disjoint supports. Now an easy induction on the structure of formulas shows that(M ′, ωj) ψ if and only if (M,ω, j) in ψ for any formula ψ ∈ LCn (Φ). It easily follows that if M ′ ϕ, then M in ϕ for all ϕ ∈ LCn (Φ).\nThe argument that (d) implies (e) is essentially identical to the argument that (a) implies (b); similarly, the argument that (d) implies (f) is essentially the same as the argument that (a) implies (c). Since Maic (Ψ) ⊆ Mc(Ψ), (a) implies (d). To show that (d) implies (a), suppose that Maic (Ψ) ϕ for some formula ϕ ∈ L C n (Ψ). Given a structure M = (Ω, (Πj)j∈N , (Pj)j∈N , π) ∈ Mc(Ψ) over a set Φ ⊂ Ψ of primitive propositions that includes the primitive propositions that appear in ϕ, we want to show that (M,ω, i) ϕ for each state ω ∈ Ω and player i. Fix ω. Recall that RN(ω) consists of the set of states N-reachable from ω. Let M ′ = (RN(ω), (Π′j)j∈N , (P ′ j)j∈N , π ′), with Π′j and P ′ j the restriction of Πj and Pj , respectively, to the states in RN (ω), be a structure over a set Φ′ of primitive propositions, where Φ′ contains Φ and new primitive propositions that we call pi,ω for each player i and state ω ∈ RN(ω).5 Note that there are only countably many information sets in RN (ω), so Φ′ is countable. Define π′ so that it agrees with π (restricted to RN(ω)) on the propositions in Φ, and so that [[pi,ω]]i = Πi(ω). Thus, M ′ satisfies A5 and A6. It is easy to check that, for all ω′ ∈ RN (ω) and all formulas ψ ∈ LCn (Φ), we have that (M,ω\n′, i) ψ iff (M ′, ω′, i) ψ. Since M ′ ϕ, it follows that (M,ω, i) ϕ, as desired.\nFrom Theorem 3.1 it follows that for formulas in LCn (Ψ), we can get the same axiomatization with respect to structures in M(Ψ) for both the out and in semantics; moreover, this axiomatization is the same as that for the common-interpretation case. An axiomatization for this case is already given in [Fagin and Halpern 1994]; there is also a complete characterization of the complexity of determining whether a formula is valid.\nHowever, the equivalence in Theorem 3.1 does not extend to subclasses of M, Mc, and Mai . As shown in our companion paper [Halpern and Kets 2013], the equivalence result does not hold if we consider the innermost scope semantics and restrict attention to the subclasses of M and Mc that satisfy the common-prior assumption. We defer a further discussion of the modeling implications of this result to Section 5."
    }, {
      "heading" : "4 A more general language",
      "text" : "Although, when considering innermost scope, we allowed for agents that were sophisticated enough to realize that different agents might interpret things in different ways, our syntax did\n5This is the one argument that needs the assumption that the set of primitive propositions can be different in different structures in M(Ψ), and the fact that every Ψ \\ Φ is countable. We have assumed for simplicity that the propositions pi,ω are all in Ψ \\ Φ, and that they can be chosen in such a way so that Ψ \\ (Φ ∪ {pi,ω : i ∈ {1, . . . , n}, ω ∈ Ω}) is countable.\nnot reflect that sophistication. Specifically, the language does not allow the modeler (or the agents) to reason about how other agents interpret formulas. Here we consider a language that is rich enough to allow this. Specifically, we have primitive propositions of the form (p, i), that can be interpreted as “i’s interpretation of p.” With this extended language, we do not need to have a different interpretation function πi for each i; it suffices in a precise sense to use a single (common) interpretation function. We now make this precise, and show that this approach is general enough to capture both outermost and innermost scope.\nMore precisely, we consider the same syntax as in Section 2.1, with the requirement that the set Φ of primitive propositions have the form Φ′ × N , for some set Φ′; that is, primitive propositions have the form (p, i) for some p ∈ Φ′ and some agent i ∈ N . We interpret these formulas using a standard epistemic probability structure M = (Ω, (Πj)j∈N , (Pj)j∈N , π), with a common interpretation π, as in [Fagin and Halpern 1994]. Thus, truth is no longer agentdependent, so we have only (M,ω) on the left-hand side of , not (M,ω, i). In particular, if (p, i) is a primitive proposition,\n(M,ω) (p, i) iff π(ω)((p, i)) = true.\nAs expected, we have\n(M,ω) a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b iff\na1µj,ω([[ϕ1]] ∩ Ωj,ω) + . . .+ akµj,ω([[ϕk]] ∩ Ωj,ω) ≥ b.\nWe no longer need to write [[ϕj]]oui or [[ϕj]] in i , since all agents interpret all formulas the same way.\nWe now show how we can capture innermost and outermost scope using this semantics. Specifically, suppose that we start with an epistemic probability structureM = (Ω, (Πj)j∈N , (Pj)j∈N , (πj)j∈N) over some set Φ of primitive propositions. Consider the corresponding common-interpretation structure Mc = (Ω, (Πj)j∈N , (Pj)j∈N , π) over Φ × N , where π(ω)(p, i) = πi(ω)(p). Thus, M and Mc are identical except in the primitive propositions that they interpret, and how they interpret them. In Mc, the primitive proposition (p, i) ∈ Φ × N is interpreted the same way that i interprets p in M .\nWe can now define, for each formula φ, two formulas φini and φ out i with the property that (M,ω, i) in φ iff (Mc, ω) φini and (M,ω, i) out φ iff (Mc, ω) φouti . We start with φ in\ni , defining it by induction on structure:\n• pini = (p, i)\n• (ψ ∧ ψ′)ini = ψ in i ∧ (ψ ′ i) in\n• (a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b) in i = a1pr j((ϕ1) in j ) + . . .+ akpr j((ϕk) in j ) ≥ b\n• (CBGψ)ini = CBG(∧j∈GBjψ in j ).\nNote that φini is independent of i if φ is a probability formula or of the form CBGψ. This is to be expected, since, as we have seen, with innermost scope, the semantics of such formulas is independent of i. The definition of (CBGψ)ini is perhaps the only somewhat surprising clause here; as we discuss after the proof of Theorem 4.1 below, the more natural definition, (CBGψ) in i = CBG(ψ in i ), does not work.\nFor outermost scope, the first two clauses of the translation are identical to those above; the latter two change as required for outermost scope. Thus, we get\n• pouti = (p, i)\n• (ψ ∧ ψ′)outi = ψ out i ∧ (ψ ′ i) out\n• (a1pr j(ϕ1) + . . .+ akpr j(ϕk) ≥ b) out i = a1pr j((ϕ1) out i ) + . . .+ akpr j((ϕk) out i ) ≥ b\n• (CBGψ) out i = CBG(ψ out i ).\nInterestingly, here the natural definition of (CBGψ)outi does work.\nTheorem 4.1 If M is a probabilistic epistemic structure over Φ and Mc is the corresponding common-interpretation structure over Φ×N , then\n(a) (M,ω, i) in φ iff (Mc, ω) φini ;\n(b) (M,ω, i) out φ iff (Mc, ω) φouti .\nProof. We prove the result by induction on the structure of φ. The argument for outermost scope is completely straightforward, and left to the reader. The argument for innermost scope is also straightforward, except for the case that φ has the form CBGψ. We now consider this case carefully.\nBy definition,\n(Mc, ω) (CBGψ) in\ni\niff (Mc, ω) CBG(∧j∈GBjψinj ) iff (Mc, ω) (EBG)k(∧j∈GBjψinj ) for k = 1, 2, 3, . . ..\nNote that, by definition, (EBGψ)ini = ∧j∈GBjψ in j . Thus, by the induction hypothesis, it follows that\n(Mc, ω) ∧j∈GBjψ in j iff (M,ω, i) in EBG.\nNow by a straightforward induction on k, we can show that\n(Mc, ω) EB k(∧j∈GBjψ in j ) iff (M,ω, i) in EBk+1G ψ.\nThat is,\n(Mc, ω) CB(∧j∈GBjψ in j ) iff (M,ω, i) in EBkGψ for k = 2, 3, 4, . . .. (1)\nIt immediately follows from (1) that if (M,ω, i) in CBGψ, then (Mc, ω) CB(∧j∈GBjψinj ). The converse also follows from (1), once we show that (M,ω, i) in EB2Gψ implies (M,ω, i) in EBGψ. But this too follows easily since\n(M,ω, i) in EB2Gψ implies (M,ω, i) in ∧j∈GBj(∧j∈GBjψ) implies (M,ω, i) in ∧j∈GBj(Bjψ) iff (M,ω, i) in ∧j∈GBjψ iff (M,ω, i) in EBψ.\nThis completes the argument.\nTo see why we need we need the more complicated definition of (CBGψ)ini , it is perhaps best to consider an example. By definition, (CB{1,2}p)in1 = CB{1,2}(B1(p, 1) ∧ B2(p, 2)). By way of contrast, CB{1,2}(pin1 ) = CB{1,2}(p, 1), which (using arguments similar in spirit to those used above) can be shown to be equivalent to CB{1,2}(B1(p, 1) ∧ B2(p, 1)). They key point here is whether we have B2(p, 1) or B2(p, 2). We want the latter, which is what we get from the more complicated translation that we use; it is easy to show that the former does not give the desired result. These issues do not arise with outermost scope.\nTheorem 4.1 shows that, from a modeler’s point of view, there is no loss in working with common-interpretations structures. Any structure that uses ambiguous propositions can be converted to one that uses unambiguous propositions of the form (p, i). In a sense, this can be viewed as a strengthening of Theorem 3.1. Theorem 3.1 says that any formula that is satisfiable using innermost or outermost semantics in the presence of ambiguity is also satisfiable in a common-interpretation structure. However, that common-interpretation structure might be quite different from the original structure. Theorem 4.1 shows that if a formula φ is true according to agent i at a state ω in a structure M , then a variant of φ (namely, φini or φ out\ni ) is true at state ω in essentially the same structure.\nMoreover, once we add propositions of the form (p, i) to the language, we have a great deal of additional expressive power. For example, we can say directly that agent i believes that all agents interpret p the same way that he does by writing Bi(∧j((p, i) ⇔ (p, j))). We can also make more complicated statements, such as “agent i believes that agents j and k interpret p the same way, although they interpret p differently from him: Bi((p, j) ⇔ (p, k)) ∧ ¬Bi((p, i) ⇔ (p, j)). Clearly, far more subtle relationships among agents’ interpretations of primitive propositions can be expressed in this language."
    }, {
      "heading" : "5 Discussion",
      "text" : "We have defined a logic for reasoning about ambiguity, and then showed that, in two senses, we really do not need structures with ambiguity: (1) the same axioms hold whether or not we have ambiguity, and (2) we can use a richer language to talk about the ambiguity, while giving\nan unambigious interpretation to all formulas. So why do we bother using structures with ambiguity? Perhaps the main reason is that it allows us to describe the situation from the agent’s point of view. For example, if we are dealing with outermost scope, an agent does not realize that there are other interpretations possible other than the one he is using. Thus, the simpler language more directly captures agents’ assertions. Similarly, a structure with ambiguity may more accurately describe a situation than a structure with a common interpretation. We thus believe that structures with ambiguity will prove to be a useful addition to a modeler’s toolkit. In any case, whatever modeling framework and language is used, it is clear that we need to take ambiguity into account, and reason explicitly about it.\nThere are two extensions of our framework that we have not considered. First, we model ambiguity by allowing a formula to be interpreted differently by different agents, we assume that each individual agent disambiguates each formula. That is, no agent says “I’m not sure how to disambiguate φ. It could correspond to the U of worlds, or it could correspond to U ′; I’m not sure which is right.” As we mentioned earlier, this view is closer to that of Lewis [1982] and Kuijer [2013]. It would involve a nontrivial change to our framework to capture this. Second, we have allowed only ambiguity about the meaning of primitive propositions (which then extends to ambiguity about the meaning of arbitrary formulas). But we have not considered ambiguity about the meaning of belief; for example, i might interpret belief in φ terms of having a proof of φ in some axiom system, while j might use a possible-worlds interpretation (as we do in this paper). Capturing this seems interesting, but quite difficult. Indeed, even without ambiguity, it is not nontrivial to design a logic that captures various resource-bounded notions of belief. (See [Fagin, Halpern, Moses, and Vardi 1995][Chapters 9–10] for more on this topic.)\nAcknowledgments: We thank Moshe Vardi and the anonymous reviewers of this paper for helpful comments. Halpern’s work was supported in part by NSF grants IIS-0534064, IIS0812045, IIS-0911036, and CCF-1214844, A preliminary version of this work appeared as “Ambiguous language and differences in beliefs” in the Principles of Knowledge Representation and Reasoning: Proceedings of the Thirteenth International Conference, 2012, pp. 329– 338. by AFOSR grants FA9550-08-1-0438, FA9550-12-1-0040, and FA9550-09-1-0266, and by ARO grant W911NF-09-1-0281. The work of Kets was supported in part by AFOSR grant FA9550-08-1-0389."
    } ],
    "references" : [ {
      "title" : "Agreeing to disagree",
      "author" : [ "R.J. Aumann" ],
      "venue" : "Annals of Statistics",
      "citeRegEx" : "Aumann,? \\Q1976\\E",
      "shortCiteRegEx" : "Aumann",
      "year" : 1976
    }, {
      "title" : "Reasoning about knowledge and probability",
      "author" : [ "R. Fagin", "J.Y. Halpern" ],
      "venue" : "Journal of the ACM",
      "citeRegEx" : "Fagin and Halpern,? \\Q1994\\E",
      "shortCiteRegEx" : "Fagin and Halpern",
      "year" : 1994
    }, {
      "title" : "Reasoning About Knowledge. Cambridge, Mass.: MIT Press. A slightly revised paperback",
      "author" : [ "R. Fagin", "J.Y. Halpern", "Y. Moses", "M.Y. Vardi" ],
      "venue" : null,
      "citeRegEx" : "Fagin et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Fagin et al\\.",
      "year" : 1995
    }, {
      "title" : "Naming and identity in epistemic logics, Part I: the propositional case",
      "author" : [ "A.J. Grove", "J.Y. Halpern" ],
      "venue" : "Journal of Logic and Computation",
      "citeRegEx" : "Grove and Halpern,? \\Q1993\\E",
      "shortCiteRegEx" : "Grove and Halpern",
      "year" : 1993
    }, {
      "title" : "Intransitivity and vagueness",
      "author" : [ "J.Y. Halpern" ],
      "venue" : "Review of Symbolic Logic",
      "citeRegEx" : "Halpern,? \\Q2009\\E",
      "shortCiteRegEx" : "Halpern",
      "year" : 2009
    }, {
      "title" : "Ambiguous language and consensus",
      "author" : [ "J.Y. Halpern", "W. Kets" ],
      "venue" : null,
      "citeRegEx" : "Halpern and Kets,? \\Q2013\\E",
      "shortCiteRegEx" : "Halpern and Kets",
      "year" : 2013
    }, {
      "title" : "Semantic interpretation and ambiguity",
      "author" : [ "G. Hirst" ],
      "venue" : "Artificial Intelligence",
      "citeRegEx" : "Hirst,? \\Q1988\\E",
      "shortCiteRegEx" : "Hirst",
      "year" : 1988
    }, {
      "title" : "Sequent systems for nondeterministic propostiinal logic without reflexivity",
      "author" : [ "L. Kuijer" ],
      "venue" : "In Fourth International Workshop on Logic, Rationality, and Interaction (LORI-IV), LNCS, Volume",
      "citeRegEx" : "Kuijer,? \\Q2013\\E",
      "shortCiteRegEx" : "Kuijer",
      "year" : 2013
    }, {
      "title" : "Logic for equivocators",
      "author" : [ "D. Lewis" ],
      "venue" : "Noûs",
      "citeRegEx" : "Lewis,? \\Q1982\\E",
      "shortCiteRegEx" : "Lewis",
      "year" : 1982
    }, {
      "title" : "Modeling ambiguity in a multi-agent system",
      "author" : [ "C. Monz" ],
      "venue" : "Proc. 12th Amsterdam Colloquium,",
      "citeRegEx" : "Monz,? \\Q1999\\E",
      "shortCiteRegEx" : "Monz",
      "year" : 1999
    }, {
      "title" : "Word sense disambiguation: a survey",
      "author" : [ "R. Navigli" ],
      "venue" : "ACM Computing Surveys",
      "citeRegEx" : "Navigli,? \\Q2009\\E",
      "shortCiteRegEx" : "Navigli",
      "year" : 2009
    }, {
      "title" : "The Logic of Inconsistency",
      "author" : [ "N. Rescher" ],
      "venue" : "Brandom",
      "citeRegEx" : "Rescher and R.,? \\Q1979\\E",
      "shortCiteRegEx" : "Rescher and R.",
      "year" : 1979
    }, {
      "title" : "Semantic Ambiguity and Underspecification",
      "author" : [ "K. van Deemter", "S. Peters" ],
      "venue" : null,
      "citeRegEx" : "Deemter and Peters,? \\Q1996\\E",
      "shortCiteRegEx" : "Deemter and Peters",
      "year" : 1996
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "To model this formally, we can use a straightforward approach already used in [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player.",
      "startOffset" : 78,
      "endOffset" : 116
    }, {
      "referenceID" : 3,
      "context" : "To model this formally, we can use a straightforward approach already used in [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player.",
      "startOffset" : 78,
      "endOffset" : 116
    }, {
      "referenceID" : 5,
      "context" : "In a companion paper [Halpern and Kets 2013], we provide a different explanation, in terms of ambiguity.",
      "startOffset" : 21,
      "endOffset" : 44
    }, {
      "referenceID" : 0,
      "context" : "Our interest in ambiguity was originally motivated by a seminal result in game theory: Aumann’s [1976] theorem showing that players cannot “agree to disagree.",
      "startOffset" : 87,
      "endOffset" : 103
    }, {
      "referenceID" : 6,
      "context" : ", trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey.",
      "startOffset" : 92,
      "endOffset" : 105
    }, {
      "referenceID" : 6,
      "context" : ", trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey.",
      "startOffset" : 92,
      "endOffset" : 152
    }, {
      "referenceID" : 6,
      "context" : ", trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey. However, there does not seem to be much work on incorporating ambiguity into a logic. Apart from the literature on the logic of context and on underspecification (see Van Deemter and Peters [1996]), the only papers that we are aware of that does this are ones by Monz [1999] and Kuijer [2013].",
      "startOffset" : 92,
      "endOffset" : 370
    }, {
      "referenceID" : 6,
      "context" : ", trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey. However, there does not seem to be much work on incorporating ambiguity into a logic. Apart from the literature on the logic of context and on underspecification (see Van Deemter and Peters [1996]), the only papers that we are aware of that does this are ones by Monz [1999] and Kuijer [2013].",
      "startOffset" : 92,
      "endOffset" : 448
    }, {
      "referenceID" : 6,
      "context" : ", trying to decide from context which of the multiple meanings of a word are intended); see Hirst [1988] for a seminal contribution, and Navigli [2009] for a recent survey. However, there does not seem to be much work on incorporating ambiguity into a logic. Apart from the literature on the logic of context and on underspecification (see Van Deemter and Peters [1996]), the only papers that we are aware of that does this are ones by Monz [1999] and Kuijer [2013]. Monz allows for statements that have multiple interpretations, just as we do.",
      "startOffset" : 92,
      "endOffset" : 466
    }, {
      "referenceID" : 8,
      "context" : "For example, Lewis [1982] considers assigning truth values to an ambiguous formula φ by considering all possible disambiguations of φ.",
      "startOffset" : 13,
      "endOffset" : 26
    }, {
      "referenceID" : 4,
      "context" : "Although the two notions are different—a term is vague if it is not clear what its meaning is, and is ambiguous if it can have multiple meanings, Halpern [2009] also used agent-dependent interpretations in his model of vagueness, although the issues that arose were quite different from those that concern us here.",
      "startOffset" : 146,
      "endOffset" : 161
    }, {
      "referenceID" : 1,
      "context" : "The syntax of the logic is straightforward (and is, indeed, essentially the syntax already used in papers going back to Fagin and Halpern [1994]).",
      "startOffset" : 120,
      "endOffset" : 145
    }, {
      "referenceID" : 1,
      "context" : "There are standard approaches for interpreting this language [Fagin and Halpern 1994], but they all assume that there is no ambiguity, that is, that all players interpret the primitive propositions the same way.",
      "startOffset" : 61,
      "endOffset" : 85
    }, {
      "referenceID" : 4,
      "context" : "To allow for different interpretations, we use an approach used earlier [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player.",
      "startOffset" : 72,
      "endOffset" : 110
    }, {
      "referenceID" : 3,
      "context" : "To allow for different interpretations, we use an approach used earlier [Halpern 2009; Grove and Halpern 1993]: formulas are interpreted relative to a player.",
      "startOffset" : 72,
      "endOffset" : 110
    }, {
      "referenceID" : 1,
      "context" : "An axiomatization for this case is already given in [Fagin and Halpern 1994]; there is also a complete characterization of the complexity of determining whether a formula is valid.",
      "startOffset" : 52,
      "endOffset" : 76
    }, {
      "referenceID" : 5,
      "context" : "As shown in our companion paper [Halpern and Kets 2013], the equivalence result does not hold if we consider the innermost scope semantics and restrict attention to the subclasses of M and Mc that satisfy the common-prior assumption.",
      "startOffset" : 32,
      "endOffset" : 55
    }, {
      "referenceID" : 1,
      "context" : "We interpret these formulas using a standard epistemic probability structure M = (Ω, (Πj)j∈N , (Pj)j∈N , π), with a common interpretation π, as in [Fagin and Halpern 1994].",
      "startOffset" : 147,
      "endOffset" : 171
    }, {
      "referenceID" : 6,
      "context" : "” As we mentioned earlier, this view is closer to that of Lewis [1982] and Kuijer [2013].",
      "startOffset" : 58,
      "endOffset" : 71
    }, {
      "referenceID" : 6,
      "context" : "” As we mentioned earlier, this view is closer to that of Lewis [1982] and Kuijer [2013]. It would involve a nontrivial change to our framework to capture this.",
      "startOffset" : 75,
      "endOffset" : 89
    } ],
    "year" : 2014,
    "abstractText" : "Standard models of multi-agent modal logic do not capture the fact that information is often ambiguous, and may be interpreted in different ways by different agents. We propose a framework that can model this, and consider different semantics that capture different assumptions about the agents’ beliefs regarding whether or not there is ambiguity. We examine the expressive power of logics of ambiguity compared to logics that cannot model ambiguity, with respect to the different semantics that we propose.",
    "creator" : "LaTeX with hyperref package"
  }
}