{
  "name" : "1604.00162.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ "Christian Straßer" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n60 4.\n00 16\n2v 1\n[ cs\n.A I]\n1 A\npr 2\n01 6"
    }, {
      "heading" : "1 Introduction",
      "text" : "There is a a plenitude of logical approaches to the modelling of defeasible reasoning known as nonmonotonic logics (in short, NMLs). These approaches often use different methods, representational formats or key ideas, making it sometimes difficult to compare them, e.g. with respect to the consequence relations they give rise to. Such comparisons are important to systematise the field of NMLs and to gain insights into which forms of defeasible reasoning are expressible in which formal frameworks. An important tool for such comparisons are translations between systems of NML. If one system (or a fragment thereof) is translatable into another system we immediately know that the latter system is at least as expressive as the former. Moreover, this may lead to forms of cross-fertilisation, since meta-theoretic properties become transferable between the translated systems.\nIn this contribution we will investigate several such translations. Given the richness of the domain of NMLs, we approach the topic from a specific angle. Our focus will be on structured argumentation, on the one hand, and NMLs that model defeasible inferences in terms of strict inference rules and defeasible assumptions, on the other hand. As a\n*The research of the authors was supported by a Sofja Kovalevkaja award of the Alexander von Humboldt-Foundation, funded by the German Ministry for Education and Research. Copyright © 2015, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nside product, the translation will also cover a significant subclass of NMLs in the KLM paradigm based on preferential semantics [18, 12].\nAt least since Dung introduced abstract argumentation [8], formal argumentation has been an important sub-domain of NML. While in abstract argumentation arguments are not phrased in a formal language and the underlying inferences are not explicated, several systems of structured or instantiated formal argumentation have been developed which overcome this limitation (cf. [5] for a partial overview). In this paper we will focus on two of the most prominent accounts: assumption-based argumentation (in short, ABA) [7, 10, 20] and ASPIC+ [16, 14].\nOne of the key differences between several formal approaches to defeasible reasoning concerns the question of how to model defeasible inferences. Let A1, . . . , An B denote the defeasible inference from A1, . . . , An to B. The question is whether such an inference should be phrased in terms of a strict inference rule or a defeasible one. A strict inference rule allows for no exceptions: if its premises A1, . . . , An are true, the consequent B is true as well. In contrast, defeasible rules allow for exceptions, that is, under specific circumstances it may hold that all premises A1, . . . , An of the rule hold while the consequent B doesn’t. Clearly, in the approach with strict rules defeasibility has to enter in a different way. One way is by means of explicitly stated defeasible assumptions As1, . . . ,Asm, i.e., specific premises which are assumed to hold by default and which can serve as antecedents of strict rules. An inference is retracted in case there is a demonstration that one of the defeasible assumptions As1, . . . ,Asm doesn’t hold.\nABA follows the approach based on strict rules and defeasible assumptions. In ASPIC+ both approaches can be represented. Not surprisingly, ABA has been shown to be translatable to ASPIC+ [16]. In this paper we will show the other (perhaps more surprising) direction, namely that ASPIC+ (without priorities) can be translated into ABA and thus that both frameworks are equi-expressive.\nThere are several nonmonotonic systems that model defeasible inference by means of strict rules. Among them are adaptive logics (in short, ALs) [4], Makinsons’ default assumptions and forms of circumscription. Makinson’s default assumptions –and in view of the translation in [22] also ALs– are a generalisations of approaches based on maximal\nconsistent subsets [17]. In view of [1] we know that there are close connections between approaches based on maximal consistent subsets and structured argumentation. In this paper the ties will be strengthened. We show that ALs can be translated into ABA and ASPIC+ and present a translation in the opposite direction for a subclass of ABA and ASPIC+.\nWe will proceed as follows: in Sections 2–5 we introduce the basic systems (ALs, preferential semantics, default assumptions, ABA, and ASPIC+). In Sections 6–8 we provide translations as indicated in Figure 1."
    }, {
      "heading" : "2 Adaptive Logics",
      "text" : "ALs are a general framework for the formal explication of defeasible reasoning. It has been applied to a multitude of defeasible reasoning forms (mainly related to questions from philosophical logic), such as nonmonotonic forms of reasoning with inconsistent information, causal discovery, inductive generalisations, abductive hypothesis generation, normative reasoning, etc. (see [19, p.86] for an overview).\nThe driving idea behind ALs is to apply defeasible inference rules under explicit normality assumptions. More specifically, given a compact Tarksi logic L (the core or lower limit logic) in a formal language L and with the derivability relation ⊢L, a set of abnormalities Ω ⊆ L is fixed. Now, whenever the core logic gives rise to Γ ⊢L A ∨ ab where ab ∈ Ω, A can be derived in the adaptive logic (based on L and Ω) on the (defeasible) assumption that ab is false.1\nIn ALs this basic idea of modeling defeasible inferences is implemented in Hilbert-style proofs. We will first explain the proof theory of ALs.2 Then we give alternative characterizations of the adaptive consequence relations that are central to prove the adequacy of our translations in subsequent sections.\nIn ALs, usual Hilbert-style proofs are adjusted in two major ways. First, to keep track of normality assumptions, proof lines in adaptive proofs are equipped with an additional column in which the abnormalities are listed that are assumed to be false. Second, different retraction mechanisms for lines\n1The disjunction ∨ is supposed to be classical. In fact, in the standard format of ALs which we consider here, the core logic is supposed to be supraclassical. Whenever non-classical logics are used as core logics, classical negation ¬ and classical disjunction ∨ are superimposed.\n2Due to spatial restrictions we will focus on the main ideas but explain some aspects of the proof theory (such as adaptive strategies) merely in a semi-formal way. For a more thorough explanation the interested reader is referred to [4, 19].\nwith abnormality assumptions that turn out mistaken are implemented in terms of so-called adaptive strategies. We will give some examples below.\nTo further explain how adaptive proofs work, it is useful to turn to a concrete example. As an illustration, we take a look at inconsistency-ALs. These are based on paraconsistent core logics such as LP or CLuN(s)3. These core logics typically do not validate disjunctive syllogism A,∼A ∨B ⊢ B since in case A is involved in a contradiction, B would not follow (then ∼A would suffice for the disjunction ∼A∨B to be true). Nevertheless, inconsistency-ALs allow for the defeasible application of disjunctive syllogism under the normality assumption that there is no contradiction in A. Hence, in inconsistency ALs the abnormalities in Ω typically have the form of a contradiction A ∧ ∼A. E.g., in paraconsistent core logics it usually holds that A,∼A∨B ⊢ B∨ (A∧∼A) and thus one can defeasibly derive B under the assumption that there is no contradiction in A. Clearly, sometimes such assumptions turn out to be mistaken in view of the given premises. Obviously, this is the case if A ∧ ∼A is derivable from the given premises. A more interesting case is given, if A∧∼A is not directly derivable but it is derivable as a member of a minimal disjunction of abnormalities. We illustrate this in the following example.\nExample 1. Suppose our core logic is a standard paraconsistent logic such as LP or CLuN(s). Let Γ = {∼p,∼q, p ∨ q, p ∨ r, q ∨ s}.\n1 ∼p PREM ∅ 2 ∼q PREM ∅ 3 p ∨ r PREM ∅ 4 q ∨ s PREM ∅ 5 p ∨ q PREM ∅ 6 r ∨ (p ∧ ∼p) 1,3,L-Inf ∅ 7 s ∨ (q ∧ ∼q) 2,4,L-Inf ∅ 8 r 6,RC {p ∧ ∼p} 9 s 7,RC {q ∧∼q} 10 r ∨ s 8,L-Inf {p ∧ ∼p} 11 r ∨ s 9,L-Inf {q ∧∼q} 12 (p ∧ ∼p) ∨ (q ∧ ∼q) 1,2,5,L-Inf ∅\nEach proof line has 4 elements: a line number, a formula, a justification and a set of abnormalities (which are assumed to be false). All inferences of the core logic L can be applied (indicated by L-Inf in lines 6, 10, 11 and 12). In lines 8 and 9 defeasible inferences are made as explained above. E.g., since at line 6 r∨(p∧∼p) is derived, at line 8 the abnormality p∧∼p is considered false and thus put in the abnormality column. The rule employed for this is called RC (rule conditional): from (l;A ∨ ab; ∆) derive (l′;A; l, RC; ∆ ∪ {ab}). When further inferences are made calling upon lines with non-empty sets of abnormalities, these abnormalities are carried over (see lines 10 and 11 where the abnormalities of lines 8 and 9 are carried over).\nThe retraction of lines in adaptive proofs is always determined in view of the minimal disjunctions of abnormalities derived at a given stage of a proof (on the empty set of abnormalities). At line 12 such a minimal disjunction of ab-\n3CLuN(s) is positive classical logic enriched by the law of the excluded middle. For an axiomatization and a semantics see [3].\nnormalities is derived. Clearly, the abnormalities assumed to be false at lines 8–11 are involved in the given disjunction. There are different retraction mechanisms for ALs: so-called adaptive strategies. According to the reliability strategy, any line with an abnormality in the assumption that is part of a minimal disjunction of abnormalities is to be retracted. Retraction is implemented by marking lines that are retracted. In this case:\nX 8 r 6,RC {p ∧ ∼p} X 9 s 7,RC {q ∧∼q} X 10 r ∨ s 8,L-Inf {p ∧ ∼p} X 11 r ∨ s 9,L-Inf {q ∧∼q}\nThere are other, less cautious, strategies. For instance, according to the minimal abnormality strategy, r ∨ s will not be retracted. The reason is as follows. If we interpret our premises strictly as normal as possible, then in view of line 12 it will be the case that either p ∧ ∼p holds (and q ∧ ∼q doesn’t), or q∧∼q holds (and p∧∼p doesn’t). In each case, one of the assumptions of line 10 or 11 is warranted. Due to space limitations, we omit the technical details. Yet another strategy is normal selections. According to it a line with the set of abnormalities ∆ is retracted (or marked) once ∨\n∆ is derived on the empty condition.\nThese retraction mechanisms provided by adaptive strategies make AL proofs dynamic: sometimes a line may get marked, later unmarked, and yet later marked again. In order to define a consequence relation we need a stable notion of derivability. It works as follows: a formula at a line l of a proof is finally derived at a stage of the proof if l is not marked and every extension of the proof in which it gets marked can be further extended such that it is unmarked again. The consequence relation of ALs is the defined as follows:\nDefinition 1. Let L be a compact Tarski logic in the formal language L, let Ω ⊆ L be a set of abnormalities, and let str ∈ {r,ma, ns} be an adaptive strategy (reliability, minimal abnormality, or normal selections). WhereΓ∪{A} ⊆ L, Γ ⊢Ω,Lstr A iff A is finally derivable in an adaptive proof from Γ.\nFor our translations alternative characterisations of the consequence relations defined in terms of final derivability in Definition 1 will be very useful. These characterisations are essentially informed by the set of minimal disjunctions of abnormalities derivable from a given premise set by the core logic L.\nDefinition 2. Where Γ ⊆ L: ΣL(Γ) is the set of all nonempty ∆ ⊆ Ω such that Γ ⊢L ∨\n∆ and for all non-empty ∆′ ⊂ ∆, Γ 0L ∨ ∆′.\nA choice set over ΣL(Γ) is a set Θ for which ∆ ∩Θ 6= ∅ for all ∆ ∈ ΣL(Γ).\nDefinition 3. Where Γ ⊆ L: ΦL(Γ) is the set of ⊂-minimal choice sets over ΣL(Γ).\nThe following facts will be useful in what follows:\nFact 1 ([19]). 1. For all choice sets Θ over ΣL(Γ) there is a Θ′ ∈ ΦL(Γ) such that Θ′ ⊆ Θ.\n2. φ ∈ ΦL(Γ) iff φ is a choice set of ΣL(Γ) and for all A ∈ φ there is a ∆A ∈ ΣL(Γ) for which {A} = ∆A ∩ φ.\nWe now give representation theorems for all three adaptive strategies, a given core logic L and a given set of abnormalities Ω.\nTheorem 1 ([4]). Γ ⊢Ω,L ma A iff for all Θ ∈ ΦL(Γ) there is a ∆ ⊆ Ω \\Θ such that Γ ⊢L A ∨ ∨ ∆.\nTheorem 2 ([4]). Γ ⊢Ω,L r A iff there is a ∆ ⊆ Ω \\ ⋃\nΣL(Γ) such that Γ ⊢L A ∨ ∨ ∆.\nTheorem 3 ([4]). Γ ⊢Ω,L ns A iff there is a Θ ∈ ΦL(Γ) and a ∆ ⊆ Ω \\Θ such that Γ ⊢L A ∨ ∨ ∆."
    }, {
      "heading" : "3 Preferential Semantics and Default Assumptions",
      "text" : "The semantics for ALs are a special but rich subclass of the well known preferential semantics as defined in [12] and [18]. As in the previous section we assume a core logic L in a formal language L and a set of abnormalities Ω ⊆ L. We also assume that the core logic L comes with an adequate model-theoretic semantics and an associated semantic consequence relation L. We write M(Γ) for the set of all models of a premise set Γ. Furthermore, where M ∈ M(Γ), Ab(M) = {A ∈ Ω | M |= A}. A model M ∈ M(Γ) is minimally abnormal iff there is no M ′ ∈ M(Γ) for which Ab(M ′) ⊂ Ab(M).\nDefinition 4. • Γ Ω,Lma A iff M |= A for every minimally abnormal model of Γ.\n• Γ Ω,L r A iff M |= A for every M ∈ M(Γ) for which all A ∈ Ab(M) are verified in some minimally abnormal model M ′ ∈ M(Γ).\n• Γ Ω,Lns A iff there is a minimally abnormal model M ∈ M(Γ) such that for all M ′ ∈ M(Γ) for which Ab(M) = Ab(M ′), M ′ |= A.\nALs in the standard format are sound and complete w.r.t. these semantics (proven e.g. in [4]):\nTheorem 4. Where Γ ∪ {A} ⊆ L and str ∈ {ma, r, ns}, Γ Ω,Lstr A iff Γ ⊢ Ω,L str A.\nIn [22], the connection between ALs and Makinson’s Default Assumption Consequence Relations (in short, DACRs) [13, chapter 2] was established. In [13, chapter 2], it is also shown that many other non-monotonic consequence relations, such as Reiter’s Closed World Assumption, Poole’s Background Constraints, etc. can be expressed as DACRs. DACRs give formal substance to the idea that, in many situations, non-monotonic reasoning makes use of a set ∆ of defeasible background assumptions in combination with the strict and explicit premises in Γ. These background assumptions are used to the extent that they are consistent with Γ. Accordingly, DACRs make use of the notion of maximal consistent subset:\nDefinition 5. Where Γ ∪ ∆ ⊆ L, Θ ⊆ ∆ is a maximal Γ-consistent subset of ∆ iff:\n• Γ ∪Θ 6⊢L A for some A ∈ L and • Γ ∪Θ′ ⊢L A for all A ∈ L and for every Θ ⊂ Θ′ ⊆ ∆.\nMCS(Γ,∆) is the set of all maximal Γ-consistent subsets of ∆.\nDefinition 6. Where Γ ∪∆ ∪ {A} ⊆ L, Γ ⊢DA,L∆ A iff for every ∆′ ∈ MCS(Γ,∆), Γ ∪∆′ ⊢L A.\nThe connection between adaptive logic and DACR’s is the following:\nTheorem 5. [22, p.10] Where Γ∪∆∪{A} ⊆ L and ∆¬ = {¬B | B ∈ ∆}, Γ ⊢DA,L∆ A iff Γ ⊢ ∆¬,L ma A."
    }, {
      "heading" : "4 Assumption-Based Argumentation",
      "text" : "ABA, thoroughly described in [7], is a formal model that allows one to use a set of plausible assumptions “to extend a given theory” [7, p.70] unless and until there are good arguments for not using such an assumption.\nInferences are implemented in ABA by means of a deductive system consisting of a language and rules formulated over this language:\nDefinition 7 (Deductive System). A deductive system is a pair (L,R) such that\n• L is a formal language (consisting of countably many sentences).\n• R is a set of inference rules of the form A1, . . . , An → A and → A, where A,A1 . . . , An ∈ L\nDefinition 8. An R-deduction from a theory Γ is a sequence B1, . . . , Bm, where m > 0 such that for all i = 1, . . . ,m: Bi ∈ Γ or there exists a A1, . . . , An → Bi ∈ R such that A1, . . . , An ∈ {B1, . . . , Bi−1}.\nDefinition 9. Where Γ ∪ {A} ⊆ L, Γ ⊢R A holds if there is an R-deduction from Γ whose last element is A.\nWe now introduce defeasible assumptions and a contrariness operator to express argumentative attacks. Given a rule system, an assumption-based framework is defined as follows:\nDefinition 10 (Assumption-based framework). An assumption-based framework is a tuple ABF = ((L,R),Γ, Ab, ) where:\n• (L,R) is a deductive system • Γ ⊆ L • ∅ 6= Ab ⊆ L is the set of candidate assumptions.\n• : Ab → L is a contrariness operator.4\nIn most structured accounts of argumentation attacks are defined between arguments which are deductions in a given deductive or defeasible system (e.g., in ASPIC+, Defeasible Logic Programming [11]) or sequents Γ ⊢L A where L is an underlying core logic ([2, 6]).5 In contrast, ABA operates at a higher level of abstraction, since attacks are defined directly on the level of sets of assumptions instead of on the level of R-deductions.6 ABA can thus be viewed as\n4Note that does not denote the set theoretic complement. 5The former are sometimes referred to as rule-based and the latter as logic-based systems of argumentation. 6Some formulations of ABA define attacks on the level of individual arguments. However, since attacks are only possible ‘on’ assumptions, these formulations are equivalent (cf. also [20]).\noperating on the level of equivalence classes consisting of arguments generated using the same assumptions.\nDefinition 11 (Attacks). Given an assumption-based framework ABF = ((L,R),Γ, Ab, ):\n• a set of assumptions ∆ ⊆ Ab attacks an assumption A ∈ Ab iff Γ ∪∆ ⊢R A.\n• a set of assumptions ∆ ⊆ Ab attacks a set of assumptions ∆′ ⊆ Ab iff Γ ∪∆ ⊢R A for some A ∈ ∆′.\nConsequences of a given assumption-based framework are determined with the use of argumentation semantics. On the basis of argumentative attacks, semantics determine sets of assumptions that are acceptable given different criteria of acceptability, such as the requirement that a given set of assumption should not attack itself, or it should be able to defend itself against attacks by other sets of assumptions. Argumentation semantics have been phrased for abstract frameworks in [8] and have been generalised to the level of ABA in e.g. [7].\nDefinition 12 (Argumentation semantics). Where ∆ ⊆ Ab:\n• ∆ is closed iff ∆ = {A ∈ Ab | Γ ∪∆ ⊢R A}. • ∆ is conflict-free iff for every A ∈ Ab,∆ ∪ Γ 6⊢R A or ∆ ∪ Γ 6⊢R A.\n• A closed set ∆ is naive iff it is maximally (w.r.t. set inclusion) conflict-free.\n• A closed set of assumptions ∆ ⊆ Ab is admissible iff it is conflict-free and for each closed set of assumptions ∆′ ⊆ Ab, if ∆′ attacks ∆, then ∆ attacks ∆′.\n• A set ∆ is preferred iff it is maximally (w.r.t. set inclusion) admissible.\n• ∆ is stable iff it is closed, conflict-free and attacks every a ∈ Ab \\∆.\nWe write niv(ABF), prf(ABF) resp. stb(ABF) for the set of naive, preferred resp. stable sets of assumptions in ABF.\nExample 2. Let Ab = {q,¬p ∨ ¬q}, Γ = {p}, let the rule system R characterize classical logic and A = ¬A (where ¬ is classical negation). Then there are two preferred sets: {¬p∨¬q}, {q}. To see this note that e.g. Γ∪{¬p∨¬q} ⊢R ¬q and Γ ∪ {q} ⊢R ¬(¬p ∨ ¬q).\nWe are now in a position to define various consequence relations for ABA:\nDefinition 13. Given an assumption-based framework ABF = ((L,R),Γ, Ab, ) and sem ∈ {niv, prf, stb}:\n• ABF ⊢∪ sem A iff Γ∪∆ ⊢R A for some ∆ ∈ sem(ABF). • ABF ⊢∩sem A iff Γ∪∆ ⊢R A for every ∆ ∈ sem(ABF). • ABF ⊢⋓sem A iff Γ ∪ ⋂ {∆ | ∆ ∈ sem} ⊢R A.\n5 ASPIC+\nIn ASPIC+, as in ABA, inferences made on the basis of a strict knowledge base can be extended with additional inferences based on plausible assumptions. However, whereas in ABA attacks and extensions where defined directly on the level of these assumptions, in ASPIC+, arguments are specific deductions. More precisely, arguments are constructed\nfrom a knowledge base using an argumentation system. An argumentation system is a generalisation of a deductive system (Def. 7) that allows for a distinction between strict (i.e. deductive or safe) and defeasible rules.7\nDefinition 14 (Defeasible Theory). Given a formal language L, a defeasible theory R = (L,S,D) consists of (where A1, . . . , An, B ∈ L):\n• a set of strict rules S of the form A1, . . . , An → B • a set of defeasible rules D of the form A1, . . . , An ⇒ B.\nWe also assume there is a naming function N : S ∪ D → L s.t. every rule r ∈ S ∪ D gets assigned a unique name. A1, . . . , An are called the antecedents and B is called the consequent of A1, . . . , An → B resp. A1, . . . , An ⇒ B.\nDefinition 15 (Argumentation System). Given a defeasible theory R, an argumentation system is a tuple AS = (R, ) where is a contrariness function from L to 2L.\nArguments are built by using defeasible and/or strict rules to derive conclusions from a knowledge base. A knowledge base consists of strict and plausible premises. Kn is the set of all (necessary) axioms, i.e. premises that are considered to be outside the reach of argumentative attacks. Ka has an analogous function to the defeasible assumptions in ABA: they are deemed plausible in that they are assumed to be true unless and until a counterargument is encountered.\nDefinition 16 (Knowledge Base). A Knowledge Base is a set K, where K = Kn ∪Ka and Kn ∩ Ka = ∅.\nDefinition 17 (Arguments). Let AS = (R, ) be an argumentation system and K = Ka ∪ Kn a knowledge base. An argument a is one of the following:\n• a premise argument 〈A〉 if A ∈ K • a strict rule-argument 〈a1, . . . an 7→ B〉 if a1, . . . an (with n > 0) are arguments such that there exists a strict rule conc(a1), . . . conc(an) → B ∈ S.\n• a defeasible rule-argument 〈a1, . . . an ⇛ B〉 if a1, . . . an (with n > 0) are arguments such that there exists a defeasible rule conc(a1), . . . conc(an) ⇒ B.\nWe will use Arg(AS,K) to denote the set of all arguments that can be built from a knowledge base K using an argumentation system AS.\nExample 3. Let S = {¬q → ¬p}, D = {¬p ⇒ s}, Kn = {¬s}, and Ka = {¬q,¬p, q}. We have, e.g., the following arguments:\na1 = 〈¬q〉 a4 = 〈a3 ⇛ s〉 a7 = 〈¬s〉 a2 = 〈¬p〉 a5 = 〈a2 ⇛ s〉 a3 = 〈a1 7→ ¬p〉 a6 = 〈q〉\n7In the ASPIC+ framework of [16], there is also the possibility to add a preference ordering over the premises and/or defeasible rules. Similar generalisations exist for ALs and approaches based on maximal consistent subsets and their generalisations such as Makinsons’ default assumptions. We will present investigations into translations for systems with priorities at a future occasion. In our presentation, we also disregard a special type of premise called ‘issue’ in the context of ASPIC+. Issues are premises that are never acceptable in the sense that they always require further backup by additional arguments.\nDefinition 18. Where a is an argument a = 〈B〉, a = 〈a1, . . . an 7→ B〉 or a = 〈a1, . . . an ⇛ B〉, we define:\n• conc(a) = B\n• sub(a) = sub(a1) ∪ . . . ∪ sub(an) ∪ {a}\n• where a is a premise argument: prem(a) = {A}\n• where a is not a premise argument: prem(a) = {prem(a′) | a′ ∈ sub(a)}.\nThe distinction between strict and defeasible rulearguments allows us to define a variety of attack forms:\nDefinition 19 (Attacks). Where a, b ∈ Arg(AS,K), a attacks b (in signs, a b) iff\n• conc(a) ∈ B for some B ∈ prem(b)∩Ka (Undermining).\n• conc(a) ∈ B′ for some b′ ∈ sub(b) such that conc(b′) = B′ and b′ is of the form 〈b′1, . . . , b ′ n ⇛ B ′〉 (Rebut). • conc(a) = b′ for some b′ ∈ sub(b) such that b′ is a defeasible argument (Undercut).\nExample 4 (Ex. 1, contd). Where A = {B | B ≡ ¬A} for every A ∈ L, we have: a1 a6, a6 a1, a6 a3, a6 a4, a7 a4, a7 a5.\nDefinition 20 (Structured Argumentation Framework). A structured argumentation framework AT = (Arg(AS,K), ) is a pair where Arg(AS,K) is the set of arguments built from K using the argumentation system AS and is an attack relation over Arg(AS,K).\nGiven a structured argumentation framework, we can again make use of Dung’s argumentation semantics to define different notions of acceptable sets of arguments.\nDefinition 21 (Argumentation Semantics). Given a structured argumentation framework AT = (Arg(AS,K), ), where B ⊆ Arg(AS,K),\n• B is conflict-free iff there is no a, b ∈ B such that a b\n• B is naive iff it is maximally conflict-free.\n• B defends a ∈ A iff for every c ∈ A for which c a, there is a b ∈ B such that b c.\n• B is admissible iff it is conflict-free and it defends every argument a ∈ B\n• B is preferred iff it is maximally (w.r.t. set inclusion) admissible.\n• B is stable iff it is conflict-free and for every a ∈ Arg(AS,K) \\ B, B a.\nWe write niv(AT), prf(AT) resp. stb(AT) for the set of naive, preferred resp. stable sets of arguments in AT.\nDefinition 22. Where AT = (Arg(AS,K), ) is a structured argumentation framework and sem ∈ {niv, prf, stb},\n• AT ⊢∪ sem A iff there is an a ∈ B with conc(a) = A for some B ∈ sem(AT).\n• AT ⊢∩sem A iff for every B ∈ sem(AT) there is an a ∈ B with conc(a) = A.\n• AT ⊢⋓sem A iff there is an a ∈ B with conc(a) = A for every B ∈ sem(AT)."
    }, {
      "heading" : "6 Translating Adaptive Logic to Assumption-Based Argumentation",
      "text" : "The idea of the translation from ALs to ABA is the following. We translate the lower limit logic L of the given AL into a deductive system, plausible assumptions are negations of abnormalities, and the contrariness operator is classical negation. Recall that the lower limit logic is a supraclassical Tarski logic. Hence, there are classical negation ¬ and classical disjunction ∨ in the underlying language of L. In the remainder of this section we will use ¬ and ∨ denoting these classical connectives.\nWe now go through the technical details of our translation.\nDefinition 23. Let AL be an AL with the lower limit logic L in a formal language L and the consequence relation ⊢L, the set of abnormalities Ω ⊆ L and a strategy str (reliability, minimal abnormality, or normal selections). Let L be characterised by the rules in R and the axiom schemes in A. We the define the assumption based framework ABFΩL(Γ) for the premise set Γ ⊆ L as the tuple ABFΩL(Γ) = ((L,R(L)),Γ, AbΩ, ) where:\n• R(L) contains all instances of rules in R and a rule → A for all instances A of axiom schemes in A;8\n• AbΩ = {¬A | A ∈ Ω}\n• : AbΩ → L, where ¬A = A\nBelow we show the following representational theorem:\nTheorem 6. Where Γ∪{A} ⊆ L and sem ∈ {niv, prf, stb},\n1. ABFΩ L (Γ) ⊢∪ sem A iff Γ ⊢Ω,L ns A 2. ABFΩL(Γ) ⊢ ∩ sem A iff Γ ⊢ Ω,L ma A 3. ABFΩ L (Γ) ⊢⋓ sem A iff Γ ⊢Ω,L r A.\nTo avoid clutter we introduce some notational convention:\nNotation 1. Where ∆ ⊆ Ω, ∆¬ = {¬A | A ∈ ∆} and ∆¬ = ∆.\nThe following fact follows immediately in view of the compactness and the transitivity of L.\nFact 2. Where Γ ∪ {A} ⊆ L, Γ ⊢R(L) A iff Γ ⊢L A.\nIn view of this fact, we will indiscriminately use ⊢ as ⊢R(L) and ⊢L. Note that in view of the supraclassicality of L we have:\nFact 3. Γ ∪∆¬ ⊢ A iff Γ ⊢ ∨ ∆¬ ∨ A.\nWe now established that every instantiation of an AL is indeed an assumption-based framework. We prove that the three consequence relations of ALs correspond to intuitive ways of calculating consequences in ABA. The crucial result to prove this is the fact that every preferred extension in some assumption-based framework ABFΩL(Γ) is exactly the set of negations of abnormalities excluding some choice set over the derivable abnormalities. This is shown in the following lemmas.\nLemma 1. Where φ ∈ ΦL(Γ), AbΩ \\ φ¬ is stable in"
    }, {
      "heading" : "ABF",
      "text" : "Ω L(Γ).\n8If no axiomatisation of L is given, we can proceed more brute force and set R = {A1, . . . , An → A | {A1, . . . , An} ⊢L A}.\nProof. We first show that ∆¬ = AbΩ \\ φ¬ is conflict-free. Assume for a contradiction that it is not and hence that there is a B ∈ Ω for which Γ∪∆¬ ⊢ B,¬B. Hence, by the compactness of L and Fact 3, Γ ⊢ ∨\nΘ for some finite Θ ⊆ ∆. Let Θ be ⊂-minimal with this property. Hence, Θ ∈ ΣL(Γ). However, then φ ∩Θ 6= ∅, a contradiction.\nWe now show that ∆¬ is stable. For this, let ¬B ∈ AbΩ \\ ∆¬. Hence, B ∈ φ. With Fact 1.2, there is a Θ ∈ ΣL(Γ) such that {B} = φ ∩ Θ. Since Γ ⊢ ∨\nΘ, by Fact 3 also Γ∪ (Θ¬ \\ {¬B}) ⊢ B. By the monotonicity of L, Γ∪∆¬ ⊢ B which means that ∆ attacks B.\nSince∆¬ is conflict-free and attacks everyA ∈ AbΩ\\∆¬, it is easy to see that ∆¬ is closed and stable.\nExample 5 (Ex. 1 contd). Take AbΩ = {¬(A ∧ ∼A) | A ∈ LCLuN} and R an adequate rule system for CLuN. Where Γ = {∼p,∼q, p ∨ q, p ∨ r, q ∨ s}. There are two stable extensions: AbΩ \\{¬(p∧∼p)} and AbΩ \\{¬(q∧∼q))}. To see this observe that e.g. Γ ∪ {¬(q ∧ ∼q)} ⊢CLuN p ∧ ∼p.\nLemma 2. If ∆¬ ⊆ AbΩ is conflict-free in ABF Ω L (Γ) then there is a φ ∈ ΦL(Γ) for which ∆ ⊆ Ω \\ φ. Proof. Suppose ∆ 6⊆ Ω \\ φ for all φ ∈ ΦL(Γ) and ∆ ⊆ Ω. By Fact 1, Ω \\ ∆ is not a choice set of ΣL(Γ). Thus, there is a Θ ∈ ΣL(Γ) for which Θ ⊆ ∆. Since Γ ⊢ ∨\nΘ, also Γ ∪ (Θ \\ {A}) ⊢ ¬A for any A ∈ Θ. Thus, Γ ∪ ∆ is not L-consistent since Γ∪∆ ⊢ A,¬A by monotonicity. By Fact 2, Γ ∪ ∆ ⊢R(L) A,¬A and thus, ∆ is not conflict-free in"
    }, {
      "heading" : "ABF",
      "text" : "Ω L (Γ).\nWith Lemmas 1 and 2 we immediately get:\nLemma 3. Where Γ ⊆ L, {AbΩ \\ φ¬ | φ ∈ ΦL(Γ)} = stb(ABFΩL(Γ)) = prf(ABF Ω L(Γ)) = niv(ABF Ω L(Γ))\nWe are now in a position to prove our main result in this section: Proof of Theorem 6. In view of Lemma 3 it is enough to show the theorem for sem = stb.\nAd 3. ABFΩL(Γ) ⊢ ⋓ stb A iff Γ ∪ ⋂ {∆ | ∆ ∈ stb(ABFΩL(Γ))} ⊢ A. By Lemma 1, this is the case iff Γ ∪ ⋂\n{(Ω \\ φ)¬ | φ ∈ ΦL(Γ)} ⊢ A. Since ⋃\nΦL(Γ) = ⋃\nΣL(Γ) (which is easy to see and left to the reader), this is equivalent to Γ∪ (Ω\\ ⋃ ΣL(Γ)) ¬ ⊢ A. By compactness, monotonicity and Fact 3, this is equivalent to Γ ⊢ A ∨ ∨ ∆ for some finite ∆ ⊆ Ω \\ ⋃\nΣL(Γ). By Theorem 2 this is equivalent to Γ ⊢Ω,Lr A.\nAd 1. and 2. Analogous.\nTranslating Adaptive Logic to ASPIC+\nIn [16] we have a translation from ABA to ASPIC+. Although this translation requires several assumptions that"
    }, {
      "heading" : "ABF",
      "text" : "Ω L (Γ) does not satisfy, it turns out that it is easy\nto prove that any ABFΩ L (Γ) can easily be translated to an assumption-based framework that does satisfy these assumptions.\nThe underlying idea is basically the same as that for translating AL into ABA: the plausible knowledge base consists of the negated abnormalities, the strict premises of the ASPIC+ framework are the premise set Γ and the strict rules\nof the ASPIC+ framework are the inference rules of the monotonic core logic. Due to spatial restrictions, we are not able to present the full technical details of this translation and the adequacy results here.\n7 Translating ASPIC+ to Assumption-Based Argumentation\nIn this section we translate ASPIC+ to ABA. Since in ABA we have no defeasible rules and less attack types than in ASPIC+ the possibility of this translation is less expected than the translation in the other direction (as provided in [16]). In this section we thus offer an answer to the open question stated in [14] whether such a translation can be given. Our translation works as follows:\nDefinition 24. Where AS = (R, ) is an argumentation system in the formal language L with a naming function N for the rules in R and K = Kn ∪ Ka is a knowledge base, we translate AS into an assumption-based framework ABF(AS) = ((L′,R),Kn, Ab, ) as follows9\n• L′ ⊇ L is such that L′ \\ L contains for each r in R a unique name n(r) and its contrary n(r);10\n• R contains each strict rule from R and for each defeasible rule r : A1, . . . , An ⇒ A it contains11\n– the rule n(r), A1, . . . , An → A\n– the rule A → n(r) • Ab = Ka ∪ {n(r) | r is a defeasible rule in R}\nBelow we will show that the translation is adequate in view of the following corollary:\nCorollary 1. Where AT = (Arg(AS,K), ) is a structured argumentation framework and sem ∈ {stb, prf},\n1. ABF(AS) ⊢∪ sem A iff AT ⊢∪ sem A 2. ABF(AS) ⊢∩ sem A iff AT ⊢∩ sem\nA. 3. ABF(AS) ⊢⋓\nsem A iff AT ⊢⋓ sem A.\nIn the following we suppose a given argumentation system AS and its translation ABF(AS) as in Definition 24.\nDefinition 25. Where ∆ ⊆ Ab, Arg∆ ⊆ Arg(AS,K) is the set of all arguments a that use only defeasible assumptions in ∆, any strict rules, and only defeasible rules r for which n(r) ∈ ∆.\nWhere A ⊆ Arg(AS,K) is a set of arguments,AbA ⊆ Ab is the set of assumptions consisting of (1) defeasible assumptions A ∈ Ka for which prem(a) = A or conc(a) = A for\n9For simplicity, we will assume that the contrariness function of the ASPIC+-framework assigns a unique contrary to every A ∈ L. If this assumption is not satisfied, one has to add Ac1 → −A, . . . , A c n → −A for every A c i ∈ Ā, where −A ∈ L ′\\L is the contrary of A in ABA, as suggested by [20, p.109]. 10Formally: L′ \\ L = {n(r) | r in R} ∪ {n(r) | r in R} (where\n{n(r) | r in R} ∩ {n(r) | r in R} = ∅). This warrants that, unlike the names N(r) ∈ L used in AS, the new names n(r) are not antecedents and consequents of rules in R. We use the new names to ’simulate’ defeasible rules in ABA.\n11We suppose that the rules in R are instances as opposed to schemes. The translation can easily be adjusted to schemes.\nsome a ∈ A and (2) of n(r) where r is a defeasible rule used in some argument in A.\nWhere A is a set of arguments in Arg(AS,K), A⋆ denotes the set ArgAbA .\nWe sometimes write Aba instead of Ab{a}.\nFact 4. Where A ⊆ Arg(AS,K) is a set of assumptions, A ⊆ A⋆.\nLemma 4. Where A 6= n(r) for any r in R and ∆ ⊆ Ab, if Kn ∪∆ ⊢R A then\n1. if A ∈ L, there is an a ∈ Arg∆ such that conc(a) = A,\n2. else (if A = n(r)), there is an a ∈ Arg∆ for which conc(a) = B where B is the consequent of r. Proof. This can be shown by an induction on the length of a deduction from Kn ∪∆ to A. Base step: this is trivial since A ∈ K. Inductive step. We have three possibilities: 1. A is the result of applying a strict rule r in R to A1, . . . , An, or\n2. A is the result of applying the translation of a defeasible rule r = A1, . . . , An ⇒ A ∈ R to A1, . . . , An and the rule name n(r), or\n3. A = n(r) is the result of applying a rule B → n(r) where B is the consequent of the defeasible rule r in R. Ad 2. By the induction hypothesis there are arguments ai (1 ≤ i ≤ n) s.t. ai ∈ Arg∆ and conc(ai) = Ai. (Note here that Ai /∈ L′ \\ L.) Clearly, a = 〈a1, . . . , an ⇛ A〉 ∈ Arg∆ since n(r) ∈ ∆. Ad 1. Analogous. Ad 3. By the induction hypothesis and since B ∈ L, there is an argument a ∈ Arg∆ with conc(a) = B.\nThe other direction of Lemma 4.1 follows immediately in view of Definition 25:\nFact 5. Where A ⊆ Arg(AS,K), if there is an a ∈ A with conc(a) = A then Kn ∪ AbA ⊢R A.\nLemma 5. Where A ⊆ Arg(AS,K), if A is admissible then A⋆ is admissible. Proof. Suppose there are a and b ∈ A⋆ s.t. a attacks b. For each attack form it is easy to see that then there is a b′′ ∈ A s.t. a attacks b′′. Take, for instance, rebuttal. Then conc(a) = B ′ where B′ = conc(b′) for some b′ ∈ sub(b). Hence, there is a defeasible rule r which is applied in b′ to produce B′. By the definition of ArgAbA there is an argument b′′ ∈ A s.t. r is applied to produce conc(b′′) = B′. For the other attack types (undercuts and undermines) this is shown in an analogous way. Now, since A is admissible, there is a c ∈ A s.t. c attacks a. Since by Fact 4, c ∈ A⋆, also A⋆ is defended. To show that A⋆ is conflictfree, assume for a contradiction that a ∈ A⋆. Since a attacks b′′ ∈ A, A attacks a (due to the admissibility of A). However, in view of the fact that A and A⋆ make use of the same defeasible assumptions and defeasible rules and A attacks a in one of the two, this leads to a selfattack in some argument a′ ∈ A. E.g., suppose A undermines a in some B ∈ prem(a). Then B ∈ AbA. Hence there is an argument a′ ∈ A with B ∈ prem(a′) and A attacks a′. Since A is conflict-free, this is a contradiction.\nLemma 6. Where A = A⋆ ⊆ Arg(AS,K), AbA is closed.\nProof. Suppose A = A⋆ and Kn ∪ AbA ⊢R A for some A ∈ Ab. We have two possibilities: (1) A = n(r) for some r in R or (2) A ∈ Ka. Ad 1. Since there are no rules with consequent n(r), n(r) ∈ AbA. Ad 2. By Lemma 4, there is an a ∈ A⋆ = A with conc(a) = A. Hence, by the definition of AbA, A ∈ AbA.\nLemma 7. Where A = A⋆ ⊆ Arg(AS,K), if A is admissible then AbA is admissible.\nProof. Suppose A = A⋆. By Lemma 6, AbA is closed. Suppose AbA is not conflict-free. Hence, Kn ∪ AbA ⊢R A for some A ∈ AbA. We use Lemma 4 according to which we have two cases. Case 1: there is an a ∈ A⋆ s.t. conc(a) = A. Since A = A⋆, a ∈ A and A is not conflict-free. Case 2: A = n(r) and there is an a ∈ A for which conc(a) = B where B is the consequent of r. Since n(r) ∈ AbA, there is an argument a′ ∈ A which uses rule r to produce conc(a′) = B and which is thus rebut-attacked by a. Again, A is not conflict-free. Thus, we have shown (by contraposition) that if A is conflict-free then AbA is conflict-free.\nSuppose A is admissible, ∆ is closed and attacks AbA. Hence, Kn ∪ ∆ ⊢R A for some A ∈ AbA. By Lemma 4 we have two cases. Case 1: there is an a ∈ Arg∆ s.t. conc(a) = A. Hence, A 6= n(r) for any r ∈ R. Clearly, a attacks A. Since A is admissible, there is a b ∈ A s.t. b attacks a. Then Abb ⊆ AbA and Kn ∪ Abb ⊢R conc(b). Thus, Abb attacks Aba and hence AbA attacks ∆.\nCase 2: A = n(r) and there is an a ∈ Arg∆ s.t. conc(a) = B where B is the consequent of r. In this case there is an a′ ∈ A which uses rule r and hence conc(a′) = B. Since A is admissible, there is a c ∈ A that attacks a. But then ∆c ⊆ AbA attacks ∆a and hence AbA attacks ∆.\nLemma 8. If ∆ ⊆ Ab is admissible, then Arg∆ is admissible.\nProof. Similar to the previous proof.\nTheorem 7. 1. If ∆ is preferred (resp. stable) then Arg∆ is preferred (resp. stable).\n2. If A is preferred (resp. stable) then ∆ is preferred (resp. stable) for some ∆ ⊇ AbA for which Arg∆ = A.\nProof. Ad.1 Suppose ∆ is preferred. Then, by Lemma 8, Arg∆ is admissible. Suppose there is an A\n′ ⊃ Arg∆ that is admissible, then by Lemma 7, also AbA′ is admissible. Since ∆ ⊂ AbA′ this is a contradiction.\nAd.2 Suppose A is preferred. By Lemma 5 and since trivially A ⊆ A⋆, A = A⋆. By Lemma 7, AbA is admissible. Now suppose that there is a ∆ ⊃ AbA that is admissible. Then by Lemma 8, Arg∆ is admissible. Clearly A ⊆ Arg∆. By the maximality of A, A = Arg∆.\nDue to space limitations we omit the proof for stable extensions.\nCorollary 1 follows directly with Theorem 7, Lemma 4 and Fact 5."
    }, {
      "heading" : "8 Translating Assumption-based Argumentation to Adaptive Logic",
      "text" : "In this section we will translate a fragment of assumptionbased argumentation to adaptive logic.\nIn the following we write ABAAbR (Γ)for the assumptionbased framework ((L,R),Γ, Ab, ).\nFor our translation we will use some connectives from Kleene’s well-known 3-valued logic K3 (see Table 1) and superimpose them on a logic that is characterised by the rules in R. This works as follows.\nWe define the 3-valued logic L3R semantically in the following way: we superimpose on the language L the operators ∼ and ∨ (which are supposed to not occur in the alphabet of L) resulting in the set of well-formed formulas L3R. The operators are characterised by the truth tables in\nTable 1.12\nA A 1 0 0 1 u u\nA ∼A 1 0 0 1 u 1\n∨ 1 0 u 1 1 1 1 0 1 0 u u 1 u u\nTable 1: Truth-tables for , ∼ and ∨.\nDefinition 26. v : L → {0, 1, u} is a function which respects the truth-table for (i.e., v(A) = 1 iff v(A) = 0, v(A) = 0 iff v(A) = 1, and v(A) = u iff v(A) = u). The valuation function vM : L3R → {0, u, 1} is defined inductively as follows:\n1. where A ∈ L, vM (A) = v(A) 2. vM (∼A) = 0 iff vM (A) = 1, and vM (∼A) = 1 else. 3. vM (A ∨B) = max(vM (A), vM (B)) where 0 < u < 1.\nWe write M |= A iff vM (A) = 1 (so 1 is the only designated value). We write L3\nR for the resulting consequence relation.\nWe now use L3R as a lower limit logic for an adaptive logic with the set of abnormalties:\nNotation 2. Ω∼Ab = {∼A | A ∈ Ab}.\nWe translate the rules of R as follows: A1, . . . , An → B is translated to ∼A1 ∨ . . . ∨ ∼An ∨B.\nNotation 3. Where R is a set of rules, we write R∼ for the set of translated rules.\nOur two main representational results in this section are (to be proven below):\nTheorem 8. Where Γ ∪ {A} ⊆ L, and sem = niv,\n1. ABAAbR (Γ) ⊢ ∪ sem\nA iff Γ ∪R∼ Ω ∼ Ab ,L3 R ns A\n2. ABAAbR (Γ) ⊢ ∩ sem A iff Γ ∪R\n∼ Ω∼ Ab ,L3R\nma A\n3. ABAAbR (Γ) ⊢ ⋓ sem A iff Γ ∪R∼ Ω\n∼ Ab ,L3\nR r A\n12In the terminology of [21], Our negation ∼ corresponds to Bochvar’s ’external negation’ and corresponds to Kleene’s negation in his K3. Our disjunction ∨ is Kleene’s strong disjunction. The requirement of supraclassicality for L3R to serve as a core logic for an AL is satisfied in view of the 〈∨,∼〉-fragment of L3R.\nWe can strengthen our result if we suppose that the rule system based on R satisfies the following requirement: where Γ ∪ {A} ⊆ L,\nEX Where ∆ ⊆ Ab is naive in ABAAbR (Γ) andA ∈ Ab\\∆, Γ ∪∆ ⊢R A.\nThis criterion ensures that every naive set is stable.\nTheorem 9. Where Γ ∪ {A} ⊆ L: if ABAAbR (Γ) satisfies (EX), items 1–3 in Theorem 8 hold for sem ∈ {niv, prf, stb}.\nWe are now going to prove the two theorems above. The following notation will be convenient to avoid clutter:\nNotation 4. ∆∼ = {∼ A | A ∈ ∆}.\nThe following facts will be useful below:\nFact 6. Where Γ ∪ ∆ ∪ {A} ⊆ L3R, (i) A L3R ∼A, (ii) Γ L3\nR\n∨\n∆∼ ∨A iff Γ ∪∆ L3 R A.\nL 3 R is obviously a compact Tarski logic.\nWe say that Γ ⊆ L is R-consistent iff there is no A such that Γ ⊢R A,A.\nLemma 9. Where Γ ∪ {A} ⊆ L,"
    }, {
      "heading" : "1. Γ ⊢R A implies Γ ∪R∼ L3",
      "text" : "R A 2. if Γ is R-consistent, Γ ∪R∼ L3 R A implies Γ ⊢R A. Proof. Ad 1. Simple induction on the number of proof steps. We show the induction step. Let M be a model of Γ ∪ R∼. Suppose A follows by means of the application of a rule A1, . . . , An → B. By the induction hypothesis, M |= A1, . . . , An. Also, M |= ∼A1 ∨ . . . ∨ ∼An ∨ B. Hence, with the truth-tables for ∼ and ∨, M |= B.\nAd 2. Suppose Γ 0R A. We now construct a countermodel M of Γ ∪R∼ for A as follows. Let\nv : B 7→\n\n\n 1 Γ ⊢R B 0 Γ ⊢R B u else\nNote that v(A) ∈ {u, 0} and hence M 6|= A. We have to show that M is a model of Γ∪R∼. Since Γ is R-consistent, the definition warrants that the truth-table for is respected by v. We thus only have to check whether M verifies all formulas in Γ∪R∼. As for Γ this holds trivially since every B ∈ Γ is such that Γ ⊢R B and thus v(B) = 1. Let now A1, . . . , An → B ∈ R. We have to check whether M |= ( ∨n\ni=1 ∼Ai )\n∨ B. Assume the opposite. Thus vM (Ai) = 1 (1 ≤ i ≤ n) and vM (B) ∈ {0, u}. But then Γ ⊢R Ai (1 ≤ i ≤ n) and thus Γ ⊢R B. Hence, vM (B) = 1, a contradiction.\nWe say that a Γ is L3R-consistent, if there is a A ∈ L 3 R for\nwhich Γ 6 L3 R A.13 Lemma 10. Where Γ ⊆ L, if Γ is R-consistent then Γ∪R∼ is L3R-consistent. Proof. Suppose Γ is R-consistent. Then Γ 0R A,A for any A ∈ L. By Lemma 9, also Γ ∪ R∼ 1L3\nR A,A for any\nA ∈ L. 13Or equivalently and analogous to the R-consistency: if there is no A ∈ LL s.t. Γ 6 L3 R A,¬A.\nLemma 11. Where Γ ⊆ L: ∆∼ ⊆ Ω∼Ab \\ φ for some φ ∈ ΦL3 R (Γ ∪R∼), if ∆ is conflict-free in ABAAbR (Γ). Proof. Suppose ∆∼ 6⊆ Ω∼Ab \\ φ for all φ ∈ ΦL3R(Γ ∪ R ∼) and ∆ ⊆ Ab. By Fact 1, Ω∼Ab \\ ∆ ∼ is not a choice set of ΣL3 R (Γ ∪R∼) which means that there is a Θ∼ ∈ ΣL3 R (Γ ∪ R∼) such that Θ ⊆ ∆. Since Γ∪R∼ L3 R ∨\nΘ∼, by Fact 6 also Γ ∪ (Θ \\ {A}) ∪R∼ L3\nR ∼A for any A ∈ Θ. Hence,\nΓ ∪∆ ∪ R∼ is not L3R-consistent since Γ ∪∆ ∪ R ∼ L3\nR\nA,∼A. Thus by Lemma 10, Γ ∪∆ is not R-consistent and thus ∆ is not conflict-free.\nLemma 12. Where Γ ⊆ L, ∆∼ = Ω∼Ab \\ φ for some φ ∈ ΦL3 R (Γ ∪R∼), ∆ is naive in ABAAbR (Γ). Proof. Suppose∆∼ = Ω∼Ab\\φ for some φ ∈ ΦL3R(Γ∪R ∼).\nWe first prove that ∆ is conflict-free. Suppose for a contradiction, there is a B ∈ Ab such that Γ ∪∆ ⊢R B,B. By Lemma 9, Γ∪∆∪R∼ L3\nR B,B. Hence, Γ∪∆∪R∼ is L3R-\ninconsistent and by Fact 6 and compactness, Γ ∪ R∼ L3 R ∨\nΘ∼ for some finite Θ ⊆ ∆. Let Θ be ⊂-minimal with this property, so that Θ∼ ∈ ΣL3\nR (Γ ∪ R∼). Since φ ∩ Θ∼ = ∅\nthis is a contradiction to the fact that φ ∈ ΦL3 R (Γ ∪R∼).\nWe now show that ∆ is closed. Assume for a contradiction that Γ ∪ ∆ ⊢R A for some A ∈ Ab \\ ∆. By Lemma 9, Γ∪∆∪R∼ L3\nR A. Note that ∼A ∈ φ. By Fact 1, there is\na Θ∼ ∈ ΣL3 R (Γ ∪ R∼) for which {∼A} = φ ∩ Θ∼. Since Γ∪R∼ L3 R ∨ Θ∼, by Fact 6, Γ∪R∼∪Θ\\{A} L3 R ∼A. By the monotonicity of L3R, Γ ∪ R ∼ ∪∆ L3 R ∼A. Thus, Γ∪∆∪R∼ is not L3R-consistent which implies by Lemma 10 that Γ ∪∆ is not R-consistent. This contradicts the fact that ∆ is conflict-free.\nThe following theorem follows immediately in view of Lemma 11 and Lemma 12: Theorem 10. Where Γ ⊆ L, ∆ is a naive extension of"
    }, {
      "heading" : "ABA",
      "text" : "Ab R (Γ) iff ∆ ∼ = Ω∼Ab \\φ for some φ ∈ ΦL3R(Γ∪R ∼). If we suppose requirement (EX), we can also prove Theorem 9. Lemma 13. Where Γ ⊆ L, R satisfies (EX), and ∆∼ = Ω∼Ab \\ φ for some φ ∈ ΦL3R(Γ ∪ R ∼), ∆ is stable in"
    }, {
      "heading" : "ABA",
      "text" : "Ab R (Γ). Proof. Suppose∆∼ = Ω∼Ab\\φ for some φ ∈ ΦL3R(Γ∪R ∼). In view of Lemma 12 we only need to show that ∆ attacks all B ∈ Ab\\∆. Let thus B ∈ Ab\\∆. By (EX),Γ∪∆ ⊢R B. Thus, ∆ attacks B.\nThe following Corollary follows immediately in view of Theorem 10 and Lemma 13. Corollary 2. Where R satisfies (EX), each naive set is stable in ABAAbR (Γ).\nIn [7], the following was defined resp. proven: Definition 27. An assumption-based framework is normal iff every naive set of assumptions is stable. Theorem 11. For any normal assumption-based framework, for any set of assumptions ∆ ⊆ Ab, ∆ is naive iff ∆ is stable iff ∆ is preferred.\nCorollary 3. If an assumption-based framework satisfies (EX), Γ ⊆ L, ∆ is a preferred, stable and naive extension of"
    }, {
      "heading" : "ABA",
      "text" : "Ab R (Γ) iff ∆ ∼ = Ω∼Ab \\φ for some φ ∈ ΦL3R(Γ∪R ∼).\nWe are now in a position to prove our two main theorems in this section. Proof of Theorems 8 and 9. [Theorem 9.1, ⇐]: Suppose that Γ ∪ R∼ Ω ∼ Ab ,L3R\nns A. By Theorem 3, there is a ∆∼ ⊆ Ω∼Ab \\ φ for some φ ∈ ΦL3R(Γ ∪ R\n∼) s.t. Γ ∪ R∼ L3\nR A ∨\n∨\n∆∼. By the monotonicity of L3R and Fact 6, Θ ∪ Γ ∪ R∼ L3\nR A where Θ∼ = Ω∼Ab \\ φ. By\nLemma 13, Θ is stable. Thus, Γ ∪ Θ is R-consistent. By Lemma 9, ABAAbR (Γ) ⊢ ∪ sem\nA. The other direction and the other cases are shown analo-\ngously."
    }, {
      "heading" : "9 Conclusion",
      "text" : "In this paper we provided translations between several prominent systems in nonmonotonic logic (see Fig. 1 for an overview). In this conclusion we discuss some benefits.\nIn view of the translation of ALs into ABA we know that ALs can be understood as forms of formal argumentation. In view of the fact that ALs are equi-expressive with the syntactically characterised preferential semantics in Sec. 3 and Makinson’s default assumptions, the same can be said about the latter two frameworks. Since a broad variety of defeasible reasoning forms in a wide range of application contexts have been explicated within the ALs family (see Sec. 2), all these reasoning forms are now available in the domain of formal argumentation. This may lead to further refinements. For instance, once embedded in ASPIC+ we gain rich resources to express preferences and priorities.\nIn view of the other direction, from a subclass of ABA to ALs, we know that this class can be understood in terms of the model-theoretic tools provided by KLM-style preferential semantics or, alternatively, as consistency management in terms of maximal consistent subsets as provided by default assumptions. This also means that meta-theoretic insights from, for instance, ALs become available for this subclass of ABA. For example, the computational complexity of ALs is well-understood [23, 15]. Moreover, properties of the AL consequence relations apply to this class of ABA. For instance, we know that adaptive consequence relations are cumulative (in the notation of Section 2, where AL is an adaptive logic, Γ,∆, {A} ⊆ L, and Γ ⊢AL B for all B ∈ ∆, Γ ⊢AL A iff Γ ∪ ∆ ⊢AL A). For a study of meta-theoretic properties of ALs see [4, 19]. Finally, besides the available dialogue-based methods to model argumentative reasoning processes (e.g. [9]), now the dynamic proof theory of adaptive logics can also be used for this purpose.\nFinally, we complete the circle between ABA and ASPIC+ (without priorities/preferences) by providing a translation from the latter to the former, whereas the other direction has been presented in [16]. As a side-product this provides a way to phrase the defeasible rules of ASPIC+ as strict rules. This shows that the strict fragment of ASPIC+ (without strict rules and thus without rebuttals and undercuts) is equi-expressive with full ASPIC+. Such\ninsights are conceptually interesting and may simplify future meta-theoretic investigations into ASPIC+.\nIn future work we intend to generalise our investigations to approaches with priorities and preferences as provided in ASPIC+ and some generalisations of ALs. An interesting question will be, for instance, whether full ASPIC+ is translatable into lexicographic ALs [19, ch.5] or whether the latter can be translated to ABA or ASPIC+."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2016,
    "abstractText" : "In this paper we make a contribution to the unification of formal models of defeasible reasoning. We present several translations between formal argumentation frameworks and nonmonotonic logics for reasoning with plausible assumptions. More specifically, we translate adaptive logics into assumption-based argumentation and ASPIC, ASPIC into assumption-based argumentation and a fragment of assumption-based argumentation into adaptive logics. Adaptive logics are closely related to Makinson’s default assumptions and to a significant class of systems within the tradition of preferential semantics in the vein of KLM and Shoham. Thus, our results also provide close links between formal argumentation and the latter approaches.",
    "creator" : "LaTeX with hyperref package"
  }
}