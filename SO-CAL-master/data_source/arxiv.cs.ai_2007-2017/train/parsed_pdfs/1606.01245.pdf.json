{
  "name" : "1606.01245.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Scalable Algorithms for Tractable Schatten Quasi-Norm Minimization",
    "authors" : [ "Fanhua Shang", "Yuanyuan Liu", "James Cheng" ],
    "emails" : [ "jcheng}@cse.cuhk.edu.hk" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n60 6.\n01 24\n5v 1\n[ cs\n.N A\n] 4\nJ un\n2 01"
    }, {
      "heading" : "Introduction",
      "text" : "In recent years, the matrix rank minimization problem arises in a wide range of applications such as matrix completion, robust principal component analysis, low-rank representation, multivariate regression and multi-task learning. To solve such problems, Fazel, Hindi, and Boyd; Candès and Tao; Recht, Fazel, and Parrilo (2001; 2010; 2010) have suggested to relax the rank function by its convex envelope, i.e., the nuclear norm. In fact, the nuclear norm is equivalent to the ℓ1-norm on singular values of a matrix, and thus it promotes a low-rank solution. However, it has been shown in (Fan and Li 2001) that the ℓ1-norm regularization over-penalizes large entries of vectors, and results in a biased solution. By realizing the intimate relationship between them, the nuclear norm penalty also over-penalizes large singular values, that is, it may make the solution deviate from the original solution as the ℓ1-norm does (Nie, Huang, and Ding 2012; Lu et al. 2015). Compared with the nuclear norm, the Schatten-p quasi-norm for 0 < p < 1 makes a closer\nCopyright c© 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\napproximation to the rank function. Consequently, the Schatten-p quasi-norm minimization has attracted a great deal of attention in images recovery (Lu and Zhang 2014; Lu et al. 2014), collaborative filtering (Nie et al. 2012; Lu et al. 2015; Mohan and Fazel 2012) and MRI analysis (Majumdar and Ward 2011). In addition, many non-convex surrogate functions of the ℓ0-norm listed in (Lu et al. 2014; Lu et al. 2015) have been extended to approximate the rank function, such as SCAD (Fan and Li 2001) and MCP (Zhang 2010).\nAll non-convex surrogate functions mentioned above for low-rank minimization lead to some non-convex, nonsmooth, even non-Lipschitz optimization problems. Therefore, it is crucial to develop fast and scalable algorithms which are specialized to solve some alternative formulations. So far, Lai, Xu, and Yin (2013) proposed an iterative reweighted lease squares (IRucLq) algorithm to approximate the Schatten-p quasi-norm minimization problem, and proved that the limit point of any convergent subsequence generated by their algorithm is a critical point. Moreover, Lu et al. (2014) proposed an iteratively reweighted nuclear norm (IRNN) algorithm to solve many non-convex surrogate minimization problems. For matrix completion problems, the Schatten-p quasi-norm has been shown to be empirically superior to the nuclear norm (Marjanovic and Solo 2012). In addition, Zhang, Huang, and Zhang (2013) theoretically proved that the Schatten-p quasi-norm minimization with small p requires significantly fewer measurements than the convex nuclear norm minimization. However, all existing algorithms have to be solved iteratively and involve SVD or EVD in each iteration, which incurs high computational cost and is too expensive for solving large-scale problems (Cai and Osher 2013; Liu et al. 2014).\nIn contrast, as an alternative non-convex formulation of the nuclear norm, the bilinear spectral regularization as in (Srebro, Rennie, and Jaakkola 2004; Recht, Fazel, and Parrilo 2010) has been successfully applied in many large-scale applications, e.g., collaborative filtering (Mitra, Sheorey, and Chellappa 2010). As the Schatten-p quasi-norm is equivalent to the ℓp quasi-norm on singular values of a matrix, it is natural to ask the following question: can we design equivalent matrix factorization forms for the cases of the Schatten quasi-norm, e.g., p = 2/3 or 1/2?\nIn order to answer the above question, in this paper we first define two tractable Schatten quasi-norms, i.e., the Frobenius/nuclear hybrid and bi-nuclear quasi-norms. We then prove that they are in essence the Schatten-2/3 and 1/2 quasi-norms, respectively, for solving whose minimization we only need to perform SVDs on two much smaller factor matrices as contrary to the larger ones used in existing algorithms, e.g., IRNN. Therefore, our method is particularly useful for many “big data” applications that need to deal with large, high dimensional data with missing values. To the best of our knowledge, this is the first paper to scale Schatten quasi-norm solvers to the Netflix dataset. Moreover, we provide the global convergence and recovery performance guarantees for our algorithms. In other words, this is the best guaranteed convergence for algorithms that solve such challenging problems."
    }, {
      "heading" : "Notations and Background",
      "text" : "The Schatten-p norm (0 < p < ∞) of a matrix X ∈ Rm×n (m ≥ n) is defined as\n‖X‖Sp , ( n∑\ni=1\nσpi (X)\n)1/p ,\nwhere σi(X) denotes the i-th singular value of X . When p = 1, the Schatten-1 norm is the well-known nuclear norm, ‖X‖∗. In addition, as the non-convex surrogate for the rank function, the Schatten-p quasi-norm with 0 < p < 1 is a better approximation than the nuclear norm (Zhang, Huang, and Zhang 2013) (analogous to the superiority of the ℓp quasi-norm to the ℓ1norm (Daubechies et al. 2010)).\nTo recover a low-rank matrix from some linear observations b ∈ Rs, we consider the following general Schatten-p quasi-norm minimization problem,\nmin X\nλ‖X‖pSp + f(A(X)− b) , (1)\nwhere A : Rm×n → Rs denotes the linear measurement operator, λ > 0 is a regularization parameter, and the loss function f(·) : Rs → R generally denotes certain measurement for characterizing A(X) − b. The above formulation can address a wide range of problems, such as matrix completion (Marjanovic and Solo 2012; Rohde and Tsybakov 2011) (A is the sampling operator and f(·) = ‖ · ‖22), robust principal component analysis (Candès et al. 2011; Wang, Liu, and Zhang 2013; Shang et al. 2014) (A is the identity operator and f(·) = ‖ · ‖1), and multivariate regression (Hsieh and Olsen 2014) (A(X)=AX with A being a given matrix, and f(·)=‖·‖2F ). Furthermore, f(·) may be also chosen as the Hinge loss in (Srebro, Rennie, and Jaakkola 2004) or the ℓp quasi-norm in (Nie et al. 2012).\nAnalogous to the ℓp quasi-norm, the Schatten-p quasinorm is also non-convex for p < 1, and its minimization is generally NP-hard (Lai, Xu, and Yin 2013). Therefore, it is crucial to develop efficient algorithms to solve some alternative formulations of Schatten-p quasi-norm minimization (1). So far, only few algorithms (Lai, Xu, and Yin 2013; Mohan and Fazel 2012; Nie et al. 2012; Lu et al. 2014) have\nbeen developed to solve such problems. Furthermore, since all existing Schatten-p quasi-norm minimization algorithms involve SVD or EVD in each iteration, they suffer from a high computational cost of O(n2m), which severely limits their applicability to large-scale problems. Although there have been many efforts towards fast SVD or EVD computation such as partial SVD (Larsen 2005), the performance of those methods is still unsatisfactory for real-life applications (Cai and Osher 2013)."
    }, {
      "heading" : "Tractable Schatten Quasi-Norms",
      "text" : "As in (Srebro, Rennie, and Jaakkola 2004), the nuclear norm has the following alternative non-convex formulations.\nLemma 1. Given a matrix X ∈ Rm×n with rank(X) = r ≤ d, the following holds:\n‖X‖∗ = min U∈Rm×d,V ∈Rn×d:X=UV T ‖U‖F‖V ‖F\n= min U,V :X=UV T ‖U‖2F + ‖V ‖2F 2 ."
    }, {
      "heading" : "Frobenius/Nuclear Hybrid Quasi-Norm",
      "text" : "Motivated by the equivalence relation between the nuclear norm and the bilinear spectral regularization (please refer to (Srebro, Rennie, and Jaakkola 2004; Recht, Fazel, and Parrilo 2010)), we define a Frobenius/nuclear hybrid (F/N) norm as follows\nDefinition 1. For any matrix X ∈ Rm×n with rank(X) = r ≤ d, we can factorize it into two much smaller matrices U ∈ Rm×d and V ∈ Rn×d such that X = UV T . Then the Frobenius/nuclear hybrid norm of X is defined as\n‖X‖F/N := min X=UV T ‖U‖∗‖V ‖F .\nIn fact, the Frobenius/nuclear hybrid norm is not a real norm, because it is non-convex and does not satisfy the triangle inequality of a norm. Similar to the well-known Schatten-p quasi-norm (0 < p < 1), the Frobenius/nuclear hybrid norm is also a quasi-norm, and their relationship is stated in the following theorem.\nTheorem 1. The Frobenius/nuclear hybrid norm ‖·‖F/N is a quasi-norm. Surprisingly, it is also the Schatten-2/3 quasinorm, i.e.,\n‖X‖F/N = ‖X‖S2/3,\nwhere ‖X‖S2/3 denotes the Schatten-2/3 quasi-norm of X . Property 1. For any matrix X ∈ Rm×n with rank(X) = r ≤ d, the following holds:\n‖X‖F/N = min U∈Rm×d,V ∈Rn×d:X=UV T ‖U‖∗‖V ‖F\n= min X=UV T\n( 2‖U‖∗ + ‖V ‖2F\n3\n)3/2 .\nThe proofs of Property 1 and Theorem 1 can be found in the Supplementary Materials."
    }, {
      "heading" : "Bi-Nuclear Quasi-Norm",
      "text" : "Similar to the definition of the above Frobenius/nuclear hybrid norm, our bi-nuclear (BiN) norm is naturally defined as follows.\nDefinition 2. For any matrix X ∈ Rm×n with rank(X) = r ≤ d, we can factorize it into two much smaller matrices U ∈ Rm×d and V ∈ Rn×d such that X = UV T . Then the bi-nuclear norm of X is defined as\n‖X‖BiN := min X=UV T ‖U‖∗‖V ‖∗.\nSimilar to the Frobenius/nuclear hybrid norm, the binuclear norm is also a quasi-norm, as stated in the following theorem.\nTheorem 2. The bi-nuclear norm ‖·‖BiN is a quasi-norm. In addition, it is also the Schatten-1/2 quasi-norm, i.e.,\n‖X‖BiN = ‖X‖S1/2. The proof of Theorem 2 can be found in the Supplementary Materials. Due to the relationship between the binuclear quasi-norm and the Schatten-1/2 quasi-norm, it is easy to verify that the bi-nuclear quasi-norm possesses the following properties. Property 2. For any matrix X ∈ Rm×n with rank(X) = r ≤ d, the following holds:\n‖X‖BiN = min X=UV T ‖U‖∗‖V ‖∗= min X=UV T ‖U‖2∗+‖V ‖2∗ 2\n= min X=UV T (‖U‖∗+‖V ‖∗ 2 )2 .\nThe following relationship between the nuclear norm and the Frobenius norm is well known: ‖X‖F ≤ ‖X‖∗ ≤√ r‖X‖F . Similarly, the analogous bounds hold for the Frobenius/nuclear hybrid and bi-nuclear quasi-norms, as stated in the following property. Property 3. For any matrix X ∈ Rm×n with rank(X) = r, the following inequalities hold:\n‖X‖∗ ≤ ‖X‖F/N ≤ √ r‖X‖∗,\n‖X‖∗ ≤ ‖X‖F/N ≤‖X‖BiN ≤ r‖X‖∗. The proof of Property 3 can be found in the Supplementary Materials. It is easy to see that Property 3 in turn implies that any low Frobenius/nuclear hybrid or bi-nuclear norm approximation is also a low nuclear norm approximation."
    }, {
      "heading" : "Optimization Algorithms",
      "text" : ""
    }, {
      "heading" : "Problem Formulations",
      "text" : "To bound the Schatten-2/3 or -1/2 quasi-norm of X by 1 3 (2‖U‖∗+‖V ‖2F ) or 12 (‖U‖∗+‖V ‖∗), we mainly consider the following general structured matrix factorization formulation as in (Haeffele, Young, and Vidal 2014),\nmin U,V\nλϕ(U, V ) + f(A(UV T )− b), (2)\nwhere the regularization term ϕ(U, V ) denotes 13 (2‖U‖∗+ ‖V ‖2F ) or 12 (‖U‖∗+‖V ‖∗).\nAs mentioned above, there are many Schatten-p quasinorm minimization problems for various real-world applications. Therefore, we propose two efficient algorithms to solve the following low-rank matrix completion problems:\nmin U,V λ(2‖U‖∗+‖V ‖2F ) 3 + 1 2 ‖PΩ(UV T )−PΩ(D)‖2F , (3)\nmin U,V λ(‖U‖∗ + ‖V ‖∗) 2 + 1 2 ‖PΩ(UV T )− PΩ(D)‖2F , (4)\nwhere PΩ denotes the linear projection operator, i.e., PΩ(D)ij=Dij if (i, j)∈Ω, and PΩ(D)ij=0 otherwise. Due to the operator PΩ in (3) and (4), we usually need to introduce some auxiliary variables for solving them. To avoid introducing auxiliary variables, motivated by the proximal alternating linearized minimization (PALM) method proposed in (Bolte, Sabach, and Teboulle 2014), we propose two fast PALM algorithms to efficiently solve (3) and (4). The space limitation refrains us from fully describing each algorithm, but we try to give enough details of a representative algorithm for solving (3) and discussing their differences.\nUpdating Uk+1 and Vk+1 with Linearization Techniques\nLet gk(U) := ‖PΩ(UV Tk )−PΩ(D)‖2F /2, and then its gradient is Lipschitz continuous with constant lgk+1, meaning that ‖∇gk(U1)−∇gk(U2)‖F ≤ lgk+1‖U1 −U2‖F for any U1, U2 ∈ Rm×d. By linearizing gk(U) at Uk and adding a proximal term, then we have the following approximation:\nĝk(U,Uk)=gk(Uk)+〈∇gk(Uk), U−Uk〉+ lgk+1 2 ‖U−Uk‖2F . (5)\nThus, we have\nUk+1=argmin U\n2λ\n3 ‖U‖∗+ĝk(U,Uk)\n=argmin U\n2λ\n3 ‖U‖∗+ lgk+1 2 ‖U−Uk+ ∇gk(Uk) lgk+1 ‖2F .\n(6)\nSimilarly, we have\nVk+1=argmin V\nλ 3 ‖V ‖2F+ lhk+1 2 ‖V−Vk+∇hk(Vk)/lhk+1‖2F , (7)\nwhere hk(V ) := ‖PΩ(Uk+1V T )−PΩ(D)‖2F /2 with the Lipschitz constant lhk+1. The problems (6) and (7) are known to have closed-form solutions, which of the former is given by the so-called matrix shrinkage operator (Cai, Candès, and Shen 2010). In contrast, for solving (4), Uk+1 is computed in the same way as (6), and Vk+1 is given by\nVk+1=argmin V\nλ 2 ‖V ‖∗+ lhk+1 2 ‖V−Vk+∇hk(Vk)/lhk+1‖2F . (8)"
    }, {
      "heading" : "Updating Lipschitz Constants",
      "text" : "Next we compute the Lipschitz constants lgk+1 and l h k+1 at the (k+1)-iteration.\nAlgorithm 1 Solving (3) via PALM Input: PΩ(D), the given rank d and λ. Initialize: U0, V0, ε and k = 0.\n1: while not converged do 2: Update lgk+1 and Uk+1 by (9) and (6), respectively. 3: Update lhk+1 and Vk+1 by (9) and (7), respectively. 4: Check the convergence condition, max{‖Uk+1−Uk‖F , ‖Vk+1−Vk‖F } < ε. 5: end while\nOutput: Uk+1, Vk+1.\n‖∇gk(U1)−∇gk(U2)‖F =‖[PΩ(U1V Tk − U2V Tk )]Vk‖F ≤‖Vk‖22‖U1 − U2‖F , ‖∇hk(V1)−∇hk(V2)‖F =‖UTk+1[PΩ(Uk+1(V T1 −V T2 ))]‖F ≤‖Uk+1‖22‖V1−V2‖F . Hence, both Lipschitz constants are updated by\nlgk+1 = ‖Vk‖22 and lhk+1 = ‖Uk+1‖22. (9)"
    }, {
      "heading" : "PALM Algorithms",
      "text" : "Based on the above development, our algorithm for solving (3) is given in Algorithm 1. Similarly, we also design an efficient PALM algorithm for solving (4). The running time of Algorithm 1 is dominated by performing matrix multiplications. The total time complexity of Algorithm 1, as well as the algorithm for solving (4), is O(nmd), where d ≪ m,n."
    }, {
      "heading" : "Algorithm Analysis",
      "text" : "We now provide the global convergence and low-rank matrix recovery guarantees for Algorithm 1, and the similar results can be obtained for the algorithm for solving (4)."
    }, {
      "heading" : "Global Convergence",
      "text" : "Before analyzing the global convergence of Algorithm 1, we first introduce the definition of the critical points of a non-convex function given in (Bolte, Sabach, and Teboulle 2014).\nDefinition 3. Let a non-convex function f : Rn → (−∞,+∞] be a proper and lower semi-continuous function, and domf={x ∈ Rn : f(x) < +∞}. • For any x ∈ domf , the Frèchet sub-differential of f at x\nis defined as\n∂̂f(x)={u∈Rn : lim y 6=x inf y→x f(y)−f(x)−〈u, y−x〉 ‖y−x‖2 ≥0},\nand ∂̂f(x) = ∅ if x /∈ domf . • The limiting sub-differential of f at x is defined as\n∂f(x)={u∈Rn : ∃xk → x, f(xk) → f(x) and uk∈ ∂̂f(xk)→u as k→∞}.\n• The points whose sub-differential contains 0 are called critical points. For instance, the point x is a critical point of f if 0∈∂f(x).\nTheorem 3 (Global Convergence). Let {(Uk, Vk)} be a sequence generated by Algorithm 1, then it is a Cauchy sequence and converges to a critical point of (3).\nThe proof of the theorem can be found in the Supplementary Materials. Theorem 3 shows the global convergence of Algorithm 1. We emphasize that, different from the general subsequence convergence property, the global convergence property is given by (Uk, Vk) → (Û , V̂ ) as the number of iteration k → +∞, where (Û , V̂ ) is a critical point of (3). As we have stated, existing algorithms for solving the non-convex and nonsmooth problem, such as IRucLq and IRNN, have only subsequence convergence (Xu and Yin 2014). According to (Attouch and Bolte 2009), we know that the convergence rate of Algorithm 1 is at least sub-linear, as stated in the following theorem.\nTheorem 4 (Convergence Rate). The sequence {(Uk, Vk)} generated by Algorithm 1 converges to a critical point (Û , V̂ ) of (3) at least in the sub-linear convergence rate, that is, there exists C > 0 and θ ∈ (1/2, 1) such that\n‖[UTk , V Tk ]− [ÛT , V̂ T ]‖F ≤ Ck− 1−θ 2θ−1 ."
    }, {
      "heading" : "Recovery Guarantee",
      "text" : "In the following, we show that when sufficiently many entries are observed, the critical point generated by our algorithms recovers a low-rank matrix “close to” the groundtruth one. Without loss of generality, assume that D = Z+E ∈ Rm×n, where Z is a true matrix, and E denotes a random gaussian noise.\nTheorem 5. Let (Û , V̂ ) be a critical point of the problem (3) with given rank d, and m ≥ n. Then there exists an absolute constant C1, such that with probability at least 1− 2 exp(−m), ‖Z−ÛV̂ T‖F√\nmn ≤‖E‖F√ mn +C1β\n( md log(m)\n|Ω|\n)1/4 + 2 √ dλ\n3C2 √ |Ω| ,\nwhere β = maxi,j |Di,j | and C2 = ‖PΩ(D−ÛV̂ T )V̂ ‖F\n‖PΩ(D−ÛV̂ T )‖F .\nThe proof of the theorem and the analysis of lowerboundedness of C2 can be found in the Supplementary Materials. When the samples size |Ω| ≫ md log(m), the second and third terms diminish, and the recovery error is essentially bounded by the “average” magnitude of entries of the noise matrix E. In other words, only O(md log(m)) observed entries are needed, which is significantly lower than O(mr log2(m)) in standard matrix completion theories (Candès and Recht 2009; Keshavan, Montanari, and Oh 2010; Recht 2011). We will confirm this result by our experiments in the following section."
    }, {
      "heading" : "Experimental Results",
      "text" : "We now evaluate both the effectiveness and efficiency of our algorithms for solving matrix completion problems, such as collaborative filtering and image recovery. All experiments were conducted on an Intel Xeon E7-4830V2 2.20GHz CPU with 64G RAM.\nAlgorithms for Comparison We compared our algorithms, BiN and F/N, with the following state-of-the-art methods: IRucLq1 (Lai, Xu, and Yin 2013): In IRucLq, p varies from 0.1 to 1with increment 0.1, and the parametersλ and α are set to 10−6 and 0.9, respectively. In addition, the rank parameter of the algorithm is updated dynamically as in (Lai, Xu, and Yin 2013), that is, it only needs to compute the partial EVD. IRNN2 (Lu et al. 2014): We choose the ℓpnorm, SCAD and MCP penalties as the regularization term among eight non-convex penalty functions, where p is chosen from the range of {0.1, 0.2, . . . , 1}. At each iteration, the parameter λ is dynamically decreased by λk =0.7λk−1, where λ0=10‖PΩ(D)‖∞.\nFor our algorithms, we set the regularization parameter λ = 5 or λ = 100 for noisy synthetic and real-world data, respectively. Note that the rank parameter d is estimated by the strategy in (Wen, Yin, and Zhang 2012). In addition, we evaluate the performance of matrix recovery by the relative squared error (RSE) and the root mean square error (RMSE), i.e., RSE := ‖X −Z‖F /‖Z‖F and RMSE := 1 |T | √ Σ(i,j)∈T (Xij−Dij)2, where T is the test set."
    }, {
      "heading" : "Synthetic Matrix Completion",
      "text" : "The synthetic matrices Z∈Rm×n with rank r are generated by the following procedure: the entries of both U ∈ Rm×r and V ∈Rn×r are first generated as independent and identically distributed (i.i.d.) numbers, and then Z = UV T is assembled. Since all these algorithms have very similar recovery performance on noiseless matrices, we only conducted\n1http://www.math.ucla.edu/˜wotaoyin/ 2https://sites.google.com/site/canyilu/\nexperiments on noisy matrices with different noise levels, i.e., PΩ(D) =PΩ(Z+nf ∗E), where nf denotes the noise factor. In other worlds, the observed subset is corrupted by i.i.d. standard Gaussian random noise as in (Lu et al. 2014). In addition, only 20% or 30% entries of D are sampled uniformly at random as training data, i.e., sampling ratio (SR)=20% or 30%. The rank parameter d of our algorithms is set to ⌊1.25r⌋ as in (Wen, Yin, and Zhang 2012).\nThe average RSE results of 100 independent runs on noisy random matrices are shown in Figure 1, which shows that if p varies from 0.1 to 0.7, IRucLq and IRNN-Lp achieve similar recovery performance as IRNN-SCAD, IRNN-MCP and our algorithms; otherwise, IRucLq and IRNN-Lp usually perform much worse than the other four methods, especially p = 1. We also report the running time of all the methods with 20% SR as the size of noisy matrices increases, as shown in Figure 2. Moreover, we present the RSE results of those methods and APGL3 (Toh and Yun 2010) (which is one of the nuclear norm solvers) with different noise factors. Figure 2 shows that our algorithms are significantly faster than the other methods, while the running time of IRucLq and IRNN increases dramatically when the size of matrices increases, and they could not yield experimental results within 48 hours when the size of matrices is 50, 000×50, 000. This further justifies that both our algorithms have very good scalability and can address large-scale problems. In addition, with only 20% SR, all Schatten quasi-norm methods significantly outperform APGL in terms of RSE.\n3http://www.math.nus.edu.sg/˜mattohkc/"
    }, {
      "heading" : "Collaborative Filtering",
      "text" : "We tested our algorithms on three real-world recommendation system data sets: the MovieLens1M, MovieLens10M4 and Netflix datasets (KDDCup 2007). We randomly chose 50%, 70% and 90% as the training set and the remaining as the testing set, and the experimental results are reported over 10 independent runs. In addition to the methods used above, we also compared our algorithms with one of the fastest existing methods, LMaFit5 (Wen, Yin, and Zhang 2012). The testing RMSE of all these methods on the three data sets is reported in Table 1, which shows that all those methods with non-convex penalty functions perform significantly better than the convex nuclear norm solver, APGL. In addition, our algorithms consistently outperform the other methods in terms of prediction accuracy. This further confirms that our two Schatten quasi-norm regularized models can provide a good estimation of a low-rank matrix. Moreover, we report the average testing RMSE and running time of our algorithms on these three data sets in Figures 3 and 4, where the rank varies from 5 to 20 and SR is set to 70%. Note that IRucLq and IRNN-Lp could not run on the two larger data sets due to runtime exceptions. It is clear that our algorithms are much faster than AGPL, IRucLq and IRNN-Lp on all these data sets. They perform much more robust with respect to ranks than LMaFit, and are comparable in speed with it. This shows that our algorithms have very good scalability and are suitable for real-world applications.\n4http://www.grouplens.org/node/73 5http://lmafit.blogs.rice.edu/."
    }, {
      "heading" : "Image Recovery",
      "text" : "We also applied our algorithms to gray-scale image recovery on the Boat image of size 512×512, where 50% of pixels in the input image were replaced by random Gaussian noise, as shown in Figure 5(b). In addition, we employed the well known peak signal-to-noise ratio (PSNR) to measure the recovery performance. The rank parameter of our algorithms and IRucLq was set to 100. Due to limited space, we only report the best results (PSNR and CPU time) of APGL, LMaFit, IRucLq and IRNN-Lp in Figure 5, which shows that our two algorithms achieve much better recovery performance than the other methods in terms of PSNR. And impressively, both our algorithms are significantly faster than the other methods except LMaFit and at least 70 times faster than IRucLq and IRNN-Lp."
    }, {
      "heading" : "Conclusions",
      "text" : "In this paper we defined two tractable Schatten quasi-norms, i.e., the Frobenius/nuclear hybrid and bi-nuclear quasinorms, and proved that they are in essence the Schatten2/3 and 1/2 quasi-norms, respectively. Then we designed two efficient proximal alternating linearized minimization\nalgorithms to solve our Schatten quasi-norm minimization for matrix completion problems, and also proved that each bounded sequence generated by our algorithms globally converges to a critical point. In other words, our algorithms not only have better convergence properties than existing algorithms, e.g., IRucLq and IRNN, but also reduce the computational complexity from O(mn2) to O(mnd), with d being the estimated rank (d≪m,n). We also provided the recovery guarantee for our algorithms, which implies that they need only O(md log(m)) observed entries to recover a lowrank matrix with high probability. Our experiments showed that our algorithms outperform the state-of-the-art methods in terms of both efficiency and effectiveness."
    }, {
      "heading" : "Acknowledgements",
      "text" : "We thank the reviewers for their constructive comments. The authors are partially supported by the SHIAE fund 8115048 and the Hong Kong GRF 2150851."
    }, {
      "heading" : "Proofs of Theorem 1 and Property 1:",
      "text" : "In the following, we will first prove that the Frobenius/nuclear hybrid norm ‖·‖F/N is a quasi-norm. Proof. By the definition of the F/N norm, for any a, a1, a2 ∈ R and a = a1a2, we have\n‖aX‖F/N = min aX=(a1U)(a2V T ) ‖a1U‖∗‖a2V ‖F\n= min X=UV T\n(|a1| ‖U‖∗) (|a2| ‖V ‖F )\n= |a| min X=UV T ‖U‖∗‖V ‖F = |a| ‖X‖F/N.\nNext we will prove that ‖X + Y ‖F/N ≤ β (‖X‖F/N + ‖Y ‖F/N), where β ≥ 1. By Lemma 1, i.e., ‖X‖∗ = minX=UV T ‖U‖F‖V ‖F , there must exist both matrices Û and V̂ such that ‖X‖∗ = ‖Û‖F ‖V̂ ‖F with the constraint X = Û V̂ . According to the definition of the F/N-norm and the fact that ‖X‖∗ ≤ √ rank(X)‖X‖F , we have ‖X‖F/N = min\nX=UV T ‖U‖∗‖V ‖F\n≤ ‖Û‖∗‖V̂ ‖F ≤ √ rank(U)‖Û‖F ‖V̂ ‖F ≤ √\nrank(U)‖X‖∗ = α‖X‖∗,\nwhere α = √\nrank(U). If X 6= 0, we can know that α ≥ 1. On the other hand, we also have ‖X‖∗ ≤ ‖X‖F/N. By the above properties, there exists a constant β ≥ 1 such that the following holds for all X,Y ∈ Rm×n\n‖X + Y ‖F/N ≤ β‖X + Y ‖∗ ≤ β(‖X‖∗ + ‖Y ‖∗) ≤ β(‖X‖F/N + ‖Y ‖F/N).\nFurthermore, ∀X ∈ Rm×n and X = UV T , we have ‖X‖F/N = min\nX=UV T ‖U‖∗‖V ‖F ≥ 0.\nIn addition, if ‖X‖F/N = 0, we have ‖X‖∗ ≤ ‖X‖F/N = 0, i.e., ‖X‖∗ = 0. Hence, X = 0. In short, the F/N-norm ‖ · ‖F/N is a quasi-norm.\nBefore giving the complete proofs for Theorem 1 and Property 1, we first present and prove the following important lemma.\nLemma 2. Suppose that Z ∈ Rm×n is a matrix of rank r ≤ min(m, n), and we denote its SVD by Z = LΣZRT , where L ∈ Rm×r, R ∈ Rn×r and ΣZ ∈ Rr×r. For any matrix A ∈ Rr×r satisfying AAT = ATA = Ir×r, and the given p (0 < p < 1), then (AΣZAT )k,k ≥ 0 for all k = 1, . . . , r, and\nTrp(AΣZAT ) ≥ Trp(ΣZ) = ‖Z‖pSp,\nwhere Trp(B) = ∑\ni B p ii.\nProof. For any k ∈ {1, . . . , r}, we have (AΣZAT )k,k = ∑ i a 2 kiσi ≥ 0, where σi ≥ 0 is the i-th singular value of Z . Then\nTrp(AΣZAT ) = ∑\nk\n( ∑\ni\na2kiσi\n)p . (10)\nSince ψ(x) = xp (0 < p < 1) is a concave function on R+, and by the Jensen’s inequality (Mitrinović 1970) and ∑\ni a 2 ki = 1\nfor any k ∈ {1, . . . , r}, we have ( ∑\ni\na2kiσi\n)p ≥ ∑\ni\na2kiσ p i .\nAccording to the above inequality and ∑\nk a 2 ki = 1 for any i ∈ {1, . . . , r}, (10) can be rewritten as\nTrp(AΣZAT ) = ∑\nk\n( ∑\ni\na2kiσi\n)p\n≥ ∑\nk\n∑\ni\na2kiσ p i\n= ∑\ni\nσpi\n= Trp(ΣZ) = ‖Z‖pSp.\nThis completes the proof.\nProof of Theorem 1:\nProof. Assume that U = LUΣURTU and V = LV ΣV R T V are the thin SVDs of U and V , respectively, where LU ∈ Rm×d, LV ∈ Rn×d, and RU ,ΣU , RV ,ΣV ∈ Rd×d. Let X = LXΣXRTX , where the columns of LX ∈ Rm×d and RX ∈ Rn×d are the left and right singular vectors associated with the top d singular values of X with rank at most r (r ≤ d), and ΣX = diag([σ1(X),· · ·, σr(X), 0,· · ·, 0]) ∈Rd×d.\nBy X = UV T , i.e., LXΣXRTX = LUΣUR T URV ΣV L T V , then ∃O1, Ô1 ∈ Rd×d satisfy LX = LUO1 and LU = LXÔ1,\ni.e., O1 = LTULX and Ô1 = L T XLU . Thus, O1 = Ô T 1 . Since LX = LUO1 = LXÔ1O1, we have Ô1O1 = O T 1 O1 = Id×d. Similarly, we have O1Ô1 = O1OT1 = Id×d. In addition, ∃O2 ∈ Rd×d satisfies RX = LV O2 with O2OT2 = OT2 O2 = Id×d. Let O3 = O2OT1 ∈ Rd×d, then we have O3OT3 = OT3 O3 = Id×d, i.e., ∑ i(O3) 2 ij = ∑ j(O3) 2 ij = 1 for ∀i, j ∈ {1, 2, . . . , d}, where ai,j denotes the element of the matrix A in the i-th row and the j-th column. Furthermore, let O4 = RTURV , we have∑ i(O4) 2 ij ≤ 1 and ∑ j(O4) 2 ij ≤ 1 for ∀i, j ∈ {1, 2, . . . , d}.\nBy the above analysis, then we have O2ΣXOT2 = O2O T 1 ΣUO4ΣV = O3ΣUO4ΣV . Let τi and ̺j denote the i-th and the\nj-th diagonal elements of ΣU and ΣV , respectively. By Lemma 2, and p = 2/3, we have\n‖X‖S2/3 ≤ ( Tr 2 3 (O2ΣXO T 2 ) ) 3 2 = ( Tr 2 3 (O2O T 1 ΣUO4ΣV ) ) 3 2 = ( Tr 2 3 (O3ΣUO4ΣV ) ) 3 2\n=   d∑\ni=1\n  d∑\nj=1\nτj(O3)ij(O4)ji̺i\n  2 3   3 2\n=   d∑\ni=1\n̺ 2 3\ni\n  d∑\nj=1\nτj(O3)ij(O4)ji\n  2 3   3 2\na≤   [ d∑\ni=1\n(̺ 2 3\ni ) 3\n] 1 3   d∑\ni=1\n  d∑\nj=1\nτj(O3)ij(O4)ji\n  2 3 × 3 2   2 3   3 2\n=\n√√√√ d∑\ni=1\n̺2i\nd∑\ni=1\nd∑\nj=1\nτj(O3)ij(O4)ji\nb≤\n√√√√ d∑\ni=1\n̺2i\nd∑\ni=1\nd∑\nj=1\nτj (O3)\n2 ij + (O4) 2 ji\n2\nc≤\n√√√√ d∑\ni=1\n̺2i\nd∑\nj=1\nτj\n= ‖U‖∗‖V ‖F = √ ‖U‖∗ √ ‖U‖∗‖V ‖F\nd≤ (√ ‖U‖∗ + √ ‖U‖∗ + ‖V ‖F 3 )3\n=\n( 2 √ ‖U‖∗ + √ ‖V ‖2F\n3\n)3\ne≤ ( 2‖U‖∗ + ‖V ‖2F\n3\n) 3 2\nwhere the inequality a ≤ holds due to the Hölder’s inequality (Mitrinović 1970), i.e., ∑n\nk=1 |xkyk| ≤ ( ∑n k=1 |xk|p)1/p( ∑n\nk=1 |yk|q)1/q with 1/p + 1/q = 1, and here we set p = 3 and q = 3/2 in the inequality a≤ ; the inequality b≤ follows from the basic inequality xy ≤ x 2+y2\n2 for any real numbers x and y; the inequality c≤ relies on the facts∑\ni(O3) 2 ij = 1 and ∑ i(O4) 2 ji ≤ 1; the inequality d≤ holds due to the fact 3 √ x1x2x3 ≤ (|x1|+ |x2|+ |x3|)/3 and the inequality e≤ holds due to the Jensen’s inequality for the concave function f(x) = x1/2. Thus, for any matrices U ∈ Rm×d and V ∈ Rn×d satisfying X = UV T , we have\n‖X‖S2/3 ≤ ‖U‖∗‖V ‖F ≤ ( 2‖U‖∗ + ‖V ‖2F\n3\n) 3 2\n.\nOn the other hand, let U⋆ = LXΣ 2/3 X and V⋆ = RXΣ 1/3 X , where Σ p is entry-wise power to p, then we have X = U⋆V T⋆ and\n‖X‖S2/3 = ( Tr2/3(ΣX) ) 3 2 = ‖U⋆‖∗‖V⋆‖F = ( 2‖U⋆‖∗ + ‖V⋆‖2F\n3\n) 3 2\n.\nTherefore, under the constraint X = UV T , we have\n‖X‖S2/3 = min X=UV T ‖U‖∗‖V ‖F = min X=UV T\n( 2‖U‖∗ + ‖V ‖2F\n3\n) 3 2\n= ‖X‖F/N.\nThis completes the proof.\nProof of Theorem 2: In the following, we will first prove that the bi-nuclear norm ‖·‖BiN is a quasi-norm. Proof. By the definition of the bi-nuclear norm, for any a, a1, a2 ∈ R and a = a1a2, we have\n‖aX‖BiN = min aX=(a1U)(a2V T ) ‖a1U‖∗‖a2V ‖∗\n= min X=UV T |a| ‖U‖∗‖V ‖∗ = |a| min\nX=UV T ‖U‖∗‖V ‖∗\n= |a| ‖X‖BiN. Since ‖X‖∗ = minX=UV T ‖U‖F‖V ‖F , and by Lemma 6 in (Mazumder, Hastie, and Tibshirani 2010), there exist both\nmatrices Û = UXΣ 1/2 X and V̂ = VXΣ 1/2 X such that ‖X‖∗ = ‖Û‖F ‖V̂ ‖F with the SVD of X , i.e., X = UXΣXV TX . By the\nfact that ‖X‖∗ ≤ √\nrank(X)‖X‖F , we have ‖X‖BiN = min\nX=UV T ‖U‖∗‖V ‖∗\n≤ ‖Û‖∗‖V̂ ‖∗ ≤ √ rank(X) √ rank(X)‖Û‖F ‖V̂ ‖F\n≤ rank(X)‖X‖∗. If X 6= 0, then rank(X) ≥ 1. On the other hand, we also have\n‖X‖∗ ≤ ‖X‖BiN. By the above properties, there exists a constant α ≥ 1 such that the following holds for all X,Y ∈ Rm×n\n‖X + Y ‖BiN ≤ α‖X + Y ‖∗ ≤ α(‖X‖∗ + ‖Y ‖∗) ≤ α(‖X‖BiN + ‖Y ‖BiN).\n∀X ∈ Rm×n and X = UV T , we have ‖X‖BiN = min\nX=UV T ‖U‖∗‖V ‖∗ ≥ 0.\nIn addition, if ‖X‖BiN = 0, we have ‖X‖∗ ≤ ‖X‖BiN = 0, i.e., ‖X‖∗ = 0. Hence, X = 0. In short, the bi-nuclear norm ‖ ·‖BiN is a quasi-norm.\nProof of Theorem 2:\nProof. To prove this theorem, we use the same notations as in the proof of Theorem 1, for instance, X = LXΣXRTX , U = LUΣUR T U and V =LV ΣV R T V denote the SVDs of X , U and V , respectively. By Lemma 2, and p = 1/2, we have\n‖X‖S1/2 ≤ ( Tr1/2(O2ΣXO T 2 ) )2 = ( Tr1/2(O2O T 1 ΣUO4ΣV ) )2 = ( Tr1/2(O3ΣUO4ΣV ) )2\n=\n  d∑\ni=1\n√√√√ d∑\nj=1\nτj(O3)ij(O4)ji̺i\n  2\n=\n  d∑\ni=1\n√√√√̺i d∑\nj=1\nτj(O3)ij(O4)ji\n  2\na≤ d∑\ni=1\n̺i\nd∑\ni=1\nd∑\nj=1\nτj(O3)ij(O4)ji\nb≤ d∑\ni=1\n̺i\nd∑\ni=1\nd∑\nj=1\n(O3) 2 ijτj + (O4) 2 jiτj\n2\nc≤ d∑\ni=1\n̺i\nd∑\nj=1\nτj\n= ‖U‖∗‖V ‖∗ ≤ (‖U‖∗ + ‖V ‖∗\n2\n)2 ,\nwhere the inequality a≤ holds due to the Cauchy−Schwartz inequality, the inequality b≤ follows from the basic inequality xy ≤ x2+y22 for any real numbers x and y, and the inequality c≤ relies on the facts ∑ i(O3) 2 ij = 1 and ∑ i(O4) 2 ji ≤ 1. Thus, we have\n‖X‖S1/2 ≤ ‖U‖∗‖V ‖∗ ≤ (‖U‖∗ + ‖V ‖∗\n2\n)2 .\nOn the other hand, let U⋆ = LXΣ 1/2 X and V⋆ = RXΣ 1/2 X , then we have X = U⋆V T ⋆ and\n‖X‖S1/2 = ( Tr1/2(ΣX) )2 = (‖LXΣ1/2‖∗ + ‖RXΣ1/2‖∗ 2 )2 = (‖U⋆‖∗ + ‖V⋆‖∗ 2 )2 .\nTherefore, under the constraint X = UV T , we have\n‖X‖S1/2 = min X=UV T ‖U‖∗‖V ‖∗ = min X=UV T (‖U‖∗ + ‖V ‖∗ 2 )2 = min X=UV T ‖U‖2∗ + ‖V ‖2∗ 2 = ‖X‖BiN.\nThis completes the proof.\nProof of Property 3: Proof. The proof involves some following properties of the ℓp quasi-norm, which must be recalled. For any vector x in Rn and 0 < p2 ≤ p1 ≤ 1, we have\n‖x‖ℓ1 ≤ ‖x‖ℓp1 , ‖x‖ℓp1 ≤ ‖x‖ℓp2 ≤ n 1/p2−1/p1‖x‖ℓp1 .\nSuppose X∈Rm×n is of rank r, and denote its SVD by X = Um×rΣr×rV Tn×r. By Theorems 1 and 2, and the properties of the ℓp quasi-norm, we have\n‖X‖∗ = ‖diag(Σr×r)‖ℓ1 ≤ ‖diag(Σr×r)‖ℓ2/3 = ‖X‖F/N ≤ √ r‖X‖∗,\n‖X‖∗ = ‖diag(Σr×r)‖ℓ1 ≤ ‖diag(Σr×r)‖ℓ1/2 = ‖X‖BiN ≤ r‖X‖∗. Similarly, ‖X‖F/N = ‖diag(Σr×r)‖ℓ2/3 ≤ ‖diag(Σr×r)‖ℓ1/2 = ‖X‖BiN. This completes the proof.\nProof of Theorem 3: In this paper, the proposed algorithms are based on the proximal alternating linearized minimization (PALM) method for solving the following non-convex problem:\nmin x,y Ψ(x, y) := F (x) +G(y) +H(x, y), (11)\nwhere F (x) and G(y) are proper lower semi-continuous functions, and H(x, y) is a smooth function with Lipschitz continuous gradients on any bounded set.\nIn Algorithm 1, we state that our algorithm alternates between two blocks of variables, U and V . We establish the global convergence of Algorithm 1 by transforming the problem (3) into a standard form (11), and show that the transformed problem satisfies the condition needed to establish the convergence. First, the minimization problem (3) can be expressed in the form of (11) by setting \n  F (U) := 2λ3 ‖U‖∗; G(V ) := λ3 ‖V ‖2F ; H(U, V ) := 12‖PΩ(UV T )− PΩ(D)‖2F .\nThe conditions for global convergence of the PALM algorithm proposed in (Bolte, Sabach, and Teboulle 2014) are shown in the following lemma.\nLemma 3. Let {(xk, yk)} be a sequence generated by the PALM algorithm. This sequence converges to a critical point of (11), if the following conditions hold:\n1. Ψ(x, y) is a Kurdyka-Łojasiewicz (KL) function;\n2. ∇H(x, y) has Lipschitz constant on any bounded set; 3. {(xk, yk)} is a bounded sequence.\nAs stated in the above lemma, the first condition requires that the objective function satisfies the KL property (For more details, see (Bolte, Sabach, and Teboulle 2014)). It is known that any proper closed semi-algebraic function is a KL function as such a function satisfies the KL property for all points in domf with ϕ(s) = cs1−θ for some θ ∈ [0, 1) and some c > 0. Therefore, we first give the following definitions of semi-algebraic sets and functions, and then prove that the proposed problem (3) is also semi-algebraic.\nDefinition 4 (Bolte, Sabach, and Teboulle (2014)). A subset S ⊂ Rn is a real semi-algebraic set if there exists a finite number of real polynomial functions φij , ψij : Rn → R such that\nS = ⋃\nj\n⋂\ni\n{u ∈ Rn : φij(u) = 0, ψij(u) < 0} .\nMoreover, a function h(u) is called semi-algebraic if its graph {(u, t) ∈ Rn+1 : h(u) = t} is a semi-algebraic set. Semi-algebraic sets are stable under the operations of finite union, finite intersections, complementation and Cartesian product. The following are the semi-algebraic functions or the property of semi-algebraic functions used below:\n• Real polynomial functions. • Finite sums and product of semi-algebraic functions. • Composition of semi-algebraic functions. Lemma 4. Each term in the proposed problem (3) is a semi-algebraic function, and thus the function (3) is also semi-algebraic.\nProof. It is easy to notice that the sets U = {U ∈ Rm×d : ‖U‖∞ ≤ D1} and V = {V ∈ Rn×d : ‖V ‖∞ ≤ D2} are both semi-algebraic sets, where D1 and D2 denote two pre-defined upper-bounds for all entries of U and V , respectively.\nFor the first term F (U) = 2λ3 ‖U‖∗. According to (Bolte, Sabach, and Teboulle 2014), we can know that the ℓ1-norm is a semi-algebraic function. Since the nuclear norm is equivalent to the ℓ1-norm on singular values of the associated matrix, it is natural that the nuclear norm is also semi-algebraic.\nFor both terms G(V ) = λ3 ‖V ‖2F and H(U, V ) = 12‖PΩ(UV T −D)‖2F , they are real polynomial functions, and thus are semi-algebraic functions (Bolte, Sabach, and Teboulle 2014). Therefore, (3) is semi-algebraic due to the fact that a finite sum of semi-algebraic functions is also semi-algebraic.\nFor the second condition in Lemma 3, H(U, V ) = 12‖PΩ(UV T−D)‖2F is a smooth polynomial function, and ∇H(U, V ) = ([PΩ(UV T−D)]V, [PΩ(UV T −D)]TU). It is natural that ∇H(U, V ) has Lipschitz constant on any bounded set.\nFor the final condition in Lemma 3, Uk ∈ U and Vk ∈ V for any k = 1, 2, . . ., which implies the sequence {(Uk, Vk)} is bounded.\nIn short, we can know that three similar conditions as in Lemma 3 hold for Algorithm 1. According to the above discussion, it is clear that the problem (4) is also a semi-algebraic function. In other words, another proposed algorithm shares the same convergence property as in Theorem 3.\nProof of Theorem 5: According to Theorem 3, we can know that (Û , V̂ ) is a critical point of the problem (3). To prove Theorem 5, we first give the following lemmas.\nLemma 5 (Lin, Chen, and Wu (2009)). Let H be a real Hilbert space endowed with an inner product 〈·, ·〉 and an associated norm ‖·‖, and y ∈ ∂‖x‖, where ∂‖·‖ denotes the subgradient of the norm. Then ‖y‖∗ = 1 if x 6= 0, and ‖y‖∗ ≤ 1 if x = 0, where ‖·‖∗ is the dual norm of ‖·‖. For instance, the dual norm of the nuclear norm is the spectral norm, ‖·‖2, i.e., the largest singular value.\nLemma 6 (Wang and Xu (2012)). Let L(X) = 1√ mn ‖X−X̂‖F and L̂(X) = 1√|Ω|‖PΩ(X−X̂)‖F be the actual and empirical loss function respectively, where X, X̂ ∈ Rm×n (m ≥ n). Furthermore, assume entry-wise constraint maxi,j |Xij | ≤ β1. Then for all rank-r matrices X , with probability greater than 1− 2 exp(−m), there exists a fixed constant C such that\nsup X∈Sr\n|L̂(X)− L(X)| ≤ Cβ1 ( mr log(m)\n|Ω|\n)1/4 ,\nwhere Sr = {X ∈ Rm×n : rank(X) ≤ r, ‖X‖F ≤ √ mnβ1}."
    }, {
      "heading" : "Proof of Theorem 5:",
      "text" : "Proof. By C2 = ‖PΩ(D − Û V̂ T )V̂ ‖F /‖PΩ(D − Û V̂ T )‖F , we have\n‖D − Û V̂ T ‖F√ mn\n≤ ∣∣∣∣∣ ‖D − Û V̂ T ‖F√ mn − ‖PΩ(D − Û V̂ T )V̂ ‖F C2 √ |Ω| ∣∣∣∣∣+ ‖PΩ(D − Û V̂ T )V̂ ‖F C2 √ |Ω|\n= ∣∣∣∣∣ ‖D − Û V̂ T ‖F√ mn − ‖PΩ(D − Û V̂ T )‖F√ |Ω| ∣∣∣∣∣+ ‖PΩ(D − Û V̂ T )V̂ )‖F C2 √ |Ω| .\nLet τ(Ω) := ∣∣∣∣ 1√ mn ‖D − Û V̂ T ‖F − 1√|Ω|‖PΩ(D − Û V̂ T )‖F ∣∣∣∣, then we need to bound τ(Ω). Since rank(ÛV̂ T ) ≤ d and\nÛ V̂ T ∈ Sd, and according to Lemma 6, then with probability greater than 1 − 2 exp(−m), then there exists a fixed constant C1 such that\nsup ÛV̂ T∈Sd τ(Ω) =\n∣∣∣∣∣ ‖Û V̂ T −D‖F√ mn − ‖PΩ(Û V̂ T )− PΩ(D)‖F√ |Ω| ∣∣∣∣∣\n≤C1β ( md log(m)\n|Ω|\n) 1 4\n.\n(12)\nWe also need to bound ‖PΩ(Û V̂ T −D)V̂ ‖F . Given V̂ , the optimization problem with respect to U is formulated as follows:\nmin U 2λ‖U‖∗ 3 + 1 2 ‖PΩ(UV̂ T )− PΩ(D)‖2F . (13)\nSince (Û , V̂ ) is a critical point of the problem (3), the first-order optimal condition of the problem (13) is written as follows:\nPΩ(D − Û V̂ T )V̂ ∈ 2λ\n3 ∂‖Û‖∗. (14)\nUsing Lemma 5, we obtain\n‖PΩ(Û V̂ T −D)V̂ ‖2 ≤ 2λ\n3 ,\nwhere ‖·‖2 is the spectral norm. According to rank(PΩ(Û V̂ T −D)V̂ ) ≤ d, we have\n‖PΩ(Û V̂ T −D)V̂ ‖F ≤ √ d‖PΩ(Û V̂ T −D)V̂ ‖2 ≤\n2 √ dλ\n3 . (15)\nBy (12) and (15), we have\n‖Z − Û V̂ T ‖F√ mn ≤‖E‖F√ mn + ‖D − Û V̂ T ‖F√ mn\n≤‖E‖F√ mn + τ(Ω) + ‖PΩ(D − Û V̂ T )V̂ ‖F C2 √ |Ω|\n≤‖E‖F√ mn + C1β\n( md log(m)\n|Ω|\n) 1 4 + 2 √ dλ\n3C2 √ |Ω| .\nThis completes the proof."
    }, {
      "heading" : "Lower bound on C2",
      "text" : "Finally, we also discuss the lower boundedness of C2, that is, it is lower bounded by a positive constant. By the characterization of the subdifferentials of norms, we have\n∂‖X‖∗ = {Y | 〈Y, X〉 = ‖X‖∗, ‖Y ‖2 ≤ 1} . (16)\nAlgorithm 2 Solving (4) via PALM Input: PΩ(D), the given rank d and λ. Initialize: U0, V0, ε and k = 0.\n1: while not converged do 2: Update lgk+1 and Uk+1 by\nlgk+1 = ‖Vk‖22 and Uk+1 = argmin U\nλ 2 ‖U‖∗ + lgk+1 2 ‖U − Uk + ∇gk(Uk) lgk+1 ‖2F .\n3: Update lhk+1 and Vk+1 by\nlhk+1 = ‖Uk+1‖22 and Vk+1 = argmin V\nλ 2 ‖V ‖∗ + lhk+1 2 ‖V − Vk + ∇hk(Vk) lhk+1 ‖2F .\n4: Check the convergence condition, max{‖Uk+1−Uk‖F , ‖Vk+1−Vk‖F} < ε. 5: end while\nOutput: Uk+1, Vk+1.\nLet Q = PΩ(D − Û V̂ T )V̂ , and by (14), we have Q ∈ 2λ3 ∂‖Û‖∗. By (16), we have〈 3\n2λ Q, Û\n〉 = ‖Û‖∗.\nNote that ‖X‖∗ ≥ ‖X‖F and 〈X,Y 〉 ≤ ‖X‖F‖Y ‖F for any matrices X and Y of the same size. 3\n2λ ‖Q‖F‖Û‖F ≥\n〈 3\n2λ Q, Û\n〉 = ‖Û‖∗ ≥ ‖Û‖F .\nSince ‖Û‖F > 0 and λ 6= 0, thus we obtain\n‖PΩ(D − Û V̂ T )V̂ ‖F = ‖Q‖F ≥ 2λ\n3 .\nÛ is the optimal solution of the problem (13) with the given matrix V̂ , then\n‖PΩ(D − Û V̂ T )‖2F < ‖PΩ(D − Û V̂ T )‖2F + 2λ\n3 ‖Û‖∗ ≤ ‖PΩ(D)‖2F = γ,\nwhere γ > 0 is a constant. Thus,\nC2 = ‖PΩ(D − Û V̂ T )V̂ ‖F ‖PΩ(D − Û V̂ T )‖F > 2λ 3 √ γ > 0.\nPALM Algorithm for Solving (4) We present an efficient proximal alternating linearized minimization (PALM) algorithm for solving the bi-nuclear quasi-norm regularized matrix completion problem (4), as outlined in Algorithm 2. Moreover, Algorithm 2 shares the same convergence property as in Theorems 3 and 4, and has the similar theoretical recovery guarantee as in Theorem 5.\nReferences Bolte, J.; Sabach, S.; and Teboulle, M. 2014. Proximal alternating linearized minimization for nonconvex and nonsmooth\nproblems. Math. Program. 146:459–494.\nLin, Z.; Chen, M.; and Wu, L. 2009. The augmented Lagrange multiplier method for exact recovery of corrupted low-rank matrices. Univ. Illinois, Urbana-Champaign.\nMazumder, R.; Hastie, T.; and Tibshirani, R. 2010. Spectral regularization algorithms for learning large incomplete matrices. J. Mach. Learn. Res. 11:2287–2322.\nMitrinović, D. S. 1970. Analytic Inequalities. Heidelberg: Springer-Verlag.\nWang, Y., and Xu, H. 2012. Stability of matrix factorization for collaborative filtering. In Proc. 29th Int. Conf. Mach. Learn. (ICML), 417–424."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2016,
    "abstractText" : "The Schatten-p quasi-norm (0<p<1) is usually used to replace the standard nuclear norm in order to approximate the rank function more accurately. However, existing Schattenp quasi-norm minimization algorithms involve singular value decomposition (SVD) or eigenvalue decomposition (EVD) in each iteration, and thus may become very slow and impractical for large-scale problems. In this paper, we first define two tractable Schatten quasi-norms, i.e., the Frobenius/nuclear hybrid and bi-nuclear quasi-norms, and then prove that they are in essence the Schatten-2/3 and 1/2 quasi-norms, respectively, which lead to the design of very efficient algorithms that only need to update two much smaller factor matrices. We also design two efficient proximal alternating linearized minimization algorithms for solving representative matrix completion problems. Finally, we provide the global convergence and performance guarantees for our algorithms, which have better convergence properties than existing algorithms. Experimental results on synthetic and real-world data show that our algorithms are more accurate than the state-ofthe-art methods, and are orders of magnitude faster. Introduction In recent years, the matrix rank minimization problem arises in a wide range of applications such as matrix completion, robust principal component analysis, low-rank representation, multivariate regression and multi-task learning. To solve such problems, Fazel, Hindi, and Boyd; Candès and Tao; Recht, Fazel, and Parrilo (2001; 2010; 2010) have suggested to relax the rank function by its convex envelope, i.e., the nuclear norm. In fact, the nuclear norm is equivalent to the l1-norm on singular values of a matrix, and thus it promotes a low-rank solution. However, it has been shown in (Fan and Li 2001) that the l1-norm regularization over-penalizes large entries of vectors, and results in a biased solution. By realizing the intimate relationship between them, the nuclear norm penalty also over-penalizes large singular values, that is, it may make the solution deviate from the original solution as the l1-norm does (Nie, Huang, and Ding 2012; Lu et al. 2015). Compared with the nuclear norm, the Schatten-p quasi-norm for 0 < p < 1 makes a closer Copyright c © 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. approximation to the rank function. Consequently, the Schatten-p quasi-norm minimization has attracted a great deal of attention in images recovery (Lu and Zhang 2014; Lu et al. 2014), collaborative filtering (Nie et al. 2012; Lu et al. 2015; Mohan and Fazel 2012) and MRI analysis (Majumdar and Ward 2011). In addition, many non-convex surrogate functions of the l0-norm listed in (Lu et al. 2014; Lu et al. 2015) have been extended to approximate the rank function, such as SCAD (Fan and Li 2001) and MCP (Zhang 2010). All non-convex surrogate functions mentioned above for low-rank minimization lead to some non-convex, nonsmooth, even non-Lipschitz optimization problems. Therefore, it is crucial to develop fast and scalable algorithms which are specialized to solve some alternative formulations. So far, Lai, Xu, and Yin (2013) proposed an iterative reweighted lease squares (IRucLq) algorithm to approximate the Schatten-p quasi-norm minimization problem, and proved that the limit point of any convergent subsequence generated by their algorithm is a critical point. Moreover, Lu et al. (2014) proposed an iteratively reweighted nuclear norm (IRNN) algorithm to solve many non-convex surrogate minimization problems. For matrix completion problems, the Schatten-p quasi-norm has been shown to be empirically superior to the nuclear norm (Marjanovic and Solo 2012). In addition, Zhang, Huang, and Zhang (2013) theoretically proved that the Schatten-p quasi-norm minimization with small p requires significantly fewer measurements than the convex nuclear norm minimization. However, all existing algorithms have to be solved iteratively and involve SVD or EVD in each iteration, which incurs high computational cost and is too expensive for solving large-scale problems (Cai and Osher 2013; Liu et al. 2014). In contrast, as an alternative non-convex formulation of the nuclear norm, the bilinear spectral regularization as in (Srebro, Rennie, and Jaakkola 2004; Recht, Fazel, and Parrilo 2010) has been successfully applied in many large-scale applications, e.g., collaborative filtering (Mitra, Sheorey, and Chellappa 2010). As the Schatten-p quasi-norm is equivalent to the lp quasi-norm on singular values of a matrix, it is natural to ask the following question: can we design equivalent matrix factorization forms for the cases of the Schatten quasi-norm, e.g., p = 2/3 or 1/2? In order to answer the above question, in this paper we<lb>first define two tractable Schatten quasi-norms, i.e., the<lb>Frobenius/nuclear hybrid and bi-nuclear quasi-norms. We<lb>then prove that they are in essence the Schatten-2/3 and 1/2<lb>quasi-norms, respectively, for solving whose minimization<lb>we only need to perform SVDs on two much smaller fac-<lb>tor matrices as contrary to the larger ones used in existing<lb>algorithms, e.g., IRNN. Therefore, our method is particu-<lb>larly useful for many “big data” applications that need to<lb>deal with large, high dimensional data with missing values.<lb>To the best of our knowledge, this is the first paper to scale<lb>Schatten quasi-norm solvers to the Netflix dataset. More-<lb>over, we provide the global convergence and recovery per-<lb>formance guarantees for our algorithms. In other words, this<lb>is the best guaranteed convergence for algorithms that solve<lb>such challenging problems. Notations and Background<lb>The Schatten-p norm (0 < p < ∞) of a matrix X ∈ Rm×n<lb>(m ≥ n) is defined as ‖X‖Sp ,<lb>(<lb>n<lb>∑ i=1<lb>σ<lb>i (X)<lb>)1/p",
    "creator" : "LaTeX with hyperref package"
  }
}