{
  "name" : "1303.0794.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Reducing Validity in Epistemic ATL to Validity in Epistemic CTL",
    "authors" : [ "Dimitar P. Guelev" ],
    "emails" : [ "gelevdp@math.bas.bg" ],
    "sections" : [ {
      "heading" : null,
      "text" : "F. Mogavero, A. Murano, and M.Y. Vardi (Eds.): 1st Workshop on Strategic Reasoning 2013 (SR’13) EPTCS 112, 2013, pp. 81–89, doi:10.4204/EPTCS.112.13\nc© D. P. Guelev This work is licensed under the Creative Commons Attribution License.\nReducing Validity in Epistemic ATL to Validity in Epistemic CTL\nDimitar P. Guelev Institute of Mathematics and Informatics\nBulgarian Academy of Sciences Sofia, Bulgaria\ngelevdp@math.bas.bg\nWe propose a validity preserving translation from a subset of epistemic Alternating-time Temporal Logic (ATL) to epistemic Computation Tree Logic (CTL). The considered subset of epistemic ATL is known to have the finite model property and decidable model-checking. This entails the decidability of validity but the implied algorithm is unfeasible. Reducing the validity problem to that in a corresponding system of CTL makes the techniques for automated deduction for that logic available for the handling of the apparently more complex system of ATL."
    }, {
      "heading" : "Introduction",
      "text" : "The strategic cooperation modalities of alternating time temporal logic (ATL, [AHK97, AHK02]) generalize the path quantifier ∀ of computation tree logic (CTL). Combinations of ATL with modal logics of knowledge [vdHW03, JvdH04] extend temporal logics of knowledge (cf. e.g [FHMV95]) in the way ATL extends CTL. Automated deduction for CTL and linear time epistemic temporal logics has been studied extensively [FDP01, BDF99, GS09a, GS09b]. There is much less work on the topic for ATL, and hardly any for its epistemic extensions. The decidability of validity in ATL with complete information was established in [GvD06] as a consequence of the finite model property, where the completeness of a Hilbert-style proof system was given too. Hilbert-style proof systems are known to be unsuitable for automating proof search. The situation was remedied by a tableau-based decision procedure developed in [GS09c]. Along with that, the same authors developed tableau systems for branching epistemic temporal logics in [GS09b]. Temporal resolution (cf. e.g. [FDP01]), which is well understood for linear time logics and their epistemic extensions, was considered for ATL in [Zha10], but only for the 〈〈.〉〉◦-subset, which is similar to coalition logic [Pau02] and enables only reasoning about a fixed number of steps. To our knowledge, no similar work has been done for systems epistemic ATL.\nIn this paper we continue the study [GDE11] of a system of ATL with the operator of distributed knowledge under the perfect recall assumption. In [GDE11] we established the finite model property for a subset, and a model-checking algorithm for the whole system. That algorithm assumed that coalition members can use the distributed knowledge of their coalitions to guide their actions. Dropping that assumption is known to render model-checking undecidable [DT11]. As expected, the validity-checking algorithm which these results imply is unfeasible.\nIn this paper we propose a validity preserving translation from another subset of that logic into epistemic CTL, with distributed knowledge and perfect recall again. As it becomes clear below, the need to consider a subset appears to be due to the lack of connectives in epistemic CTL to capture some interactions between knowledge and the progress of time. The translation makes no assumption on coordination within coalitions and there is no dependence on the availability of the past temporal modalities which\nare featured in the axiomatization from [GDE11]. A semantic assumption that we keep is finite branching: only finitely many states should be reachable in one step from any state and models should have only finitely many initial states. Dropping that assumption would disable the fixpoint characterization of (.U.)-objectives that we exploit, because of the requirement on strategies to be uniform. The translation enables the use of the known techniques for mechanized proof in the apparently simpler logic CTL and its epistemic extensions [BF99, GS09b]. Building on our previous work [GDE11], we work with the semantics of ATL on interpreted systems in their form adopted in [LR06]."
    }, {
      "heading" : "1 Preliminaries",
      "text" : "1.1 Propositional epistemic ATL with perfect recall (ATLDiR)\nThe syntax of ATLDiR formulas can be given by the BNF ϕ ,ψ ::= ⊥ | p | (ϕ ⇒ ψ) | DΓϕ | 〈〈Γ〉〉 ◦ϕ | 〈〈Γ〉〉(ϕUψ) | [[Γ]](ϕUψ) Here Γ ranges over finite sets of agents, and p ranges over propositional variables. In this paper we exclude the past temporal operators as their presence does not affect the working of our translation.\nAn interpreted system is defined with respect to some given finite set Σ = {1, . . . ,N} of agents, and a set of propositional variables (atomic propositions) AP. There is also an environment e 6∈ Σ; in the sequel we write Σe for Σ∪{e}.\nDefinition 1 (interpreted systems) An interpreted system for Σ and AP is a tuple of the form 〈〈Li : i ∈ Σe〉, I,〈Acti : i ∈ Σe〉, t,V 〉 (1)\nwhere: Li, i ∈ Σe, are nonempty sets of local states; LΓ stands for ∏\ni∈Γ Li, Γ ⊆ Σe;\nelements of LΣe are called global states; I ⊆ LΣe is a nonempty set of initial global states; Acti, i ∈ Σe, are nonempty sets of actions; ActΓ stands for ∏\ni∈Γ Acti;\nt : LΣe ×ActΣe → LΣe is a transition function; V ⊆ LΣe ×AP is a valuation of the atomic propositions.\nFor every i ∈ Σe and l′, l′′ ∈ LΣe such that l′i = l′′i and l′e = l′′e the function t satisfies (t(l′,a))i = (t(l′′,a))i.\nIn the literature an interpreted system also includes a protocol to specify the actions which are permitted at every particular state. Protocols are not essential to our study here as the effect of a prohibited action can be set to that of some fixed permitted action (which is always supposed to exist) to produce an equivalent system in which all actions are always permitted. Our variant of interpreted systems is borrowed from [LR06] and has a technically convenient feature which is not present in other works [FHMV95, LQR]: every agent’s next local state can be directlty affected by the local state of the environment through the transition function. Here follow the technical notions that are relevant to satisfaction of ATL formulas on interpreted systems.\nDefinition 2 (global runs and local runs) Given an n ≤ ω , a run of length n is a sequence r = l0a0l10a1 . . . ∈ LΣe(ActΣe LΣe) n such that l0 ∈ I and l j+1 = t(l j,a j) for all j < n. A run is infinite, if n = ω ; otherwise it is finite. In either case we write |r| for the length n of r. (Note that a run of length n < ω is indeed a sequence of 2n+ 1 states and actions.)\nGiven r as above and Γ ⊆ Σ, we write rΓ for the corresponding local run\nl0Γa 0 Γ . . .a n−1 Γ l n Γ ∈ LΓ(ActΓLΓ) n\nof Γ in which l jΓ = 〈l j i : i ∈ Γ〉 and a j Γ = 〈a j i : i ∈ Γ〉.\nWe denote the set of all runs of some fixed length n ≤ ω , the set of all finite runs, and the set of all runs in IS by Rn(IS), Rfin(IS) and R(IS), respectively.\nGiven i, j < ω and an r as above such that i ≤ j ≤ |r|, we write r[i.. j] for liai . . .a j−1l j.\nDefinition 3 (indiscernibility) Given r′,r′′ ∈ R(IS) and i ≤ |r′|, |r′′|, we write r′ ∼Γ,i r′′ if r′[0..i]Γ = r′′[0..i]Γ. We write r′ ∼Γ r′′ for the conjunction of r′ ∼Γ,|r′| r ′′ and |r′|= |r′′|.\nSequences of the form r /0 consist of 〈〉s, and, consequently, [r] /0 is the class of all the runs of length |r|. Obviously ∼Γ,n and ∼Γ are equivalence relations on R(IS).\nDefinition 4 We denote {r′ ∈ R(IS) : r′ ∼Γ r} by [r]Γ.\nDefinition 5 (coalition strategies) A strategy for Γ ⊆ Σ is a vector s = 〈si : i ∈ Γ〉 of functions si of type {ri : r ∈ Rfin(IS)} → Acti. We write S(Γ, IS) for the set of all the strategies for Γ in the considered interpreted system IS. Given s ∈ S(Γ, IS) and r ∈ Rfin(IS), we write out(r,s) for the set\n{r′ = l0a0 . . .an−1ln . . . ∈ Rω(IS) : r′[0..|r|] = r,a ji = si(r[0.. j]Γ) for all i ∈ Γ and j ≥ |r|}.\nof the outcomes of r when Γ sticks to s from step |r| on. Given an X ⊆ Rfin(IS), out(X ,s) is ⋃\nr∈X out(r,s).\nStrategies, as defined above, are determined by the local views of the considered coalition members and are therefore uniform.\nDefinition 6 (modelling relation of ATLDiR) The relation IS,r |= ϕ is defined for r ∈ Rfin(IS) and formulas ϕ by the clauses:\nIS,r 6|=⊥; IS, l0a0 . . .an−1ln |= p iff V (ln, p) for atomic propositions p; IS,r |= ϕ ⇒ ψ iff either IS,r 6|= ϕ or IS,r |= ψ ; IS,r |= DΓϕ iff IS,r′ |= ϕ for all r′ ∈ [r]Γ; IS,r |= 〈〈Γ〉〉 ◦ϕ iff there exists an s ∈ S(Γ, IS) such that IS,r′[0..|r|+1] |= ϕ for all r′ ∈ out([r]Γ,s); IS,r |= 〈〈Γ〉〉(ϕUψ) iff there exists an s ∈ S(Γ, IS) s. t. for every r′ ∈ out([r]Γ,s) there exists a k < ω s. t. IS,r′[0..|r|+ i] |= ϕ for all i < k and IS,r′[0..|r|+ k] |= ψ ; IS,r |= [[Γ]](ϕUψ) iff for every s ∈ S(Γ, IS) there exist an r′ ∈ out([r]Γ,s) and a k < ω s. t.\nIS,r′[0..|r|+ i] |= ϕ for all i < k and IS,r′[0..|r|+ k] |= ψ . Validity of formulas in entire interpreted systems and on the class of all interpreted systems, that is, in the logic ATLDiR, is defined as satisfaction at all 0-length runs in the considered interpreted system, and at all the 0-length runs in all the systems in the considered class, respectively.\nIn this paper we assume that each coalition member uses only its own observation power in following a coalition strategy. Allowing coalition members to share their observations gives rise to a more general form of strategy, which are functions of type {rΓ : r ∈ Rfin(IS)} → ActΓ, and which was assumed by the model-checkig algorithm proposed in [GDE11]."
    }, {
      "heading" : "Abbreviations",
      "text" : "⊤, ¬, ∨, ∧ and ⇔ have their usual meanings. To keep the use of ( and ) down, we assume that unary connectives bind the strongest, the binary modalities 〈〈Γ〉〉(.U.) and [[Γ]](.U.), and the derived ones below, bind the weakest, and their parentheses are never omitted, and the binary boolean connectives come in the middle, in decreasing order of their binding power as follows: ∧, ∨, ⇒ and ⇔. We enumerate coalitions without the { and }. E.g., the shortest way to write 〈〈{1}〉〉(((p ⇒ q)∧P{1}r)UD{2,3}(r∨q))) is 〈〈1〉〉((p ⇒ q)∧P1rUD2,3(r∨q)). We write P for the dual of D:\nPΓϕ ⇋ ¬DΓ¬ϕ .\nThe rest of the combinations of the cooperation modality and future temporal connectives are defined by the clauses\n〈〈Γ〉〉✸ϕ ⇋ 〈〈Γ〉〉(⊤Uϕ) 〈〈Γ〉〉✷ϕ ⇋ ¬[[Γ]]✸¬ϕ 〈〈Γ〉〉(ϕWψ)⇋ ¬[[Γ]](¬ψU¬ψ ∧¬ϕ) [[Γ]]✸ϕ ⇋ [[Γ]](⊤Uϕ) [[Γ]]✷ϕ ⇋ ¬〈〈Γ〉〉✸¬ϕ [[Γ]](ϕWψ)⇋ ¬〈〈Γ〉〉(¬ψU¬ψ ∧¬ϕ)\n1.2 ATLDiR with epistemic objectives only\nIn [GDE11] we axiomatized a subset of ATLDiR with past in which 〈〈.〉〉(.U.) was allowed only in the derived construct 〈〈Γ〉〉✸DΓϕ , and [[.]](.U.) was allowed only in the derived construct 〈〈Γ〉〉✷ϕ . Because of the validity of the equivalences\n〈〈Γ〉〉 ◦ϕ ⇔ 〈〈Γ〉〉 ◦DΓϕ and 〈〈Γ〉〉✷ϕ ⇔ 〈〈Γ〉〉✷DΓϕ ,\nthat entailed that all the objectives allowed in that subset were epistemic. We argued that, under some assumptions, any 〈〈.〉〉(.U.) formula could be transformed into an equivalent one of the form 〈〈Γ〉〉✸DΓϕ thus asserting the significance of the considered subset. Both the axiomatization and the reduction to epistemic goals relied on the presence of the past operators. In this paper we consider another subset of ATLDiR. Its formulas have the syntax\nϕ ,ψ ::= ⊥ | p | (ϕ ⇒ ψ) | DΓϕ | 〈〈Γ〉〉 ◦ϕ | 〈〈Γ〉〉(DΓϕUDΓψ) (2)\nUnlike the subset from [GDE11], here we allow formulas of the form 〈〈Γ〉〉(DΓϕUDΓψ). However, we exclude even the special case 〈〈Γ〉〉✷ϕ of the use of [[Γ]](PΓϕUPΓψ). The reasons are discussed in the end of Section 2.\n1.3 CTL with distributed knowledge\nThis is the target logic of our translation. Its formulas have the syntax\nϕ ,ψ ::= ⊥ | p | (ϕ ⇒ ψ) | DΓϕ | ∃ ◦ϕ | ∃(ϕUψ) | ∀(ϕUψ)\nwhere Γ ranges over finite sets of agents as above. The clauses for the semantics of the connectives in common with ATLDiR are as in ATL D iR; the clauses about formulas built using ∃ and ∀ are as follows:\nIS,r |= ∃◦ϕ iff there exists an r′ ∈ R|r|+1(IS) such that r = r′[0..|r|] and IS,r′ |= ϕ ; IS,r |= ∃(ϕUψ) iff there exists an r′ ∈ Rω(IS) such that r = r′[0..|r|] and a k < ω such that IS,r′[0..|r|+ i] |= ϕ for all i < k and IS,r′[0..|r|+ k] |= ψ ; IS,r |= ∀(ϕUψ) iff for every r′ ∈ Rω(IS) such that r = r′[0..|r|] there exists a k < ω such that\nIS,r′[0..|r|+ i] |= ϕ for all i < k and IS,r′[0..|r|+ k] |= ψ . Note that the the occurrences of D /0 is vital for the validity of the equivalences\nP /0∃◦ϕ ⇔ [[ /0]]◦ϕ , P /0∃(ϕUψ)⇔ [[ /0]](ϕUψ) and D /0∀(ϕUψ)⇔ 〈〈 /0〉〉(ϕUψ).\nin the combined language of ATLDiR and CTL because of the requirement on strategies to be uniform; e.g., 〈〈 /0〉〉(ϕUψ) means that (ϕUψ) holds along all the extensions of all the runs which are indiscernible from the reference run to the empty coalition. Therefore here 〈〈 /0〉〉 does not subsume ∀ in the straightforward way known about the case ATL of complete information.\nThe combination ∀◦ and the combinations of ∃ and ∀ with the derived temporal connectives (.W.), ✸ and ✷ are defined in the usual way.\n2 A validity preserving translation into CTL+D with perfect recall\nOur translation captures the subset of ATL which is given by the BNF\nϕ ,ψ ::= ⊥ | p | (ϕ ⇒ ψ) | ⊖ϕ | (ϕSψ) | DΓϕ | 〈〈Γ〉〉 ◦ϕ | 〈〈Γ〉〉(DΓϕUDΓψ) We explain how to eliminate occurrences of 〈〈.〉〉 in formulas of the form 〈〈Γ〉〉(DΓϕUDΓψ) first. In the sequel we write [α/p]β for the substitution of the occurrences of atomic proposition p in β by α .\nProposition 7 Assuming that p and q are fresh atomic propositions, the satisfiability of [〈〈Γ〉〉(DΓϕUDΓψ)/p]χ (at a 0-length run) is equivalent to the satisfiability of\nχ ∧ D /0∀✷(p∨q ⇒ DΓψ ∨ (DΓϕ ∧〈〈Γ〉〉 ◦q)) ∧ D /0∀✷(p ⇔ DΓψ ∨ (DΓϕ ∧〈〈Γ〉〉 ◦ p)) ∧ D /0∀✷(p ⇒ DΓψ ∨ (DΓϕ ∧∀◦∀(q ⇒ DΓϕUq ⇒ DΓψ))).\n(3)\nNext we explain how to eliminate occurrences of the ”basic” ATL construct 〈〈Γ〉〉◦ϕ . Let IS stand for some arbitrary interpreted system (1) with finite branching, with Σ = {1, . . . ,N} as its set of agents, AP as its vocabulary. We adapt the following simple observation, which works in case Acti, i ∈ Σ are fixed. Readers who are familiar with the original semantics of ATL on alternating transition systems (ATS) from [AHK97] will recognize the similarity of our technique with the transformation of concurrent game structures into equivalent ATS from [GJ04]. Assuming that Acti, i ∈ Σe, are pairwise disjoint, and disjoint with AP, we consider the vocabulary APAct = AP∪ ⋃\ni∈Σe Acti.\nDefinition 8 Given IS and ∗ 6∈ ⋃\ni∈Σe Acti, we define the interpreted system\nISAct = 〈〈LActi : i ∈ Σe〉, I Act,〈Acti : i ∈ Σe〉, tAct,V Act〉\nby putting:\nLActi = Li × (Acti ∪{∗}), i ∈ Σe; IAct = {〈〈li,∗〉 : i ∈ Σe〉 : l ∈ I}; tAct(〈〈li,ai〉 : i ∈ Σe〉,b) = 〈〈(t(l,b))i,bi〉 : i ∈ Σe〉; V Act(〈〈li,ai〉 : i ∈ Σe〉, p) ↔ V (〈li, : i ∈ Σe〉, p) for p ∈ AP; V Act(〈〈li,ai〉 : i ∈ Σe〉,b) ↔ b = a j for b ∈ Act j, j ∈ Σe.\nIn short, an ISAct state is an IS state augmented with a record of the actions which lead to it, the dummy symbol ∗ being used in initial states. Let R ⊆ LActΣe ×L Act Σe and R(〈〈li,ai〉 : i ∈ Σe〉,〈〈vi,bi〉 : i ∈ Σe〉) iff v = tAct(l,b). Then ISAct,r |= ∃ ◦ϕ iff ISAct,r al′ |= ϕ for some l′ ∈ R(l) and the only a ∈ ActΣe such that r al′ ∈ Rfin(ISAct). The key observation in our approach is that\nIS,r |= 〈〈i1, . . . , ik〉〉 ◦ϕ iff ISAct,rAct |= ∨\nai1∈Acti1\n. . . ∨\naik∈Actik\nD{i1,...,ik}∀◦\n(\nk ∧\nj=1\nai j ⇒ ϕ\n)\n(4)\nFor this observation to work without refering to the actions in the particular interpreted system, given an arbitrary IS, we enrich it with dedicated actions which are linked to the objectives occurring in the considered formula. We define the transition function on these actions so that if a particular ◦ϕ-objective can be achieved at finite run r at all, then it can be achieved by taking the corresponding dedicated actions at the last state of r. This can be achieved in forest-like systems where runs can be determined from their final states. Similarly, we introduce express actions for the environment that enable it to foil objectives at states at which they objectives cannot be achieved by the respective coalitions using any strategy based on the original actions. (Giving the environment such powers does not affect the satisfaction of formulas as it never participates in coalitions.) The sets Acti, i ∈ Σe of atomic propositions by which we model actions satisfy the formula\nA(Act1, . . . ,ActN ,Acte)⇋ ∧\na1∈Act1\n. . . ∧\naN∈ActN\n∧\nae∈Acte\n∃◦ ∧\ni∈Σe\nai,\nwhich states that any vector of actions from ActΣe produces a transition. Consider an ATL D iR formula of the form below with no occurrences of (.U.)-objectives:\nχ ∧D /0∀✷A(Act1, . . . ,ActN ,Acte) (5)\nHere Act1, . . . ,ActN ,Acte consist of the atomic propositions which have been introduced to eliminate 〈〈Γ〉〉 ◦ϕ-subformulas so far. For the original χ we assume Acti = {nopi}, i ∈ Σe, where nopi have no specified effect. We remove the occurrences of 〈〈Γ〉〉◦ϕ-subformulas in χ working bottom-up as follows.\nProposition 9 Let aΓ,i,ϕ , i ∈ Γ∪{e}, be fresh atomic propositions, Act′i = Acti ∪{aΓ,i,ϕ} for i ∈ Γ∪{e} and Act′i = Acti for i ∈ Σ\\Γ. Then the satisfiability of\n[〈〈Γ〉〉 ◦ϕ/p]χ ∧D /0∀✷A(Act1, . . . ,ActN ,Acte) (6)\nentails the satisfiability of the formula [\nDΓ∀◦\n(\n∧\ni∈Γ aΓ,i,ϕ ⇒ ϕ\n)\n/p\n]\nχ∧\nD /0∀✷\n(\nDΓ∀◦\n(\n∧\ni∈Γ aΓ,i,ϕ ⇒ ϕ\n) ∨PΓ∀◦ (aΓ,e,ϕ ⇒¬ϕ) ) ∧\nD /0∀✷A(Act′1, . . . ,Act ′ N ,Act ′ e).\n(7)\nThe above proposition shows how to eliminate one by one all the occurrences of the cooperation modalities in an any given ATLDiR formula χ with the cooperation modalities appearing only in subformulas of the form 〈〈Γ〉〉 ◦ϕ and obtain a CTL+D formula χ ′ such that if χ is satisfiable, then so is χ ′. Now consider a purely-CTL+D formula of the form (5). The satisfaction of (5) requires just a transition relation for the passage of time to define as it contains no 〈〈Γ〉〉s and hence no reference to actions. That is, we assume a satisfying model of the form\nIS− = 〈〈Li : i ∈ Σe〉, I,−,V 〉 (8)\nwhere Li, i ∈ Σe, I and V are as in interpreted systems, and − is a serial binary relation on the set of the global states LΣe that represents the passage of time. We define the remaining interpreted system components as follows. We choose the set of actions of each agent i, including the environment, to be the corresponding set of atomic propositions Acti from (5). For any a ∈ ActΣe and any l ∈ LΣe we choose t(l,a) to be an arbitrary member of −(l)∩ ⋂\ni∈Σe {l′ ∈ LΣe : V (l ′,ai)}. The nonemptiness of the latter set is\nguaranteed by the validity of A(Act1, . . . ,ActN ,Acte) in IS−, which states that every state has a successor\nsatisfying the conjunction ∧\ni∈Σe ai for any given vector of actions a ∈ ActΣe . Let IS stand for the system\nobtained by this definition of Acti, i ∈ Σe, and t. It remains to show that\nIS,r |=DΓ∀◦\n(\n∧ i∈Γ aΓ,i,ϕ ⇒ ϕ\n)\n(9)\nis equivalent to IS,r |= 〈〈Γ〉〉 ◦ϕ for any subformula 〈〈Γ〉〉 ◦ϕ eliminated in the process of obtaining (5). For the forward direction, establishing that the actions aΓ,i,ϕ , i∈ Γ provides Γ with a strategy to achieve ϕ in one step is easily done by a direct check. For the converse direction, if (9) is false, then the validity of the second conjunctive member of (7) entails that Γ cannot rule out the possibility that the environment can enforce ¬ϕ in one step by choosing its corresponding action aΓ,e,ϕ ."
    }, {
      "heading" : "Formulas of the form [[Γ]](PΓϕUPΓψ)",
      "text" : "We first note that no restriction on formulas of the respective more general form [[Γ]](ϕUψ) is necessary in the case of complete information.\nProposition 10 (eliminating [[Γ]](ϕUψ) in ATL with complete information) Let p and q be some fresh atomic propositions. The satisfiability of\n[[[Γ]](ϕUψ)/p]χ\nin ATL with complete information is equivalent to the satisfiability of\nχ ∧ ∀✷(p∨q ⇒ ψ ∨ (ϕ ∧ [[Γ]]◦q)) ∧ ∀✷(p ⇔ ψ ∨ (ϕ ∧ [[Γ]]◦ p)) ∧ ∀✷(p ⇒ ψ ∨ (ϕ ∧∀◦∀(q ⇒ ϕUq ⇒ ψ))).\n(10)\nIn the incomplete information case our approach suggests replacing [[[Γ]](PΓϕUPΓψ)/p]χ by\nχ ∧ D /0∀✷(p∨q ⇒ PΓψ ∨ (PΓϕ ∧ [[Γ]]◦q)) ∧ D /0∀✷(p ⇔ PΓψ ∨ (PΓϕ ∧ [[Γ]]◦ p)) ∧ D /0∀✷(p ⇒ PΓψ ∨ (PΓϕ ∧ . . .)).\nwhere, in a forest-like system IS, q is supposed to mark states which are reached from runs r in which Γ cannot achieve (PΓϕUPΓψ) when Γ’s actions a are complemented on behalf of the non-members of Γ by some actions ba1,r1 that foil the objective, and . . . is supposed to express that any sequence of vectors of actions a1,a2, . . . ∈ ActΓ when complemented by the corresponding ba1,r1 , ba2,r2 , . . . can generate a sequence r1,r2, . . . of finite runs, starting with the reference one, each of them being Γ-indiscernible from the extension of the previous one, by the outcome of the respective ak ·bak ,rk , such that there exists a k < ω with IS,r j |= q∧DΓϕ , j = 1, . . . ,k−1, and IS,rk |= ¬q∨DΓψ . The fixpoint construct that would best serve expressing this condition can be written as µX .α ∨ (β ∧PΓ∀◦X) in the modal µ-calculus (cf. e.g. [BS06]). Finding a substitute for it in CTL+D appears problematic."
    }, {
      "heading" : "Concluding remarks",
      "text" : "Our approach is inspired by temporal resolution [FDP01], which has been extended to epistemic LTL [DFW98] and to (non-epistemic) CTL and CTL∗ [BF99, BDF99], the latter system being the closest to our target system CTL+D. Following the example of these works, a resolution system for CTL+D could be proved complete by showing how to reproduce in it any proof in some complete, e.g., Hilbert\nstyle proof system. A complete axiomatization for epistemic CTL∗ with perfect recall can be found in [vdMK03], but the completeness was demonstrated with respect to the so-called bundle semantics, where a model may consist of some set of runs that need not be all the runs generated by a transition system. and the form of collective knowledge considered in [vdMK03] is common knowledge, whereas we have distributed knowledge. The setting for the complexity results from [HV86] is similar. The tableau-based decision procedure for epistemic CTL with both common and distributed knowledge from [GS09b] does not cover the case of perfect recall. To the best of our knowledge no decision procedure of feasible complexity such as the resolution- and tableau-based ones that are available for so many closely related systems from the above works has been developed yet for validity in CTL+D with perfect recall."
    }, {
      "heading" : "Acknowledgement",
      "text" : "The research in this paper was partially supported through Bulgarian National Science Fund Grant DID02/32/2009."
    } ],
    "references" : [ {
      "title" : "Alternating-time Temporal Logic",
      "author" : [ "Rajeev Alur", "Tom Henzinger", "Orna Kupferman" ],
      "venue" : "In Proceedings of FCS’97,",
      "citeRegEx" : "Alur et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Alur et al\\.",
      "year" : 1997
    }, {
      "title" : "Alternating-time temporal logic",
      "author" : [ "Rajeev Alur", "Tom Henzinger", "Orna Kupferman" ],
      "venue" : "Journal of the ACM,",
      "citeRegEx" : "Alur et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Alur et al\\.",
      "year" : 2002
    }, {
      "title" : "Clausal Resolution for CTL",
      "author" : [ "Alexander Bolotov", "Clare Dixon", "Michael Fisher" ],
      "venue" : "In MFCS, volume 1672 of LNCS,",
      "citeRegEx" : "Bolotov et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Bolotov et al\\.",
      "year" : 1999
    }, {
      "title" : "A clausal resolution method for CTL branching-time temporal logic",
      "author" : [ "Alexander Bolotov", "Michael Fisher" ],
      "venue" : "J. Exp. Theor. Artif. Intell.,",
      "citeRegEx" : "Bolotov and Fisher.,? \\Q1999\\E",
      "shortCiteRegEx" : "Bolotov and Fisher.",
      "year" : 1999
    }, {
      "title" : "Resolution for Temporal Logics of Knowledge",
      "author" : [ "Clare Dixon", "Michael Fisher", "Michael Wooldridge" ],
      "venue" : "Journal of Logic and Computation,",
      "citeRegEx" : "Dixon et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Dixon et al\\.",
      "year" : 1998
    }, {
      "title" : "Model-checking ATL under Imperfect Information and Perfect Recall Semantics is Undecidable",
      "author" : [ "Catalin Dima", "Ferucio Laurentiu Tiplea" ],
      "venue" : "CoRR, abs/1102.4225,",
      "citeRegEx" : "Dima and Tiplea.,? \\Q2011\\E",
      "shortCiteRegEx" : "Dima and Tiplea.",
      "year" : 2011
    }, {
      "title" : "Clausal Temporal Resolution",
      "author" : [ "Michael Fisher", "Clare Dixon", "Martin Peim" ],
      "venue" : "ACM Trans. Comput. Log.,",
      "citeRegEx" : "Fisher et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Fisher et al\\.",
      "year" : 2001
    }, {
      "title" : "Reasoning about Knowledge",
      "author" : [ "Ronald Fagin", "Joseph Halpern", "Yoram Moses", "Moshe Vardi" ],
      "venue" : null,
      "citeRegEx" : "Fagin et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Fagin et al\\.",
      "year" : 1995
    }, {
      "title" : "An Alternating-time Temporal Logic with Knowledge, Perfect Recall and Past: Axiomatisation and Model-checking",
      "author" : [ "Dimitar P. Guelev", "Catalin Dima", "Constantin Enea" ],
      "venue" : "Journal of Applied NonClassical Logics,",
      "citeRegEx" : "Guelev et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Guelev et al\\.",
      "year" : 2011
    }, {
      "title" : "Comparing Semantics for Logics of Multi-agent Systems. Synthese",
      "author" : [ "Valentin Goranko", "Wojtek Jamroga" ],
      "venue" : null,
      "citeRegEx" : "Goranko and Jamroga.,? \\Q2004\\E",
      "shortCiteRegEx" : "Goranko and Jamroga.",
      "year" : 2004
    }, {
      "title" : "Tableau-based decision procedure for full coalitional multiagent temporal-epistemic logic of linear time",
      "author" : [ "Valentin Goranko", "Dmitry Shkatov" ],
      "venue" : "In AAMAS",
      "citeRegEx" : "Goranko and Shkatov.,? \\Q2009\\E",
      "shortCiteRegEx" : "Goranko and Shkatov.",
      "year" : 2009
    }, {
      "title" : "Tableau-based decision procedure for the full coalitional multiagent logic of branching time",
      "author" : [ "Valentin Goranko", "Dmitry Shkatov" ],
      "venue" : "In MALLOW,",
      "citeRegEx" : "Goranko and Shkatov.,? \\Q2009\\E",
      "shortCiteRegEx" : "Goranko and Shkatov.",
      "year" : 2009
    }, {
      "title" : "Tableau-based decision procedures for logics of strategic ability in multiagent systems",
      "author" : [ "Valentin Goranko", "Dmitry Shkatov" ],
      "venue" : "ACM Trans. Comput. Log.,",
      "citeRegEx" : "Goranko and Shkatov.,? \\Q2009\\E",
      "shortCiteRegEx" : "Goranko and Shkatov.",
      "year" : 2009
    }, {
      "title" : "Decidability and Complete Axiomatization of the Alternating-time Temporal Logic",
      "author" : [ "Valentin Goranko", "Govert van Drimmelen" ],
      "venue" : "Theoretical Computer Science,",
      "citeRegEx" : "Goranko and Drimmelen.,? \\Q2006\\E",
      "shortCiteRegEx" : "Goranko and Drimmelen.",
      "year" : 2006
    }, {
      "title" : "The complexity of reasoning about knowledge and time: Extended abstract",
      "author" : [ "Joseph Y. Halpern", "Moshe Y. Vardi" ],
      "venue" : "In Juris Hartmanis, editor,",
      "citeRegEx" : "Halpern and Vardi.,? \\Q1986\\E",
      "shortCiteRegEx" : "Halpern and Vardi.",
      "year" : 1986
    }, {
      "title" : "Agents That Know How to Play",
      "author" : [ "Wojciech Jamroga", "Wiebe van der Hoek" ],
      "venue" : "Fundamenta Informaticae,",
      "citeRegEx" : "Jamroga and Hoek.,? \\Q2004\\E",
      "shortCiteRegEx" : "Jamroga and Hoek.",
      "year" : 2004
    }, {
      "title" : "MCMAS: a Model Checker for MultiAgents Systems. URL: http://www-lai.doc.ic.ac.uk/mcmas",
      "author" : [ "LQR] Alessio Lomuscio", "Hongyang Qu", "Franco Raimondi" ],
      "venue" : "Accessed in January,",
      "citeRegEx" : "Lomuscio et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Lomuscio et al\\.",
      "year" : 2010
    }, {
      "title" : "Model checking knowledge, strategies, and games in multi-agent systems",
      "author" : [ "Alessio Lomuscio", "Franco Raimondi" ],
      "venue" : "In Proceedings of AAMAS’06,",
      "citeRegEx" : "Lomuscio and Raimondi.,? \\Q2006\\E",
      "shortCiteRegEx" : "Lomuscio and Raimondi.",
      "year" : 2006
    }, {
      "title" : "A Modal Logic for Coalitional Power in Games",
      "author" : [ "Marc Pauly" ],
      "venue" : "Journal of Logic and Computation,",
      "citeRegEx" : "Pauly.,? \\Q2002\\E",
      "shortCiteRegEx" : "Pauly.",
      "year" : 2002
    }, {
      "title" : "Cooperation, Knowledge and Time: Alternatingtime Temporal Epistemic Logic and Its Applications",
      "author" : [ "Wiebe van der Hoek", "Michael Wooldridge" ],
      "venue" : "Studia Logica,",
      "citeRegEx" : "Hoek and Wooldridge.,? \\Q2003\\E",
      "shortCiteRegEx" : "Hoek and Wooldridge.",
      "year" : 2003
    }, {
      "title" : "Complete Axiomatizations for Reasoning about Knowledge and Branching Time",
      "author" : [ "Ron van der Meyden", "Ka-shu Wong" ],
      "venue" : "Studia Logica,",
      "citeRegEx" : "Meyden and Wong.,? \\Q2003\\E",
      "shortCiteRegEx" : "Meyden and Wong.",
      "year" : 2003
    } ],
    "referenceMentions" : [ ],
    "year" : 2017,
    "abstractText" : "We propose a validity preserving translation from a subset of epistemic Alternating-time Temporal Logic (ATL) to epistemic Computation Tree Logic (CTL). The considered subset of epistemic ATL is known to have the finite model property and decidable model-checking. This entails the decidability of validity but the implied algorithm is unfeasible. Reducing the validity problem to that in a corresponding system of CTL makes the techniques for automated deduction for that logic available for the handling of the apparently more complex system of ATL.",
    "creator" : "LaTeX with hyperref package"
  }
}