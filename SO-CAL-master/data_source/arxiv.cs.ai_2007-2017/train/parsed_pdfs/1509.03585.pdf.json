{
  "name" : "1509.03585.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Some Supplementaries to The Counting Semantics for Abstract Argumentation",
    "authors" : [ "Fuan Pu", "Jian Luo", "Guiming Luo" ],
    "emails" : [ "pfa12@mails.tsinghua.edu.cn,", "j-luo10@mails.tsinghua.edu.cn,", "gluo@tsinghua.edu.cn" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Some Supplementaries to The Counting Semantics for Abstract Argumentation\nFuan Pu, Jian Luo and Guiming Luo School of Software, Tsinghua University\nBeijing China, 100084 pfa12@mails.tsinghua.edu.cn, j-luo10@mails.tsinghua.edu.cn, gluo@tsinghua.edu.cn\nAbstract—Dung’s abstract argumentation framework consists of a set of interacting arguments and a series of semantics for evaluating them. Those semantics partition the powerset of the set of arguments into two classes: extensions and nonextensions. In order to reason with a specific semantics, one needs to take a credulous or skeptical approach, i.e. an argument is eventually accepted, if it is accepted in one or all extensions, respectively. In our previous work [1], we have proposed a novel semantics, called counting semantics, which allows for a more fine-grained assessment to arguments by counting the number of their respective attackers and defenders based on argument graph and argument game. In this paper, we continue our previous work by presenting some supplementaries about how to choose the damaging factor for the counting semantics, and what relationships with some existing approaches, such as Dung’s classical semantics, generic gradual valuations. Lastly, an axiomatic perspective on the ranking semantics induced by our counting semantics are presented.\nKeywords—abstract argumentation; argument game; graded assessment; counting semantics; ranking-based semantics;\nI. INTRODUCTION\nArgumentation is closer to human reasoning than classical logic. It provides the means for comparing information by analysing pros and cons when trying to make a decision [2]. Argumentation theory has gained interest in artificial intelligence since it provides the basis for computational models inspired by the way humans reason. These models have extended classical reasoning approaches, based on deductive logic, that were proving increasingly inadequate for problems requiring non-monotonic reasoning and explanatory reasoning not available in standard nonmonotonic logics.\nThe most popularly used framework to talk about general issues of argumentation is that of Dung’s abstract argumentation [3], in which arguments are represented as atomic entities and the interactions between different arguments are modeled by an attack relation. It provides a series of extension-based semantics for solving the inconsistent knowledges by selecting acceptable subsets. Generally, for a specific extension-based semantics, there is usually a set of extensions that is consistent with the semantical context. In order to reason with a semantics one has to take either a credulous or skeptical perspective. That is, an argument is ultimately accepted with respect to a semantics if the argument is contained in at least one extension consistent with that semantics (the credulous perspective) or if the argument is included in all extensions consistent with the semantics (the skeptical perspective). This extreme points of views may cause undesired results, since in extreme cases the\nset of credulously accepted arguments may contain nearly the whole set of arguments and the set of skeptically accepted set of arguments may be nearly empty.\nIn order to get a more fine-grained assessment on arguments, we had proposed a new semantics that generalized the classical extension-based semantics in [1]. Our proposal is based on counting the number of attackers and defenders for each argument, hence called counting semantics. An argument is more acceptable if there are more defenders for it and less attackers against it. In this paper, we will continue our previous work to discuss the determination of the damping factor for the counting semantics and relate our proposal with some existing approaches.\nThe rest of this paper is structured as follows. In Section II, we give a brief overview on abstract argumentation. Section III provides the basic concept of the counting semantics. Section IV discusses the selection of the damping factor. We relate our proposal with classical (extension-based) semantics in Section V and with the generic gradual valuation in Section VI. In Section VII, we present an axiomatic perspective on the ranking semantics induced by our counting semantics. We conclude in Section VIII."
    }, {
      "heading" : "II. ABSTRACTION ARGUMENTATION FRAMEWORK",
      "text" : "In this section, we briefly outline the key elements of abstract argumentation frameworks. Now let us begin Dung’s abstract characterization of an argumentation system [3]:\nDefinition 1 (Abstract Argumentation Framework). An argumentation framework is a pair AF = 〈X ,R〉 where X is a finite set of arguments and R ⊆ X ×X is a binary relation on X , also called attack relation. (a, b) ∈ R means that a attacks b, or a is an attacker of b. Often, we write (a, b) ∈ R as aRb.\nWe denote by R−(x) (respectively, R+(x)) the subset of X containing those arguments that attack (respectively, are attacked by) the argument x ∈ X , extending this notation in the natural way to sets of arguments, so that for S ⊆ X , R−(S) , {x ∈ X : ∃y ∈ S such that xRy} and R+(S) , {x ∈ X : ∃y ∈ S such that yRx}. Now, let us characterise two fundamental notions of conflict-free and defence.\nDefinition 2 (Conflict-free, Defense). Let AF = 〈X ,R〉 be an argumentation framework, let S ⊆ X and x ∈ X .\n• S is conflict-free iff S ∩R−(S) = ∅. • S defends argument x iff R−(x) ⊆ R+(S). It is also\nsaid that argument x is acceptable with respect to S.\nar X\niv :1\n50 9.\n03 58\n5v 1\n[ cs\n.A I]\n1 1\nSe p\n20 15\nObviously, a set of arguments is conflict-free iff no argument in that set attacks another. A set of arguments defends a given argument iff it attacks all its attackers.\nDefinition 3 (Characteristic Function). The characteristic function of an argumentation framework 〈X ,R〉 is a function F : 2X 7→ 2X such that, given S ⊆ X , F(S) = {x ∈ X |S defends x}.\nStated otherwise, F(S) is the set of all arguments that S defends. To define the solutions of an argumentation framework, we mean choosing a set of arguments that satisfies some acceptable criteria. Several of these properties, called extensions or semantics, have been proposed by Dung.\nDefinition 4 (Acceptability Semantics). Let S ⊆ X be a conflict-free set of arguments in argument system 〈X ,R〉.\n• S is an admissible extension iff S ⊆ F(S). • S is a complete extension iff S = F(S). • S is a grounded extension iff S = F(S) and S is\nminimal (w.r.t. ⊆). It is the least fixed point of F, and its existence and uniqueness have been proved in [3] and [4].\n• S is a preferred extension iff S = F(S) and S is maximal (w.r.t. ⊆).\n• S is a stable extension iff S = X\\R+(S) or S = R+(S), where the bar on R+(S) denotes the relative complement of R+(S) with respect to X .\nExample 1. Consider the argumentation framework AF = 〈X ,R〉, depicted in Fig. 1a, in which X = {x1, x2, x3, x4} and R = {(x2, x1), (x3, x2), (x2, x3), (x3, x3), (x4, x2)}. For this example, AF has two admissible sets: {x4} and {x1, x4}. {x1, x4} is the only preferred extension of AF, and it is also complete and grounded. AF has no stable extension."
    }, {
      "heading" : "III. COUNTING SEMANTICS FOR ARGUMENTATION",
      "text" : "In classical abstract argumentation, arguments are either acceptable or unacceptable, given a specific semantics. In order to get a more fine-grained view on the status of arguments we had proposed a new semantics that generalized classical semantics [1], called counting semantics. The counting semantics assigns\nto each argument of an argumentation framework a numerical strength value which is meant to be interpreted as a degree of acceptability so as to finely compare and rank arguments from the most acceptable to the weakest one(s). In this section, we provide the basic concepts of the counting semantics and supplement some examples to present the calculation of the counting semantics.\nThe fundamental intuition used to formalise the degree of acceptability is essentially the same as those found in abstract argumentation theory: argument x is more acceptable than argument y iff x has a better defence (for it) and a lower attack (against it). In order to assess the strength value of each argument in an argumentation framework, we consider their evaluation procedures as dialogue games between two fictitious agents — PRO (for “proponent”) and OPP (for “opponent”) — each of which are referred to as the other’s “counterpart” [5], [6]. A dialogue game begins with PRO putting forward an initial argument, and then PRO and OPP take turns in a sequence of moves called a dispute, in which each agent makes an argument that attacks its counterpart’s last move. In general, the counterpart can try a different line of attack and create a new dispute. This leads to a dispute tree structure that represents the dialogue game. Nodes in a dispute tree are labelled by arguments and are assigned the status of defender and attacker of the root argument, depending upon the argument at that node is made by the proponent or the opponent, or depending upon whether the walk length from the current node to the root node is even or odd. For instance, consider two agents arguing the argumentation framework shown in Fig. 1a, and the dispute tree induced by argument x1 is shown Fig. 1b. Clearly, this dispute tree is infinite as both agents are able to repeat counterarguments due to the presence of cycles in the argument graph. In this dispute tree, the blue solid nodes, made by PRO, are defenders of x1, whereas, the red dotted nodes, made by OPP, are attackers of x1. Each node is also assigned a superscript, which denotes the length of the walk from the current node to the root node. We can see that if a node has a even-numbered superscript then it is a defender, otherwise it is an attacker. Note that the root node is also a defender of itself as each argument has a walk with length 0 to itself.\nWe claim that an argument is more acceptable if PRO puts forward more number of defenders for it and OPP puts forward less number of attackers against it. One simple approach is thus to count all length of attackers and defenders for each argument. We positively count all defenders and negatively count all attackers. This is easy to understand since an argument is always weakened by its attackers and is “reinstated” by its defenders. Therefore, in any case, the greater the number computed, the more acceptable the argument. Let AF = 〈X ,R〉 with X = {x1, x2, · · · , xn}. We define the attack matrix A for AF as a n×n matrix such that aij = 1 if xjRxi; otherwise, 0.1 The number of `-length attackers (when ` is odd) or defenders (when ` is even) for each argument in X are stored by employing a n-dimensional column vector I(`), whose ith component, denoted by I(`)(xi), is the number of `-length attackers or defenders of xi. It has been proved by [7] that I(`) can be computed by the calculation of the `th power\n1In fact, the attack matrix of an argumentation framework is the transpose of the adjacency matrix of its corresponding attack graph.\nof A, i.e., I(`) = A`e, ` = 0, 1, 2, · · · (1)\nwhere e is the column vector consisting of all ones. Given the maximum walk length k (which will be used in order to capture finite attackers and defenders under k), then the simple counting model can be obtained by positively summing I(`) for all even ` under k and negatively summing I(`) for all odd ` under k, i.e.,\nv(k) = k∑ `=0 (−1)`I(`) = k∑ `=0 (−1)`A`e (2)\nin which v(k) is the vector of strength values assigning to arguments in X , and the ith component of v(k) is the strength values of xi, denoted by v(k)(xi). The greater k, the closer the evaluation obtained to the actual counting approach. As k goes to ∞, v(k) is the evaluation on arguments. Example 2. The attack matrix of the argumentation framework in Fig. 1a is\nA =  0 1 0 00 0 1 10 1 1 0 0 0 0 0  Then, we can obtain\nI(0) = A0e = [1, 1, 1, 1]T\nI(1) = A1e = [1, 2, 2, 0]T\nI(2) = A2e = [2, 2, 4, 0]T\n· · ·\nAll entries of I(0) are 1s since each argument is a 0-length defender of itself. I(1) indicates that x1 has one 1-length attacker (x2 → x1), x2 has two (x3 → x2 and x4 → x2), x3 has two (x2 → x3 and x2 → x3), and x4 has zero. · · · . Now, the calculations of the counting approach under k (k = 0, 1, 2, · · · ) are\nv(0) = I(0) = [1, 1, 1, 1]T\nv(1) = I(0) − I(1) = [0,−1,−1, 1]T\nv(2) = I(0) − I(1) + I(2) = [2, 1, 3, 1]T\n· · ·\nHowever, this simple model leads to two problems. The first is that for an attack graph with cycles, when k goes to ∞, then some arguments may have infinite number of attackers and defenders. This is not conducive to comparison and practical application since if the counting values of two arguments are both infinite, we can not compare them.\nThe second problem is that the simple counting model does not distinguish different lengths of attackers and defenders. Different lengths of attackers or defenders of an argument may have different impacts on the argument. The simple model just simply count them together and does not consider which is more important and which is less important. This problem may lead to some counter intuitions. Considering Example 2, for instance, v(2)(x3) = 3 is greater than v(2)(x4) = 1. It is counterintuitive since x4 is not attacked and should be most acceptable. We consider that shorter attackers and defenders are preferred, which can effectively drive the agents to make\nonly relevant moves, and thus we assume that a shorter attacker (respectively, defender) of an argument has more effect than a longer one on the argument [8].\nTo remedy these two problems, we define a normalization factor, which can ensure that the argument strength scale is bounded, and a damping factor on walk length, which allows a more refined treatment on different length of attackers and defenders. Now, we redefine the vector I(`) as\nI(`)α = α `Ã`e (3)\nin which α ∈ (0, 1) is the damping factor and Ã is the normalized attack matrix defined as Ã = A/N where the scalar N = ‖A‖∞ = max1≤i≤n ∑n j=1 |aij | is the normalization factor.2 It can be seen that the damping factor α provides a graded treatment of attackers and defenders of various lengths since the longer the walk length `, the smaller the α`. Then, the improved counting model is defined as\nv(k)α = k∑ `=0 (−1)`I(`)α = k∑ `=0 (−1)`α`Ã`e (4)\nWe have shown that the improved counting model can range the strength value of each argument into the interval [0, 1] (see [1, Thm 1]) and converge to a unique solution in [0, 1] as k goes ∞ (see [1, Thm 2]). Then, we can define the counting semantics for an argumentation framework as the limit of {v(k)α }∞k=0. Definition 5. Let AF = 〈X ,R〉 be an argumentation framework with X = {x1, x2, · · · , xn}, and the damping factor α ∈ (0, 1). The attacker and defender counting semantics for such AF is, for all arguments X ,\nvα = lim k→∞\nv(k)α\nThe strength value of xi is the ith component of vα, denoted by vα(xi).\nThe counting semantics can be approximated iteratively by\nv(k)α = e− αÃv(k−1)α (5)\nwith the initial valuation v(0)α = e under a given tolerance (i.e., the iteration terminates when the change ‖v(k)α − v (k−1) α ‖ ≤ ).\nExample 3. We continue Example 2. The normalization factor of A is N = 2, thus the normalized attack matrix is\nÃ =  0 1/2 0 00 0 1/2 1/20 1/2 1/2 0 0 0 0 0  Assume α = 0.98, then the counting values of each argument are summarized below:\nv(0)α = e = [1.00, 1.00, 1.00, 1.00] T\nv(1)α = e− αÃv(0)α = [0.51, 0.02, 0.02, 1.00]T\nv(2)α = e− αÃv(1)α = [0.99, 0.50, 0.98, 1.00]T\n· · · 2The normalization factor N we used is the infinity norm of the attack matrix (see [9]). It is dynamic and represents the “size” of the argumentation framework.\nIf we set = 10−3, after finitely many iterations, the counting values gradually tends to be stable and converges to the approximative counting semantics vα = [0.89, 0.22, 0.60, 1.00]T .\nIn the following sections, we will continue our previous work in [1] and discuss how to determine the damping factor α. Moreover, we relate our proposal with some existing approaches."
    }, {
      "heading" : "IV. THE DETERMINATION OF THE DAMPING FACTOR",
      "text" : "The damping factor plays an important role in the counting semantics. It not only provides a more refined treatment on different length of attackers and defenders but also controls the convergence speed of the computation. How to choose the damping factor α in practical application thus is an important question for the counting semantics.\nBefore this, let us see how the damping factor impact the strength values of arguments. It can be seen from Eqn. (3) that the impact of the `-length attackers or defenders on arguments satisfies\nI(`)α ≤ α`e\nObviously, the lower the α, the shorter the ` causing the I (`) α approaching to zero. In other words, the lower the α, the less number of attackers and defenders are considered to contribute to the strength values of arguments since the attacker or defenders whose length greater than some length `∗ may have a little impacts on the strength values and can be ignored. However, we expect a “ideal” counting semantics, i.e., considering attackers and defenders as much as possible, hence we are inclined to chose α as close to 1 as possible.\nAnother reason to choose a great α is that the lower bound of the counting semantics is 1 − α (i.e., vα(xi) ≥ 1 − α for any xi ∈ X ). When α is close to 0, the lower bound is close to 1, resulting in a trivial uniform assessment, which is away from the goal of the comparisons among arguments.\nHowever, as α approaches to 1, more time may be needed to make Eqn. (5) convergence. We thus needs a tradeoff between the performance and the “ideal” semantics. By Eqn (5), it can be proved that the change δ(k), at the kth iteration, satisfies\nδ(k) = ‖v(k)α − v(k−1)α ‖ ≤ [αρ(Ã)]k (6)\nwhere ρ(Ã) is the spectral radius of Ã and ρ(Ã) ≤ ‖Ã‖∞ = 1. Accordingly, we can conclude that the convergence rate of the computation of the counting semantics is the rate at which [αρ(Ã)]k → 0. If we expect the counting semantics to converge to a tolerance level with at most kmax iterations, then we have the following rough estimate:\nkmax = log10\nlog10[αρ(Ã)] (7)\nAssume ρ(Ã) = 1, for = 10−5 and α = 0.97, one can expect at most −5log10 0.97 ≈ 378 iterations until convergence to the counting semantics. For α = 0.98, about 570 iterations and for α = 0.99, about 1146 iterations, as shown in Figure 2. If we expect the counting semantics to converge using no more than 500 iterations, then α should be less than 0.98. In most applications, however, ρ(Ã) is always far less than one (since\nthe attack matrix A is often sparse), implying that α can be much larger. Therefore, we usually choose α in [0.90, 0.98]."
    }, {
      "heading" : "V. COUNTING SEMANTICS VS. DUNG’S SEMANTICS",
      "text" : "In this section, we investigate the relationships between Dung’s classical semantics and the counting semantics in more depth. All of Dung’s classical semantics are mainly grounded on set theory, while our counting semantics is based on numerical matrix operations. It seems that these two kinds of semantics have nothing to do with each other. In this paper, however, we will build their relationships by boolean algebra."
    }, {
      "heading" : "A. Solve Classical semantics by Boolean Algebra",
      "text" : "To begin with, let us introduce two operations on boolean matrices.\nDefinition 6 (Boolean Operations). Let Am×k and Bk×n be two boolean matrices (i.e., all entries are either logic 1 or logic 0).\n• The boolean product of A and B, denoted by A B, is Cm×n defined by\ncij = k∨ h=1 (aih ∧ bhj) (8)\n• The negation of A, denoted by ¬A, is a cellwise operator and defined by\n[¬A]ij = ¬aij (9)\nMoreover, let us introduce the boolean vector representation of a subset of a set of arguments and the boolean matrix representation of the attack relations between the arguments. Assume X = {x1, x2, · · · , xn} is a set of arguments, then S ⊆ X can be encoded by n × 1 boolean column vector gS , whose ith component [gS ]i is 1 if xi ∈ S; otherwise 0. Clearly, if S = ∅ then all components of gS are 0s, i.e., gS = 0, and if S = X then gS = e. Intuitively, gS = ¬gS where S is the complement of S with respect to X , i.e., S = X\\S. We\ncan utilize the attack matrix A to represent the attack relations between arguments when all the entries A are considered to be logic 0 or 1.\nIn the following, we will present the boolean algebra approaches to solve Dung’s set-theory-based semantics.\nTheorem 1. Let AF = 〈X ,R〉 with X = {x1, x2, · · · , xn}, and its attack matrix be A. Assume S ⊆ X , then (i). gR+(S) = A gS; (ii). gR−(S) = AT gS .\nProof: (i). Two cases need to be consider: Case 1: For any xi ∈ R+(S), i.e. [gR+(S)]i = 1, there must exist an argument xj ∈ S such that xjRxi. This follows that [gS ]j = 1 and aij = 1. Hence, [A gS ]i = n∨ h=1 (aih ∧ [gS ]h) = aij ∧ [gS ]j = 1 = [gR+(S)]i\nCase 2: For any xi /∈ R+(S), namely [gR+(S)]i = 0, then ∀xj ∈ S such that @xjRxi, i.e. for all [gS ]j = 1 such that dij = 0. On the other hand, if xj /∈ S then [gS ]j = 0. Thus for all j ∈ {1, 2, · · · , n}, aij ∧ [gS ]j = 0. It implies that\n[A gS ]i = n∨ j=1 0 = 0 = [gR+(S)]i\nTo sum up the above proof, [A gS ]i = [gR+(S)]i always holds for any argument xi, and this concludes the theorem. (ii). Similar to the proof of (i).\nClearly, this theorem provides a way to define the boolean representation of function R+ and R−, i.e. R+(g) = A g and R−(g) = AT g. It is mentioned in [10] that the characteristic function and the operator R+ has the relation as below:\nF(S) = R+(R+(S)) (10)\nWe can then rewrite the boolean representation of the characteristic function F as:\nF(g) = ¬R+ ( ¬R+(g) ) = ¬ ( A ¬(A g) ) (11)\nBase on this, another iteration approach for computing grounded extension can be established from the initial value g(0) = 0 (i.e. the empty set),\ng(k) = F(g(k−1)) = ¬ ( A ¬(A g(k−1)) ) (12)"
    }, {
      "heading" : "B. The Relationships Between The Counting Semantics and Dung’s Semantics",
      "text" : "Now, we move our attention to the relationship between the counting semantics and Dung’s classical semantics. In order to facilitate the comparison and analysis, we convert the boolean operations in Eqn. (12) into arithmetic operations by employing the following identities3:\n¬g = e− g (13) A g = sgn(A · g) (14)\nin which the sgn is the signum function, defined as sgn(x) = 1 if x > 0 and sgn(x) = 0 when x = 0. The sgn of a matrix means performing the sgn operation on each cell of this matrix.\n3In these identities, boolean 0 and 1 are interpreted as integers.\nThen Eqn. (12) can be represented as g(k) = e−A ( e−A g(k−1) ) (15)\n⇔ g(k) = e− sgn { A · [ e− sgn(A · g(k−1)) ]} (16)\n⇔ g(k) = e− sgn { Â · [ e− sgn(Â · g(k−1)) ]} (17)\nwhere Â = αÃ. On the other hand, we rewrite the iterative formula of the counting semantics, i.e. Eqn. (5), as\nv(k)α = e− Â · (e− Â · v(k−2)α ) (18)\nNow, let us define another function G : 2X 7→ 2X such that for S ⊆ X , G(S) = {x ∈ X |x is not attacked by S w.r.t the relation R}, alternately,\nG(S) = R+(S)\nObviously, F(S) = G ◦G(S) and a conflict-free set S ⊆ X is a stable extension iff S is a fixed point of G. With the similar idea above, we write the boolean representation of G as\nG(g) = ¬(A g) = e− sgn(Â · g) (19)\nUntil now, we can easily observe that the iteration formulas of Eqn. (17) and Eqn. (18) have similar iteration structures apart from the sgn operations as well as the Eqn. (5) and Eqn. (19). This establishes quite interesting relationships between our counting semantics and classical semantics: Firstly, both the counting semantics and classical semantics are interaction-based valuation since here the value of each argument merely relies on the graph structure of the argumentation framework. Secondly, by Definition 4, it can be seen that the complete, grounded and preferred extension are included in the set of the fixed points of the Eqn. (17) and the stable extension is the fixed point of the Eqn. (19), while the counting semantics is the fixed point of Eqn. (18). Lastly, both the grounded semantics and the counting semantics (given the damping factor α) are unique.\nHowever, the main difference is that our counting semantics is more general since it allows for a more finer level between two extremes views (accepted and rejected) on reasoning, while the classical semantics represents an extreme case since it just involves being accepted or rejected. As a result, these classical semantics may cause empty extension. This might be suitable for reasoning but not for practical applications in some scenarios. Considering an argument system whose grounded extension is empty, for example, if a decision must be made, then the grounded semantics is unavailable since all arguments are unacceptable in this case. Our proposal engages in comparing and ranking arguments from the most acceptable to the weakest one(s). It is possible that the most acceptable argument(s) might be the good choice for some problems.\nAnother difference is that some classical semantics such as complete and preferred semantics may provide multiple extensions. This may cause that (with a credulous perspective) the recommendation is to administer almost all decisions. However, our counting semantics can always return a unique solution (specifying the damping factor α). If one expects to achieve the multiplicity property from the counting semantics, he or she can choose a different damping factor α since various α may give different rankings on arguments."
    }, {
      "heading" : "VI. RELATING WITH GENERIC GRADUAL VALUATIONS",
      "text" : "Generic Gradual Valuations are one of the two proposals for introducing graduality in the interaction-based valuation, namely a local approach and a global approach [11]. It is local because strength values are assigned to arguments based solely on their direct attackers (so defenders are also taken into account through the attackers). In global approach, however, the value of an argument represents the set of all the attack and all the defence branches of different lengths for this argument. Overall, generic gradual valuations are a very versatile and expressive framework for assigning labels to arguments, where the labels indicate a set of possible acceptability or truth values to each argument. In this section, we will give comparisons between our approach and these two approaches."
    }, {
      "heading" : "A. Comparison with Global Valuation",
      "text" : "At the first sight, the global approach is similar to ours. It assigns a pair of tuples to each argument: the first tuple contains the lengths of the defence branches (even integers), the other one contains the lengths of the attack branches (odd integers). This approach is claimed to be “global” since it computes the value of the argument using the whole attack graph influencing the argument.\nHowever, there are three main differences between our approach and tupled approach. First, we employ vectors to memorize the number of attackers and defenders of different lengths. Second, to compute the number of attackers and defenders, we utilize a matrix approach, i.e., computing powers of attack matrix. While in tupled approach, a propagation algorithm is proposed to compute the tupled values. Third, to determine which argument is more acceptable, in tupled approach, a double comparison (first quantitative, then qualitative) algorithm is presented based on classical lexicographic comparison. One drawback of the tupled approach is that incomparable tupled values may exist. While our proposal is a purely quantitative mathematical approach, which assigns a numerical value in [0, 1] to each argument and facilitates the comparison between arguments."
    }, {
      "heading" : "B. Comparison with Local Valuations",
      "text" : "The local approach is a very generic formalisation capable of capturing the discrete labeling semantics of [12] and the continuous “categoriser” function of [13]. Assume a totally ordered set W with a minimum element Vmin and a subset V of W containing Vmin and a top element Vmax. Let AF = 〈X ,R〉 with X = {x1, · · · , xn}. A local valuation is a function v : X 7→ V such that:\n• v(a) ≥ Vmin, ∀a ∈ X .\n• v(a) = Vmax, if R−(a) = ∅, ∀a ∈ X .\n• v(a) = g (h(v(a1), · · · , v(am))), if R−(a) = {a1, · · · , am} 6= ∅.\nwhere function g : W 7→ V such that g is non-increasing, g(Vmin) = Vmax and g(Vmax) < Vmax, and function h : V ∗ 7→ W such that (V ∗ denotes the set of all finite sequences of elements of V )\n• h(t) = t and h() = Vmin.\n• h(t1, · · · , tm, tm+1) ≥ h(t1, · · · , tm).\n• h(t1, · · · , ti, · · · , tm) ≥ h(t1, · · · , t′i, · · · , tm) where ti ≥ t′i.\n• h(ti1, · · · , tim) = h(t1, · · · , tm) for any permutation {ti1, · · · , tim} of {t1, · · · , tm}.\nBy Eqn. (5), our proposal can be defined as an instance of the generic valuation such that\n• V = [0, 1], W = [0,∞[, Vmin = 0 and Vmax = 1.\n• g(t) = 1− αN t\n• h(t1, · · · , tm) = t1 + · · ·+ tm\nActually, we define h : V n 7→ W as h(t) = Ai∗t where n is the number of arguments in AF, Ai∗ is the ith row vector of A and t = [t1, · · · , tn]T is a n-dimensional column vector. Clearly, the two definitions are equivalent.\nThe main difference between our proposal and categoriser function is that the latter defines g(t) = 11+t . Clearly, it can be seen that both approaches formalise the same intuition that an argument with low-valued attackers obtains high values and an argument with high-valued attackers obtains low values. Furthermore, both approaches are continuous and evaluate the strength of arguments on a scale of numerical values from 0 to 1.\nIt has proved that there is a bijective correspondence between labeling-based and extension-based semantics for complete, grounded and preferred semantics [4]. Therefore, the comparisons between our proposal and labeling semantics can refer to Section V."
    }, {
      "heading" : "VII. RANKING-BASED AXIOMATIC PERSPECTIVE ON THE COUNTING SEMANTICS",
      "text" : "The counting semantics assign arguments a vector of numerical strength values, which are relative and do not make sense when they are not compared with each other. Actually, in most applications, we merely concern the ranking (ordering) over arguments induced by the counting semantics. Given the damping factor α, the ranking α on the set of arguments X derived from the counting semantics vα is defined by: for any x, y ∈ X , x α y iff vα(x) ≥ vα(y). Intuitively, α is total (i.e., ∀x, y ∈ X , x α y or y α x) and transitive (i.e., ∀x, y, z ∈ X , if x α y and y α z, then x α z). Note that here x α y means that argument x is at least as acceptable as argument y with respect to α. Formally, we define x 'α y if and only if x α y and y α x, which means x and y are equally acceptable w.r.t. α. Moreover, x α y, meaning x is strictly more acceptable than y w.r.t. α, if and only if x α y but not y α x.\nIn [14], the authors propose a set of axioms (postulates), each of which represents a criterion, and is an intuitive and desirable property that a ranking-based semantics may enjoy. Such an axiomatic approach empowers a better understanding of semantics and a more accurate comparison between different proposals. In this section, we will formally show that the ranking α derived from the counting semantics satisfies some of these postulates.\nThe first axiom is that a ranking on a set of arguments does not depend on their identity but merely on the attack relations among them. In other words, if two argumentation system are isomorphic, then they are equivalent and should have the same ranking semantics. The isomorphisms between two argumentation frameworks AF1 = 〈X1,R1〉 and AF2 = 〈X2,R2〉 is a bijective function τ : X1 7→ X2 such that for all x, y ∈ X1, xR1y if and only if τ(x)R2 τ(y). Now we define the first axiom as follows:\nAxiom 1 (Abstraction (Ab)). A ranking-based semantics Γ satisfies abstraction iff for any two argumentation frameworks AF1 = 〈X1,R1〉 and AF2 = 〈X2,R2〉, for every isomorphism τ from AF1 to AF2, we have that ∀x, y ∈ X1, x AF1Γ y iff τ(x) AF2Γ τ(y).\nThe second axiom states that the question whether argument x is ranked higher than argument y should be independent of any argument z that is not connected to x or y, i.e., there is no path from x or y to z (neglecting the direction of the edges). Let C(AF) be the set of weak connected components of AF. Each weak connected component of AF is a maximal subgraph of AF in which any two arguments are mutually connected by a path (neglecting the direction of the edges).\nAxiom 2 (Independence (In)). A ranked-based semantics Γ satisfies independence iff for any argumentation framework AF = 〈X ,R〉, and for any AFc = 〈Xc,Rc〉 such that AFc ∈ 2C(AF), ∀x, y ∈ Xc, x AFΓ y iff x AFc Γ y.\nThe third axiom encodes the idea that non-attacked arguments are more acceptable (and thus ranked higher) than attacked ones.\nAxiom 3 (Void Precedence (VP)). A ranked-based semantics Γ satisfies void precedence iff for any AF = 〈X ,R〉, ∀x, y ∈ X , if R−(x) = ∅ and R−(y) 6= ∅ then x AFΓ y.\nThe fourth postulate states that having attacked attackers is more acceptable than non-attacked attackers, i.e., being defended is ranked higher than not being defended. For any x ∈ X , we denote by D(x) = {y ∈ X |∃z ∈ X such that zRx and yRz} the set of all defenders of argument x in 〈X ,R〉. Alternatively, we can also write D(x) = {y ∈ X |y ∈ R− ( R−(x) ) }.\nAxiom 4 (Defense precedence (DP)). A ranked-based semantics Γ satisfies defense precedence iff for every AF = 〈X ,R〉, ∀x, y ∈ X , if |R−(x)| = |R−(y)|, D(x) 6= ∅, and D(y) = ∅ then x AFΓ y.\nThe next axiom says that an argument x should be at least as acceptable as argument y, when the direct attackers of y are at least as numerous and well-ranked as those of x. This involves a relation that compares sets of arguments, i.e., group comparison: Let be a ranking on a set of arguments X . For any argument subset S1, S2 ⊆ X , S1 S2 iff there exists an injective mapping δ from S2 to S1 such that ∀x ∈ S2, δ(x) x. Obviously, if S1 S2, then there must be |S1| ≥ |S2| and for arbitrary y ∈ S2, ∃x ∈ S1 such that x y. Axiom 5 (Counter-Transitivity (CT)). A ranked-based semantics Γ satisfies counter-transitivity iff for every AF = 〈X ,R〉,\n∀x, y ∈ X , if R−(y) AFΓ R−(x) then x AFΓ y.\nMoreover, S1 S2 is a strict group comparison iff it satisfies two conditions: (1) S1 S2; (2) |S1| > |S2| or ∃x ∈ S2, δ(x) x. Axiom 6 (Strict Counter-Transitivity (SCT)). A ranked-based semantics Γ satisfies strict counter-transitivity iff for any AF = 〈X ,R〉, ∀x, y ∈ X , if R−(y) AFΓ R−(x) then x AFΓ y.\nThe following two axioms provide two choices: giving precedence to cardinality over quality (i.e. two weakened attackers are worse for the target than one strong attacker), or vice versa. In some situations, both options are rational.\nAxiom 7 (Cardinality Precedence (CP)). A ranked-based semantics Γ satisfies cardinality precedence iff for arbitrary argumentation framework AF = 〈X ,R〉, ∀x, y ∈ X , if |R−(x)| < |R−(y)| then x AFΓ y. Axiom 8 (Quality Precedence (QP)). A ranked-based semantics Γ satisfies quality precedence iff for arbitrary argumentation framework AF = 〈X ,R〉, ∀x, y ∈ X , if ∃y′ ∈ R−(y) such that ∀x′ ∈ R−(x), y′ AFΓ x′, then x AFΓ y.\nThe last axiom concerns the way arguments are defended. The consideration is that an argument which is defended against more attackers is ranked higher than an argument which is depended against less attacks. There are two concepts of defense: simple and distributed. The defense of an argument x is simple iff every defender of x attacks exactly one attacker of x, formally, ∀y ∈ D(x) such that |R+(y) ∩ R−(x)| = 1. The defense of an argument x is distributed iff ∀y ∈ R−(x) such that |R−(y)| ≥ 1, i.e., every attacker of x is attacked by at least one argument.\nAxiom 9 (Distributed-Defense Precedence (DDP)). A rankedbased semantics Γ satisfies distributed-defense precedence iff for any AF = 〈X ,R〉, ∀x, y ∈ X such that |R−(x)| = |R−(y)| and |D(x)| = |D(y)|, if the defense of x is simple and distributed and the defense of y is simple but not distributed then x AFΓ y.\nIn addition, [14] provides some relationships between these axioms: if a ranking-based semantics Γ satisfies (SCT) then it satisfies (VP); if Γ satisfies both (CT) and (SCT), then it satisfies (DP); Γ can not satisfy both (CP) and (QP). Now, let us give the following proposition about which axioms the ArgRank satisfies or dose not.\nProposition 2. The ranking α derived from the counting semantics satisfies (Ab), (CT), (SCT), (VP) and (DP), and does not satisfy (In), (CP), (QP) and (DDP).\nThe (Ab) can be proved by the definition of the counting semantics. By Eqn. (5), it follows (CT). In particular, when R−(xi) ⊂ R−(xj) then the semantics gives xi xj , which is the case of (SCT). The (VP) and (DP) can be followed from their relationships with (CT) and (SCT). The ranking α does not always satisfy (In) since an argumentation framework and its weak connected components may have different normalization factor, which may bring about different rankings on arguments.\nThe ranking α does not satisfy (CP) since it mainly\nconcerns on the number of the 1-length attackers. Clearly, the ranking α also does not satisfy (QP).\nMoreover, (DDP) is not satisfied by the ranking α. As a counter example, for instance, consider the argumentation framework in Fig. 3, in which the two arguments x1 and y1 have the same number of attackers and defenders: R−(x1) = {x2, x3} and R−(y1) = {y2, y3}, and D(x2) = {x4, x5} and D(y2) = {y4, y5}. We can see that the defense of argument x1 is simple and distributed while the defense of argument y1 is simple but not distributed. Therefore, the axiom (DDP) guarantees that x1 is ranked higher than y1. On the other hand, the ranking α provides that vα(x1) = vα(y1) = 1 − α + α2\n2 . This contradicts with the result of (DDP). Assume there is another argument x6 which attacks argument x4, then x4 is weakened, thereby increasing (the rank value of) x2 and decreasing x1, and thereby following y1 x1. Note that then the defense of x1 still is simple and distributed, therefore, this also confirms that the ranking α does satisfy (DDP). The major reason of this counter situation is that the axiom (DDP) concentrates too much on quite local topological respects of an argumentation framework, but ignores the global topology. However, the counting semantics is a global approach since the rank value of an argument relies on the rank values of its attackers, which is a recursive definition.\nIn [15], the authors have shown that the categoriser-based ranking semantics satisfies (Ab), (In), (VP), (DP), (CT) and (SCT), and does not satisfy (CP), (QP) and (DDP). Now, we can find a difference between the categoriser function and the counting semantics, i.e., the ranking α does not satisfy (In). This is because the counting semantics adopts a dynamic normalization factor."
    }, {
      "heading" : "VIII. CONCLUSION",
      "text" : "In this paper, we carry on our previous work on a novel semantical notion for abstract argumentation frameworks: counting semantics. Instead of extensions, the counting semantics assigns strength values (representing degrees of acceptability) to arguments by counting the number of attackers and defenders for arguments. We discuss how to select the damping factor for the counting semantics. We show several interesting relationships between the counting semantics and Dung’s classical semantics by means of boolean algebra. We relate the counting semantics with two proposals of generic gradual valuations. Finally, we present an axiomatic analysis of the ranking α derived from our counting semantics.\nThe counting semantics generalizes Dung’s extensionbased semantics for abstract argumentation and allows for a more fine-grained differentiation of the status of arguments. It is an objective evaluation model (merely based on the graph structure of the argumentation framework). For future\nwork, we intend to extend our semantics to some sophisticated problems, such as the large-scale online debates [16], in which thousands of people participate in and thousands of arguments are expressed, and the bipolar argumentation frameworks [17], where two kinds of interaction between arguments: a positive interaction (an argument support another argument) and a negative interaction (an argument can attack another argument) are considered."
    }, {
      "heading" : "ACKNOWLEDGMENTS",
      "text" : "The research reported here was supported by the National Natural Science Foundation of China under contract number NSFC61171121 and NSFC61572279."
    } ],
    "references" : [ {
      "title" : "Attacker and defender counting approach for abstract argumentation",
      "author" : [ "F. Pu", "J. Luo", "Y. Zhang", "G. Luo" ],
      "venue" : "Proceedings of the 37th Annual Meeting of the Cognitive Science Society. Austin, TX: Cognitive Science Society, 2015, pp. 1913–1918.",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Argument-based applications to knowledge engineering",
      "author" : [ "D.C. David", "D. Robertson", "J. Lee" ],
      "venue" : "The Knowledge Engineering Review, vol. 15, p. 2000, 2000.",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2000
    }, {
      "title" : "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games",
      "author" : [ "P.M. Dung" ],
      "venue" : "Journal of Artificial Intelligence, vol. 77, no. 2, pp. 321–357, Sep. 1995.",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 1995
    }, {
      "title" : "On the issue of reinstatement in argumentation",
      "author" : [ "M. Caminada" ],
      "venue" : "Logics in artificial intelligence. Springer, 2006, pp. 111–123.",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "Proof theories and algorithms for abstract argumentation frameworks",
      "author" : [ "S. Modgil", "M. Caminada" ],
      "venue" : "Argumentation in Artificial Intelligence, G. Simari and I. Rahwan, Eds. Springer US, 2009, pp. 105–129.",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "An argument game for stable semantics",
      "author" : [ "M. Caminada", "Y. Wu" ],
      "venue" : "Logic Journal of IGPL, p. jzn029, 2009.",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Introduction to graph theory",
      "author" : [ "D.B. West" ],
      "venue" : "Prentice hall Englewood Cliffs,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2001
    }, {
      "title" : "Opponent models with uncertainty for strategic argumentation",
      "author" : [ "T. Rienstra", "M. Thimm", "N. Oren" ],
      "venue" : "Proceedings of the Twenty-Third international joint conference on Artificial Intelligence. AAAI Press, 2013, pp. 332–338.",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "On the acceptability of arguments in preference-based argumentation",
      "author" : [ "L. Amgoud", "C. Cayrol" ],
      "venue" : "Proceedings of the Fourteenth conference on Uncertainty in artificial intelligence. Morgan Kaufmann Publishers Inc., 1998, pp. 1–7.",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 1998
    }, {
      "title" : "Graduality in argumentation",
      "author" : [ "C. Cayrol", "M.-C. Lagasquie-Schiex" ],
      "venue" : "J. Artif. Intell. Res.(JAIR), vol. 23, pp. 245–297, 2005.",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "Robust semantics for argumentation frameworks",
      "author" : [ "H. Jakobovits", "D. Vermeir" ],
      "venue" : "Journal of logic and computation, vol. 9, no. 2, pp. 215– 261, 1999.",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "A logic-based theory of deductive arguments",
      "author" : [ "P. Besnard", "A. Hunter" ],
      "venue" : "Artificial Intelligence, vol. 128, no. 1, pp. 203–235, 2001.",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Ranking-based semantics for argumentation frameworks",
      "author" : [ "L. Amgoud", "J. Ben-Naim" ],
      "venue" : "Scalable Uncertainty Management. Springer, 2013, pp. 134–147.",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Argument ranking with categoriser function",
      "author" : [ "F. Pu", "J. Luo", "Y. Zhang", "G. Luo" ],
      "venue" : "Knowledge Science, Engineering and Management. Springer, 2014, pp. 290–301.",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Social abstract argumentation",
      "author" : [ "J. Leite", "J. Martins" ],
      "venue" : "Proceedings of the Twenty-Second international joint conference on Artificial Intelligence-Volume Volume Three. AAAI Press, 2011, pp. 2287–2292.",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Gradual valuation for bipolar argumentation frameworks",
      "author" : [ "C. Cayrol", "M.-C. Lagasquie-Schiex" ],
      "venue" : "Symbolic and Quantitative Approaches to Reasoning with Uncertainty. Springer, 2005, pp. 366–377.",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2005
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "In our previous work [1], we have proposed a novel semantics, called counting semantics, which allows for a more fine-grained assessment to arguments by counting the number of their respective attackers and defenders based on argument graph and argument game.",
      "startOffset" : 21,
      "endOffset" : 24
    }, {
      "referenceID" : 1,
      "context" : "It provides the means for comparing information by analysing pros and cons when trying to make a decision [2].",
      "startOffset" : 106,
      "endOffset" : 109
    }, {
      "referenceID" : 2,
      "context" : "The most popularly used framework to talk about general issues of argumentation is that of Dung’s abstract argumentation [3], in which arguments are represented as atomic entities and the interactions between different arguments are modeled by an attack relation.",
      "startOffset" : 121,
      "endOffset" : 124
    }, {
      "referenceID" : 0,
      "context" : "In order to get a more fine-grained assessment on arguments, we had proposed a new semantics that generalized the classical extension-based semantics in [1].",
      "startOffset" : 153,
      "endOffset" : 156
    }, {
      "referenceID" : 2,
      "context" : "Now let us begin Dung’s abstract characterization of an argumentation system [3]:",
      "startOffset" : 77,
      "endOffset" : 80
    }, {
      "referenceID" : 2,
      "context" : "It is the least fixed point of F, and its existence and uniqueness have been proved in [3] and [4].",
      "startOffset" : 87,
      "endOffset" : 90
    }, {
      "referenceID" : 3,
      "context" : "It is the least fixed point of F, and its existence and uniqueness have been proved in [3] and [4].",
      "startOffset" : 95,
      "endOffset" : 98
    }, {
      "referenceID" : 0,
      "context" : "In order to get a more fine-grained view on the status of arguments we had proposed a new semantics that generalized classical semantics [1], called counting semantics.",
      "startOffset" : 137,
      "endOffset" : 140
    }, {
      "referenceID" : 4,
      "context" : "In order to assess the strength value of each argument in an argumentation framework, we consider their evaluation procedures as dialogue games between two fictitious agents — PRO (for “proponent”) and OPP (for “opponent”) — each of which are referred to as the other’s “counterpart” [5], [6].",
      "startOffset" : 284,
      "endOffset" : 287
    }, {
      "referenceID" : 5,
      "context" : "In order to assess the strength value of each argument in an argumentation framework, we consider their evaluation procedures as dialogue games between two fictitious agents — PRO (for “proponent”) and OPP (for “opponent”) — each of which are referred to as the other’s “counterpart” [5], [6].",
      "startOffset" : 289,
      "endOffset" : 292
    }, {
      "referenceID" : 6,
      "context" : "It has been proved by [7] that I can be computed by the calculation of the `th power",
      "startOffset" : 22,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 9,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 9,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 9,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 9,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 31,
      "endOffset" : 43
    }, {
      "referenceID" : 1,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 31,
      "endOffset" : 43
    }, {
      "referenceID" : 1,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 31,
      "endOffset" : 43
    }, {
      "referenceID" : 1,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 53,
      "endOffset" : 65
    }, {
      "referenceID" : 1,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 53,
      "endOffset" : 65
    }, {
      "referenceID" : 3,
      "context" : "I = Ae = [1, 1, 1, 1] I = Ae = [1, 2, 2, 0] I = Ae = [2, 2, 4, 0] · · ·",
      "startOffset" : 53,
      "endOffset" : 65
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 8,
      "endOffset" : 20
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 8,
      "endOffset" : 20
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 8,
      "endOffset" : 20
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 8,
      "endOffset" : 20
    }, {
      "referenceID" : 1,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 62,
      "endOffset" : 74
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 62,
      "endOffset" : 74
    }, {
      "referenceID" : 2,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 62,
      "endOffset" : 74
    }, {
      "referenceID" : 0,
      "context" : "v = I = [1, 1, 1, 1] v = I − I = [0,−1,−1, 1] v = I − I + I = [2, 1, 3, 1] · · ·",
      "startOffset" : 62,
      "endOffset" : 74
    }, {
      "referenceID" : 7,
      "context" : "We consider that shorter attackers and defenders are preferred, which can effectively drive the agents to make only relevant moves, and thus we assume that a shorter attacker (respectively, defender) of an argument has more effect than a longer one on the argument [8].",
      "startOffset" : 265,
      "endOffset" : 268
    }, {
      "referenceID" : 0,
      "context" : "We have shown that the improved counting model can range the strength value of each argument into the interval [0, 1] (see [1, Thm 1]) and converge to a unique solution in [0, 1] as k goes ∞ (see [1, Thm 2]).",
      "startOffset" : 111,
      "endOffset" : 117
    }, {
      "referenceID" : 0,
      "context" : "We have shown that the improved counting model can range the strength value of each argument into the interval [0, 1] (see [1, Thm 1]) and converge to a unique solution in [0, 1] as k goes ∞ (see [1, Thm 2]).",
      "startOffset" : 172,
      "endOffset" : 178
    }, {
      "referenceID" : 0,
      "context" : "In the following sections, we will continue our previous work in [1] and discuss how to determine the damping factor α.",
      "startOffset" : 65,
      "endOffset" : 68
    }, {
      "referenceID" : 8,
      "context" : "It is mentioned in [10] that the characteristic function and the operator R has the relation as below: F(S) = R+(R+(S)) (10)",
      "startOffset" : 19,
      "endOffset" : 23
    }, {
      "referenceID" : 9,
      "context" : "Generic Gradual Valuations are one of the two proposals for introducing graduality in the interaction-based valuation, namely a local approach and a global approach [11].",
      "startOffset" : 165,
      "endOffset" : 169
    }, {
      "referenceID" : 0,
      "context" : "While our proposal is a purely quantitative mathematical approach, which assigns a numerical value in [0, 1] to each argument and facilitates the comparison between arguments.",
      "startOffset" : 102,
      "endOffset" : 108
    }, {
      "referenceID" : 10,
      "context" : "The local approach is a very generic formalisation capable of capturing the discrete labeling semantics of [12] and the continuous “categoriser” function of [13].",
      "startOffset" : 107,
      "endOffset" : 111
    }, {
      "referenceID" : 11,
      "context" : "The local approach is a very generic formalisation capable of capturing the discrete labeling semantics of [12] and the continuous “categoriser” function of [13].",
      "startOffset" : 157,
      "endOffset" : 161
    }, {
      "referenceID" : 0,
      "context" : "• V = [0, 1], W = [0,∞[, Vmin = 0 and Vmax = 1.",
      "startOffset" : 6,
      "endOffset" : 12
    }, {
      "referenceID" : 3,
      "context" : "It has proved that there is a bijective correspondence between labeling-based and extension-based semantics for complete, grounded and preferred semantics [4].",
      "startOffset" : 155,
      "endOffset" : 158
    }, {
      "referenceID" : 12,
      "context" : "In [14], the authors propose a set of axioms (postulates), each of which represents a criterion, and is an intuitive and desirable property that a ranking-based semantics may enjoy.",
      "startOffset" : 3,
      "endOffset" : 7
    }, {
      "referenceID" : 12,
      "context" : "In addition, [14] provides some relationships between these axioms: if a ranking-based semantics Γ satisfies (SCT) then it satisfies (VP); if Γ satisfies both (CT) and (SCT), then it satisfies (DP); Γ can not satisfy both (CP) and (QP).",
      "startOffset" : 13,
      "endOffset" : 17
    }, {
      "referenceID" : 13,
      "context" : "In [15], the authors have shown that the categoriser-based ranking semantics satisfies (Ab), (In), (VP), (DP), (CT) and (SCT), and does not satisfy (CP), (QP) and (DDP).",
      "startOffset" : 3,
      "endOffset" : 7
    }, {
      "referenceID" : 14,
      "context" : "For future work, we intend to extend our semantics to some sophisticated problems, such as the large-scale online debates [16], in which thousands of people participate in and thousands of arguments are expressed, and the bipolar argumentation frameworks [17], where two kinds of interaction between arguments: a positive interaction (an argument support another argument) and a negative interaction (an argument can attack another argument) are considered.",
      "startOffset" : 122,
      "endOffset" : 126
    }, {
      "referenceID" : 15,
      "context" : "For future work, we intend to extend our semantics to some sophisticated problems, such as the large-scale online debates [16], in which thousands of people participate in and thousands of arguments are expressed, and the bipolar argumentation frameworks [17], where two kinds of interaction between arguments: a positive interaction (an argument support another argument) and a negative interaction (an argument can attack another argument) are considered.",
      "startOffset" : 255,
      "endOffset" : 259
    } ],
    "year" : 2015,
    "abstractText" : "Dung’s abstract argumentation framework consists of a set of interacting arguments and a series of semantics for evaluating them. Those semantics partition the powerset of the set of arguments into two classes: extensions and nonextensions. In order to reason with a specific semantics, one needs to take a credulous or skeptical approach, i.e. an argument is eventually accepted, if it is accepted in one or all extensions, respectively. In our previous work [1], we have proposed a novel semantics, called counting semantics, which allows for a more fine-grained assessment to arguments by counting the number of their respective attackers and defenders based on argument graph and argument game. In this paper, we continue our previous work by presenting some supplementaries about how to choose the damaging factor for the counting semantics, and what relationships with some existing approaches, such as Dung’s classical semantics, generic gradual valuations. Lastly, an axiomatic perspective on the ranking semantics induced by our counting semantics are presented. Keywords—abstract argumentation; argument game; graded assessment; counting semantics; ranking-based semantics;",
    "creator" : "LaTeX with hyperref package"
  }
}