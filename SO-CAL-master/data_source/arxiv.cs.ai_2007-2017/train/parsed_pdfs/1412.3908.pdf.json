{
  "name" : "1412.3908.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Belief revision in the propositional closure of a qualitative algebra",
    "authors" : [ "Valmi Dufour-Lussier", "Jean Lieber" ],
    "emails" : [ "FirstName.LastName@loria.fr", "florence.leber@engees.unistra.fr" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n41 2.\n39 08\nv1 [\ncs .A\nI] 1\n2 D\nec 2\n01 4\nKeywords: qualitative algebras, belief revision, belief contraction, propositional closure"
    }, {
      "heading" : "Introduction",
      "text" : "Belief revision is an operation of belief change that consists in modifying minimally old beliefs so that they become consistent with new beliefs (Alchourrón, Gärdenfors, and Makinson 1985). One way to study this issue following a knowledge representation angle is to consider a formalism and to study some belief revision operators defined on it: how they are defined and how they can be implemented.\nIn particular, it is rather simple to define a revision operator on a qualitative algebra (QA, such as the Allen algebra) by reusing the work of (Condotta et al. 2010) about the related issue of belief merging. The result of such a belief revision is a set of belief bases to be interpreted disjunctively, and which is not necessarily representable as a single belief base: QAs are not closed under disjunction.\nThis gives a first motivation for the study of belief revision in the propositional closure of a QA: the revision operator in such a closure gives a result that is necessarily representable in the formalism. Another motivation lies in the possibility\n∗This research was partially funded by the project Kolflow (http://kolflow.univ-nantes.fr) of the French National Agency for Research (ANR), program ANR CONTINT. Copyright c© 2014, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nof defining a contraction operator in this formalism, thanks to the Harper identity.\nThe first section of the paper contains some preliminaries about various notions used throughout the paper. The next section briefly describes some properties of such a formalism. Finally, an algorithm and an implementation of this algorithm for a revision operator in the propositional closure of a QA are presented with an example.\nThe research report (Dufour-Lussier et al. 2014) is a long version of this paper including more detailed preliminaries, the proofs and some additional examples."
    }, {
      "heading" : "Preliminaries",
      "text" : ""
    }, {
      "heading" : "Qualitative algebras",
      "text" : "Qualitative algebras (QAs) are formalisms that are widely used for representation depending on time and/or on space (Stock 1997). Formulas built upon QAs are closed under conjunction, though the symbol ∧ is not systematically used. Some of the usual notations and conventions of QAs are changed to better fit the scope of this paper. In particular, the representation of knowledge by graphs (namely, qualitative constraint networks) is not well-suited here, because of the propositional closure introduced afterwards.\nFirst, the Allen algebra is introduced: it is one of the most famous QAs and it will be used in our examples throughout the paper. Then, a general definition of QAs is given.\nThe Allen algebra is used for representing relations between time intervals (Allen 1983). A formula of the Allen Algebra can be seen as a conjunction of constraints, where a constraint is an expression of the form x r y stating that the interval x is related to the interval y by the relation r. 13 base relations are introduced (cf. figure 1); a relation r is either one of these base relations or the union of base relations r1, . . . , rm denoted by r1 ∣∣ . . . ∣∣ rm.\nFor example, if one wants to express that the maths course is immediately before the physics course which is before the English course (either with a time lapse, or immediately before it), one can write the formula:\nmaths m physics ∧ physics b ∣∣ m english\nLAllen is the set of the formulas of the Allen algebra.\nQualitative algebras in general are defined below, first by their syntax and then by their semantics.\nb is before\nm meets\no overlaps\ns starts\nd is during\nf finishes\neq equals\nbi, mi, oi, si, di and fi represent respectively the inverse relations of the relations represented by b, m, o, s, d and f.\nFigure 1: The base relations of LAllen.\nSyntax. A finite set of symbols B is given (with |B| ≥ 2). A base relation is an element of B. A relation is an expression of the form r1 ∣∣ . . . ∣∣ rm (m ≥ 0), such that a base relation occurs at most once in a relation and the order is irrelevant (e.g. r1 ∣∣ r2 and r2 ∣∣ r1 are equivalent expressions). The set of relations is denoted by R. A finite set of symbols V , disjoint from B, is given. A (qualitative) variable is an element of V . A constraint is an expression of the form x r y where x, y ∈ V and r ∈ R. A formula ϕ is a conjunction of n constraints (n ≥ 1): x1 r1 y1 ∧ . . . ∧ xn rn yn. A constraint of ϕ is one of the constraints of this conjunction. Let LQA be the set of the formulas of the considered QA. The atoms of LQA are the constraints.\nA formula ϕ ∈ LQA is under normal form if for every x, y ∈ V with x 6= y, there is exactly one r ∈ R such that x r y is a constraint of ϕ. Then, this relation r is denoted by rϕ(x, y).\nA scenario σ is a formula under normal form such that, for every variables x and y, x 6= y, rσ(x, y) ∈ B. Therefore, there are |B||V|×(|V|−1) scenarios.\nSemantics. The semantics of a QA can be defined classically, thanks to a domain, a variable being mapped into a subset of this domain and a relation being mapped on a relation between such subsets. For Allen algebra, the domain is the set Q of rational numbers and, given an interpretation I, a variable x is mapped to an interval I(x) = [a, b] of Q (a < b). The semantics of each of the basic relations is defined. For example, I satisfies x1 m x2 if b1 = a2 where I(xi) = [ai, bi]. I satisfies x1 (r1 ∣∣ . . . ∣∣ rm) x2 if it satisfies one of the constraints x1 rk x2 for k ∈ {1, . . . ,m}. A formula is consistent (or satisfiable) if there exists an interpretation satisfying each of its constraints. Finally, for ϕ1, ϕ2 ∈ LQA, ϕ1 |= ϕ2 if, for every interpretation I satisfying ϕ1, it satisfies also ϕ2. The research report give more details on this first definition of the semantics.\nThe semantics can be characterized a posteriori thanks to consistent scenarios.\nLet Ω be the set of consistent scenarios on the variables of V . It can be proven that |Ω| ≤ |B||V|×(|V|−1)/2: if x r y\nis a constraint of a consistent scenario σ then y r− x is also a constraint of σ.\nLet M : L → 2Ω be defined by\nM(ϕ) = {σ ∈ Ω | σ |= ϕ}\nfor ϕ ∈ L, where |= is the entailment relation defined below, thanks to the semantics based on a domain. Ω and M make it possible to define a semantics on L which coincides with the semantics based on a domain (hence the same entailment relation |=): ϕ1 |= ϕ2 iff M(ϕ1) ⊆ M(ϕ2). However, this second semantics is more practical to use for defining revision operators on QAs."
    }, {
      "heading" : "Belief change",
      "text" : "Belief revision is an operation of belief change. Intuitively, given the set of beliefs ψ an agent has about a static world, it consists in considering the change of their beliefs when faced with a new set of beliefs µ, assuming that µ is considered to be unquestionable by the agent. The resulting set of beliefs is noted ψ ∔ µ, and depends on the choice of a belief revision operator ∔. In (Alchourrón, Gärdenfors, and Makinson 1985), the principle of minimal change has been stated and could be formulated as follows:ψ is minimally changed intoψ′ such that the conjunction ofψ′ and µ is consistent, and the result of the revision is this conjunction. Hence, there is more than one possible ∔ operator, since the definition of ∔ depends on how belief change is “measured”. More precisely, the minimal change principle has been formalized by a set of postulates, known as the AGM postulates (after the names of the authors of (Alchourrón, Gärdenfors, and Makinson 1985)).\nIn (Katsuno and Mendelzon 1991b), revision has been studied in the framework of propositional logic (with a finite set of variables). The AGM postulates are translated into this formalism and a family of revision operators is defined based on distance functions d on Ω, where Ω is the set of interpretations: the revision of ψ by µ according to ∔d (ψ ∔d µ) is such that\nM(ψ ∔d µ) = {ω ∈ M(µ) | d(M(ψ), ω) = d∗}\nwith d∗ = d(M(ψ),M(µ)) (1)\nIntuitively, d∗ measures, using d, the minimal modification of ψ into ψ′ needed to make ψ′ ∧ µ consistent.\nThis approach can be extended to other formalisms for which a model-theoretic semantics can be defined and such that a distance function can be specified on the set of interpretations Ω. However, in some of these formalisms, a representability issue can be raised: it may occur that a subset Σ of Ω is not representable, i.e. there is no formula ϕ such that M(ϕ) = Σ. This representability issue is addressed below, for the case of QAs.\nBelief contraction is the operation of belief change that associates to a set of beliefs ψ and a set of beliefs µ, a set of beliefs ψ ´ µ such that ψ ´ µ 6|= µ. In propositionally closed formalisms, the Harper identity makes it possible to define a contraction operator ´ thanks to a revision operator ∔ with\nψ ´ µ = ψ ∨ (ψ ∔ ¬µ) (2)\nBelief merging is another operation of belief change. Given some sets of beliefs ψ1, . . . , ψn, their merging is a set of beliefs Ψ that contains “as much as possible” of the beliefs in the ψi’s. Intuitively, Ψ is the conjunction of ψ′1, . . . , ψ ′ n such that each ψi has been minimally modified into ψ′i in order to make this conjunction consistent. Some postulates of belief merging have been proposed and discussed (Konieczny and Pérez 2002), in a similar way as the AGM postulates.\nBelief revision in qualitative algebras In (Condotta et al. 2010) a belief merging operator is defined that can be easily adapted for defining a revision operator. It is based on a distance between scenarios. Let δ be a distance function on B. Let σ, τ ∈ Ω, be two scenarios based on the same set of variables V . Then, d is defined by\nd(σ, τ) = ∑\nx,y∈V,x 6=y\nδ(rσ(x, y), rτ (x, y))\nOne of the possibilities for δ is the use of a neighborhood graph, i.e. a connected, undirected graph whose vertices are the base relations: δ(r, s) is the length of the shortest path between r and s. Then, the scenarios of the revision of ψ by µ according to ∔d are the scenarios of µ that are the closest ones to scenarios of ψ according to d. The set of optimal scenarios is not necessarily representable in (LQA, |=). One solution to address this issue is to consider that the result of revision is a set of scenarios.\nAlgorithms for implementing this kind of belief revision in QAs are presented in (Dufour-Lussier et al. 2012) and (Hué and Westphal 2012).\nPropositional closure of a qualitative algebra The propositional closure of a QA (LQA, |=) is a formalism (L̂QA, |=) defined as follows. L̂QA is the smallest superset of LQA that is closed for ¬ and ∧. Then, L̂QA is closed for ∨: ϕ1∨ϕ2 is an abbreviation for¬(¬ϕ1∧¬ϕ2). The entailment relation is based on the consistent scenarios: ϕ1 |= ϕ2 if M(ϕ1) ⊆ M(ϕ2), M being extended on L̂QA by M(ϕ1 ∧ ϕ2) = M(ϕ1) ∩M(ϕ2) and M(¬ϕ) = Ω \\M(ϕ).\nProposition 1 (representability). Every set of scenariosΣ ⊆ Ω is representable in L̂QA. More precisely, with ϕ = ∨\nσ∈Σ\nσ,\nM(ϕ) = Σ.\nEvery formula of L̂QA can be written in DNF (disjunctive normal form, i.e. disjunction of conjunctions of constraints), since it is a propositionally closed formalism, but the following proposition goes beyond that.\nProposition 2 (DNF-w/oN form). Every ϕ ∈ L̂QA is equivalent to a formula in DNF using no negation symbol.\nBelief revision in (L̂QA, |=) Given a distance function d on Ω, a revision operator on (L̂QA, |=) can be defined according to equation (1). Indeed, proposition 1 implies that {ω ∈ M(µ) | d(M(ψ), ω) = d∗} is representable."
    }, {
      "heading" : "An algorithm for computing ∔d in L̂QA",
      "text" : "The principle of the algorithm is based on the following proposition.\nProposition 3 (revision of disjunctions). Let ψ and µ be two formulas of L̂QA and {ψi}i and {µj}j be two finite families\nof L̂QA such that ψ = ∨\ni\nψi and µ = ∨\nj\nµj .\nLet d∗ij = d(M(ψi),M(µj)) for any i and j. Then:\nψ ∔d µ ≡ ∨\ni,j,d∗ ij =d∗\nψi ∔ d µj\nwith d∗ = d(M(ψ),M(µ))\nMoreover, d∗ = min ij d∗ij (3)\nThe algorithm for ∔d in L̂QA consists roughly in putting ψ and µ in DNF-w/oN form then applying proposition 3 on them, using the ∔d algorithm on LQA for computing the ψi ∔ d µj’s. More details are given in the research report."
    }, {
      "heading" : "Implementation: the REVISOR/PCQA engine",
      "text" : "REVISOR is a collection of several revision engines that are open-source and freely available.1\nIn particular, REVISOR/QA implements ∔d in three QAs: the Allen algebra, INDU—an extension of the Allen algebra taking into account relations between intervals according to their lengths (Pujari, Kumari, and Sattar 1999)—and RCC8—a QA for representing topological relations between regions of space (Randell, Cui, and Cohn 1992). Moreover, it is easy to use a different qualitative algebra, by giving in the code some tables (composition table, inverse relation table, and table for the values δ(r, s) for r, s∈ B). The engine is written in Perl, but can be used through a Java library. The worst-case complexity of this implementation is of the order of O ( |B| |V|·(|V|−1) 2 ) .\nREVISOR/PCQA implements ∔d on the propositional closures of the QAs LAllen, INDU and RCC8: it actually uses REVISOR/QA and is one of the engines of REVISOR. The worst-case complexity of this implementation is of the order of O ( |V|4|B| |V|·(|V|−1) 2 ) , according to a coarse analysis.\nThe following example has been executed using REVISOR/PCQA, and is included with the source code. The README file associated with REVISOR/QA on the REVISOR website explains how it can be executed.\nThis example uses a belief contraction operator. According to (2), a contraction operator ´d can be defined that is based on ∔d. Now let us consider the set of beliefs ψ of an agent called Maurice about the dates of birth and death of famous mathematicians. Maurice thought that Boole was born after de Morgan and died before him and that de Morgan and Weierstraß were born the same year (say, at the same time) but the former died before the latter:\nψ = Boole d De Morgan ∧ De Morgan s Weierstraß\n1http://revisor.loria.fr\nwhere, Boole is the interval of time between the birth and the death of Boole, and so on. Now, Germaine, a friend of Maurice, tells him that she is not sure whether Boole was born strictly after Weierstraß. Since Maurice trusts Germaine (and her doubts), he wants to make the contraction of its original beliefs ψ by µ with\nµ = Boole bi ∣∣ mi ∣∣ oi ∣∣ f ∣∣ d Weierstraß The result, computed by REVISOR/PCQA in less than one second, is ψ ´d µ, equivalent to the following formula:\n(Boole d De Morgan ∧ De Morgan s Weierstraß) ∨ (Boole s Weierstraß ∧ De Morgan di Weierstraß) ∨ (Boole s De Morgan ∧ De Morgan s Weierstraß)\n∨\n( Boole d De Morgan ∧ Boole s Weierstraß\n∧ De Morgan o Weierstraß\n)\nActually, the last term of this disjunction corresponds to the reality, provided that the intervals of time correspond to a year granularity: George Boole (1815-1864), Augustus De Morgan (1806-1871), Karl Weierstraß (1815-1897).\nIn (Dufour-Lussier et al. 2014), other examples of use of REVISOR/PCQA, including an analysis of the computing time, are presented. In particular, it is shown that it may be the case that a family of revision problems, albeit formalizable in both LAllen and in L̂Allen, are solved in much less time in the more expressive formalism L̂Allen."
    }, {
      "heading" : "Conclusion",
      "text" : "This paper has presented an algorithm for distance-based belief revision in the propositional closure L̂QA of a qualitative algebraLQA, using the revision operation on LQA. This work is motivated by the fact that it gives a revision operation whose result is representable in the formalism, by the fact that some practical examples are easily represented in L̂QA whereas they are quite difficult to represent in LQA, and by the fact that it makes it possible to define a contraction operator thanks to the Harper identity (which requires disjunction and negation). The preprocessing of the algorithm consists in putting the formulas into a disjunctive normal form without negation. Then, proposition 3, which reduces a revision of disjunctions to a disjunction of the least costly revisions, is applied. REVISOR/PCQA is an implementation of this revision operator for the Allen algebra, INDU and RCC8.\nA first direction of research following this work is the improvement of the computation time of the REVISOR/PCQA system. One way to do it is to parallelize it. A sequential optimization would consist in finding a heuristic for ranking the pairs (i, j), with the aim of starting from the best candidates, in order to obtain a low upper bound of d∗ sooner (hence a pruning of a part of the search trees developed for the computation of ∔d in (LQA, |=)).\nAnother direction of research is to study how other belief change operations can be implemented in this formalism, in particular belief merging (Konieczny and Pérez 2002) and knowledge update (Katsuno and Mendelzon 1991a)."
    }, {
      "heading" : "LPAR (Logic for Programming, Artificial Intelligence and",
      "text" : "Reasoning), 233–247.\n[Dufour-Lussier et al. 2012] Dufour-Lussier, V.; Le Ber, F.; Lieber, J.; and Martin, L. 2012. Adapting Spatial and Temporal Cases. In Watson, I., and Díaz Agudo, B., eds., ICCBR, volume 7466 of LNAI, 77–91. Lyon, France: Amélie Cordier, Marie Lefevre.\n[Dufour-Lussier et al. 2014] Dufour-Lussier, V.; Hermann, A.; Le Ber, F.; and Lieber, J. 2014. Belief revision in the propositional closure of a qualitative algebra (extended version). Technical report, LORIA, Université de Lorraine, CNRS. http://hal.inria.fr/hal-00954512.\n[Hué and Westphal 2012] Hué, J., and Westphal, M. 2012. Revising qualitative constraint networks: Definition and implementation. In Tools with Artificial Intelligence (ICTAI), 548–555.\n[Katsuno and Mendelzon 1991a] Katsuno, H., and Mendelzon, A. 1991a. On the Difference Between Updating a Knowledge Base and Revising It. In Allen, J. F.; Fikes, R.; and Sandewall, E., eds., KR’91: Principles of Knowledge Representation and Reasoning. San Mateo, California: Morgan Kaufmann. 387–394.\n[Katsuno and Mendelzon 1991b] Katsuno, H., and Mendelzon, A. 1991b. Propositional knowledge base revision and minimal change. Artificial Intelligence 52(3):263–294.\n[Konieczny and Pérez 2002] Konieczny, S., and Pérez, R. P. 2002. Merging information under constraints: a logical framework. Journal of Logic and Computation 12(5):773– 808.\n[Pujari, Kumari, and Sattar 1999] Pujari, A. K.; Kumari, G. V.; and Sattar, A. 1999. INDU: An Interval & Duration Network. In Foo, N., ed., Advanced Topics in Artificial Intelligence, volume 1747 of Lecture Notes in Computer Science. Springer Berlin Heidelberg. 291–303.\n[Randell, Cui, and Cohn 1992] Randell, D.; Cui, Z.; and Cohn, A. G. 1992. A spatial logic based on regions and connection. In Knowledge Representation, 165–176.\n[Stock 1997] Stock, O., ed. 1997. Spatial and Temporal Reasoning. Kluwer Academic Publishers."
    } ],
    "references" : [ {
      "title" : "C",
      "author" : [ "Alchourrón" ],
      "venue" : "E.; Gärdenfors, P.; and Makinson, D.",
      "citeRegEx" : "Alchourrón. Gärdenfors. and Makinson 1985",
      "shortCiteRegEx" : null,
      "year" : 1985
    }, {
      "title" : "J",
      "author" : [ "Allen" ],
      "venue" : "F.",
      "citeRegEx" : "Allen 1983",
      "shortCiteRegEx" : null,
      "year" : 1983
    }, {
      "title" : "A Syntactical Approach to Qualitative Constraint Networks Merging",
      "author" : [ "Condotta" ],
      "venue" : "In Proc. of the 17th LPAR (Logic for Programming, Artificial Intelligence and Reasoning),",
      "citeRegEx" : "Condotta,? \\Q2010\\E",
      "shortCiteRegEx" : "Condotta",
      "year" : 2010
    }, {
      "title" : "Adapting Spatial and Temporal Cases",
      "author" : [ "Dufour-Lussier" ],
      "venue" : "eds., ICCBR,",
      "citeRegEx" : "Dufour.Lussier,? \\Q2012\\E",
      "shortCiteRegEx" : "Dufour.Lussier",
      "year" : 2012
    }, {
      "title" : "Belief revision in the propositional closure of a qualitative algebra (extended version)",
      "author" : [ "Dufour-Lussier" ],
      "venue" : "Technical report,",
      "citeRegEx" : "Dufour.Lussier,? \\Q2014\\E",
      "shortCiteRegEx" : "Dufour.Lussier",
      "year" : 2014
    }, {
      "title" : "and Westphal",
      "author" : [ "J. Hué" ],
      "venue" : "M.",
      "citeRegEx" : "Hué and Westphal 2012",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "On the Difference Between Updating a Knowledge Base and Revising It",
      "author" : [ "Katsuno", "H. Mendelzon 1991a] Katsuno", "A. Mendelzon" ],
      "venue" : "KR’91: Principles of Knowledge Representation and Reasoning",
      "citeRegEx" : "Katsuno et al\\.,? \\Q1991\\E",
      "shortCiteRegEx" : "Katsuno et al\\.",
      "year" : 1991
    }, {
      "title" : "Propositional knowledge base revision and minimal change",
      "author" : [ "Katsuno", "H. Mendelzon 1991b] Katsuno", "A. Mendelzon" ],
      "venue" : "Artificial Intelligence",
      "citeRegEx" : "Katsuno et al\\.,? \\Q1991\\E",
      "shortCiteRegEx" : "Katsuno et al\\.",
      "year" : 1991
    }, {
      "title" : "R",
      "author" : [ "S. Konieczny", "Pérez" ],
      "venue" : "P.",
      "citeRegEx" : "Konieczny and Pérez 2002",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "G",
      "author" : [ "Pujari, A.K.", "Kumari" ],
      "venue" : "V.; and Sattar, A.",
      "citeRegEx" : "Pujari. Kumari. and Sattar 1999",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "A",
      "author" : [ "D. Randell", "Z. Cui", "Cohn" ],
      "venue" : "G.",
      "citeRegEx" : "Randell. Cui. and Cohn 1992",
      "shortCiteRegEx" : null,
      "year" : 1992
    } ],
    "referenceMentions" : [ ],
    "year" : 2014,
    "abstractText" : "Belief revision is an operation that aims at modifying old beliefs so that they become consistent with new ones. The issue of belief revision has been studied in various formalisms, in particular, in qualitative algebras (QAs) in which the result is a disjunction of belief bases that is not necessarily representable in a QA. This motivates the study of belief revision in formalisms extending QAs, namely, their propositional closures: in such a closure, the result of belief revision belongs to the formalism. Moreover, this makes it possible to define a contraction operator thanks to the Harper identity. Belief revision in the propositional closure of QAs is studied, an algorithm for a family of revision operators is designed, and an open-source implementation is made freely available on the web.",
    "creator" : "LaTeX with hyperref package"
  }
}