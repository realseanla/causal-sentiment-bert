{
  "name" : "1401.5849.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Interactions between Knowledge and Time in a First-Order Logic for Multi-Agent Systems: Completeness Results",
    "authors" : [ "F. Belardinelli", "A. Lomuscio" ],
    "emails" : [ "f.belardinelli@imperial.ac.uk", "a.lomuscio@imperial.ac.uk" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "While reactive systems (Pnueli, 1977) are traditionally specified using plain temporal logic, there is a well-established tradition in Artificial Intelligence (AI) and, in particular, MultiAgent Systems (MAS) research to adopt more expressive languages. Much of this tradition is inspired by the earlier, seminal work in AI by McCarthy (1979, 1990) and others aimed at adopting an “intentional stance” (Dennett, 1987) when reasoning about intelligent systems. Specifically, logics for knowledge (Fagin, Halpern, Moses, & Vardi, 1995), beliefs, desires, intentions, obligations, etc., have been put forward to represent the informational and motivational attitudes of agents in the system. Theoretical explorations have focused on the soundness and completeness of a number of axiomatisations as well as the decidability and computational complexity of the corresponding logics.\nThe great majority of work in these lines focuses on propositional languages. Yet, specifications supporting quantification are increasingly required in applications. For example, it is often necessary to refer to different individuals at different instances of time.\nQuantified modal languages (Garson, 2001) have long attracted considerable attention. Early work included analysing the philosophical and logical implications of different setups for the quantification domains, particularly in combination with temporal concepts. More recently, considerable attention has been given to identifying suitable fragments that preserve completeness and decidability, and then studying the resulting computational complexity of the satisfiability problem. This article follows this direction.\nIn more detail, we investigate the meta-theoretical properties of monodic fragments of quantified temporal-epistemic logic where interactions between quantifiers, time, and knowledge of the agents are present. There is a deep-rooted interest (Fagin et al., 1995; Meyden, 1994) in understanding the implications of interaction axioms in this context, as they often express interesting properties of MAS, including “perfect recall”, “synchronicity”,\nc©2012 AI Access Foundation. All rights reserved.\nand “no learning”. These features are well-understood at the propositional level (Fagin, Halpern, & Vardi, 1992; Halpern, van der Meyden, & Vardi, 2004) and are commonly used in several application areas. The technical question this paper aims to resolve is whether a similar range of results can be provided in the presence of (limited forms of) quantification. As we shall demonstrate, the answer to this question is largely positive."
    }, {
      "heading" : "1.1 State of the Art",
      "text" : "The analysis and application of temporal-epistemic logic in a first-order setting has an established tradition in AI. One of the early contributions is the work of Moore (1990), which presents a theory of action that takes into consideration the epistemic preconditions to actions and their effects on knowledge. More recently, a number of first-order temporalepistemic logics for reasoning about MAS were introduced by Wooldridge et al. (2002, 2006, 1999), often in the context of the MABLE programming language for agents. The same authors introduced a first-order branching time temporal logic for MAS (Wooldridge & Fisher, 1992), and developed it in a series of papers (Wooldridge et al., 2002, 2006). First-order multi-modal logics also constitute the conceptual base of a number of other agent theories, such as BDI logics (Rao & Georgeff, 1991), the KQML framework (Cohen & Levesque, 1995), and the LORA framework (Wooldridge, 2000b). All of these include operators for mental attitudes (e.g., knowledge, belief, intention, desire, etc.), as well as temporal and dynamic operators with some form of quantification. However, most of the current literature has so far fallen short of a systematic analysis of the formal properties of these frameworks. Some of the frameworks above are so rich that they are unlikely to be finitely axiomatisable, let alone decidable. Still, these earlier contributions are an inspiration to the present investigation, as they are among the few to have explicitly addressed the subject of first-order temporal-epistemic languages in a MAS setting.\nAt a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003). Wolter and Zakharyaschev (2001) introduced the monodic fragment of quantified modal logic, where the modal operators are restricted to formulas with at most one free variable, and they proved the decidability of various fragments. Similar results have been obtained for monodic fragments of first-order temporal logic (Hodkinson, 2002; Hodkinson et al., 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al., 2003). Further, Wolter and Zakharyaschev (2002) provided a complete axiomatisation of the monodic first-order validities on the natural numbers. The monodic fragment of first-order epistemic logic has also been explored (Sturm et al., 2000; Sturm, Wolter, & Zakharyaschev, 2002), and an axiomatisation including common knowledge has been provided. These lines of research constitute the theoretical background against which this research is set.\nThe contributions discussed previously used plain Kripke models as the underlying semantics. However, it has been argued though that in applications a “computationallygrounded” semantics (Wooldridge, 2000a) is preferable, as this enables systems to be modelled directly. We introduced quantified interpreted systems (QIS) to fill this gap (Belar-\ndinelli & Lomuscio, 2009). This enabled us to provide a complete axiomatisation of the monodic fragment of quantified temporal-epistemic logic on linear time (Belardinelli & Lomuscio, 2011). However, no interaction between temporal and epistemic modalities was studied. Preliminary investigations into the interactions between temporal and epistemic operators in a first-order setting have already appeared (Belardinelli & Lomuscio, 2010). In this paper we extend the previous results and also consider epistemic languages containing the common knowledge operator."
    }, {
      "heading" : "1.2 The Present Contribution",
      "text" : "This paper extends the current state of the art in first-order temporal-epistemic logic by introducing a family of provably complete calculi for a variety of quantified interpreted systems characterising a range of properties including perfect recall, no learning, synchronicity, and having a unique initial state. We prove the completeness of the presented first-order temporal-epistemic logics via a quasimodel construction, which has previously been used (Hodkinson, Wolter, & Zakharyaschev, 2002; Hodkinson et al., 2000) to prove decidability for monodic fragments of first-order temporal logic (FoTL). Quasimodels have also been applied to first-order temporal as well as epistemic logic (Sturm et al., 2000; Wolter & Zakharyaschev, 2002). Wolter et al. (2002) present a complete axiomatisation for the monodic fragment of FoTL on the natural numbers; a similar result for a variety of first-order epistemic logics with common knowledge has also appeared (Sturm et al., 2000). However, the interaction between temporal and epistemic modalities in a first order setting has not been taken into account yet, nor has the interpreted systems semantics. Nonetheless, both of these features are essential for applications to multi-agent systems and are the subject of analysis here."
    }, {
      "heading" : "1.2.1 Structure of the Paper.",
      "text" : "In Section 2 we first introduce the first-order temporal-epistemic languages Lm and LCm with common knowledge for a set Ag = {1, . . . ,m} of agents. We then present the relevant classes of QIS as well as the monodic fragments of Lm and LCm. In Sections 3 we introduce the axiomatisations for these classes of QIS, while the details of the completeness proofs are presented in Sections 4 and 5. Finally, in Section 6 we elaborate on the results obtained and discuss possible extensions and future work."
    }, {
      "heading" : "2. First-Order Temporal-Epistemic Logics",
      "text" : "Interpreted systems are a standard semantics for interpreting temporal-epistemic logics in a multi-agent setting (Fagin et al., 1995; Parikh & Ramanujam, 1985). We extend interpreted systems to the first-order case by enriching these structures with a domain of individuals. We first investigated “static” quantified interpreted systems, where no account for the evolution of the system is given (Belardinelli & Lomuscio, 2008, 2009). Then, fully-fledged QIS on a language with also temporal modalities were introduced (Belardinelli & Lomuscio, 2010, 2011). We follow the definition of QIS provided in the references."
    }, {
      "heading" : "2.1 First-Order Temporal-Epistemic Languages",
      "text" : "Given a set Ag = {1, . . . ,m} of agents, the first-order temporal-epistemic language Lm contains individual variables x1, x2, . . ., individual constants c1, c2, . . ., n-ary predicate constants Pn1 , P n 2 , . . ., for n ∈ N, the propositional connectives ¬ and →, the quantifier ∀, the linear time operators © and U , and the epistemic operator Ki for each agent i ∈ Ag. The language LCm also contains the common knowledge operator C (Fagin et al., 1992). For simplicity we consider only one group of agents for the common knowledge modality, that is, the whole of Ag; C is really tantamount to CAg. The extension to proper non-empty subsets of Ag is not problematic.\nThe languages Lm and LCm contain no symbol for functions; so all terms t1, t2, . . . in these languages are either individual variables or constants.\nDefinition 1. Formulas in Lm are defined in the Backus-Naur form as follows:\nφ ::= P k(t1, . . . , tk) | ¬ψ | ψ → ψ′ | ∀xψ | ©ψ | ψUψ′ | Kiψ\nThe language LCm extends Lm with the following clause:\n• if φ is a formula in LCm, then also Cφ is a formula in LCm.\nThe formulas©φ and φUφ′ are read as “at the next step φ” and “eventually φ′ and until then φ” respectively. The formula Kiφ represents “agent i knows φ”, while Cφ stands for “φ is common knowledge” in the set Ag of agents.\nWe define the symbols ∧, ∨,↔, ∃, G (always in the future), F (some time in the future) as standard. Further, we introduce some abbreviations. The operator K̄i is dual to Ki, that is, K̄iφ is defined as ¬Ki¬φ, while Eφ is a shorthand for ∧ i∈AgKiφ. For k ∈ N, Ekφ is defined as follows: E0φ = φ and Ek+1φ = EEkφ. The formulas K̄iφ and Eφ are read as “agent i considers φ possible” and “every agent knows φ” respectively.\nFree and bound variables are defined as standard. By φ[~y] we mean that ~y = y1, . . . , yn are all the free variables in φ. Additionally, φ[~y/~t] is the formula obtained by substituting simultaneously some, possibly all, free occurrences of ~y in φ with ~t = t1, . . . , tn while renaming bound variables. A sentence is a formula with no free variables."
    }, {
      "heading" : "2.2 Quantified Interpreted Systems",
      "text" : "To introduce quantified interpreted systems we assume a set Li of local states li, l′i, . . . for each agent i ∈ Ag in a multi-agent system. We consider a set Le of local states for the environment e as well. The set S ⊆ Le×L1× . . .×Lm contains all and only the global states of the multi-agent system. To represent the temporal evolution of the MAS we consider the flow of time N of natural numbers; a run is a function r : N → S. Intuitively, a run represents one possible evolution of the MAS assuming N as the flow of time. Given the above, we define quantified interpreted systems for the languages Lm and LCm as follows:\nDefinition 2 (QIS). A quantified interpreted system is a triple P = 〈R,D, I〉 where:\n• R is a non-empty set of runs;\n• D is a non-empty set of individuals;\n• for r ∈ R, n ∈ N, I is a first-order interpretation, that is, a function such that\n– for every constant c, I(c, r(n)) ∈ D, – for every predicate constant P k, I(P k, r(n)) is a k-ary relation on D.\nFurther, for every r, r′ ∈ R, n, n′ ∈ N, I(c, r(n)) = I(c, r′(n′)).\nNotice that we assume a unique domain of interpretation, as well as a fixed interpretation for individual constants; so we simply write I(c). Following standard notation (Fagin et al., 1995), for r ∈ R and n ∈ N, a pair (r, n) is a point in P. If r(n) = 〈le, l1, . . . , lm〉 is the global state at point (r, n) then re(n) = le and ri(n) = li are the environment’s and agent i’s local state at (r, n) respectively. Further, for i ∈ Ag the epistemic equivalence relation ∼i is defined such that (r, n) ∼i (r′, n′) iff ri(n) = r′i(n′). Clearly, each ∼i is an equivalence relation. Two points (r, n) and (r′, n′) are said to be epistemically reachable, or simply reachable, if (r, n) ∼ (r′, n′) where ∼ is the transitive closure of ⋃ i∈Ag ∼i.\nIn this paper we consider the following classes of QIS.\nDefinition 3. A quantified interpreted system P satisfies\nsynchronicity iff for every i ∈ Ag, for all points (r, n), (r′, n′), (r, n) ∼i (r′, n′) implies n = n′\nperfect recall for agent i iff for all points (r, n), (r′, n′), if (r, n) ∼i (r′, n′) and n > 0 then either (r, n− 1) ∼i (r′, n′) or there is k < n′ such that (r, n− 1) ∼i (r′, k) and for all k′, k < k′ ≤ n′ implies (r, n) ∼i (r′, k′)\nno learning for agent i iff for all points (r, n), (r′, n′), if (r, n) ∼i (r′, n′) then either (r, n+ 1) ∼i (r′, n′) or there is k > n′ such that (r, n+ 1) ∼i (r′, k) and for all k′, k > k′ ≥ n′ implies (r, n) ∼i (r′, k′)\nunique initial state iff for all r, r′ ∈ R, r(0) = r′(0)\nThese conditions have extensively been discussed in the literature (Halpern et al., 2004) together with equivalent formulations. Intuitively, a QIS is synchronous if time is part of the local state of each agent. A QIS satisfies perfect recall for agent i if i’s local state records everything that has happened to him (from the agent’s point of view) so far in the run. No learning is dual to perfect recall: agent i does not acquire any new knowledge during a run. Finally, a QIS has a unique initial state if all runs start from the same global state.\nA QIS P satisfies perfect recall (resp. no learning) if P satisfies perfect recall (resp. no learning) for all agents. We denote the class of QIS with m agents asQISm; the superscripts pr, nl, sync, uis denote the subclasses of QISm satisfying perfect recall, no learning, synchronicity, and having a unique initial state respectively. For instance, QISsync,uism is the class of all synchronous QIS with m agents and having a unique initial state.\nWe now assign an interpretation to the formulas in Lm and LCm by means of quantified interpreted systems. Let σ be an assignment from variables to individuals inD, the valuation\nIσ(t) of a term t is defined as σ(y) for t = y, and Iσ(t) = I(c) for t = c. A variant σxa of an assignment σ assigns a ∈ D to x and agrees with σ on all other variables.\nDefinition 4. The satisfaction of a formula φ ∈ Lm at point (r, n) ∈ P under an assignment σ, denoted (Pσ, r, n) |= φ, is defined inductively as follows:\n(Pσ, r, n) |= P k(t1, . . . , tk) iff 〈Iσ(t1), . . . , Iσ(tk)〉 ∈ I(P k, r(n)) (Pσ, r, n) |= ¬ψ iff (Pσ, r, n) 6|= ψ (Pσ, r, n) |= ψ → ψ′ iff (Pσ, r, n) 6|= ψ or (Pσ, r, n) |= ψ′ (Pσ, r, n) |= ∀xψ iff for all a ∈ D, (Pσxa , r, n) |= ψ (Pσ, r, n) |=©ψ iff (Pσ, r, n+ 1) |= ψ (Pσ, r, n) |= ψUψ′ iff there is n′ ≥ n such that (Pσ, r, n′) |= ψ′ and (Pσ, r, n′′) |= ψ for all n ≤ n′′ < n′ (Pσ, r, n) |= Kiψ iff for all r′, n′, (r, n) ∼i (r′, n′) implies (Pσ, r′, n′) |= ψ\nFor φ ∈ LCm we have to consider also the case for the common knowledge operator:\n(Pσ, r, n) |= Cψ iff for all k ∈ N, (Pσ, r, n) |= Ekψ\nThe truth conditions for ∧, ∨, ↔, ∃, G and F are defined from those above. From the definition above it follows that (Pσ, r, n) |= Cψ iff for all (r′, n′) reachable from (r, n), (Pσ, r′, n′) |= ψ.\nA formula φ is true at a point (r, n) if it is satisfied at (r, n) by every assignment σ; φ is true on a QIS P if it is true at every point in P; φ is valid on a class C of QIS if it is true on every QIS in C. Further, a formula φ is satisfiable on a QIS P if it is satisfied at some point in P, for some assignment σ; φ is satisfiable on a class C of QIS if it is satisfiable on some QIS in C.\nBy considering all combinations of pr, nl, sync and uis we obtain 16 subclasses of QISm for any m ∈ N. Not all of them are independent, nor axiomatisable. Indeed, some of these are not axiomatisable even at the propositional level (Halpern & Moses, 1992; Halpern & Vardi, 1989). In the first column of Table 1 we group together the classes of QIS that share the same set of validities on the languages Lm and LCm. The proofs of these equivalences are similar to those of the propositional case (Halpern et al., 2004) and are not reported here. Further, we define the languages PLm and PLCm as the propositional fragments of Lm and LCm respectively (formally, PLm and PLCm are obtained by restricting atomic formulas to 0-ary predicate constants p1, p2, . . .). Table 1 summarises the results by Halpern et al. (2004) concerning the axiomatisability of propositional validities in PLm and PLCm. Observe that, as regards the language PLm, for m = 1 all sets of validities on the various classes of QIS are axiomatisable, while for m ≥ 2 no axiomatisation can be given for QISnl,uism and QISnl,pr,uism (Halpern & Vardi, 1986, 1989). As to the language PLCm, we restrict to the case for m ≥ 2, as for m = 1 PLCm has the same expressive power as PLm. For m ≥ 2 no class of validities on PLCm has a recursive axiomatisation but QISm, QISsyncm , QISuism , QISsync,uism and QISnl,sync,uism , QISnl,pr,sync,uism .\nIn the next section we show that the axiomatisability results at the propositional level can be lifted to the monodic fragment of the languages Lm and LCm."
    }, {
      "heading" : "2.3 The Monodic Fragment",
      "text" : "In the rest of the paper we will show that a sufficient condition for lifting the results in Table 1 to the first-order case is to restrict the languages Lm and LCm to their monodic fragments.\nDefinition 5. The monodic fragment L1m is the set of formulas φ ∈ Lm such that any subformula of φ of the form Kiψ, ©ψ, or ψ1Uψ2 contains at most one free variable. Similarly, the monodic fragment LC1m is the set of formulas φ ∈ LCm such that any subformula of φ of the form Kiψ, Cψ, ©ψ, or ψ1Uψ2 contains at most one free variable.\nThe monodic fragments of a number of first-order modal logics have been thoroughly investigated in the literature (Hodkinson et al., 2000, 2003; Wolter & Zakharyaschev, 2001, 2002). In the case of Lm and LCm these fragments are quite expressive as they contain formulas like the following:\n∀y C(∀zAvailable(y, z)U∃xRequest(x, y)) (1)\nKi©∀xyz(Request(x, y)→ Available(y, z))→ →©Ki∀xyz(Request(x, y)→ Available(y, z)) (2)\nFormula (1) intuitively states that it is common knowledge that every resource y will eventually be requested by somebody, but until that time the resource remains available to everybody. Notice that y is the only free variable within the scope of modal operators U and C. Formula (2) represents that if agent i knows that at the next step every resource is available whenever it is requested, then at the next step agent i knows that this is indeed the case. However, note that the formula\n∀xKi(Process(x)→ ∀yFAccess(x, y))\nwhich intuitively means that agent i knows that every process will eventually try to access every resource, is not in L1m as both x and y occur free within the scope of modal operator F . Still, the monodic fragments of Lm and LCm are quite expressive as they contain all de dicto formulas, i.e., formulas where no free variable appears in the scope of any modal operator, as in (2). So, the limitation is really only on de re formulas.\nWe stress the fact that the formulas above have no propositional equivalent in the case that they are interepreted on quantified interpreted systems in which the domain of quantification is infinite, or its cardinality cannot be bounded in advance.\nFinally, observe that the Barcan formulas ©∀xφ ↔ ∀x © φ and Ki∀xφ ↔ ∀xKiφ are both true in all quantified interpreted systems, as each QIS includes a unique domain of quantification. This implies that the universal quantifier commutes with the temporal modality© and the epistemic modality Ki. Thus, it can be the case that for some formulas ψ, ψ′ ∈ Lm, we have that ψ ↔ ψ′ is a validity, but ψ ∈ L1m and ψ′ /∈ L1m. For instance, consider ψ = ©∀xP (x, y) and ψ′ = ∀x© P (x, y). We will see that this remark does not interfere with our results."
    }, {
      "heading" : "3. Axiomatisations",
      "text" : "In this section we present sound and complete axiomatisations of the sets of monodic validities for the classes of quantified interpreted systems in Section 2. First, we introduce the basic system QKTm that extends to the first-order case the multi-modal epistemic logic S5m combined with the linear temporal logic LTL.\nDefinition 6. The system QKTm contains the following schemes of axioms and rules, where φ, ψ and χ are formulas in L1m and =⇒ is the inference relation.\nFirst-order logic Taut classical propositional tautologies MP φ→ ψ, φ =⇒ ψ Ex ∀xφ→ φ[x/t] Gen φ→ ψ[x/t] =⇒ φ→ ∀xψ, where x is not free in φ Temporal logic K ©(φ→ ψ)→ (©φ→©ψ) T1 ©¬φ↔ ¬© φ T2 φUψ ↔ ψ ∨ (φ ∧©(φUψ)) Nec φ =⇒©φ T3 χ→ ¬ψ ∧©χ =⇒ χ→ ¬(φUψ) Epistemic logic K Ki(φ→ ψ)→ (Kiφ→ Kiψ) T Kiφ→ φ 4 Kiφ→ KiKiφ 5 ¬Kiφ→ Ki¬Kiφ Nec φ =⇒ Kiφ\nThe operator Ki is an S5 modality, while the next© and until U operators are axiomatised as linear-time modalities (Fagin et al., 1995). To this we add the classical postulates Ex and Gen for quantification, which are both sound as we consider a unique domain of individuals in the quantified interpreted systems.\nDefinition 7. The system QKTCm extends QKTm with the following schemes of axioms for common knowledge, where φ, ψ and χ are formulas in LC1m and =⇒ is the inference relation.\nC1 Cφ↔ (φ ∧ ECφ) C2 φ→ (ψ ∧ Eφ) =⇒ φ→ Cψ\nWe consider the standard definitions of proof and theorem; `S φ means that the formula φ is a theorem in the formal system S. We remark that the Barcan formula (BF ) 2∀xφ↔ ∀x2φ is provable for any unary modal operator 2 by the axioms K and Ex, and the rules MP and Gen. The notions of soundness and completeness of a system S with respect to a class C of QIS are defined as standard: S is sound w.r.t. C if for all φ, S ` φ implies C |= φ. Similarly, S is complete w.r.t. C if for all φ, C |= φ implies S ` φ.\nIn this paper we focus on the schemes of axioms in Table 2 that specify key interactions between time and knowledge (Halpern et al., 2004). We use 1, . . . , 5 as superscripts to denote\nthe systems obtained by adding to QKTm or QKTCm any combination of KT1-KT5. For instance, the system QKTC2,3m extends QKTCm with the axioms KT2 and KT3.\nIt is straightforward to check that the axioms of QKTm and QKTCm are valid on every QIS and the inference rules preserve validity. However, the axioms KT1-KT5 are valid only on specific classes of QIS as stated in the following Remark.\nRemark 1. A QIS P satisfies any of the axioms KT1-KT5 in the first column if P satisfies the corresponding semantical condition in the second column.\nAxiom Condition on QIS KT1 perfect recall KT2 perfect recall, synchronicity KT3 no learning KT4 no learning, synchronicity KT5 all agents share the same knowledge, i.e.,\nfor all i, j ∈ Ag, (r, n) ∼i (r′, n′) iff (r, n) ∼j (r′, n′).\nThese results can be shown in a similar way to the propositional case (Halpern et al., 2004); so the proofs are omitted.\nBy using Remark 1 we can prove soundness results for all our first-order temporalepistemic systems.\nTheorem 1 (Soundness). The systems reported in the first and second column of the following table are sound w.r.t. the corresponding classes of QIS in the third column.\nSystems QIS QKTm QKTCm QISm, QISsyncm , QISuism , QISsync,uism QKT 1m QKTC 1 m QISprm , QISpr,uism QKT 2m QKTC 2 m QISpr,syncm , QISpr,sync,uism QKT 3m QKTC 3 m QISnlm, QISnl,uism QKT 4m QKTC 4 m QISnl,syncm QKT 2,3m QKTC 2,3 m QISnl,prm , QISnl,pr,uism QKT 1,4m QKTC 1,4 m QISnl,pr,syncm QKT 1,4,5m QKTC 1,4,5 m QISnl,sync,uism , QISnl,pr,sync,uism\nProof. These results follow from Remark 1 by a line of reasoning similar to that used in the propositional case (Fagin et al., 1995; Halpern et al., 2004). Notice that if a quantified interpreted systems P satisfies no learning, synchronicity, and has a unique initial state, then P satisfies also perfect recall, that is, P ∈ QISnl,sync,uism implies P ∈ QISnl,pr,sync,uism . Further, all agents share the same knowledge, therefore KT5 holds in P.\nAs we anticipated above, not all calculi are complete w.r.t. the corresponding classes of quantified interpreted systems in Theorem 1. In the next theorem we summarise the completeness results that will be proved in the rest of this paper.\nTheorem 2 (Completeness). The systems reported in the first and second column of the following table are complete w.r.t. the corresponding classes of QIS in the third column.\nSystems QIS QKTm QKTCm QISm, QISsyncm , QISuism , QISsync,uism QKT 1m QISprm , QISpr,uism QKT 2m QISpr,syncm , QISpr,sync,uism QKT 3m QISnlm QKT 4m QISnl,syncm QKT 2,3m QISnl,prm QKT 1,4m QISnl,pr,syncm QKT 2,31 QIS nl,uis 1 , QIS nl,pr,uis 1 QKT 1,4,5m QKTC 1,4,5 m QISnl,sync,uism , QISnl,pr,sync,uism\nWe observe that, as regards the language L1m, the sets of monodic validities are axiomatisable for all classes introduced but QISnl,uism and QISnl,pr,uism . However, for L11 we have that QISnl,uis1 and QIS nl,pr,uis 1 are equivalent to QIS nl,pr 1 . Thus, the sets of monodic validities on QISnl,pr,uis1 and QIS nl,uis 1 are axiomatised by QKT 2,3 1 .\nAs regards the language LC1m, only the set of monodic validities on QISm, QISsyncm , QISuism ,QISsync,uism are axiomatisable, as well as those onQISnl,sync,uism andQISnl,pr,sync,uism . All other classes are not recursively axiomatisable, as this is the case already at the propositional level (Halpern & Moses, 1992; Halpern & Vardi, 1986, 1989).\nFor proving the completeness results reported above we introduce Kripke models as a generalisation of quantified interpreted systems."
    }, {
      "heading" : "3.1 Kripke Models",
      "text" : "To prove the completeness results in Theorem 2, we first introduce an appropriate class of Kripke models as a generalisation of QIS and prove completeness for these models. Then we apply a correspondence result between Kripke models and QIS to obtain the desired results.\nDefinition 8 (Kripke model). A Kripke model is a tuple M = 〈W,RW , {∼i}i∈Ag,D, I〉 such that\n• W is a non-empty set of states;\n• RW is a non-empty set of functions r : N→W ;\n• for every agent i ∈ Ag, ∼i is an equivalence relation on W ;\n• D is a non-empty set of individuals;\n• for every w ∈W , I is a first-order interpretation, that is, a function such that\n– for every constant c, I(c, w) ∈ D, – for every predicate constant P k, I(P k, w) is a k-ary relation on D.\nFurther, for every w,w′ ∈W , I(c, w) = I(c, w′). Notice that Def. 8 differs from other notions of Kripke model in that it includes the set RW of functions to guarantee that the correspondence between Kripke models and QIS is one-to-one. We also assume a unique domain of interpretation, as well as a fixed interpretation for individual constants, so also in this case we simply write I(c). Kripke models are a generalisation of QIS in that they do not specify the inner structure of the states in W . Also for Kripke models we introduce points as pairs (r, n) for r ∈ RW and n ∈ N. A point derives its properties from the corresponding state; for instance, (r, n) ∼i (r′, n′) if r(n) ∼i r′(n′).\nWe consider Kripke models satisfying synchronicity, perfect recall, no learning, and having a unique initial state. The definition of these subclasses is analogous to Def. 3.\nDefinition 9. A Kripke model M satisfies synchronicity iff for every i ∈ Ag, for all points (r, n), (r′, n′),\n(r, n) ∼i (r′, n′) implies n = n′\nperfect recall for agent i iff for all points (r, n), (r′, n′), if (r, n) ∼i (r′, n′) and n > 0 then either (r, n− 1) ∼i (r′, n′) or there is k < n′ such that (r, n− 1) ∼i (r′, k) and for all k′, k < k′ ≤ n′ implies (r, n) ∼i (r′, k′).\nno learning for agent i iff for all points (r, n), (r′, n′), if (r, n) ∼i (r′, n′) then either (r, n+ 1) ∼i (r′, n′) or there is k > n′ such that (r, n+ 1) ∼i (r′, k) and for all k′, k > k′ ≥ n′ implies (r, n) ∼i (r′, k′).\nunique initial state iff for all r, r′ ∈ RW , r(0) = r′(0).\nNow let Km be the class of Kripke models with m agents. Hereafter we adopt the same naming conventions as for QIS; for instance, Ksync,uism is the class of synchronous Kripke models with m agents and having a unique initial state. Further, the inductive clauses for the satisfaction relation |= with respect to an assignment σ are straightforwardly defined from those for QIS, as well as the notions of truth and validity.\nDefinition 10. The satisfaction of a formula φ ∈ Lm (resp. LCm) at point (r, n) ∈M for an assignment σ, or (Mσ, r, n) |= φ, is inductively defined as follows:\n(Mσ, r, n) |= P k(t1, . . . , tk) iff 〈Iσ(t1), . . . , Iσ(tk)〉 ∈ I(P k, r(n)) (Mσ, r, n) |= ¬ψ iff (Mσ, r, n) 6|= ψ (Mσ, r, n) |= ψ → ψ′ iff (Mσ, r, n) 6|= ψ or (Mσ, r, n) |= ψ′ (Mσ, r, n) |= ∀xψ iff for all a ∈ D, (Mσxa , r, n) |= ψ (Mσ, r, n) |=©ψ iff (Mσ, r, n+ 1) |= ψ (Mσ, r, n) |= ψUψ′ iff there is n′ ≥ n such that (Mσ, r, n′) |= ψ′ and n ≤ n′′ < n′ implies (Mσ, r, n′′) |= ψ (Mσ, r, n) |= Kiψ iff for all r′, n′, (r, n) ∼i (r′, n′) implies (Mσ, r′, n′) |= ψ (Mσ, r, n) |= Cψ iff for all k ∈ N, (Mσ, r, n) |= Ekψ\nA formula φ is true at a point (r, n) if it is satisfied at (r, n) by every assignment σ; φ is true on a Kripke model M if it is true at every point in M; φ is valid on a class C of Kripke models if it is true on every Kripke model in C. Further, a formula φ is satisfiable on a Kripke model M if it is satisfied at some point in M, for some assignment σ; φ is satisfiable on a class C of Kripke models if it is satisfiable on some Kripke model in C.\nWe relate Kripke models and quantified interpreted systems by means of a map g : Km → QISm (Lomuscio & Ryan, 1998). Let M = 〈W,RW , {∼i}i∈Ag,D, I〉 be a Kripke model. For every agent i ∈ Ag, for (r, n) ∈M, let the equivalence class [(r, n)]i = {(r′, n′) | (r, n) ∼i (r′, n′)} be a local state for agent i; while each (r, n) is a local state for the environment. Then define g(M) as the tuple 〈R′,D, I ′〉 where R′ contains the runs rr for r ∈ RW such that rr(n) = 〈(r, n), [(r, n)]1, . . . , [(r, n)]m〉. Further, D is the same as in M, and for every constant c, I ′(c, rr(n)) = I(c, r(n)), and I ′(P k, rr(n)) = I(P k, r(n)). The structure g(M) is a QIS that satisfies the following result:\nLemma 1. For every φ in Lm (resp. LCm),\n(Mσ, r, n) |= φ iff (g(M)σ, rr, n) |= φ\nProof. The proof is by induction on the structure of φ. If φ is an atomic formula P k(t1, . . . , tk), then (Mσ, r, n) |= φ iff 〈Iσ(t1), . . . , Iσ(tk)〉 ∈ I(P k, r(n)), iff we have 〈I ′σ(t1), . . . , I ′σ(tk)〉 ∈ I ′(P k, rr(n)), iff (g(M)σ, rr, n) |= φ. The inductive cases for the propositional connectives and quantifiers are straightforward, as well as those for the temporal operators © and U . As to φ = Kiψ, we have that (Mσ, r, n) |= φ iff (r, n) ∼i (r′, n′) implies (Mσ, r′, n′) |= ψ, but (r, n) ∼i (r′, n′) iff rri (n) = rr ′ i (n\n′). Thus, (Mσ, r, n) |= φ iff (rr, n) ∼′i (rr ′ , n′) implies (Mσ, r′, n′) |= ψ. Again, by the induction hypothesis (Mσ, r, n) |= φ iff (rr, n) ∼′i (rr ′ , n′) implies (g(M)σ, rr′ , n′) |= ψ, i.e., iff (g(M)σ, rr, n) |= φ. The case for φ = Cψ is treated similarly by considering the epistemic reachability relation.\nNotice that ifM satisfies synchronicity, or perfect recall, or no learning, or has a unique initial state, then also g(M) satisfies the same property. This follows from the fact that (r, n) ∼i (r′, n′) iff (rri , n) ∼′i (rr ′ , n′). Thus, g defines a map from each of the 16 subclasses of Km outlined in Def. 9 to the corresponding subclass of QISm and we obtain the following corollary to Lemma 1.\nCorollary 1. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula φ ∈ L1m (resp. LC1m), if φ is satisfiable in KXm, then φ is satisfiable in QISXm.\nFor reasoning about the monodic fragments of Lm and LCm when we are dealing with no learning and perfect recall, we introduce the following class of “monodic friendly” Kripke models. These structures are motivated by the fact that KT1 and KT3 are too weak to enforce either perfect recall or no learning on Kripke models when these axioms are restricted to monodic formulas. However, they suffice for monodic friendly structures. In the following, we also prove that satisfiability in Kripke models is equivalent to satisfability in monodic friendly structures when we restrict our languages to monodic formulas.\nDefinition 11 (mf-model). A monodic friendly Kripke model is a tuple Mmf = 〈W,RW , {∼i,a}i∈Ag,a∈D,D, I〉 such that\n• W , RW , D and I are defined as for Kripke models;\n• for i ∈ Ag, a ∈ D, ∼i,a is an equivalence relation on W .\nWe can define synchronicity, perfect recall, no learning, and having a unique initial state also for mf-models by parametrising Def. 9 to each relation ∼i,a. For instance, an mf-model satisfies perfect recall for agent i if for all points (r, n), (r′, n′), for all a ∈ D, whenever (r, n) ∼i,a (r′, n′) and n > 0 then either (r, n − 1) ∼i,a (r′, n′) or there is k < n′ such that (r, n − 1) ∼i,a (r′, k) and for all k′, k < k′ ≤ n′ implies (r, n) ∼i,a (r′, k′). As regards the subclasses of the class MFm of all mf-models with m agents, we adopt the same naming conventions as for QIS and Kripke models. Notice that Kripke models can be seen as mf-models such that for all i ∈ Ag, a, b ∈ D, ∼i,a is equal to ∼i,b.\nFinally, the satisfaction relation |= for φ ∈ L1m (resp. LC1m) in a mf-model Mmf is defined in the same way as in Kripke models, except for the epistemic operators:\n(Mσmf , r, n) |= Kiψ[y] iff for all r′, n′, (r, n) ∼i,σ(y) (r′, n′) implies (Mσmf , r′, n′) |= ψ[y]\nwhere at most y appears free in ψ. Notice that if ψ is a sentence, then (Mσmf , r, n) |= Kiψ iff (r, n) ∼i,a (r′, n′) implies (Mσmf , r′, n′) |= ψ for all a ∈ D. The case for the common knowledge operator C is straightforward by definition of Ek. In particular, two points (r, n) and (r′, n′) are epistemically reachable for a ∈ D, or simply reachable, if (r, n) ∼a (r′, n′), where ∼a is the transitive closure of ⋃ i∈Ag ∼i,a.\nWe remark that the converse of the Barcan formula, or CBF , Ki∀xψ → ∀xKiψ holds in all mf-models; while the Barcan formula, or BF , ∀xKiψ → Ki∀xψ does not. To check this consider the mf-model M = 〈W,RW , {∼i,a}i∈Ag,a∈D,D, I〉 in Fig.1(a) such that\n- W = {w,w′, w′′}\n- RW = {r, r′, r′′} and r(0) = w, r′(0) = w′, and r′′(0) = w′′\n- D = {a, b}\n- I(P 1, r(0)) = {a, b}, I(P 1, r′(0)) = {a} and I(P 1, r′′(0)) = {b}\n- ∼i,a and ∼i,b are equivalence relations such that (r, 0) ∼i,a (r′, 0) and (r, 0) ∼i,b (r′′, 0).\nWe can see that (M, r, 0) |= ∀xKiP (x), but (M, r, 0) 6|= Ki∀xP (x) as (r, 0) ∼i,a (r′, 0) and (Mσ, r′, 0) 6|= P (x) for σ(x) = b.\nFurthermore, the K axiom Ki(ψ → ψ′) → (Kiψ → Kiψ′) is not valid on mf-models either. In fact, consider the mf-model M′ = 〈W ′,R′W ′ , {∼′i,a}i∈Ag,a∈D′ ,D′, I ′〉 in Fig.1(b) such that\n- W ′ = {v, v′, v′′}\n- R′W ′ = {q, q′, q′′} and q(0) = v, q′(0) = v′, and q′′(0) = v′′\n- D′ = {c, d}\n- I ′(Q1, q(0)) = {c}, I ′(Q1, q′(0)) = {c} and I ′(Q1, q′′(0)) = ∅\n- ∼i,c and ∼i,d are equivalence relations such that (q, 0) ∼i,c (q′, 0) and (q, 0) ∼i,d (q′′, 0).\nFinally, let σ(x) = c. We can check that (Mσ, q, 0) |= (Q(x) → ∃xQ(x)) ∧ Q(x) and (Mσ, q′, 0) |= (Q(x)→ ∃xQ(x))∧Q(x). Thus, (Mσ, q, 0) |= Ki(Q(x)→ ∃xQ(x))∧KiQ(x). But (M, q′′, 0) 6|= ∃xQ(x), so (Mσ, q, 0) 6|= Ki∃xQ(x).\nWe now prove the following lemma, which will be used in the completeness proof for systems satisfying perfect recall or no learning. The lemma states that, when we deal with satisfability of monodic formulas, mf-models suffice.\nLemma 2. Let MFK,BFm be the class of all mf-models validating the formulas K and BF . For every monodic formula φ ∈ L1m (resp. LC1m),\nKm |= φ iff MFK,BFm |= φ\nProof. The implication from right to left follows from the fact that the class Km of all Kripke models is isomorphic to the subclass of monodic friendly Kripke models such that for all i ∈ Ag, a, b ∈ D, ∼i,a is equal to ∼i,b. In other words, given a Kripke model M = 〈W,RW , {∼i}i∈Ag,D, I〉 we can define the mf-model M′ = 〈W,RW , {∼i,a}i∈Ag,a∈D,D, I〉, where for every a ∈ D, ∼i,a is equal to ∼i. It is straightforward to see that M′ validates both K and BF (in particular, the counterexamples in Fig. 1 are ruled out). Further, if M 6|= φ then M′ 6|= φ. Thus, if MFK,BFm |= φ, then Km |= φ.\nFor the implication from left to right, assume that Mmf = 〈W,RW , {∼i,a}i∈Ag,a∈D,D, I〉 is an mf-model validating K and BF such that (Mσmf , r, n) 6|= φ for some point (r, n) and some assignment σ. We can then build a Kripke model M′ = 〈W ′,R′W ′ , {∼′i}i∈Ag,D′, I ′〉 from Mmf such that (M′σ, r, n) 6|= φ as follows. We start by assuming W ′ = W , R′ = R and D′ = D. Further, for each i ∈ Ag, define ∼′i as the transitive closure of ⋃ a∈D ∼i,a. Finally, set I ′ = I. We now have to check that the Kripke model M′ is well defined and does not validate φ. First of all, we point out the following issue associated with the construction above: it\ncan be the case that for some point (q, k) and some monodic formula ψ[x], it happens that (Mσmf , q, k) |= Kiψ[x], (q, k) ∼i,σ(x) (q′, k′) and (q, k) ∼i,σ(y) (q′′, k′′) for some σ(x) 6= σ(y). Further, suppose that (Mσmf , q′′, k′′) 6|= ψ[x], while we obviously have that (Mσmf , q′, k′) |= ψ[x]. Now by the definition of ∼′i we have that (M′σ, q, k) 6|= Kiψ[x]; so the two models do not satisfy the same formulas. We can solve this problem by modifying the interpretation I according to the structure of the monodic formula ψ[x], while keeping the same truth value for ψ[x] at point (q, k). We consider the relevant cases according to the structure of ψ[x]; the induction hypothesis consists of the fact that we are able to find such an interpretation I for all subformulas of ψ[x].\nFor ψ[x] = P (x) we simply assume that σ(x) ∈ I(P, q′′(k′′)), so that (M′σ, q′′, k′′) |= ψ[x] and (M′σ, q, k) |= Kiψ[x]. Note that this does not change the truth value of any epistemic formula in (q, k) as we assumed that (q, k) 6∼i,σ(x) (q′′, k′′) (otherwise ψ[x] would be satisfied in (q′′, k′′)). The cases for propositional connectives and modal operators are similarly dealt with by applying the induction hypothesis. For ψ[x] = ∀yθ[x, y] we have that (Mσmf , q′′, k′′) 6|= ψ[x], therefore there exists b ∈ D such that (M σyb mf , q\n′′, k′′) 6|= θ[x, y]. Now we have to consider 4 different cases depending on whether (q, k) satisfies any of these 4 formulas:\nKi ∀x ¬θ[x, y] (3) K̄i ∀x ¬θ[x, y] (4) Ki ∃x ¬θ[x, y] (5) K̄i ∃x ¬θ[x, y] (6)\nBy using the axioms and inference rules in QKTm for Formula (3) we can show what follows (where ⇒ is used for entailment):\n(Mσmf , q, k) |= Ki∀yθ[x, y] ∧Ki∀x¬θ[x, y]⇒ ⇒ (Mσmf , q, k) |= ∃xKi∀yθ[x, y] ∧ ∃yKi∀x¬θ[x, y] by Ex ⇒ (Mσmf , q, k) |= Ki∃x∀yθ[x, y] ∧Ki∃y∀x¬θ[x, y] by ∃zKiφ→ Ki∃zφ ⇒ (Mσmf , q, k) |= Ki(∃x∀yθ[x, y] ∧ ∃y∀x¬θ[x, y]) by Ki(φ ∧ ψ)↔ Kiφ ∧Kiψ\n⇒ (Mσmf , q, k) |= Ki(∃x∀uθ[x, u] ∧ ∃y∀v¬θ[v, y]) by change of variables ⇒ (Mσmf , q, k) |= Ki∃x∃y∀u∀v(θ[x, u] ∧ ¬θ[v, y]) by prefixing ⇒ (Mσmf , q, k) |= Ki∃x∃y(θ[x, y] ∧ ¬θ[x, y]) by Ex\nbut the last formula is a contradiction; so (3) cannot hold in (q, k). Similarly, Formula (4) cannot hold in (q, k) either because:\n(Mσmf , q, k) |= Ki∀yθ[x, y] ∧ K̄i∀x¬θ[x, y] ⇒ (Mσmf , q, k) |= ∃xKi∀yθ[x, y] ∧ ∃yK̄i∀x¬θ[x, y] by Ex ⇒ (Mσmf , q, k) |= Ki∃x∀yθ[x, y] ∧ ∃yK̄i∀x¬θ[x, y] by ∃zKiφ→ Ki∃zφ ⇒ (Mσmf , q, k) |= Ki∃x∀yθ[x, y] ∧ K̄i∃y∀x¬θ[x, y] by ∃zK̄iφ↔ K̄i∃zφ ⇒ (Mσmf , q, k) |= K̄i(∃x∀yθ[x, y] ∧ ∃y∀x¬θ[x, y]) by Kiφ ∧ K̄iψ → K̄i(φ ∧ ψ) ⇒ (Mσmf , q, k) |= K̄i∃x∃y(θ[x, y] ∧ ¬θ[x, y]) similarly to above\nNote that in both derivations we make use of the formulas K and BF (for instance, to prove the theorems Ki(φ ∧ ψ) ↔ Kiφ ∧Kiψ and ∃zKiφ → Ki∃zφ). Finally, to satify the Formulas (5) and (6) in (q, k), we have to guarantee the existence of an individual x while avoiding the clash with σ(x). So, we introduce a new individual a′ in the domain D′ such that a′ and σ(x) satisfy the same formulas at all points. Thus, a′ can be seen as a copy of σ(x). Finally, by the induction hypothesis we can modify the interpretation I ′ so that (M′σ, q′′, k′′) |= θ[x, y].\nThe case for the common knowledge operator derives from the one for Ki. As a result, we obtain a Kripke model M′ such that (M′σ, r, n) 6|= φ.\nMoreover, by the procedure described above, ifMmf satisfies perfect recall, or no learning, or synchronicity, or has unique initial state, then also M′ satisfies the same property. Thus, by Lemma 2 we can prove the following result.\nCorollary 2. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula φ ∈ L1m (resp. LC1m), if φ is satisfiable in MFXm also validating the formulas K and BF , then φ is satisfiable in KXm.\nProof. It is easy to see that if Mmf satisfies either synchronicity or has a unique initial state, then M′ does as well by the way it is defined. Further, suppose that Mmf satisfies perfect recall, and (r, n) ∼′i (r′, n′) for n > 0. This means that there is a sequence a1, . . . , ak of individuals in D and a sequence (q1,m1), . . . , (qk,mk) of points such that (i) (r, n) = (q1,m1) and (r′, n′) = (qk,mk); and (ii) (qj ,mj) ∼i,aj (qj+1,mj+1) for j < k. We show the result for k = 3, the case for k > 3 follows by a straightforward generalisation.\nIf (q1,m1 − 1) ∼i,a1 (q2,m2), then by the definition of ∼′i we have that (q1,m1 − 1) ∼′i (q3,m3) as well. Hence, Mmf satisfies perfect recall. Otherwise, suppose that by perfect recall there is l2 < m2 such that (q1,m1 − 1) ∼i,a1 (q2, l2), and for all l′2, l2 < l′2 ≤ m2 implies (q1,m1) ∼i,a1 (q2, l′2). Now consider each l′2(h) = m2 − h, for 0 ≤ h < m2 − l2. By perfect recall, either (i) there exists p3(h) such that (q2, l′2(h)) ∼i,a2 (q3, p3(h)), and for all p′3(h), p3(h) < p ′ 3(h) ≤ p3(h − 1) implies (q2, l2(h)) ∼i,a2 (q3, p′3(h)), or (ii) (q2, l′2(h) − 1) ∼i,a2 (q3, p3(h − 1)), where p3(−1) = m3. Notice that in both cases, by the definition of ∼′i, we have that (q1,m1) ∼′i (q3, p′3(h)) for all 0 ≤ h < m2 − l2, that is, (q1,m1) ∼′i (q3, p′3) for all p3[l2 +1] < p′3 ≤ m3. Further, for l2, either (i) there exists l3 such\nthat (q2, l2 − 1) ∼i,a2 (q3, l3), and for all l′3, l3 < l′3 ≤ p3[l2 + 1] implies (q2, l2) ∼i,a2 (q3, l′3), or (ii) (q2, l2 − 1) ∼i,a2 (q3, p3[l2 + 1]). In the first case, if some l′3 is strictly less than m3, then there is l′3 such that (q1,m1 − 1) ∼′i (q3, l′3) and for all l′′3 , l′3 < l′′3 ≤ m3 implies (q1,m1) ∼′i (q3, l′′3). Otherwise, we have that (q1,m1− 1) ∼′i (q3,m3). Hence,Mmf satisfies perfect recall.\nThe proof for no learning is similar.\nFinally, by combining Corollaries 1 and 2 we immediately obtain the following result.\nCorollary 3. Let X be any subset of {pr, nl, sync, uis}. For every monodic formula φ ∈ L1m (resp. LC1m), if φ is satisfiable in MFXm also validating the formulas K and BF , then φ is satisfiable in QISXm.\nIn the next section we show that it is indeed possible to build such an mf-model."
    }, {
      "heading" : "4. The Completeness Proof",
      "text" : "In this section we outline the main steps of the completeness proof, which is based on a quasimodel construction (Gabbay, Kurucz, Wolter, & Zakharyaschev, 2003; Hodkinson et al., 2000). Differently from these contributions, here we explicitly take into account the interaction between temporal and epistemic modalities. Intuitively, a quasimodel for a monodic formula φ is a relational structure whose points are sets of sets of subformulas of φ. Each set of sets of subformulas describes a “possible state of affairs”, and contains sets of subformulas defining the individuals in that state. More formally, given a formula φ ∈ LC1n we define\nsubCφ = subφ ∪ {ECψ | Cψ ∈ subφ} ∪ {KiCψ | Cψ ∈ subφ, i ∈ Ag}\nwhere subφ is the set of subformulas of φ. For φ ∈ L1n, subCφ is simply subφ. Further, we define\nsubC©¬φ = subCφ ∪ {¬ψ | ψ ∈ subCφ} ∪ {©ψ | ψ ∈ subCφ} ∪ {©¬ψ | ψ ∈ subCφ}\nObserve that subC©¬φ is closed under negation modulo equivalences φ↔ ¬¬φ and T1, that is, for all ψ ∈ subC©¬φ, if ψ is not of the form ¬θ then ¬ψ ∈ subC©¬φ; otherwise, θ ∈ subC©¬φ. Finally, let subnφ be the subset of subC©¬φ containing formulas with at most n free variables. So, sub0φ is the set of sentences in subnφ. If x is a variable not occurring in φ, we define subxφ = {ψ[y/x] | ψ[y] ∈ sub1φ}. Clearly, x is the only free variable in the formulas in subxφ. By conφ we denote the set of all constants occurring in φ. In Table 3 we report the set subyφ for φ equal to Formula (1) thus abbreviated:\n∀y C(∀zAv(y, z)U∃xReq(x, y))\nFurther, for k ∈ N we define the closures clkφ and clk,iφ by mutual recursion.\nDefinition 12. Let cl0φ = subxφ and for k ≥ 0, clk+1φ = ⋃ i∈Ag clk,iφ. For k ≥ 0, i ∈ Ag, clk,iφ = clkφ ∪ {Ki(ψ1 ∨ . . . ∨ ψn),¬Ki(ψ1 ∨ . . . ∨ ψn) | ψ1, . . . , ψn ∈ clkφ}.\nWe define ad(φ) as the greatest number of alternations of distinct Ki’s along any branch in φ’s parse tree (Halpern et al., 2004). Further, an index is any finite sequence ι = i1, . . . , ik of agents such that in 6= in+1, for 1 ≤ n < k; the length of ι is denoted by |ι|. Also, ι]i is the absorptive concatenation of indexes ι and i such that ι]i = ι if ik = i. Finally, Kιψ is a shorthand for Ki1 . . .Kikψ. Now let ι be an index such that |ι| ≤ ad(φ). If ι is the empty sequence then clιφ = clad(φ)φ. If ι = ι′]i, then clιφ = clk,iφ for k = ad(φ) − |ι|. We now introduce types for quasimodels, which intuitively can be seen as individuals described by maximal and consistent sets of formulas.\nDefinition 13 (Type). A ι-type t for φ is any maximal and consistent subset of clιφ, i.e., for every monodic formulas ψ and ψ′ in clιφ,\n(i) ¬ψ ∈ t iff ψ /∈ t;\n(ii) ψ ∧ ψ′ ∈ t iff ψ, ψ′ ∈ t.\nTwo ι-types t, t′ are said to agree on sub0φ if t ∩ sub0φ = t′ ∩ sub0φ, i.e., if they share the same sentences. Given a ι-type t for φ and a constant c ∈ conφ, 〈t, c〉 is an indexed type for φ, abbreviated as tc. In Table 4 we report a type t in cl0φ, for φ equal to Formula (1).\nWe now introduce state candidates, which intuitively represent the states of a quasimodel.\nDefinition 14 (State candidate). A ι-state candidate for φ is a pair C = 〈T, T con〉 such that\n(i) T is a set of ι-types for φ that agree on sub0φ;\n(ii) T con is a set containing for each c ∈ conφ an indexed type tc such that t ∈ T .\nWe also introduce the notion of point, which describes a state candidate from the perspective of a particular type.\nDefinition 15 (Point). A ι-point for φ is a pair P = 〈C, t〉 such that\n(i) C = 〈T, T con〉 is a ι-state candidate for φ;\n(ii) t ∈ T is a ι-type.\nNote that, by a slight abuse of notation, we call points both the pairs (r, n) in QIS and the pairs P = 〈C, t〉. This is to be consistent with previous work (Fagin et al., 1995; Halpern et al., 2004); the context will disambiguate. Also, we write t ∈ C for C = 〈T, T con〉 and t ∈ T . Similarly for t ∈ P. Given a ι-state candidate C = 〈T, T con〉 and a point P = 〈C, t〉 we define the formulas αC and βP as follows:\nαC := ∧ t∈T ∃xt[x] ∧ ∀x ∨ t∈T t[x] ∧ ∧ tc∈T con t[x/c] βP := αC ∧ t\nwhere we do not distinguish between a type t and the conjuction of formulas it contains. A ι-state candidate C is S-consistent if the formula αC is consistent w.r.t. the system S, i.e., if 0S ¬αC. Similarly, a ι-point P is S-consistent if the formula βP is consistent w.r.t. S. We refer to plain consistency whenever the system S of reference is understood. Consistent state candidates represent the states of our quasimodels. We now define the relations of suitability that constitute the relational part of quasimodels.\nDefinition 16. • A ι1-type t1 and a ι2-type t2 are ©-suitable, or t1 ⇒ t2, iff ι1 = ι2 and t1∧©t2 is consistent. They are i-suitable, or t1 ≈i t2, iff ι1]i = ι2]i and t1∧K̄it2 is consistent.\n• A ι1-state candidate C1 and a ι2-state candidate C2 are ©-suitable, or C1 ⇒ C2, iff ι1 = ι2 and αC1 ∧©αC2 is consistent. They are i-suitable, or C1 ≈i C2, iff ι1]i = ι2]i and αC1 ∧ K̄iαC2 is consistent.\n• A ι1-point P1 and a ι2-point P2 are ©-suitable, or P1 ⇒ P2, iff ι1 = ι2 and βP1 ∧ ©βP2 is consistent. They are i-suitable, or P1 ≈i P2, iff ι1]i = ι2]i and βP1 ∧ K̄iβP2 is consistent.\n• A ι1-point P1 = 〈C1, t1〉 and a ι2-point P2 = 〈C2, t2〉 are ©-suitable for a constant c ∈ conφ, or P1 ⇒c P2, iff P1 ⇒ P2, tc1 ∈ T con1 and tc2 ∈ T con2 . They are i-suitable for c, or P1 ≈ci P2, iff P1 ≈i P2, tc1 ∈ T con1 and tc2 ∈ T con2 .\nBy using the axioms T , 4 and 5 it can be shown that the relation ≈i is reflexive, transitive and symmetric, that is, an equivalence relation. Also, the relation ⇒ is serial. In the following lemma we list some properties of relations ⇒ and ≈i that will be useful in what follows.\nLemma 3. (i) Let ©ψ ∈ subxφ, if t1 ⇒ t2 then ©ψ ∈ t1 iff ψ ∈ t2.\n(ii) Let Kiψ ∈ subxφ and let t be a ι-type, Kiψ ∈ t iff for all ι-types t′, t ≈i t′ implies ψ ∈ t′. Moreover, let |ι]i| ≤ ad(φ), then Kiψ ∈ t iff for all ι]i-types t′, t ≈i t′ implies ψ ∈ t′.\nProof.\n(i) The proof is similar to the one for Lemma 9(i) in the work of Wolter et al. (2002). If ©ψ ∈ t1 and ψ /∈ t2 then ¬ψ ∈ t2 and since t1∧©t2 is consistent, then also©ψ∧©¬ψ is consistent, which is a contradiction. From right to left, if ψ ∈ t2 and ©ψ /∈ t1 then ¬© ψ ∈ t1. Since t1 ∧©t2 is consistent, then also ¬© ψ ∧©ψ is consistent, which is a contradiction.\n(ii) From left to right, if Kiψ ∈ t and ψ /∈ t′ then ¬ψ ∈ t′ and since t ∧ K̄it′ is consistent, then also Kiψ ∧ K̄i¬ψ is consistent, which is a contradiction. From right to left, if Kiψ /∈ t then we can extend the set {¬ψ} ∪ {θ | Kiθ ∈ t} to a ι-type t′. In particular, t ≈i t′ and ¬ψ ∈ t′. Moreover, if |ι]i| ≤ ad(φ) then we can similarly prove that Kiψ ∈ t iff for all ι]i-types t′, t ≈i t′ implies ψ ∈ t′.\nWe now present the frame underlying the quasimodel for φ.\nDefinition 17 (Frame). A frame F is a tuple 〈R,D, {∼i,a}i∈Ag,a∈D, f〉 where\n(i) R is a non-empty set of indexes r, r′, . . .;\n(ii) D is a non-empty set of individuals;\n(iii) for every i ∈ Ag, a ∈ D, ∼i,a is an equivalence relation on the set of points (r, n) for r ∈ R and n ∈ N;\n(iv) f is a partial function associating to each point (r, n) a consistent state candidate f(r, n) = Cr,n such that\n(a) the domain of f is not empty;\n(b) if f is defined on (r, n), then it is defined on (r, n+ 1);\n(c) if f is defined on (r, n) and (r, n) ∼i,a (r′, n′), then f is defined on (r′, n′).\nThe function f is partial to take into consideration the case of synchronous systems. Also, it is straightforward to introduce frames satisfying perfect recall, no learning, synchronicity, or having a unique initial state, by following the same definitions given for mf-models. Next, we provide the definition of objects, which correspond to the runs of Gabbay et al. (2003). We choose this terminology to avoid confusion with the runs in QIS.\nDefinition 18 (Object). Given an individual a ∈ D, an object in the frame F is a map ρa associating a type ρa(r, n) ∈ Tr,n to every (r, n) ∈ Dom(f) with f(r, n) = Cr,n = 〈Tr,n, T conr,n 〉 such that\n1. ρa(r, n)⇒ ρa(r, n+ 1)\n2. if (r, n) ∼i,a (r′, n′) then ρa(r, n) ≈i ρa(r′, n′)\n3. χUψ ∈ ρa(r, n) iff there is n′ ≥ n such that ψ ∈ ρa(r, n′) and for all n′′, n ≤ n′′ < n′ implies χ ∈ ρa(r, n′′)\n4. if ρa(r, n) ≈i t are ι-types, then for some (r′, n′), (r, n) ∼i,a (r′, n′) and ρa(r′, n′) = t\n5. if ¬Cψ ∈ ρa(r, n) then there exists a point (r′, n′) reachable from (r, n) such that ¬ψ ∈ ρa(r′, n′)\nAn object+ satisfies (1), (2), (3), (5) above and (4′) below instead of (4).\n(4′) if ρa(r, n) is a ι-type, t is a ι]i-type and ρa(r, n) ≈i t, then for some (r′, n′) ∼i,a (r, n), ρa(r′, n′) = t.\nIntuitively, an object identifies the same individual, here represented by types, across different state candidates. Now we have all the elements to give the definition of quasimodel.\nDefinition 19 (Quasimodel). A quasimodel for φ is a tuple Q = 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 such that 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame, and\n1. φ ∈ t for some t ∈ Tr,n and Tr,n ∈ Cr,n\n2. Cr,n ⇒ Cr,n+1\n3. if (r, n) ∼i,ρ (r′, n′) then ρ(r, n) ≈i ρ(r′, n′)\n4. for every t ∈ Tr,n there exists an object ρ ∈ O such that ρ(r, n) = t\n5. for every c ∈ conφ, the function ρc such that ρc(r, n) = tc ∈ T conr,n is an object in O.\nA quasimodel+ is defined as a quasimodel but where clauses (4) and (5) refer to objects+ rather than objects. We can define quasimodels (resp. quasimodel+) satisfying perfect recall, no learning, synchronicity, or having a unique initial state, by assuming the corresponding condition on the underlying frame. The difference between objects (resp. quasimodel) and objects+ (resp. quasimodel+) is purely technical. In particular, the latter are needed for systems satisfying perfect recall and no learning as it will become apparent in Section 5. In the following lemma we list some properties of quasimodels that will be useful in what follows.\nLemma 4. In every quasimodel Q, for every object ρ ∈ O,\n(i) Kiχ ∈ ρ(r, n) iff for all (r′, n′), (r′, n′) ∼i,ρ (r, n) implies χ ∈ ρ(r′, n′).\n(ii) Cχ ∈ ρ(r, n) iff for all points (r′, n′) reachable from (r, n) we have that χ ∈ ρ(r′, n′).\nProof.\n(i) The implication from left to right follows from the fact that (r′, n′) ∼i,ρ (r, n) implies ρ(r, n) ≈i ρ(r′, n′). For the implication from right to left, if Kiχ /∈ ρ(r, n) then by Lemma 3(ii) there is a ι-type t such that ρ(r, n) ≈i t and ¬χ ∈ t. By Definition 18 for some (r′, n′), (r, n) ∼i,ρ (r′, n′) and ¬χ ∈ ρ(r′, n′) = t.\n(ii) The implication from left to right is proved by induction on the length of the path from (r, n) to (r′, n′). Both the base case and the inductive step follow by axiom C1. The implication from right to left follows from Definition 18.\nWe now state the main result of this section, that is, satisfability in quasimodels implies satisfability in mf-models. In what follows a quasimodel Q validates a formula φ if φ belongs to every type in every state-candidate in Q.\nTheorem 3. If there is a quasimodel (resp. quasimodel+) Q for a monodic formula φ, then φ is satisfiable in a mf-modelMmf . Moreover, if Q validates the formulas K and BF , then so does Mmf . Finally, if Q satisfies perfect recall, or no learning, or synchronicity, or has a unique initial state, then so does Mmf .\nProof. This proof is inspired by those of Lemmas 11.72 and 12.9 in the work of Gabbay et al. (2003), but here we consider monodic friendly Kripke models rather than standard Kripke models. First, for every monodic formula ψ of the form Kiχ, Cχ, ©χ or χ1Uχ2 we introduce a k-ary predicate constant P kψ for k equal to 0 or 1, depending whether there are 0 or 1 free variables in ψ. The formula P kψ(x) is called the surrogate of ψ. Given a monodic formula φ we denote by φ the formula obtained from φ by substituting all its modal subformulas which are not within the scope of another modal operator with their surrogates. Since every state candidate C in the quasimodel Q is consistent and all the system S of first-order temporal-epistemic logic considered in Section 3 are based on classical first-order logic, the formula αC is consistent with respect to first-order (non-modal) logic. By Gödel’s completeness theorem there is a first-order structure I = 〈I,D〉, where D is a non-empty set of individuals and I is a first-order interpretation on D, that satisfies αC, i.e., Iσ |= αC for some assignment σ of the variables to the elements in D. We intend to build an mf-model by joining all these first-order structures. However, it is possible that these structures have different domains with different cardinalities. To solve this problem, we consider a cardinal number κ ≥ ℵ0 greater than the cardinality of the set O of all objects in Q and define\nD = {〈ρ, ξ〉 | ρ ∈ O, ξ < κ}\nThen, for (r, n) ∈ Q, for any ι-type t ∈ Tr,n we have that\n|{〈ρ, ξ〉 ∈ D | ρ(r, n) = t}| = κ\nBy the method described in Claim 11.24 by Gabbay et al. (2003), we can expand each first-order structure to obtain a structure Ir,n = 〈Ir,n,D〉 with domain D such that Ir,n satisfies αCr,n and\n|{a ∈ D | σ(x) = a and Iσr,n |= t[x]}| = κ\nSo, we can assume without loss of generality that all first-order structures Ir,n share the same domain D, and for every t ∈ Tr,n, 〈ρ, ξ〉 ∈ D, we have\nρ(r, n) = t iff Iσr,n |= t[x]\nfor σ(x) = 〈ρ, ξ〉. Equivalently, for t ∈ Tr,n, σ(x) = 〈ρ, ξ〉 ∈ D,\nρ(r, n) = {ψ ∈ clιφ | Iσr,n |= ψ[x]} (7)\nMoreover, Ir,n(c) = 〈ρc, 0〉 for every c ∈ conφ. We define the mf-model Mmf as the tuple 〈W,R, {∼i,a}i∈Ag,a∈D,D, I〉 such that W is the set of points (r, n) for r in R ∈ Q and n ∈ N; R is the set of runs from N to W such that r(n) = (r, n); D is defined as above; for i ∈ Ag and 〈ρ, ξ〉 ∈ D, ∼i,〈ρ,ξ〉 is defined as ∼i,ρ; and the interpretation I is obtained by joining the various first-order interpretations Ir,n, i.e., I(P, r(n)) = Ir,n(P ) for every predicate constant P . We can now prove the following result for Mmf .\nLemma 5. If the mf-model Mmf is obtained from a quasimodel Q as described above, then for every ψ ∈ subxφ,\nIσr,n |= ψ iff (Mσmf , r, n) |= ψ\nMoreover, if Q is a quasimodel+, f(r, n) is a ι-state candidate and ad(Kιψ) ≤ ad(φ) then\nIσr,n |= ψ iff (Mσmf , r, n) |= ψ\nProof. The proof is similar to Lemma 12.10 in the work of Gabbay et al. (2003). We begin with the first part. The base case of induction follows by definition of the interpretation I in the mf-model. The step for propositional connectives and quantifiers follows by the induction hypothesis and equations ψ1 → ψ2 = ψ1 → ψ2, ¬ψ1 = ¬ψ1, ∀xψ1 = ∀xψ1.\nNow let ψ =©χ[x] and assume that σ(x) = 〈ρ, ξ〉, then we have:\nIσr,n |=©χ[x] iff ©χ[x] ∈ ρ(r, n) (8) iff χ[x] ∈ ρ(r, n+ 1) (9) iff Iσr,n+1 |= χ[x] (10) iff (Mσmf , r, n+ 1) |= χ[x] (11) iff (Mσmf , r, n) |=©χ[x]\nSteps (8) and (10) follow by Equation (7). Step (9) is motivated by Lemma 3(i), and step (11) follows by the induction hypothesis.\nLet ψ = (χUχ′)[x] and σ(x) = 〈ρ, ξ〉, then we have:\nIσr,n |= (χUχ′)[x] iff (χUχ′)[x] ∈ ρ(r, n) (12) iff there is n′ ≥ n such that χ′[x] ∈ ρ(r, n′)\nand χ[x] ∈ ρ(r, n′′) for all n ≤ n′′ < n′ (13) iff there is n′ ≥ n such that Iσr,n′ |= χ′[x] and Iσr,n′′ |= χ[x] for all n ≤ n′′ < n′ (14) iff there is n′ ≥ n such that (Mσmf , r, n′) |= χ′[x] and (Mσmf , r, n′′) |= χ[x] for all n ≤ n′′ < n′ (15) iff (Mσmf , r, n) |= χUχ′[x]\nSteps (12) and (14) follow by Equation (7). Step (13) is motivated by Def. 18, and step (15) follows by the induction hypothesis.\nLet ψ = Kiχ[x] and σ(x) = 〈ρ, ξ〉, then we have:\nIσr,n |= Kiχ[x] iff Kiχ[x] ∈ ρ(r, n) (16) iff for all (r′, n′) ∼i,ρ (r, n), χ[x] ∈ ρ(r′, n′) (17) iff for all (r′, n′) ∼i,〈ρ,ξ〉 (r, n), Iσr′,n′ |= χ[x] (18) iff for all (r′, n′) ∼i,〈ρ,ξ〉 (r, n), (Mσmf , r′, n′) |= χ[x] (19) iff (Mσmf , r, n) |= Kiχ[x]\nSteps (16) and (18) follow by Equation (7). Step (17) is motivated by Lemma 4(i), and step (19) follows by the induction hypothesis.\nLet ψ = Cχ[x] and σ(x) = 〈ρ, ξ〉, then we have:\nIσr,n |= Cχ[x] iff Cχ[x] ∈ ρ(r, n) (20) iff for all (r′, n′) reachable from (r, n), χ[x] ∈ ρ(r′, n′) (21) iff for all (r′, n′) reachable from (r, n), Iσr′,n′ |= χ[x] (22) iff for all (r′, n′) reachable from (r, n), (M, r′, n′) |= χ[x] (23) iff (M, r, n) |= Cχ[x]\nSteps (20) and (22) follow by Equation (7). Step (21) is motivated by Lemma 4(ii), and step (23) follows by the induction hypothesis.\nNow we prove the second part of the lemma. All cases are identical to the first part, except for ψ = Kiχ. Suppose that f(r, n) is a ι-state candidate and ad(Kιψ) ≤ ad(φ). For the implication from left to right, if (r, n) ∼i,ρ (r′, n′) then ρ(r′, n′) is a ι′-type such that ι]i = ι′]i. Thus, ad(Kι′χ) ≤ ad(Kι]iχ) ≤ ad(KιKiχ) ≤ ad(φ). So, we can apply the induction hypothesis. For the implication from right to left, if ad(KιKiχ) ≤ ad(φ) then |ι]i| ≤ ad(φ) and by Lemma 3(ii) there is some ι]i-type t such that t ≈i ρ(r, n) and ¬ψ ∈ t. By Def. 18 there is (r′, n′) such that (r, n) ∼i,ρ (r′, n′) and ρ(r′, n′) = t. Since ad(Kι]iχ) = ad(KιKiχ) ≤ ad(φ) we can apply the induction hypothesis.\nTo complete the proof of Theorem 3, by definition of quasimodel we have that φ ∈ t for some t ∈ Tr,n and Tr,n ∈ Cr,n. Therefore, φ is satisfied in the mf-modelMmf at point (r, n). We also remark that if Q validates the formulas K and BF , so doesMmf . This is the case as, if K and BF belong to every type in every state-candidate in Q, then by Lemma 5 we have that Mmf validates K and BF as well.\nFinally, if Q satisfies perfect recall, or no learning, or synchronicity, or has a unique initial state, then the mf-model obtained from Q satisfies the corresponding constraints by construction. We show this fact for perfect recall: if (r, n) ∼i,〈ρ,ξ〉 (r′, n′) and n > 0, then in particular (r, n) ∼i,ρ (r′, n′). Since Q satisfies perfect recall, either (r, n− 1) ∼i,ρ (r′, n′), or there is k < n′ such that (r, n − 1) ∼i,ρ (r′, k) and for all k′, k < k′ ≤ n′ implies (r, n) ∼i,ρ (r′, k′). By the definition of ∼i,〈ρ,ξ〉 we obtain that either (r, n−1) ∼i,〈ρ,ξ〉 (r′, n′), or there is k < n′ such that (r, n − 1) ∼i,〈ρ,ξ〉 (r′, k) and for all k′, k < k′ ≤ n′ implies (r, n) ∼i,〈ρ,ξ〉 (r′, k′), that is, Mmf satisfies perfect recall as well.\nWe next show the existence of quasimodels for any monodic φ."
    }, {
      "heading" : "5. Dealing with each System",
      "text" : "In this section we consider the completeness proof for each system in Theorem 2. In particular, we show that if a monodic formula φ is consistent with respect to a system S, then we can build a quasimodel (or a quasimodel+ in specific cases) for φ based on a frame for S. In the following sections the symbol ` represents provability in the appropriate system S. We start with some lemmas that are useful for the construction of the quasimodel for any system.\nLemma 6. (i) For any consistent monodic formula φ there is a consistent -state candidate C = 〈T, T con〉 such that φ ∈ t for some t ∈ T .\n(ii) Let P = 〈C, t〉 be a consistent ι-point for φ such that C = 〈T, T con〉, and let c ∈ conφ. Then,\n(a) if C⇒ C′ then there exists a ι-point P′ = 〈C′, t′〉 such that P⇒ P′. (b) if tc ∈ T con and C⇒ C′ then there exists a ι-point P′ = 〈C′, t′〉 such that P⇒c P′. (c) if ψ1Uψ2 ∈ t then there is a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k that\nrealises ψ1Uψ2, i.e., P = P0 ⇒ . . .⇒ Pk, ψ2 ∈ tk and ψ1 ∈ tj for j < k. (d) if ψ1Uψ2 ∈ tc then there is a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k that\nc-realises ψ1Uψ2, i.e., the sequence realises ψ1Uψ2 and P0 ⇒c . . .⇒c Pk. (e) if ¬Kiψ ∈ t then there is a ι-point P′ = 〈C′, t′〉 such that P ≈i P′ and ¬ψ ∈ t′. (f) if ¬Kiψ ∈ tc then there is a ι-point P′ = 〈C′, t′〉 such that P ≈ci P′ and ¬ψ ∈ t′. (g) if ¬Cψ ∈ t then there is a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k such that\nP = P0 ≈i0 . . . ≈ik−1 Pk and ¬ψ ∈ tk. (h) if ¬Cψ ∈ tc then there is a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k such that\nP = P0 ≈ci0 . . . ≈ c ik−1 Pk and ¬ψ ∈ tk.\nProof. The proof is similar to the one for Claims 11.75, 11.76 and 12.13 in the work of Gabbay et al. (2003), but here we consider ι-state candidates and ι-points. Let πφ be the disjunction of all formulas βP for all ι-points P for φ. Consider the formula πφ, which is obtained by substituting all subformulas of πφ of the form Kiψ, Cψ, ©ψ or ψ1Uψ2 that are not within the scope of another modal operator with their surrogates. We can check that πφ is true on all (non-modal) first-order structures. Since both QKTm and QKTCm extend first-order logic, by the semantical completeness of first-order logic we have that\n` πφ (24)\n(i) Notice that, by the previous remark, ` πφ also for πφ = ∨ {P|P is a -point for φ} βP.\nMoreover, φ is consistent and by (24) also πφ ∧ φ is consistent. Therefore, there is a disjunct βP of πφ such that βP ∧ φ is consistent. So, φ ∈ t for P = 〈C, t〉.\n(a) By (24) and Nec we have ` ©πφ. So, βP ∧ ©πφ is consistent and there must be a ι-point P′ such that βP ∧©βP′ is also consistent.\n(b) The proof is similar to (a).\n(c) The proof is by contradiction. Let U be the set of all ι-points P′ such that there exist ιpoints Pj = 〈Cj , tj〉 for j < k and P = P0 ⇒ . . .⇒ Pk = P′. Let θ = ∨ {P′|P′∈U} βP′ .\nWe can show that ` θ → ¬ψ2 (25)\notherwise, we would have a sequence realising ψ1Uψ2. Moreover, by the definition of U ,\n` θ →©θ (26)\nFrom (25) we obtain ` Gθ → G¬ψ2\nand together with (25) and (26) we derive\n` θ → (¬ψ2 ∧G¬ψ2) (27)\nNow consider any P1 ∈ U such that P⇒ P1. By (27) we have\n` βP1 → (¬ψ2 ∧G¬ψ2) ` ©βP1 → G¬ψ2 ` (βP ∧©βP1)→ G¬ψ2 (28)\nOn the other hand, since ψ1Uψ2 ∈ t we have\n` (βP ∧©βP1)→ Fψ2 (29)\nbut (28) and (29) contradict the fact that P⇒ P1.\n(d) The proof is similar to (c).\n(e) First we remark that βP ∧ K̄i(πφ ∧ ¬ψ) is consistent. Thus, there exists a ι-point P′ = 〈C′, t′〉 such that βP ∧ K̄i(βP′ ∧ ¬ψ) is consistent. Hence, P ≈i P′ and ¬ψ ∈ t′.\n(f) The proof is similar to (e).\n(g) The proof is by contradiction. Let V be the minimal set of ι-points D such that (i) P ∈ V ; (ii) if D ∈ V and D ≈i D′ for some i ∈ Ag, then D′ ∈ V . Let θ = ∨ {D|D∈V } βD.\nWe can show ` θ → ψ (30)\nIf (30) did not hold, we would have a sequence as specified in the lemma. Moreover, by the definition of V , ` θ → Kiθ (31) for all i ∈ Ag. From (30) and (31) we obtain\n` θ → (ψ ∧ Eθ)\nand by axiom C2, ` θ → Cψ (32)\nbut by definition of P, ` βP → ¬Cψ\nwhich contradicts (32).\n(h) The proof is similar to (g).\nBy the following result it is always possible to extend the ©-suitability relation ⇒ between types to ©-suitability between points.\nLemma 7. Suppose that t and t′ are ι-types such that t ⇒ t′, then there are ι-points P = 〈C, t〉 and P′ = 〈C′, t′〉 such that P ⇒ P′. In particular, for any c ∈ conφ, there are ι-points P = 〈C, t〉 and P′ = 〈C′, t′〉 such that P⇒c P′.\nProof. By Lemma 6 we have that ` πφ and ` ©πφ for πφ = ∨ {P|P is a ι-point for φ} βP. Since t ⇒ t′, then πφ ∧ t ∧ ©(πφ ∧ t′) is consistent. Thus, there must be ι-points P and P′ such that βP ∧ t ∧ ©(βP′ ∧ t′) is consistent. Then, it is the case that P = 〈C, t〉 and P′ = 〈C′, t′〉 for some ι-state candidates C and C′. As a result, P⇒ P′. The second part of the lemma is proved similarly to the first by observing that if t ⇒ t′ then t[x/c] ∧©t[x/c] is consistent. Hence, also πφ ∧ t[x/c] ∧©(πφ ∧ t′[x/c]) is consistent. Thus, there must be ι-points P and P′ such that βP ∧ t[x/c] ∧©(βP′ ∧ t′[x/c]) is consistent. So, tc ∈ T con and t′c ∈ T ′con, that is, P⇒c P′.\nAccording to Lemma 7 we can always extend a possibly infinite sequence of ι-types t0 ⇒ t1 ⇒ . . . to a possibly infinite sequence of ι-points P0 ⇒ P1 ⇒ . . . such that Pk = 〈Ck, tk〉.\nDefinition 20. Let a ⇒-sequence be a possibly infinite sequence C0 ⇒ C1 ⇒ . . . of ι-state candidates. A ⇒-sequence is acceptable if for all k ≥ 0,\n(i) if ψ1Uψ2 ∈ tk, for tk ∈ Ck, then ψ1Uψ2 is realised in a sequence of ι-points Pj = 〈Cj , tj〉 for k ≤ j ≤ n;\n(ii) if ψ1Uψ2 ∈ tck, for tck ∈ Ck, then ψ1Uψ2 is c-realised in a sequence of ι-points Pj = 〈Cj , tj〉 for k ≤ j ≤ n.\nThe following lemma entails the completeness result.\nLemma 8. Every finite ⇒-sequence of ι-state candidates can be extended to an infinite acceptable ⇒-sequence.\nProof. Assume that C0 ⇒ . . .⇒ Cn is a finite ⇒-sequence Σ and ψ1Uψ2 ∈ tk ∈ Ck for some k ≤ n. Either ψ1Uψ2 is realised in C0 ⇒ . . .⇒ Cn, or by Lemma 6(ii)(c) we can extend Σ to a ⇒-sequence Σ′ that realises ψ1Uψ2. This procedure is repeated for all formulas of the form ψ1Uψ2 appearing at some point in the ⇒-sequence. Thus, we obtain a (possibly infinite) ⇒-sequence C0 ⇒ C1 ⇒ . . . such that property (i) in Definition 20 is satisfied. To also satisfy property (ii) we reason similarly by using Lemma 6(ii)(d) instead.\nNow let X be a new object, a sequence X, . . . ,X,Cn,Cn+1, . . . is acceptable from n if it starts with n copies of X and Cn,Cn+1, . . . is an acceptable ⇒-sequence. We can now consider the completeness proof for each single class of QIS.\n5.1 The Classes QISm, QISsyncm , QISuism and QISsync,uism We start with the completeness proof for the systems QKTm and QKTCm, where there is no interaction between temporal and epistemic operators.\nIf a monodic formula φ is consistent, then by Lemma 6(i) there is a consistent -state candidate C = 〈T, T con〉 such that φ ∈ t for some type t ∈ T . Also, by Lemma 8 we can extend C to an infinite acceptable ⇒-sequence. So, the set of infinite acceptable ⇒- sequences is non-empty. Let R be the set of all ⇒-sequences acceptable from n, for some n ∈ N. For r ∈ R, k ∈ N, define the partial function f on R × N as f(r, k) = Ck if r is the ⇒-sequence X, . . . ,X,Cn,Cn+1, . . . acceptable from n and k ≥ n, undefined otherwise. Finally, let O be the set of all functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n such that\n(A) ρ(r, n)⇒ ρ(r, n+ 1);\n(B) χUψ ∈ ρ(r, n) iff there is n′ ≥ n such that ψ ∈ ρ(r, n′) and χ ∈ ρ(r, n′′) for all n ≤ n′′ < n′;\n(C) if ρ(r, n) ≈i t are ι-types, then for some (r′, n), ρ(r′, n) = t;\n(D) if ¬Cψ ∈ ρ(r, n) then there exists a point (r′, n) and a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k, such that 〈f(r, n), ρ(r, n)〉 = P0 ≈i0 . . . ≈ik−1 Pk, ¬ψ ∈ tk, f(r′, n) = Ck and ρ(r′, n) = tk.\nWe show that O is non-empty. Condition (A) is guaranteed by Lemma 6(ii)(a), and condition (B) by the fact that r is an acceptable ⇒-sequence. As regards (C) we remark that if ρ(r, n) ≈i t then we can find a consistent ι-point P = 〈C, t〉 by reasoning similarly as in Lemma 6(i), and by Lemma 8, C can be extended to a ⇒-sequence r′ acceptable from n. Finally, set ρ(r′, n) = t. As to (D) we observe that if ¬Cψ ∈ ρ(r, n) then by Lemma 6(ii)(g) there exists a sequence of ι-points Pj = 〈Cj , tj〉 for j ≤ k, such that 〈f(r, n), ρ(r, n)〉 = P0 ≈i0 . . . ≈ik−1 Pk and ¬ψ ∈ tk. Now, Ck can be extended to a ⇒- sequence r′ acceptable from n such that ρ(r′, n) = tk. Finally, for i ∈ Ag, ρ ∈ O, define (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′) and n = n′.\nLemma 9. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a synchronous frame.\nProof. We have previously shown that R and O are non-empty. Also, each ∼i,ρ is an equivalence relation by definition, and f satisfies the conditions in Definition 17. Further, the frame is synchronous by definition of ∼i,ρ.\nNow we can prove the main result.\nLemma 10. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a synchronous quasimodel for φ and it validates the formulas K and BF .\nProof. By the previous lemma, it remains to prove that the functions in O are objects. Conditions (1), (3), (4) and (5) on objects are safisfied by remarks (A)-(D) above. Condition (2) is satisfied by the definition of ∼i,ρ. Furthermore, conditions (1), (2) and (3) on quasimodels are satisfied by the definitions of R, f and ∼i,ρ. As regards (4), we can extend the function ρ(r, n) = t to all Dom(f) by using Lemma 6(ii)(a), (c), (e) and (g). As to (5) the function ρc such that ρc(r, n) = tc is an object by Lemma 6(ii)(b), (d), (f) and (h). Finally, Q validates both the formulas K and BF , as all t ∈ C, for all C ∈ Q, are consistent with QKTm (resp. QKTCm).\nThe completeness of QKTm and QKTCm with respect to the classesQISm andQISsyncm of quantified interpreted systems directly follows from Lemma 10 together with Theorem 3. Thus, we obtain the following item in Theorem 2.\nTheorem 4 (Completeness). The system QKTm (resp. QKTCm) is complete w.r.t. the classes QISm and QISsyncm of QIS.\nTo prove completeness for QISuism and QISsync,uism we use the next result, which is an extension from the propositional case (Halpern et al., 2004).\nRemark 2. Suppose X is a subset of {pr, sync}. If φ ∈ L1m (resp. LC1m) is satisfiable in QISXm then it is also satisfiable in QISX,uism .\nThus, the system QKTm (resp. QKTCm) is also complete w.r.t. the classes QISuism and QISsync,uism of QIS.\n5.2 The Classes QISprm and QISpr,uism We now begin to investigate systems where interactions between time and knowledge are present. The completeness proof for QKT1m with respect to QISprm and QISpr,uism relies on the following lemma.\nLemma 11. For all ι-points P1 = 〈C1, t1〉, P2 = 〈C2, t2〉 and ι]i-type t′2, if P1 ⇒ P2 and t2 ≈i t′2 then there is a ι]i-point P′2 = 〈C′2, t′2〉 and a ⇒-sequence S1 ⇒ . . . ⇒ Sn = P′2 of ι]i-points such that Sk = 〈Dk, sk〉, s1 ≈i t1 and sk ≈i t2 for 1 < k ≤ n. Further, if P1 ⇒c P2 then sck ∈ T conDk for k ≤ n.\nProof. We extend the proof of Halpern et al. (2004, Lemma 5.5) to deal with state candidates and monodic friendly Kripke frames. By the cited result we can prove that if t1 ⇒ t2 and t2 ≈i t′2 then there is a sequence of ι]i-types s1 ⇒ . . . ⇒ sn = t′2 such that s1 ≈i t1 and sk ≈i t2 for 1 < k ≤ n. Now by Lemma 7 we can extend this sequence of ι]i-types to a sequence of ι]i-points S1 ⇒ . . . ⇒ Sn such that Sk = 〈Dk, sk〉 and the lemma’s statement is satisfied. In particular, if P1 ⇒c P2 also by Lemma 7 we can assume without loss of generality that sck ∈ T conDk for k ≤ n.\nFor any consistent φ ∈ L1m we define a quasimodel+ for φ to establish the completeness of QKT1m with respect to QISprm . Let R be the set of all acceptable⇒-sequences, and define f such that f(r, k) = Ck if r is the ⇒-sequence C0,C1, . . . . Finally, let O be the set of all functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n such that conditions (A) and (B) above are satisfied and\n(C’) if ρ(r, n) is a ι-type, t is a ι]i-type and ρ(r, n) ≈i t, then for some (r′, n′), ρ(r′, n′) = t.\n(E) if ρ(r, n) ≈i ρ(r′, n′) and n > 0 then either (a) ρ(r, n − 1) ≈i ρ(r′, n′) or (b) there is k < n′ such that ρ(r, n − 1) ≈i ρ(r′, k) and for all k′, k < k′ ≤ n′ implies ρ(r, n) ≈i ρ(r′, k′).\nFinally, for i ∈ Ag, ρ ∈ O, we define (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′). The following lemma shows that the set O is non-empty. In particular, conditions (C’) and (E) are satisfied by the functions in O.\nLemma 12. The set O of functions that satisfies conditions (A), (B), (C’) and (E) is non-empty.\nProof. Conditions (A) and (B) follow respectively from Lemma 6(ii)(a) and the fact that r is an acceptable⇒-sequence. As regards (C’) and (E), the proof proceeds by induction on n. The result for n = 0 is immediate, as we can take r′ to be an acceptable ⇒-sequence starting from C such that t ∈ C. Further, we define ρ(r′, 0) = t. Thus, ρ(r′, 0) ≈i ρ(r, 0) and both (C’) and (E) are satisfied.\nNow suppose that n > 0 and the result holds for n − 1. Since f(r, n − 1) ⇒ f(r, n) and ρ(r, n) ≈i t, it follows by Lemma 11 that there is a ι]i-point P = 〈C, t〉 and a⇒-sequence of ι]i-points P′ ⇒ S0 ⇒ . . .⇒ Sk = P such that Sk′ = 〈Dk′ , sk′〉 and sk′ ≈i ρ(r, n) for k′ ≤ k. By the induction hypothesis, there exists for every ι]i-type s such that ρ(r, n−1) ≈i s a point (r′, n′) and ρ(r′, n′) = s. In case (a), we take s = t; then we have that ρ(r, n−1) ≈i ρ(r′, n′) for ρ(r′, n′) = t. Thus, it is also the case that ρ(r, n) ≈i ρ(r′, n′). In case (b), we take s = t′. Hence, ρ(r, n − 1) ≈i ρ(r′, n′) for ρ(r′, n′) = t′. Now suppose that r′ is derived from the acceptable ⇒-sequence v0, v1, . . .. Let r′′ be the run derived from an acceptable sequence with initial segment v0, . . . , vn′ ,D0, . . . ,Dk. Again, such a run exists by Lemma 8. We define ρ(r′′, n′ + k + 1) = sk = t. Thus, we have ρ(r, n) ≈i ρ(r′′, n′ + k + 1) and both (C’) and (E) are satisfied.\nWe can now prove the following lemma.\nLemma 13. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies perfect recall.\nProof. By Lemmas 6(i), 8 and 12 the sets R and O are non-empty. Also, f satisfies the conditions in Definition 17. Finally, each ∼i,ρ is an equivalence relation by definition, and it satisfies perfect recall by definition of the functions ρ in O.\nFinally, we prove the main result in this section.\nLemma 14. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ with perfect recall and it validates the formulas K and BF .\nProof. By the previous lemma 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame satisfying perfect recall; so we are left to prove that the functions in O are objects+. Conditions (1)-(4’) on objects+ are safisfied by remarks (A)-(E) and the definition of ∼i,ρ. Furthermore, conditions (1), (2) and (3) on quasimodels+ are satisfied by the definitions of R, f and ∼i,ρ. As regards (4), it follows from Lemma 11. Finally, condition (5) on quasimodels+ holds by Lemma 6(ii)(b), (d), (f) and (h) and Lemma 11. Finally, Q validates both the formulas K and BF , as all t ∈ C, for all C ∈ Q, are consistent with QKTm.\nThis completes the proof for QISprm . Thus, we obtain the following item in Theorem 2.\nTheorem 5 (Completeness). The system QKT1m is complete w.r.t. the class QISprm of QIS.\nThe completeness of QKT1m with respect to QISpr,uism follows by Remark 2.\n5.3 The Classes QISpr,syncm and QISpr,sync,uism The completeness of QKT2m with respect to QISpr,syncm is proved similarly to the previous case by using the following lemma instead of Lemma 11.\nLemma 15. For ι-state candidates C1, C2 and ι]i-state candidate C′2, there is a ι]i-state candidate C′1 such that\n• if C1 ⇒ C2 and C2 ≈i C′2 then C1 ≈i C′1 and C′1 ⇒ C′2.\n• for c ∈ conφ, for P1 = 〈C1, t1〉, P2 = 〈C2, t2〉 and P′2 = 〈C′2, t′2〉, if P1 ⇒c P2 and P2 ≈ci P′2 then for P′1 = 〈C′1, t′1〉, P1 ≈ci P′1 and P′1 ⇒c P′2.\nProof. if C1 ⇒ C2 and C2 ≈i C′2 then there exist t1 ∈ C1, t2 ∈ C2 and t′2 ∈ C′2 such that t1 ⇒ t2 and t2 ≈i t′2. Moreover, without loss of generality we can assume that for some c ∈ conφ, tc1 ∈ T con1 , tc2 ∈ T con2 and t′c2 ∈ T ′con2 . Following the proof by Halpern et al. (2004, Lemma 5.8) we can find a ι]i-type t′1 such that t1 ≈i t′1 and t′1 ⇒ t′2. Define T ′1 as the set of all such t′1 and T ′con 1 as the set of t ′c 1 . We can show that C ′ 1 = 〈T ′1, T ′con1 〉 is a consistent ι]i-state candidate such that C1 ≈i C′1, C′1 ⇒ C′2, and for c ∈ conφ, P1 ≈ci P′1 and P′1 ⇒c P′2.\nFor any consistent φ ∈ L1m we define a quasimodel+ for φ to establish the completeness of QKT2m with respect to QISpr,syncm . Let R be the set of all ⇒-sequences acceptable from n, for some n ∈ N, and define f such that f(r, k) = Ck if r is the ⇒-sequence X, . . . ,X,Cn,Cn+1, . . . acceptable from n and k ≥ n, and undefined otherwise. Finally, let O be the set of all functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n such that conditions (A) and (B) in Section 5.1 are satisfied and\n(C”) if ρ(r, n) is a ι-type, t is a ι]i-type and ρ(r, n) ≈i t, then for some (r′, n), ρ(r′, n) = t.\n(F) if ρ(r, n) ≈i ρ(r′, n) and n > 0 then ρ(r, n− 1) ≈i ρ(r′, n− 1).\nFinally, for i ∈ Ag, ρ ∈ O, we define (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′) and n = n′. The following remark shows that the set O is non-empty. In particular, conditions (C”) and (F) are satisfied by the functions in O.\nLemma 16. The set O of functions that satisfies condition (A), (B), (C”) and (F) is non-empty.\nProof. Conditions (A) and (B) follow from Lemma 6(ii)(a) and the fact that r is an acceptable ⇒-sequence. As regards (C”) and (F), assume that ρ(r, n) ∈ f(r, n) is a ι-type, t is a ι]i-type and ρ(r, n) ≈i t. For each s ∈ f(r, n) different from ρ(r, n) consider the set U = {ψ | Kiψ ∈ s}. We can check that U is consistent and it can be extended to a ι]i-type s′ such that s ≈i s′. Now define T ′ as the collection of all these s′. Further, for each sc ∈ T con, we set s′c ∈ T ′con. Let C′ = 〈T ′, T ′con〉. Clearly, C ≈i C′ and 〈C, s〉 ≈ci 〈C′, s′〉. By Lemma 15 we can construct a ⇒-sequence C0 ⇒ . . . ⇒ Cn such that Cn = C′ and f(r, k) ≈i Ck for k ≤ n. By Lemma 8 we can extend this ⇒-sequence to an infinite acceptable ⇒-sequence r′. In particular, the function ρ can be extended so that for k ≤ n, ρ(r, k) ≈i ρ(r′, k) and ρ(r′, n) = t. Thus, both (C”) and (F) are satisfied.\nWe can now show the following lemma.\nLemma 17. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies perfect recall and synchronicity.\nProof. By Lemmas 6(i), 8 and 16 the sets R and O are non-empty. Also, f satisfies the conditions in Definition 17. Finally, each ∼i,ρ is an equivalence relation by definition, and it satisfies perfect recall and synchronicity by definition of the functions in O.\nNow we prove the main result.\nLemma 18. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ with perfect recall and synchronicity, and it validates the formulas K and BF .\nProof. By the previous lemma 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame satisfying perfect recall and synchronicity; so we are left to prove that the functions in O are objects+. Conditions (1)-(4’) on objects+ are safisfied by the remarks (A)-(F) and the definition of ∼i,ρ. Furthermore, conditions (1), (2) and (3) on quasimodels+ are satisfied by the definitions of R, f and ∼i,ρ. As regards condition (4), we can make use of Lemma 15 to show that it holds. Additionally, (5) holds by Lemma 6(ii)(b), (d), (f) and (h) and Lemma 15. Finally, Q validates both the formulas K and BF , as all t ∈ C, for all C ∈ Q, are consistent with QKTm.\nThis completes the proof for QKT2m. Thus, we obtain the following item in Theorem 2.\nTheorem 6 (Completeness). The system QKT2m is complete w.r.t. the class QISpr,syncm of QIS.\nThe completeness of QKT2m with respect to QISpr,sync,uism follows again by Remark 2.\n5.4 The Class QISnlm First, we give the following definitions, which will be used in the completeness proof.\nDefinition 21. If t is a ι-type, then Φt,i is the conjunction of all ι-types t′ such that t ≈i t′. Similarly, if P is a ι-point, then ΦP,i is the set of ι-points P′ such that P ≈i P′.\nDefinition 22. Two sequences of types Λ and Λ′ are ≈i-concordant if there is some n ∈ N (or n may be ∞) and non-empty consecutive intervals Λ1, . . . ,Λn of Λ and Λ′1, . . . ,Λ′n of Λ′ such that for all s ∈ Λj and s′ ∈ Λ′j we have s ≈i s′ for j ≤ n.\nTwo sequences Π and Π′ of state candidates are ≈i-concordant if for all t ∈ C, for either C ∈ Π or C ∈ Π′, there are two sequences Λ and Λ′ of types in Π and Π′ respectively that are ≈i-concordant.\nTo prove the completeness of QKT3m with respect toQISnlm we need the following lemma, which is dual to Lemma 11.\nLemma 19. For all ι-points P1 = 〈C1, t1〉, P2 = 〈C2, t2〉 and ι]i-type t′1, if P1 ⇒ P2 and t1 ≈i t′1 then there exists a ι]i-point P′1 = 〈C′1, t′1〉 and a ⇒-sequence P′1 = S1 ⇒ . . .⇒ Sn of ι]i-points such that Sk = 〈Dk, sk〉, sk ≈i t1 for k < n, and t2 ≈i sn. Further, if P1 ⇒c P2 then sck ∈ T conDk for k ≤ n.\nProof. By adapting the result of Halpern et al. (2004, Lemma 5.11) to types we can prove that if t1 ⇒ t2 and t1 ≈i t′1 then there is a sequence of ι]i-types t′1 = s0 ⇒ . . . ⇒ sn such that sk ≈i t1 for k < n and sn ≈i t2. Now by Lemma 7 we can extend this sequence of ι]i-types to a sequence of ι]i-points S1 ⇒ . . . ⇒ Sn such that Sk = 〈Dk, sk〉. So, the\nstatement of the lemma is satisfied. In particular, if P1 ⇒c P2 then by Lemma 7 we can assume without loss of generality that sck ∈ T conDk for k ≤ n.\nAs pointed out by Halpern et al. (2004), Lemma 19 is not sufficient to construct a quasimodel+ that satisfies no learning. In fact, given a ⇒-sequence Σ = C0,C1, . . . of ιstate candidates and a ι]i-type t′0 such that t0 ≈i t′0 for t0 ∈ C0, by Lemma 19 we can find a ⇒-sequence Σ′ = C′0,C′1, . . . such that t′0 ∈ C′0 and no learning is satisfied. However, it does not follow from the acceptability of Σ that Σ′ is also acceptable. So, as in the propositional case, we have to work with trees of state candidates. Hereafter we extend the definitions given by Halpern et al. (2004) to be able to deal with points and monodic friendly Kripke models.\nDefinition 23. Let k ≤ ad(φ). A k-tree of state candidates for φ is a set Π of ι-state candidates for φ with |ι| ≤ k that contains a unique -state candidate, i.e., the root, and for every ι-point t in some C ∈ Π,\n• if t′ is a ι]i-type such that t ≈i t′ and |ι]i| ≤ k then there is some ι]i-state candidate C′ ∈ Π such that t′ ∈ C′;\n• if ι = ι′]i then there is a ι′-state candidate C′ ∈ Π and a ι′-type t′ ∈ C′ such that t ≈i t′.\nSimilarly, we define a k-tree of points for φ as a set Σ of ι-points for φ with |ι| ≤ k that contains a unique -point, and for every ι-point P = 〈C, t〉 ∈ Σ,\n• if t′ is a ι]i-type such that t ≈i t′ and |ι]i| ≤ k, then there is some ι]i-point P′ = 〈C′, t′〉 ∈ Σ;\n• if ι = ι′]i then there is a ι′-point P′ = 〈C′, t′〉 ∈ Σ such that t ≈i t′.\nIntuitively, a k-tree is a view of the epistemic state of our quasimodel from a particular type t, up to k steps from t. We now extend the ©-suitability relation ⇒ to k-trees.\nDefinition 24. Let Π and Π′ be k-trees of state candidates for φ. We say that Π ⇒f Π′ whenever f is a function associating with each ι-state candidate C ∈ Π and each ι-type t ∈ C finite ⇒-sequences of ι-state candidates in Π ∪Π′ and ι-types such that:\n1. if f(C) = C0 ⇒ . . . ⇒ Ck then (a) C = C0 and (b) Cj ∈ Π for j < k and Ck ∈ Π′. Similarly, if f(t) = t0 ⇒ . . . ⇒ tk then (a) t = t0 and (b) tj ∈ Cj for j < k and tk ∈ Ck.\n2. Let t ∈ C and t′ ∈ C′ for some C, C′ ∈ Π. If t ≈i t′ then f(t) and f(t′) are ≈iconcordant;\n3. for at least one C ∈ Π the sequence f(C) has a length of at least 2.\nFurther, let Σ and Σ′ be k-trees of points for φ. We say that Σ ⇒f Σ′ whenever f is a function associating with each ι-point P ∈ Σ a finite ⇒-sequence of ι-points in Σ∪Σ′ such that:\n1. if f(P) = P0 ⇒ . . .⇒ Pk then (a) P = P0 and (b) Pj ∈ Σ for j < k and Pk ∈ Σ′;\n2. Let P = 〈C, t〉 and P′ = 〈C′, t′〉 be in Σ. If t ≈i t′ then f(t) and f(t′) are ≈i-concordant;\n3. for at least one P ∈ Σ the sequence f(P) has a length of at least 2.\nFinally, for any constant c ∈ conφ, we say that Σ ⇒cf Σ′ whenever Σ ⇒f Σ′ and f(P) = P0 ⇒c . . .⇒c Pk.\nNotice that given a k-tree Π of state candidates with root C and t ∈ C, we can obtain a k-tree Σ of points such that P′ = 〈C′, t′〉 ∈ Σ iff C′ ∈ Π. Also, if Π, Π′ are k-tree of state candidates and Π⇒f Π′, then we also have Σ⇒f Σ′ where Σ and Σ′ are k-trees of points based on Π and Π′ respectively.\nWe now show how to obtain acceptable sequences of state candidates from sequences of trees. Given two sequences of ι-state candidates λ = C0, . . . ,Ck and µ = C′0, . . ., where λ is finite, the fusion λ · µ is defined as C0, . . . ,Ck−1,C′0, . . . only if Ck = C′0. Further, given an infinite sequence Θ = Π0 ⇒f0 Π1 ⇒f1 . . . of k-trees, we say that a sequence λ of ι-state candidates is compatible with Θ if there exists some h ∈ N and ι-state candidates Ch,Ch+1, . . ., with Cj ∈ Πj for j ≥ h, such that λ = fh(Ch) · fh+1(Ch+1) · . . .. The sequence Θ is acceptable if every ⇒-sequence compatible with Θ is infinite and acceptable.\nThe basic idea of the completeness proof is to define the quasimodel+ starting from an acceptable sequence Θ. Next we introduce some definitions and lemmas that are essential for the completeness proof.\nGiven a k-tree Σ and a ι-point P ∈ Σ we inductively define the formula treeΣ,P that describes the k-tree Σ from the viewpoint of P.\nDefinition 25. If P is a -point, then treeΣ,P ::= βP. If P is a ι′]i-point with ι′ 6= ι′]i then\ntreeΣ,P = βP ∧ ∧\n{ι′−point P′∈Σ|t′≈it}\nK̄itreeΣ,P′\nIf Σ and Σ′ are k-trees, P ∈ Σ and P′ ∈ Σ′, then we write (Σ,P)⇒+ (Σ′,P′) if there is a sequence of k-trees Σ0, . . . ,Σl and functions f0, . . . , fl−1 such that (a) Σ = Σ0 ⇒f0 . . .⇒fl−1 Σl = Σ′; (b) fj(P) = P for j ≤ l− 2 and fl−1(P) = (P,P′). Similarly, (Σ,P)⇒c+ (Σ′,P′) if (Σ,P)⇒+ (Σ′,P′) and (a’) Σ = Σ0 ⇒cf0 . . .⇒ c fl−1\nΣl = Σ′. We prove the following lemma, which extends a result by Halpern et al. (2004, Lemma 5.12)\nto points.\nLemma 20. Suppose Σ is a k-tree of points and P = 〈C, t〉 ∈ Σ is a ι-point with |ι| = k,\n(a) If t′ is a ι-type and treeΣ,P ∧©(t′ ∧ ξ) is consistent, then there is a k-tree Σ′ and a ι-point P′ = 〈C′, t′〉 ∈ Σ′ such that (Σ,P)⇒+ (Σ′,P′) and treeΣ′,P′ ∧ ξ is consistent. Further, if tc ∈ T con then (Σ,P)⇒c+ (Σ′,P′).\n(b) ` treeΣ,P →© ∨ {(Σ′,P′)|(Σ,P)⇒+(Σ′,P′)} treeΣ′,P′\n(c) if treeΣ,P ∧ ψUψ′ is consistent, then there is a sequence Σ0, . . . ,Σl of k-trees and points P0, . . . ,Pl such that (i) Pj ∈ Σj for j ≤ l; (ii) (Σ0,P0) = (Σ,P); (iii) (Σj ,Pj) ⇒+ (Σj+1,Pj+1) for j < l; (iv) treeΣj ,Pj ∧ ψ is consistent for j < l; (v) treeΣl,Pl∧ψ′ is consistent. Further, if tc ∈ T con then (iii’) (Σj ,Pj)⇒c+ (Σj+1,Pj+1) for j < l.\nProof. We proceed by induction on k. The case for k = 0 is immediate using standard arguments as treeΣ,P is just βP.\nAssume that k > 0 and ι = ι′]i for ι 6= ι′. We first prove part (a) for ξ = Kiξ′, then part (b), then the general case for (a), and finally (c). As regards part (a) for ξ = Kiξ′, note that treeΣ,P ∧©(t′ ∧Kiξ′) implies that\ntreeΣ,P ∧KiΦP,iUKi(ξ′ ∧ Φt′,i)\nBy the definition of k-tree there is a ι′-point P∗ ∈ Σ such that t ≈i t∗. Let Σ∗ be the (k − 1)-tree consisting of all ι∗-points in Σ for |ι∗| ≤ k − 1. By the axiom KT3 also treeΣ∗,P∗∧KiΦP,iUKi(ξ′∧Φt′,i) is consistent, and by part (c) there is a sequence Σ0, . . . ,Σl of (k − 1)-trees and points P0, . . . ,Pl such that (i) Pj ∈ Σj for j ≤ l; (ii) (Σ0,P0) = (Σ∗,P∗); (iii) (Σj ,Pj) ⇒+ (Σj+1,Pj+1) for j < l; (iv) treeΣj ,Pj ∧KiΦP,i is consistent for j < l; (v) treeΣl,Pl ∧Ki(ξ′ ∧ Φt′,i) is consistent.\nAgain, by the definition of the relation⇒+ there is a sequence of (k−1)-trees Γ0, . . . ,Γm and functions f0, . . . , fm−1 such that (a) Σ∗ = Σ0 = Γ0 ⇒f0 . . .⇒fm−1 Γm = Σl. Moreover, there are (k−1)-points u0, . . . , um such that u0 = P∗, um = Pl, and for j < m, uj = Pj′ for some j′ ≤ j, and if uj = uj+1 then fj(uj) = uj , while if uj 6= uj+1 then fj(uj) = (uj , uj+1).\nWe now show how to define the k-tree Γ′j extending Γj for j < m. By (iv) above βuj ∧ KiΦP,i is consistent for j < m, and we have that uj ≈i P. So P ∈ Γ′j . Similarly, βum ∧KiΦt′,i is consistent; so there exists P′ = 〈C′, t′〉 such that P′ ∈ Γ′m. Further, we can saturate each Γ′j so that the conditions on k-trees are satisfied and in particular Γ ′ 0 = Σ. We now show how to construct f ′j for j < m. For each point S ′ = 〈D′, s′〉 ∈ Γ′j \\ Γj there must exist a point S = 〈D, s〉 ∈ Γj and an agent j′ ∈ Ag such that s ≈j′ s′. From Lemma 19 it follows that there exists a sequence λS′ starting with S′ that is ≈j′-concordant with fj(S). Moreover, we can take λPj = (P) for j < m− 1, and λPm−1 = (P,P′). We define f ′j such that it agrees with fj on Γj , and for S′ ∈ Γ′j \\ Γj we have f ′j(S′) = λS′ .\nNotice that Γ′0 = Σ by construction. If m > 0 it follows immediately from the definition that (Σ,P) ⇒+ (Γm,P′) and that treeΓm,P′ ∧ Kiξ′ is consistent. If m = 0 we can easily check that we have P′ ∈ Σ as t∗ ≈i t′. Since we also have t∗ ≈i t, it follows that t ≈i t′. We define f so that f(u) = u for every u 6= P and f(P) = (P,P′). Then (Σ,P) ⇒f (Σ,P′). Since also P⇒ P′ we have (Σ,P)⇒+ (Σ,P′).\nThe second part of (a) follows by a similar line of reasoning. To prove part (b), by contradiction we assume that\n0 treeΣ,P →© ∨\n{(Σ′,P′)|(Σ,P)⇒+(Σ′,P′)}\ntreeΣ′,P′\nThen treeΣ,P ∧ © ∧ {(Σ′,P′)|(Σ,P)⇒+(Σ′,P′)} ¬treeΣ′,P′ is consistent. By temporal reasoning there must be some point u such that\ntreeΣ,P ∧©(βu ∧ ∧\n{(Σ′,P′)|(Σ,P)⇒+(Σ′,P′)}\n¬treeΣ′,P′) (33)\nis consistent. Note that ¬treeΣ′,P′ is equivalent to ¬βP′∨ ∨ {ι′−point P∗∈Σ′|t∗≈it′}Ki¬treeΣ′,P∗ . Thus, the consistency of (33) implies that for each tree Σ′ such that (Σ,P)⇒+ (Σ′, u) there\nexists a ι′-point PΣ′ = 〈CΣ′ , tΣ′〉 such that tΣ′ ≈i tu and\ntreeΣ,P ∧©(βu ∧Ki( ∧\n{Σ′|(Σ,P)⇒+(Σ′,PΣ′ )}\n¬treeΣ′,PΣ′ )) (34)\nis consistent. By part (a) there exists a k tree Σ∗ and P∗ ∈ Σ∗ such that (Σ,P)⇒+ (Σ∗,P∗) and treeΣ∗,P∗∧βu∧Ki( ∧ {Σ′|(Σ,P)⇒+(Σ′,PΣ′ )}\n¬treeΣ′,PΣ′ ) is consistent. But this means that P∗ = u. Thus we have a contradiction, since treeΣ∗,u ∧Ki¬treeΣ∗,PΣ∗ is inconsistent.\nThe general case for (a) follows from (b). Part (c) also follows from (b). The following lemma is the correspondent of Lemma 8 for k-trees.\nLemma 21. If φ ∈ L1m is consistent with QKT3m, then there exists an acceptable sequence Θ of ad(φ)-trees of state candidates such that φ belongs to the root of the first tree.\nProof. As in Lemma 8 the key part of this proof consists of showing that, given a finite sequence Σ0 ⇒f0 . . . ⇒fl−1 Σl of d-trees of points and a ι-point P = 〈C, t〉 ∈ Σl such that ψUψ′ ∈ t (resp. ©ψ ∈ t), by Lemmas 19 and 20 we can extend the sequence of trees to satisfy acceptability. Specifically, suppose that ψUψ′ ∈ t. Let Σ include P and the ι′-points P′ = 〈C′, t′〉 ∈ Σl with |ι′| ≤ k = |ι|. Note that Σ is a k-tree. Further, by Lemma 20 we can find a sequence Θ0, . . . ,Θn of k-trees and points P0, . . . ,Pn such that (i) Pj ∈ Θj for j ≤ n; (ii) (Θ0,P0) = (Σ,P); (iii) (Θj ,Pj) ⇒+ (Θj+1,Pj+1) for j < l; (iv) treeΘj ,Pj ∧ ψ is consistent for j < l; and (v) treeΘn,Pl ∧ ψ′ is consistent. By using Lemma 19 we can extend this to a sequence of ad(φ)-trees starting with Σl that satisfies ψUψ′ as in the proof of Lemma 20(a). For ©ψ ∈ t the argument is similar. Since φ is consistent, there must be some tree Σ with root C such that ψ ∈ t for some t ∈ C; we can then extend Σ as above to complete the proof.\nFor any consistent φ ∈ L1m we define a quasimodel+ for φ to establish the completeness of QKT3m with respect to QISnlm. Let R consist of all acceptable ⇒-sequences compatible with the ad(φ)-tree Θ, while the function f is given by f(r, k) = Ck if r is the acceptable ⇒-sequence C0,C1, . . .. Further, let O be the set of functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n such that conditions (A), (B) and (C’) given previously are satisfied and the following holds:\n(G) if ρ(r, n) ≈i ρ(r′, n′) then either ρ(r, n+ 1) ≈i ρ(r′, n′) or there exists k > n′ such that ρ(r, n+ 1) ≈i ρ(r′, k) and for all k′, k > k′ ≥ n′ implies ρ(r, n) ≈i ρ(r′, k′).\nFinally, for i ∈ Ag, ρ ∈ O, (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′). As in the previous cases we have the following.\nLemma 22. The set O of functions that satisfies conditions (A), (B), (C’) and (G) is non-empty.\nProof. Conditions (A) and (B) are guaranteed by Lemma 6(ii) and by the fact that r is an acceptable ⇒-sequence respectively. As regards (C’) and (G), assume that ρ(r, n) is a ι-type, t is a ι]i-type and ρ(r, n) ≈i t. By using the proofs of Lemmas 20 and 19 we can find an acceptable ⇒-sequence r′ compatible with the d-tree Θ such that t ∈ f(r′, 0) and (G) is satisfied.\nWe can now show the following lemma.\nLemma 23. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies no learning.\nProof. By Lemmas 6(i), 21 and 22 the sets R and O are non-empty. Also, f satisfies the conditions in Definition 17. Further, each ∼i,ρ is an equivalence relation by definition. Finally, the no learning condition is satisfied by definition of the functions in O.\nLemma 24. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ that satisfies no learning and validates the formulas K and BF .\nProof. By the previous lemma 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame satisfying no learning; so we are left to prove that the functions in O are objects+. Conditions (1)-(4’) on objects+ are safisfied by remarks (A)-(G) and the definition of ∼i,ρ. Furthermore, conditions (1), (2) and (3) on quasimodels+ are satisfied by the definitions of R, f and ∼i,ρ. As regards (4) we use Lemma 19 to show that it holds. Finally, (5) holds by Lemma 6(ii)(b), (d), (f) and (h) and Lemma 19. Finally, Q validates both K and BF , as all t ∈ C, for all C ∈ Q, are consistent with QKTm.\nThis completes the proof for QKT3m. Thus, we obtain the following item in Theorem 2.\nTheorem 7 (Completeness). The system QKT3m is complete w.r.t. the class QISnlm of QIS.\n5.5 The Class QISnl,syncm To show that QKT4m is a complete axiomatisation for QISnl,syncm , analogously to Lemma 15, we need the following.\nLemma 25. For ι-state candidate C1, C2 and ι]i-state candidate C′1 there exists a ι]i-state candidate C′2 such that\n• if C1 ⇒ C2 and C1 ≈i C′1 then C′1 ⇒ C′2 and C2 ≈i C′2.\n• for all c ∈ conφ, for P1 = 〈C1, t1〉, P2 = 〈C2, t2〉 and P′1 = 〈C′1, t′1〉, if P1 ⇒c P2 and P1 ≈ci P′1 then P′1 ⇒c P′2 and P2 ≈ci P′2.\nProof. The proof is similar to Lemma 15. If C1 ⇒ C2 and C1 ≈i C′1 then there exist t1 ∈ C1, t2 ∈ C2 and t′1 ∈ C′1 such that t1 ⇒ t2 and t1 ≈i t′1. Moreover, without loss of generality, we can assume that for some c ∈ conφ, tc1 ∈ T con1 , tc2 ∈ T con2 and t′c1 ∈ T ′con1 . By adapting the proof of Halpern et al. (2004, Lemma 5.18) we can find a ι]i-type t′2 such that t2 ≈i t′2 and t′1 ⇒ t′2. We define T ′2 as the set of all such t′2 and T ′con1 as the set of t′c2 . Clearly, C′2 = 〈T ′2, T ′con2 〉 is a consistent ι]i-state candidate such that C2 ≈i C′2, C′1 ⇒ C′2, and for c ∈ conφ, P2 ≈ci P′2 and P′1 ⇒c P′2.\nFor systems including the axiom KT4m we can define a synchronous version of the relation ⇒ between k-trees.\nDefinition 26. If Π and Π′ are k-trees of state candidates for φ then Π ⇒syncf Π ′ iff Π ⇒f Π′ and for all C ∈ Π, f(C) has exactly a length of 2. Similarly, if Σ and Σ′ are k-trees of points for φ then Σ⇒syncf Σ\n′ iff Σ⇒f Σ′ and for all P ∈ Σ, f(P) has exactly a length of 2.\nFor any c ∈ conφ, the relation ⇒c syncf is defined similarly. We define a sync-acceptable sequence of trees as an acceptable sequence where the relation ⇒ is substituted by the relation⇒sync, that is, the sequence Θ is acceptable if every⇒sync-sequence compatible with Θ is infinite and acceptable. Similarly, given the relations ⇒+ and ⇒c+ for c ∈ conφ, the definitions of⇒sync,+ and⇒c sync,+ are straightforward. We now state the following result, which is a simplified version of Lemma 20. The proof is analogous to that of Lemma 20, in which Lemma 25 is used instead of Lemma 19.\nLemma 26. Let Σ be a k-tree of points and P ∈ Σ is a ι-point with |ι| = k,\n(a) If t′ is a ι-type and treeΣ,P ∧ ©(t′ ∧ ξ) is consistent, then there exists a k-tree Σ′ and a ι-point P′ = 〈C′, t′〉 ∈ Σ′ such that (Σ,P) ⇒sync,+ (Σ′,P′) and treeΣ′,P′ ∧ ξ is consistent. Further, if tc ∈ T con then (Σ,P)⇒c sync,+ (Σ′,P′).\n(b) ` treeΣ,P →© ∨ {(Σ′,P′)|(Σ,P)⇒sync,+(Σ′,P′)} treeΣ′,P′\n(c) if treeΣ,P ∧ ψUψ′ is consistent, then there exists a sequence Σ0, . . . ,Σl of k-trees and points P0, . . . ,Pl such that (i) Pj ∈ Σj for j ≤ l; (ii) (Σ0,P0) = (Σ,P); (iii) (Σj ,Pj) ⇒sync,+ (Σj+1,Pj+1) for j < l; (iv) treeΣj ,Pj ∧ ψ is consistent for j < l; and (v) treeΣl,Pl ∧ψ′ is consistent. Further, if tc ∈ T con then (iii’) (Σj ,Pj)⇒c sync,+ (Σj+1,Pj+1) for j < l.\nFurther, we make use of Lemma 26 to adapt Lemma 21 and obtain the following result.\nLemma 27. If φ ∈ L1m is consistent with QKT4m, then there exists a sync-acceptable sequence Θ of ad(φ)-trees of state candidates such that φ belongs to the root of the first tree.\nFor any consistent φ ∈ L1m we define a quasimodel+ for φ to establish the completeness of QKT4m with respect to QISnl,syncm . Let X be a new object, a sequence X, . . . ,X,Cn,Cn+1, . . . is sync-acceptable from n if it starts with n copies ofX and Cn,Cn+1, . . . is a sync-acceptable⇒-sequence compatible with the ad(φ)-tree Θ. Let R consist of all⇒sequences sync-acceptable from n, for some n ∈ N. The function f is defined as f(r, k) = Ck if r is the⇒-sequence X, . . . ,X,Cn,Cn+1, . . . sync-acceptable from n and k ≥ n; f(r, k) is undefined otherwise. Further, Let O be the set of functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n such that conditions (A), (B) and (C”) are satisfied and the following holds:\n(H) if ρ(r, n) ≈i ρ(r′, n′) then ρ(r, n+ 1) ≈i ρ(r′, n′ + 1).\nFinally, for i ∈ Ag, ρ ∈ O, (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′) and n = n′. Similarly to Lemma 22, we can show the following.\nLemma 28. The set O of functions that satisfies conditions (A), (B), (C”) and (H) above is non-empty.\nMoreover, the following result follows from Lemmas 6(i), 27 and 28.\nLemma 29. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies no learning and synchronicity.\nFinally, by adapting the proof for Lemma 24 we can state the following result.\nLemma 30. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ with no learning and synchronicity, and it validates the formulas K and BF .\nThis completes the proof for QKT4m. Thus, we obtain the following item in Theorem 2.\nTheorem 8 (Completeness). The system QKT4m is complete w.r.t. the class QISnl,syncm of QIS.\n5.6 The Classes QISnl,prm and QIS nl,pr,uis 1\nTo obtain the completeness proof for QISnl,prm we combine the results shown for QISprm and QISnlm.\nIf φ ∈ L1m is consistent with QKT 2,3 m then by Lemma 21 there exists an acceptable sequence Θ of ad(φ)-trees such that φ belongs to the root of the first tree. Let R be the set of all acceptable ⇒-sequences that have a suffix that is compatible with Θ, while the function f is defined as in Section 5.2. Further, O is the set of all functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n that satisfies the conditions (A), (B), (C’), (E) and (G). Finally, for i ∈ Ag, ρ ∈ O, (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′).\nLemma 31. The set O of functions that satisfies conditions (A), (B), (C’), (E) and (G) is non-empty.\nProof. We can show that all conditions but (C’) are satisfied similarly to the cases of QISprm and QISnlm. As to (C’), suppose that ρ(r, n) is a ι-type in f(r, n) and t is ι]i-type. Also, Θ is the sequence of ad(φ)-trees Π0 ⇒f0 Π1 ⇒f1 . . . of state candidates. The run r is derived by definition from a ⇒-sequence C0,C1, . . . that has a suffix CN ,CN+1, . . . that is compatible with Θ, and f(r, n) = Cn. We consider two cases.\nIf n ≥ N , then there exists some k ∈ N such that Cn ∈ Πk. By Lemma 11 there exists a ⇒-sequence S0 ⇒ . . . ⇒ Sh of ι]i-state candidates such that t ∈ Sh and S0, . . . ,Sh is ≈i-concordant with C0, . . . ,Cn. Further, we can assume that Sh ∈ Πk and let Sh,Sh+1, . . . be the sequence compatible with Θ. Now consider the ⇒-sequence S0 ⇒ S1 ⇒ . . .. By construction the run r′ derived from this sequence is in R and we can assume that ρ(r′, h) = t.\nIf n < N , then by Lemma 11 there exists a ⇒-sequence S0 ⇒ . . . ⇒ Sh of ι]i-state candidates such that t ∈ Sh and S0, . . . ,Sh is≈i-concordant with C0, . . . ,Cn. By Lemma 19 we can extend this sequence to a ⇒-sequence S0 ⇒ . . . ⇒ Sk that is ≈i-concordant with C0, . . . ,CN . Since CN ∈ ΠM for some M ∈ N, we can assume that Sk ∈ ΠM as well. Let Sh,Sh+1, . . . be the sequence compatible with Θ, and consider the ⇒-sequence S0 ⇒ S1 ⇒ . . .. As in the previous case, the run r′ derived from this sequence is in R by construction and we can assume that ρ(r′, h) = t.\nBy Lemmas 6(i), 21 and 31 we obtain the next result.\nLemma 32. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies perfect recall and no learning.\nFinally, we state the following lemma, whose proof follows the lines of the corresponding proofs for QISprm and QISnlm and Lemma 31.\nLemma 33. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ that satisfies perfect recall and no learning, and validates the formulas K and BF .\nThis establishes the completeness of QKT2,3. Thus, we obtain the following item in Theorem 2.\nTheorem 9 (Completeness). The system QKT2,3m is complete w.r.t. the class QISnl,prm of QIS.\nThe completeness of QKT2,31 with respect to QIS nl,pr,uis 1 follows from the following\nremark, whose proof is analogous to the propositional case.\nRemark 3. A formula φ ∈ L11 is satisfiable in QIS nl,pr 1 (resp. QIS nl,pr,sync 1 ) iff it is satisfiable in QISnl,pr,uis1 (resp. QIS nl,pr,sync,uis 1 ).\n5.7 The Class QISnl,pr,syncm To prove the completeness of QKT1,4m with respect to QISnl,pr,syncm we combine the results obtained for QISnl,prm in the previous section with those for QISnl,syncm and QISpr,syncm . Specifically, if φ ∈ L1m is consistent with QKT 1,4 m by Lemma 27 we can construct a syncacceptable sequence Θ of ad(φ)-trees such that φ belongs to the root of the first tree. Let R be the set of all sync-acceptable⇒-sequences with suffixes that are compatible with Θ; and the function f is defined as in Section 5.2. Further, O is the set of all functions ρ associating every (r, n) ∈ Dom(f) to a type ρ(r, n) ∈ Tr,n that satisfies the conditions (A), (B), (C”), (F) and (H). Finally, for i ∈ Ag, ρ ∈ O, (r, n) ∼i,ρ (r′, n′) iff ρ(r, n) ≈i ρ(r′, n′) and n = n′.\nBy adapting the proof of Lemma 31 by means of Lemmas 15 and 25 we can show the following result.\nLemma 34. The set O of functions that satisfies conditions (A), (B), (C”), (F) and (H) is non-empty.\nBy Lemmas 6(i), 27 and 34 we obtain the following result.\nLemma 35. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a frame that satisfies perfect recall, no learning and synchronicity.\nFinally, we state the following lemma whose proof follows the lines of the corresponding proofs for QISpr,syncm , QISnl,syncm and Lemma 34.\nLemma 36. The tuple 〈R,O, {∼i,ρ}i∈Ag,ρ∈O, f〉 is a quasimodel+ for φ that satisfies perfect recall, no learning and synchronicity, and validates the formulas K and BF .\nThis completes the proof for QKT1,4m . Thus, we obtain the following item in Theorem 2.\nTheorem 10 (Completeness). The system QKT1,4m is complete w.r.t. the class QISnl,pr,syncm of QIS.\n5.8 The Classes QISnl,sync,uism and QISnl,pr,sync,uism We now show that the system QKT1,4,5m is complete with respect to the classes QISnl,sync,uism and QISnl,pr,sync,uism . The completeness result follows from next remark.\nRemark 4. A formula φ ∈ Lm is valid on QISnl,sync,uism iff it is valid in QISnl,pr,sync,uism .\nThe proof is a straightforward extension to first-order of a result by Halpern et al. (2004, Proposition 5.22). Given this remark and the axiom KT5 it is sufficient to prove the completeness of QKT1,41 with respect to QIS nl,pr,sync,uis 1 . By the result in the previous section, QKT1,41 is indeed complete with respect to QIS nl,pr,sync 1 . The desired result follows by Remark 3. Thus, we obtain the following item in Theorem 2.\nTheorem 11 (Completeness). The system QKT1,4m is complete w.r.t. the classes QISnl,sync,uism and QISnl,pr,sync,uism of QIS."
    }, {
      "heading" : "6. Conclusions and Further Work",
      "text" : "In this paper we investigated interaction axioms in the context of monodic first-order temporal-epistemic logic. Specifically, we explored classes of quantified interpreted systems satisfying conditions such as synchronicity, no learning, perfect recall, and having a unique initial state. The contribution of the article concerns the provably complete axiomatisation of these classes.\nThe results presented extend previous contributions on first-order epistemic and temporal logic with no interactions (e.g., see Belardinelli & Lomuscio, 2011, Sturm et al., 2000, Wolter & Zakharyaschev, 2002), in a direction that was previously only explored at the propositional level (Halpern et al., 2004). Our findings show that the characterisation axioms considered at the propositional level can be extended to the first-order monodic setting.\nWhile temporal-epistemic logic in a first-order context has so far mostly attracted theoretical contributions, there is evidence in the literature of it being increasingly embraced in applications. For instance, there is an active interest in verifying artifact-centric systems against first-order modal specifications (Belardinelli, Lomuscio, & Patrizi, 2011a, 2011b; Deutsch, Hull, Patrizi, & Vianu, 2009; Deutsch, Sui, & Vianu, 2007; Calvanese, Giacomo, Lenzerini, & Rosati, 2012; Hariri, Calvanese, Giacomo, Masellis, & Felli, 2011).\nGiven this, it remains of importance to investigate the questions pertaining to computational aspects of the formalisms introduced, including their decidability and the computational complexity of the satisfiability and model checking problems. Work so far (including Belardinelli & Lomuscio, 2011; Hodkinson at al., 2000; Wolter & Zakharyaschev 2001) has focused on fragments where no interaction is present, but we know from the literature (Halpern et al., 2004) that interactions can make these problems harder. We leave this for further work, particularly in connection with the addition of other epistemic modalities (e.g., explicit and algorithmic knowledge, see Halpern & Pucella, 2005), or branching-time modalities. Epistemic variants of branching-time CTL are well understood at the propositional level (Meyden & Wong, 2003) but their first-order extensions have not yet been explored."
    }, {
      "heading" : "Acknowledgments",
      "text" : "The research presented was supported by the European Commission through the Marie Curie Fellowship “FoMMAS” (grant n. 235329) and the STREP Project “ACSI” (grant n. 257593), and by the UK Engineering and Physical Sciences Research Council Leadership Fellowship “Trusted Autonomous Systems” (grant n. EP/I00520X/1).\nWe would like to thank the anonymous reviewers and Mr. Andrew V. Jones for valuable comments on the paper."
    } ],
    "references" : [ {
      "title" : "Quantified epistemic logics for reasoning about knowledge in multi-agent systems",
      "author" : [ "F. Belardinelli", "A. Lomuscio" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Belardinelli and Lomuscio,? \\Q2009\\E",
      "shortCiteRegEx" : "Belardinelli and Lomuscio",
      "year" : 2009
    }, {
      "title" : "First-order linear-time epistemic logic with group knowledge: An axiomatisation of the monodic fragment",
      "author" : [ "F. Belardinelli", "A. Lomuscio" ],
      "venue" : "Fundamenta Informaticae,",
      "citeRegEx" : "Belardinelli and Lomuscio,? \\Q2011\\E",
      "shortCiteRegEx" : "Belardinelli and Lomuscio",
      "year" : 2011
    }, {
      "title" : "A complete quantified epistemic logic for reasoning about message passing systems",
      "author" : [ "F. Belardinelli", "A. Lomuscio" ],
      "venue" : "Revised Selected and Invited Papers,",
      "citeRegEx" : "Belardinelli and Lomuscio,? \\Q2008\\E",
      "shortCiteRegEx" : "Belardinelli and Lomuscio",
      "year" : 2008
    }, {
      "title" : "Interactions between time and knowledge in a firstorder logic for multi-agent systems",
      "author" : [ "F. Belardinelli", "A. Lomuscio" ],
      "venue" : "In Principles of Knowledge Representation and Reasoning: Proceedings of the 12th International Conference,",
      "citeRegEx" : "Belardinelli and Lomuscio,? \\Q2010\\E",
      "shortCiteRegEx" : "Belardinelli and Lomuscio",
      "year" : 2010
    }, {
      "title" : "A computationally-grounded semantics for artifact-centric systems and abstraction results",
      "author" : [ "F. Belardinelli", "A. Lomuscio", "F. Patrizi" ],
      "venue" : "In Proceedings of the 22nd International Joint Conference on Artificial Intelligence,",
      "citeRegEx" : "Belardinelli et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Belardinelli et al\\.",
      "year" : 2011
    }, {
      "title" : "Verification of deployed artifact systems via data abstraction",
      "author" : [ "F. Belardinelli", "A. Lomuscio", "F. Patrizi" ],
      "venue" : "In Service-Oriented Computing: Proceedings of the 9th International Conference,",
      "citeRegEx" : "Belardinelli et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Belardinelli et al\\.",
      "year" : 2011
    }, {
      "title" : "View-based query answering in description logics: Semantics and complexity",
      "author" : [ "D. Calvanese", "G.D. Giacomo", "M. Lenzerini", "R. Rosati" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "Calvanese et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Calvanese et al\\.",
      "year" : 2012
    }, {
      "title" : "Communicative actions for artificial agents",
      "author" : [ "P. Cohen", "H. Levesque" ],
      "venue" : "In Proceedings of the 1st International Conference on Multi-Agent Systems,",
      "citeRegEx" : "Cohen and Levesque,? \\Q1995\\E",
      "shortCiteRegEx" : "Cohen and Levesque",
      "year" : 1995
    }, {
      "title" : "Monodic temporal resolution",
      "author" : [ "A. Degtyarev", "M. Fisher", "B. Konev" ],
      "venue" : "In Automated Deduction: Proceedings of the 19th International Conference on Automated Deduction, CADE-19,",
      "citeRegEx" : "Degtyarev et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Degtyarev et al\\.",
      "year" : 2003
    }, {
      "title" : "Equality and monodic first-order temporal logic",
      "author" : [ "A. Degtyarev", "M. Fisher", "A. Lisitsa" ],
      "venue" : "Studia Logica,",
      "citeRegEx" : "Degtyarev et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Degtyarev et al\\.",
      "year" : 2002
    }, {
      "title" : "The Intentional Stance",
      "author" : [ "D. Dennett" ],
      "venue" : null,
      "citeRegEx" : "Dennett,? \\Q1987\\E",
      "shortCiteRegEx" : "Dennett",
      "year" : 1987
    }, {
      "title" : "Automatic verification of datacentric business processes",
      "author" : [ "A. Deutsch", "R. Hull", "F. Patrizi", "V. Vianu" ],
      "venue" : "In Database Theory: Proceedings of the 12th International Conference, ICDT 2009,",
      "citeRegEx" : "Deutsch et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Deutsch et al\\.",
      "year" : 2009
    }, {
      "title" : "Specification and verification of data-driven web applications",
      "author" : [ "A. Deutsch", "L. Sui", "V. Vianu" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "Deutsch et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Deutsch et al\\.",
      "year" : 2007
    }, {
      "title" : "Reasoning about Knowledge",
      "author" : [ "R. Fagin", "J.Y. Halpern", "Y. Moses", "M.Y. Vardi" ],
      "venue" : null,
      "citeRegEx" : "Fagin et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Fagin et al\\.",
      "year" : 1995
    }, {
      "title" : "What can machines know? On the properties of knowledge in distributed systems",
      "author" : [ "R. Fagin", "J.Y. Halpern", "M.Y. Vardi" ],
      "venue" : "Journal of the ACM,",
      "citeRegEx" : "Fagin et al\\.,? \\Q1992\\E",
      "shortCiteRegEx" : "Fagin et al\\.",
      "year" : 1992
    }, {
      "title" : "Quantification in modal logic",
      "author" : [ "J. Garson" ],
      "venue" : "Handbook of Philosophical Logic,",
      "citeRegEx" : "Garson,? \\Q2001\\E",
      "shortCiteRegEx" : "Garson",
      "year" : 2001
    }, {
      "title" : "A guide to completeness and complexity for modal logics of knowledge and belief",
      "author" : [ "J. Halpern", "Y. Moses" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Halpern and Moses,? \\Q1992\\E",
      "shortCiteRegEx" : "Halpern and Moses",
      "year" : 1992
    }, {
      "title" : "Complete axiomatizations for reasoning about knowledge and time",
      "author" : [ "J. Halpern", "R. van der Meyden", "M. Vardi" ],
      "venue" : "SIAM Journal on Computing,",
      "citeRegEx" : "Halpern et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Halpern et al\\.",
      "year" : 2004
    }, {
      "title" : "The complexity of reasoning about knowledge and time",
      "author" : [ "J. Halpern", "M. Vardi" ],
      "venue" : "In ACM Symposium on Theory of Computing,",
      "citeRegEx" : "Halpern and Vardi,? \\Q1986\\E",
      "shortCiteRegEx" : "Halpern and Vardi",
      "year" : 1986
    }, {
      "title" : "The complexity of reasoning about knowledge and time 1: lower bounds",
      "author" : [ "J. Halpern", "M. Vardi" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "Halpern and Vardi,? \\Q1989\\E",
      "shortCiteRegEx" : "Halpern and Vardi",
      "year" : 1989
    }, {
      "title" : "Probabilistic algorithmic knowledge",
      "author" : [ "J. Halpern", "R. Pucella" ],
      "venue" : "Logical Methods in Computer Science,",
      "citeRegEx" : "Halpern and Pucella,? \\Q2005\\E",
      "shortCiteRegEx" : "Halpern and Pucella",
      "year" : 2005
    }, {
      "title" : "Foundations of relational artifacts verification",
      "author" : [ "B.B. Hariri", "D. Calvanese", "G.D. Giacomo", "R.D. Masellis", "P. Felli" ],
      "venue" : "In Business Process Management: Proceedings of the 9th International Conference, BPM 2011,",
      "citeRegEx" : "Hariri et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Hariri et al\\.",
      "year" : 2011
    }, {
      "title" : "Monodic packed fragment with equality is decidable",
      "author" : [ "I. Hodkinson" ],
      "venue" : "Studia Logica,",
      "citeRegEx" : "Hodkinson,? \\Q2002\\E",
      "shortCiteRegEx" : "Hodkinson",
      "year" : 2002
    }, {
      "title" : "Complexity of monodic guarded fragments over linear and real time",
      "author" : [ "I. Hodkinson" ],
      "venue" : "Annals of Pure and Applied Logic,",
      "citeRegEx" : "Hodkinson,? \\Q2006\\E",
      "shortCiteRegEx" : "Hodkinson",
      "year" : 2006
    }, {
      "title" : "On the computational complexity of decidable fragments of first-order linear temporal logics",
      "author" : [ "I. Hodkinson", "R. Kontchakov", "A. Kurucz", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "In Proceedings of the 10th International Symposium on Temporal Representation and Reasoning / 4th International Conference on Temporal Logic, TIME-ICTL",
      "citeRegEx" : "Hodkinson et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Hodkinson et al\\.",
      "year" : 2003
    }, {
      "title" : "Decidable fragment of first-order temporal logics",
      "author" : [ "I. Hodkinson", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "Annals of Pure and Applied Logic,",
      "citeRegEx" : "Hodkinson et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Hodkinson et al\\.",
      "year" : 2000
    }, {
      "title" : "Decidable and undecidable fragments of first-order branching temporal logics",
      "author" : [ "I. Hodkinson", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "In Proceedings of the 17th IEEE Symposium on Logic in Computer Science,",
      "citeRegEx" : "Hodkinson et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Hodkinson et al\\.",
      "year" : 2002
    }, {
      "title" : "On the relation between interpreted systems and Kripke models. In Agent and Multi-Agent Systems: Proceedings of the AI97 Workshop on the theoretical and practical foundations of intelligent agents and agent-oriented systems, Vol",
      "author" : [ "A. Lomuscio", "M. Ryan" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Lomuscio and Ryan,? \\Q1998\\E",
      "shortCiteRegEx" : "Lomuscio and Ryan",
      "year" : 1998
    }, {
      "title" : "Ascribing mental qualities to machines",
      "author" : [ "J. McCarthy" ],
      "venue" : "Philosophical Perspectives in Artificial Intelligence,",
      "citeRegEx" : "McCarthy,? \\Q1979\\E",
      "shortCiteRegEx" : "McCarthy",
      "year" : 1979
    }, {
      "title" : "Artificial intelligence, logic and formalizing common sense",
      "author" : [ "J. McCarthy" ],
      "venue" : "Philosophical Logic and Artificial Intelligence,",
      "citeRegEx" : "McCarthy,? \\Q1990\\E",
      "shortCiteRegEx" : "McCarthy",
      "year" : 1990
    }, {
      "title" : "Axioms for knowledge and time in distributed systems with perfect recall",
      "author" : [ "R. Meyden" ],
      "venue" : "In Proceedings of the 9th Annual IEEE Symposium on Logic in Computer Science,",
      "citeRegEx" : "Meyden,? \\Q1994\\E",
      "shortCiteRegEx" : "Meyden",
      "year" : 1994
    }, {
      "title" : "Complete axiomatizations for reasoning about knowledge and branching time",
      "author" : [ "Meyden", "R. v", "K. Wong" ],
      "venue" : "Studia Logica,",
      "citeRegEx" : "Meyden et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Meyden et al\\.",
      "year" : 2003
    }, {
      "title" : "A formal theory of knowledge and action",
      "author" : [ "R.C. Moore" ],
      "venue" : "Readings in Planning,",
      "citeRegEx" : "Moore,? \\Q1990\\E",
      "shortCiteRegEx" : "Moore",
      "year" : 1990
    }, {
      "title" : "Distributed processes and the logic of knowledge",
      "author" : [ "R. Parikh", "R. Ramanujam" ],
      "venue" : "In Logics of Programs, Conference Proceedings,",
      "citeRegEx" : "Parikh and Ramanujam,? \\Q1985\\E",
      "shortCiteRegEx" : "Parikh and Ramanujam",
      "year" : 1985
    }, {
      "title" : "The temporal logic of programs",
      "author" : [ "A. Pnueli" ],
      "venue" : "In Proceedings of the 18th International Symposium Foundations of Computer Science,",
      "citeRegEx" : "Pnueli,? \\Q1977\\E",
      "shortCiteRegEx" : "Pnueli",
      "year" : 1977
    }, {
      "title" : "Deliberation and its role in the formation of intentions",
      "author" : [ "A. Rao", "M. Georgeff" ],
      "venue" : "In Proceedings of the 7th Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "Rao and Georgeff,? \\Q1991\\E",
      "shortCiteRegEx" : "Rao and Georgeff",
      "year" : 1991
    }, {
      "title" : "Monodic epistemic predicate logic. In Logics in Artificial Intelligence, European Workshop",
      "author" : [ "H. Sturm", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "JELIA",
      "citeRegEx" : "Sturm et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Sturm et al\\.",
      "year" : 2000
    }, {
      "title" : "Common knowledge and quantification",
      "author" : [ "H. Sturm", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "Economic Theory,",
      "citeRegEx" : "Sturm et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Sturm et al\\.",
      "year" : 2002
    }, {
      "title" : "Decidable fragments of first-order modal logics",
      "author" : [ "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "Journal of Symbolic Logic,",
      "citeRegEx" : "Wolter and Zakharyaschev,? \\Q2001\\E",
      "shortCiteRegEx" : "Wolter and Zakharyaschev",
      "year" : 2001
    }, {
      "title" : "Axiomatizing the monodic fragment of first-order temporal logic",
      "author" : [ "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "Annals of Pure and Applies Logic,",
      "citeRegEx" : "Wolter and Zakharyaschev,? \\Q2002\\E",
      "shortCiteRegEx" : "Wolter and Zakharyaschev",
      "year" : 2002
    }, {
      "title" : "Computationally grounded theories of agency",
      "author" : [ "M. Wooldridge" ],
      "venue" : "In Proceedings of the International Conference of Multi-Agent Systems,",
      "citeRegEx" : "Wooldridge,? \\Q2000\\E",
      "shortCiteRegEx" : "Wooldridge",
      "year" : 2000
    }, {
      "title" : "Reasoning about Rational Agents",
      "author" : [ "M. Wooldridge" ],
      "venue" : null,
      "citeRegEx" : "Wooldridge,? \\Q2000\\E",
      "shortCiteRegEx" : "Wooldridge",
      "year" : 2000
    }, {
      "title" : "A first-order branching time logic of multi-agent systems",
      "author" : [ "M. Wooldridge", "M. Fisher" ],
      "venue" : "In Proceedings of the 10th European Conference on Artificial Intelligence,",
      "citeRegEx" : "Wooldridge and Fisher,? \\Q1992\\E",
      "shortCiteRegEx" : "Wooldridge and Fisher",
      "year" : 1992
    }, {
      "title" : "Model checking multi-agent systems with MABLE",
      "author" : [ "M. Wooldridge", "M. Fisher", "M. Huget", "S. Parsons" ],
      "venue" : "In Proceedings of the 1st International Conference on Autonomous Agents and Multiagent Systems,",
      "citeRegEx" : "Wooldridge et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Wooldridge et al\\.",
      "year" : 2002
    }, {
      "title" : "Model checking for multiagent systems: the MABLE language and its applications",
      "author" : [ "M. Wooldridge", "M. Huget", "M. Fisher", "S. Parsons" ],
      "venue" : "International Journal on Artificial Intelligence Tools,",
      "citeRegEx" : "Wooldridge et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Wooldridge et al\\.",
      "year" : 2006
    }, {
      "title" : "Verifying that agents implement a communication language",
      "author" : [ "M. Wooldridge" ],
      "venue" : "In Proceedings of the 16th National Conference on Artificial Intelligence and 11th Conference on Innovative Applications of Artificial Intelligence,",
      "citeRegEx" : "Wooldridge,? \\Q1999\\E",
      "shortCiteRegEx" : "Wooldridge",
      "year" : 1999
    } ],
    "referenceMentions" : [ {
      "referenceID" : 34,
      "context" : "While reactive systems (Pnueli, 1977) are traditionally specified using plain temporal logic, there is a well-established tradition in Artificial Intelligence (AI) and, in particular, MultiAgent Systems (MAS) research to adopt more expressive languages.",
      "startOffset" : 23,
      "endOffset" : 37
    }, {
      "referenceID" : 10,
      "context" : "Much of this tradition is inspired by the earlier, seminal work in AI by McCarthy (1979, 1990) and others aimed at adopting an “intentional stance” (Dennett, 1987) when reasoning about intelligent systems.",
      "startOffset" : 148,
      "endOffset" : 163
    }, {
      "referenceID" : 15,
      "context" : "Quantified modal languages (Garson, 2001) have long attracted considerable attention.",
      "startOffset" : 27,
      "endOffset" : 41
    }, {
      "referenceID" : 13,
      "context" : "There is a deep-rooted interest (Fagin et al., 1995; Meyden, 1994) in understanding the implications of interaction axioms in this context, as they often express interesting properties of MAS, including “perfect recall”, “synchronicity”,",
      "startOffset" : 32,
      "endOffset" : 66
    }, {
      "referenceID" : 30,
      "context" : "There is a deep-rooted interest (Fagin et al., 1995; Meyden, 1994) in understanding the implications of interaction axioms in this context, as they often express interesting properties of MAS, including “perfect recall”, “synchronicity”,",
      "startOffset" : 32,
      "endOffset" : 66
    }, {
      "referenceID" : 8,
      "context" : "At a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al.",
      "startOffset" : 163,
      "endOffset" : 237
    }, {
      "referenceID" : 36,
      "context" : "At a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al.",
      "startOffset" : 163,
      "endOffset" : 237
    }, {
      "referenceID" : 9,
      "context" : ", 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al.",
      "startOffset" : 52,
      "endOffset" : 130
    }, {
      "referenceID" : 25,
      "context" : ", 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al.",
      "startOffset" : 52,
      "endOffset" : 130
    }, {
      "referenceID" : 23,
      "context" : ", 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003).",
      "startOffset" : 54,
      "endOffset" : 95
    }, {
      "referenceID" : 24,
      "context" : ", 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003).",
      "startOffset" : 54,
      "endOffset" : 95
    }, {
      "referenceID" : 22,
      "context" : "Similar results have been obtained for monodic fragments of first-order temporal logic (Hodkinson, 2002; Hodkinson et al., 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al.",
      "startOffset" : 87,
      "endOffset" : 128
    }, {
      "referenceID" : 25,
      "context" : "Similar results have been obtained for monodic fragments of first-order temporal logic (Hodkinson, 2002; Hodkinson et al., 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al.",
      "startOffset" : 87,
      "endOffset" : 128
    }, {
      "referenceID" : 23,
      "context" : ", 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al., 2003).",
      "startOffset" : 81,
      "endOffset" : 122
    }, {
      "referenceID" : 24,
      "context" : ", 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al., 2003).",
      "startOffset" : 81,
      "endOffset" : 122
    }, {
      "referenceID" : 36,
      "context" : "The monodic fragment of first-order epistemic logic has also been explored (Sturm et al., 2000; Sturm, Wolter, & Zakharyaschev, 2002), and an axiomatisation including common knowledge has been provided.",
      "startOffset" : 75,
      "endOffset" : 133
    }, {
      "referenceID" : 25,
      "context" : "One of the early contributions is the work of Moore (1990), which presents a theory of action that takes into consideration the epistemic preconditions to actions and their effects on knowledge.",
      "startOffset" : 46,
      "endOffset" : 59
    }, {
      "referenceID" : 8,
      "context" : "At a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003). Wolter and Zakharyaschev (2001) introduced the monodic fragment of quantified modal logic, where the modal operators are restricted to formulas with at most one free variable, and they proved the decidability of various fragments.",
      "startOffset" : 164,
      "endOffset" : 422
    }, {
      "referenceID" : 8,
      "context" : "At a purely theoretical level, first-order temporal and epistemic logics have also received increasing attention with a range of contributions on axiomatisability (Degtyarev et al., 2003; Sturm et al., 2000; Wolter & Zakharyaschev, 2002), decidability (Degtyarev et al., 2002; Hodkinson et al., 2000; Wolter & Zakharyaschev, 2001), and complexity (Hodkinson, 2006; Hodkinson et al., 2003). Wolter and Zakharyaschev (2001) introduced the monodic fragment of quantified modal logic, where the modal operators are restricted to formulas with at most one free variable, and they proved the decidability of various fragments. Similar results have been obtained for monodic fragments of first-order temporal logic (Hodkinson, 2002; Hodkinson et al., 2000), and the computational complexity of these formalisms have been analysed (Hodkinson, 2006; Hodkinson et al., 2003). Further, Wolter and Zakharyaschev (2002) provided a complete axiomatisation of the monodic first-order validities on the natural numbers.",
      "startOffset" : 164,
      "endOffset" : 907
    }, {
      "referenceID" : 25,
      "context" : "We prove the completeness of the presented first-order temporal-epistemic logics via a quasimodel construction, which has previously been used (Hodkinson, Wolter, & Zakharyaschev, 2002; Hodkinson et al., 2000) to prove decidability for monodic fragments of first-order temporal logic (FoTL).",
      "startOffset" : 143,
      "endOffset" : 209
    }, {
      "referenceID" : 36,
      "context" : "Quasimodels have also been applied to first-order temporal as well as epistemic logic (Sturm et al., 2000; Wolter & Zakharyaschev, 2002).",
      "startOffset" : 86,
      "endOffset" : 136
    }, {
      "referenceID" : 36,
      "context" : "(2002) present a complete axiomatisation for the monodic fragment of FoTL on the natural numbers; a similar result for a variety of first-order epistemic logics with common knowledge has also appeared (Sturm et al., 2000).",
      "startOffset" : 201,
      "endOffset" : 221
    }, {
      "referenceID" : 22,
      "context" : "We prove the completeness of the presented first-order temporal-epistemic logics via a quasimodel construction, which has previously been used (Hodkinson, Wolter, & Zakharyaschev, 2002; Hodkinson et al., 2000) to prove decidability for monodic fragments of first-order temporal logic (FoTL). Quasimodels have also been applied to first-order temporal as well as epistemic logic (Sturm et al., 2000; Wolter & Zakharyaschev, 2002). Wolter et al. (2002) present a complete axiomatisation for the monodic fragment of FoTL on the natural numbers; a similar result for a variety of first-order epistemic logics with common knowledge has also appeared (Sturm et al.",
      "startOffset" : 144,
      "endOffset" : 451
    }, {
      "referenceID" : 13,
      "context" : "Interpreted systems are a standard semantics for interpreting temporal-epistemic logics in a multi-agent setting (Fagin et al., 1995; Parikh & Ramanujam, 1985).",
      "startOffset" : 113,
      "endOffset" : 159
    }, {
      "referenceID" : 14,
      "context" : "The language LCm also contains the common knowledge operator C (Fagin et al., 1992).",
      "startOffset" : 63,
      "endOffset" : 83
    }, {
      "referenceID" : 13,
      "context" : "Following standard notation (Fagin et al., 1995), for r ∈ R and n ∈ N, a pair (r, n) is a point in P.",
      "startOffset" : 28,
      "endOffset" : 48
    }, {
      "referenceID" : 17,
      "context" : "These conditions have extensively been discussed in the literature (Halpern et al., 2004) together with equivalent formulations.",
      "startOffset" : 67,
      "endOffset" : 89
    }, {
      "referenceID" : 17,
      "context" : "The proofs of these equivalences are similar to those of the propositional case (Halpern et al., 2004) and are not reported here.",
      "startOffset" : 80,
      "endOffset" : 102
    }, {
      "referenceID" : 17,
      "context" : "The proofs of these equivalences are similar to those of the propositional case (Halpern et al., 2004) and are not reported here. Further, we define the languages PLm and PLCm as the propositional fragments of Lm and LCm respectively (formally, PLm and PLCm are obtained by restricting atomic formulas to 0-ary predicate constants p1, p2, . . .). Table 1 summarises the results by Halpern et al. (2004) concerning the axiomatisability of propositional validities in PLm and PLCm.",
      "startOffset" : 81,
      "endOffset" : 403
    }, {
      "referenceID" : 13,
      "context" : "The operator Ki is an S5 modality, while the next© and until U operators are axiomatised as linear-time modalities (Fagin et al., 1995).",
      "startOffset" : 115,
      "endOffset" : 135
    }, {
      "referenceID" : 17,
      "context" : "In this paper we focus on the schemes of axioms in Table 2 that specify key interactions between time and knowledge (Halpern et al., 2004).",
      "startOffset" : 116,
      "endOffset" : 138
    }, {
      "referenceID" : 17,
      "context" : "These results can be shown in a similar way to the propositional case (Halpern et al., 2004); so the proofs are omitted.",
      "startOffset" : 70,
      "endOffset" : 92
    }, {
      "referenceID" : 13,
      "context" : "These results follow from Remark 1 by a line of reasoning similar to that used in the propositional case (Fagin et al., 1995; Halpern et al., 2004).",
      "startOffset" : 105,
      "endOffset" : 147
    }, {
      "referenceID" : 17,
      "context" : "These results follow from Remark 1 by a line of reasoning similar to that used in the propositional case (Fagin et al., 1995; Halpern et al., 2004).",
      "startOffset" : 105,
      "endOffset" : 147
    }, {
      "referenceID" : 25,
      "context" : "In this section we outline the main steps of the completeness proof, which is based on a quasimodel construction (Gabbay, Kurucz, Wolter, & Zakharyaschev, 2003; Hodkinson et al., 2000).",
      "startOffset" : 113,
      "endOffset" : 184
    }, {
      "referenceID" : 17,
      "context" : "We define ad(φ) as the greatest number of alternations of distinct Ki’s along any branch in φ’s parse tree (Halpern et al., 2004).",
      "startOffset" : 107,
      "endOffset" : 129
    }, {
      "referenceID" : 13,
      "context" : "This is to be consistent with previous work (Fagin et al., 1995; Halpern et al., 2004); the context will disambiguate.",
      "startOffset" : 44,
      "endOffset" : 86
    }, {
      "referenceID" : 17,
      "context" : "This is to be consistent with previous work (Fagin et al., 1995; Halpern et al., 2004); the context will disambiguate.",
      "startOffset" : 44,
      "endOffset" : 86
    }, {
      "referenceID" : 17,
      "context" : "To prove completeness for QIS m and QIS m we use the next result, which is an extension from the propositional case (Halpern et al., 2004).",
      "startOffset" : 116,
      "endOffset" : 138
    }, {
      "referenceID" : 17,
      "context" : "As pointed out by Halpern et al. (2004), Lemma 19 is not sufficient to construct a quasimodel+ that satisfies no learning.",
      "startOffset" : 18,
      "endOffset" : 40
    }, {
      "referenceID" : 17,
      "context" : "As pointed out by Halpern et al. (2004), Lemma 19 is not sufficient to construct a quasimodel+ that satisfies no learning. In fact, given a ⇒-sequence Σ = C0,C1, . . . of ιstate candidates and a ι]i-type t0 such that t0 ≈i t0 for t0 ∈ C0, by Lemma 19 we can find a ⇒-sequence Σ′ = C0,C1, . . . such that t0 ∈ C0 and no learning is satisfied. However, it does not follow from the acceptability of Σ that Σ′ is also acceptable. So, as in the propositional case, we have to work with trees of state candidates. Hereafter we extend the definitions given by Halpern et al. (2004) to be able to deal with points and monodic friendly Kripke models.",
      "startOffset" : 18,
      "endOffset" : 575
    }, {
      "referenceID" : 17,
      "context" : ", 2000, Wolter & Zakharyaschev, 2002), in a direction that was previously only explored at the propositional level (Halpern et al., 2004).",
      "startOffset" : 115,
      "endOffset" : 137
    }, {
      "referenceID" : 17,
      "context" : ", 2000; Wolter & Zakharyaschev 2001) has focused on fragments where no interaction is present, but we know from the literature (Halpern et al., 2004) that interactions can make these problems harder.",
      "startOffset" : 127,
      "endOffset" : 149
    } ],
    "year" : 2012,
    "abstractText" : "We investigate a class of first-order temporal-epistemic logics for reasoning about multiagent systems. We encode typical properties of systems including perfect recall, synchronicity, no learning, and having a unique initial state in terms of variants of quantified interpreted systems, a first-order extension of interpreted systems. We identify several monodic fragments of first-order temporal-epistemic logic and show their completeness with respect to their corresponding classes of quantified interpreted systems.",
    "creator" : "TeX"
  }
}