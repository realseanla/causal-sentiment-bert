{
  "name" : "1509.03389.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n50 9.\n03 38\n9v 1\n[ cs\n.A I]\n1 1\nSe p\n20 15"
    }, {
      "heading" : "1 Introduction",
      "text" : "A research department has to choose k members for a recruiting committee. A selected committee should be gender balanced, ideally containing 50% of male and 50% of female. Additionally, a committee should represent different research areas in certain proportions: ideally it should contain 55% of researchers specializing in area A, 25% of experts in area B, and 20% in area C. Another requirement is that the committee should contain 30% junior and 70% senior researchers, and finally, the repartition between local and external members should be kept in proportions 30% to 70 %. The pool of possible members is the following:\nName Sex Group Age Affiliation Ann F A J L Bob M A J E\nCharlie M A S L Donna F B S E Ernest M A S L George M A S E Helena F B S E John M B J E\nKevin M C J E Laura F C J L\nIn the given example, if the department wants to select k = 3 members, then it is easy to see that there exists no such committee that would ideally satisfy all the criteria. Nevertheless, some committees are better than others: intuitively we feel the sex ratio should be either equal to 2:1 or to 1:2, the area ratio should be equal to 2:1:0, the age ratio to 1:2, and the affiliation ratio to 1:2. Such relaxed criteria can be achieved by selecting Ann, Donna, and George. Now, let us consider the above example for the case when k = 4. In such case, the ideal sex ratio should be equal to 2:2, the research area ratio to 2:1:1, the age ratio to 1:3, and the\naffiliation ratio to 1:3. It can be proved, however, that for k = 4 there exists no committee satisfying such relaxed criteria. Intuitively, in such case the best committee is either {Ann, Charlie, Donna, George}, with two externals instead of three, or {Charles, Donna, George, Kevin}, with males being over-represented.\nIn this paper we formalize the intuition given in the above example and define what it means for a committee to be optimal. When looking for an appropriate definition we follow an axiomatic approach. First, we notice that our model generalizes the apportionment problem for proportional representation [2]. The central question of the apportionment problem is how to distribute parliament seats between political parties, given the numbers of votes casted for each party. Indeed, we can consider our multi-attribute problem, with the single attribute being a political affiliation of a candidate, and the desired distributions being the proportions of votes casted for different parties. In such case we can see that selecting a committee in our multi-attribute proportional representation system boils down to selecting a parliament according to some apportionment method.\nThere is a variety of apportionment methods studied in the literature [1]. In this paper we do not review these methods in detail (we refer the reader to the survey of Balinski and Young [2]), but we rather focus on a specific set of their properties that have been analyzed, namely non-reversal, exactness and respect of quota, population monotonicity, and house monotonicity. We define the analogs of these properties for the multi-attribute domain, and analyze our definition of an optimal committee for a multi-attribute domain with respect to these properties.\nTo emphasize the analogy between our model and the apportionment methods, we should provide some discussion on where the desired proportions for attributes come from. Typically, but not always, they come from votes. For instance, each voter might give her preferred value for each attribute, and the ideal proportions coincide with the observed frequencies. For instance, out of 20 voters, 10 would have voted for a male and 10 for a female, 13 for a young person and 7 for a senior one, etc. It is worth mentioning that the voters might cast approval ballots, that is for each attribute they might define a set of approved values rather than pointing out the single most preferred one. On the other hand, sometimes, instead of votes, there are “global” preferences on the composition of the committee, expressed directly by the group, imposed by law, or by other constraints that should be respected as much as possible independently of voter preferences.\nThe multi-attribute case, however, is also substantially different from the single-attribute one. In particular, multi-attribute proportional representation systems exhibit computational problems that do not appear in the single-attribute setting. Indeed, in the second part of our paper we show that finding an optimal committee is often NP-hard. However, we show that this challenge can be addressed by designing efficient approximation and fixed-parameter tractable algorithms.\nAfter positioning our work with respect to related areas in Section 2, we present our model in Section 3. In Sections 4 and 5 we discuss relevant properties of methods for multi-attribute fair representation. In Section 6 we show that, although the computational of optimal committees is generally NP-hard, there exist good approximation and fixed-parameter tractable algorithms for finding them. In Section 7 we point to further research issues."
    }, {
      "heading" : "2 Related work",
      "text" : "Our model is related to three distinct research areas:\nVoting on multi-attribute domains (see the work of Lang and Xia [13] for a survey). There, the aim is to output a single winning combination of attributes (e.g., in multiple referenda, a combination of binary values). Our model in case when k = 1 can be viewed as a voting problem on a constrained multi-attribute domain (constrained because not all combinations are feasible).\nMultiwinner (or committee) elections. In particular, our model is related to the problem of finding a fully proportional representation [6, 18]. There, the voters vote directly for candidates and do not consider attributes that characterize them. Thus, in this literature, the term “proportional representation” has a different meaning: these methods are ‘representative’ because each voter feels represented by some member of the elected committee. The computational aspects of full proportional and its extensions have raised a lot of\nattention lately [21, 3, 7, 24, 17]. Our study of the properties of multi-attribute proportional representation is close in spirit to the work of Elkind et al. [10], who gives a normative study of multiwinner election rules. Budgeted social choice [16] is technically close to committee elections, but it has a different motivation: the aim is to make a collective choice about a set of objects to be consumed by the group (perhaps, subject to some constraints) rather than about the set of candidates to represent voters.\nApportionment for party-list representation systems (see the work of Balinski and Young [2] for a survey). As we already pointed out, the apportionment methods correspond to the restriction of our model to a single attribute (albeit with a different motivation). While voting on multi-attribute domains and multiwinner elections have lead to significant research effort in computational social choice, this is less the case for partylist representation systems. Ding and Lin [8] studied a game-theoretic model for a party-list proportional representation system under specific assumptions, and show that computing the Nash equilibria of the game is hard. Also related is the computation of bi-apportionment (assignment of seats to parties within regions), investigated in a few recent papers [22, 23, 14].\nConstrained approval voting (CAP) [4, 20] is probably the closest work to our setting (MAPR). In CAP there are also multiple attributes, candidates are represented by tuples of attribute values, there is a target composition of the committee and we try to find a committee close to this target. However, there are also substantial differences between MAPR and CAP. First, in CAP, the target composition of the committee, exogenously defined, consists of a target number of seats for each combination of attributes (called a cell), that is, for each ~z ∈ D1× . . .×Dp, we have a value s(~z); while in MAPR we have a smaller input consisting of a target number for each value of each attribute. Note that the input in CAP is exponentially large in the number of attributes, which makes it infeasible in practice as soon as this number exceeds a few units (probably CAP was designed only for very small numbers of attributes, such as 2 or 3). Second, in CAP, the selection criterion of an optimal committee is made in two consecutive steps: first a set of admissible committees is defined, and the choice between these admissible committees is made by using approval ballots, and the chosen committee is the admissible committee maximizing the sum, over all voters, of the number of candidates approved (there is no loss function to minimize as in MAPR). A simple translation of CAP into an integer linear programming problem is given in [20, 25]."
    }, {
      "heading" : "3 The model",
      "text" : "Let X = {X1, . . . , Xp} be a set of p attributes, each with a finite domain Di = {x1i , . . . , x qi i }. We say that Xi is binary if |Di| = 2. We let D = D1 × . . . × Dp. Let C = {c1, . . . , cm} be a set of candidates, also referred to as the candidate database. Each candidate ci is represented as a vector of attribute values (X1(ci), . . . , Xp(ci)) ∈ D.1\nFor each i ≤ p, by πi we denote a target distribution πi = (π1i , . . . , π qi i ) with ∑qi i=1 π j i = 1. We set π = (π1, . . . , πp). Typically, n voters have casted a ballot expressing their preferred value on every attribute Xi, and π j i is the fraction of voters who have x j i as their preferred value for Xi, but the results presented in the paper are independent from where the values πji come from (see the discussion in the Introduction). The goal is to select a committee2 of k ∈ {1, . . . ,m} candidates (or items) such that the distribution of attribute values is as close as possible to π. Formally, let Sk(C) denote the set of all subsets of C of cardinality k. Given A ∈ Sk(C), the representation vector for A is defined as r(A) = (r1(A), . . . , rp(A)), where ri(A) = (r j i (A)|1 ≤ j ≤ qi) for each i = 1, . . . , p, and r j i (A) = |{c∈A:Xi(c)=x j i }| k .\nDefinition 1 A committee A ∈ Sk(C) is perfect for π if ri(A) = πi for all i.\n1By writing Xj(ci), we slightly abuse notation, that is, we consider Xj both as an attribute name and as a function that maps any candidate to an attribute value; this will not lead to any ambiguity.\n2We will stick to the terminology “committee” although the meaning of subsets of candidates has sometimes nothing to do with the election of a committee.\nThus, a perfect committee matches exactly the target distribution. Clearly, there is no perfect committee if for some i, j, πji is not an integer multiplicity of 1 k . In some of our results we will focus on target distributions such that for each i, j the value kπji is an integer. We will refer to such target distributions as to natural distributions.\nWe define metrics measuring how well a committee fits a target distribution, called loss functions.\nDefinition 2 A loss function f maps π and r to f(π, r(A)) ∈ R, and satisfies f(π, r(A)) = 0 if and only if π = r.\nThere are a number of loss functions that can be considered. As often, the most classical loss functions use Lp norms, with the most classical examples of L1, L2, and L∞. We focus on two representative Lp norms, L1, and L∞, but we believe that other choices are also justified and may lead to interesting variants of our model. Consequently, we consider the following loss functions:\n• ‖ · ‖1 : ‖π, r(A)‖1 = ∑ i,j |r j i (A)− π j i |.\n• ‖ · ‖1,max : ‖π, r(A)‖1,max = ∑ imaxj |r j i (A) − π j i |.\n• ‖ · ‖max : ‖π, r(A)‖max = maxi,j |π j i − r j i (A)|.\nNow, we are ready to formally define the central problem addressed in the paper.\nDefinition 3 (OPTIMALREPRESENTATION) Given X , C, π, k, and a loss function f , find a committee A ∈ Sk(C) minimizing f(π, r(A)).\nExample 1 For the example of the Introduction, we have X = {sex, group, age, affiliation}, D = {F,M}× {A,B,C}×{J, S}×{L,E}, and X1(Ann) = F , X1(Bob) = M etc. {Charlie,Donna,George,Kevin} is optimal for ‖ · ‖1, with ‖π, r(A)‖1 = 0.5+ 0.1+ 0.1+ 0.1 = 0.8, and for ‖ · ‖1,max, with ‖π, r(A)‖1,max = 0.4, but not for ‖ · ‖max. {Ann,Charlie,Donna,George} is optimal for ‖ · ‖max, with ‖π, r(A)‖max = max(0, 0.2, 0.05, 0.2) = 0.2, but not for the other criteria."
    }, {
      "heading" : "4 The single-attribute case",
      "text" : "In this section we focus on the single-attribute case (p = 1). Without loss of generality, let us assume that the single attribute be party affiliation. Further, let us for a moment assume that for each value xj1 there are at least k candidates with value xj1 (this is typically the case in party-list elections). Then finding the optimal committee comes down to apportionment problem for party-list elections, where a fractional distribution π1 has to be “rounded up” to an integer-valued distribution r1 such that ∑ j r j 1 = k.\nThere are two main families of apportionment methods: largest remainders and highest average methods [2]. We shall not discuss highest average methods here, because they are weakly relevant to our model. For largest remainders methods, a quota q is computed as a function of the number of seats k and the number of voters n. The number of votes for party i is ni = n.πi. The most common choice of a quota is the Hare quota, defined as nk ; the method based on the Hare quota is called the Hamilton method.\n3 Our aim is to generalize the Hamilton method to multiattribute domains.\nDefinition 4 (The largest remainder method.) The largest remainder method with quota q is defined as follows:\n• for all i, s∗i = ni q is the ideal number of seats for party i.\n• each party i receives si = ⌊s∗i ⌋ seats; let ti = si − s ∗ i (called the remainder).\n3Other common choices are the Droop quota 1 + n 1+k , the Hagenbach-Bischoff quota n 1+k and the Imperiali quota n 2+k .\n• the remaining k − ∑ i si seats are given to the k − ∑ i si parties with the highest remainders ti.\nBelow we show that the largest remainder methods select a distribution (k1, . . . , kq) minimizing maxi=1,...,p(s ∗ i − ki), which in the case of Hamilton comes down to minimizing maxi=1,...,p( ni q − ki). After defining πi1 = ni n for all i, we obtain the result that explains that our problem, with any of the three variants of loss functions, generalizes the Hamilton apportionment method.\nProposition 1 When p = 1 and assuming there are at least k items for each attribute, optimal subsets for ‖ · ‖1, ‖ · ‖1,max and ‖ · ‖max coincide, and correspond to the subsets given by the Hamilton apportionment method.\nProof. Note that ‖ · ‖1,max and ‖ · ‖max are equivalent for p = 1. Recall that s∗j denotes the target number of seats for party j. Let A be a committee of size k and let Rj(A) = k rj(A) be the number of members of A that belong to party j. Since |Rj(A) − s∗j | = k|r\nj(A) − πj |, we need to show that the following three assertions are equivalent:\n1. A minimizes ∑ j |R j(A) − s∗j |.\n2. A minimizes maxj |Rj(A) − s∗j |.\n3. A is a Hamilton committee.\nWe first show 1 ⇒ 3. Assume A is not a Hamilton committee: then there exists an attribute value (party) that receives strictly more or strictly less seats than it would receive according to the Hamilton method. Naturally, there must also exist an attribute that receives strictly less or strictly more seats, respectively. Formally, this means that there are two attribute values (parties), say 1 and 2, such that the target number of seats for parties 1 and 2 are s∗1 = p + α1 and s ∗ 2 = q + α2, with p, q integers and 1 > α2 > α1 ≥ 0, and such that either R1(A) ≥ p + 1 and R2(A) ≤ q. We have ∑\nj |R j(A) − πj | =\n∑\nj 6=1,2 |R j(A) − s∗j | + |R 1(A) − s∗1| +\n|R2(A) − s∗2| ≥ ∑ j 6=1,2 |R j(A) − s∗j | + (1 − α1) + α2. Consider the committee A ′ obtained from A by giving one less seat to 1 and one more to 2.\n• If R1(A) > p + 1 then ∑ j |R j(A) − s∗j | − ∑ j |R j(A′) − s∗j | = |R 1(A) − s∗1| − |R 1(A′) − s∗1| +\n|R2(A)− s∗2| − |R 2(A′)− s∗2| ≥ 1 + (1− α2)− α2 > 0.\n• If R2(A) < q then similarly, ∑ j |R j(A)− s∗j | − ∑ j |R j(A′)− s∗j | > 0.\n• IfR1(A) = p+1 andR2(A) = q then we have ∑ j |R j(A)−s∗j | = ∑ j 6=1,2 |R j(A)−s∗j |+(1−α1)+α2\nand ∑ j |R j(A′)−s∗j | = ∑ j 6=1,2 |R j(A′)−s∗j |+(1−α2)+α1, hence ∑ j |R j(A)−s∗j |− ∑ j |R j(A′)− s∗j | = 2(α2 − α1) > 0.\nIn all three cases, A does not minimize ∑ j |R j(A) − s∗j | and is therefore not an optimal committee for\n‖ · ‖1, ∑.\nWe now show 2 ⇒ 3. Call a party i lucky if Ri(A) > s∗i and unlucky if R i(A) < s∗i . Then we\nhave maxi |Ri(A) − s∗i | = max(0,max{R i(A) − s∗i |i lucky},max{s ∗ i − R i(A)|i unlucky}). Let, without loss of generality, 1 be the lucky party with the highest value (if there are several such parties, we take arbitrary one of them) Ri(A) − s∗i and 2 be the unlucky party with the highest value s ∗ i − R\ni(A). Assume A is not a Hamilton committee: then 2 had a higher remainder than 1 before 1 got her last seat, that is, R2(A) − s∗2 > (R 1(A) − 1) − s∗1. Let A ′ be the committee A′ obtained from A by giving one less seat to 1 and one more to 2: then either A′ is a Hamilton committee, or it is not, and in this case we repeat the operation until we get a Hamilton committee A∗. Because maxj |Rj(A∗)− s∗j | < maxj |R\nj(A)− s∗j |, A is not an optimal committee for ‖ · ‖max.\nIt remains to be shown that if A is a Hamilton committee then if is both optimal for ‖·‖1,max and ‖·‖max. If there is a unique Hamilton-optimal committee then this follows immediately from 1 ⇒ 3 and 2 ⇒ 3. Assume there are several Hamilton-optimal committees A1, . . . , Aq . Then there are q parties, w.l.o.g.,\n1, . . . q, with equal remainders α ∈ [0, 1), that is, s∗1 = p1 + α, . . . , s ∗ q = pq + α, and the Hamilton-optimal committees differ only in the choice if those of these q parties to give they give an extra seat. We easily check that for any two A,A′ of these committees we have ‖A‖1,max = ‖A′‖1,max and ‖A‖max = ‖A′‖max. ✷\nTherefore, our model can be seen as a generalization of the Hamilton apportionment method to more than attribute. Note that our model can easily extend other largest remainder methods, and our results would be easily adapted. Interestingly, when p ≥ 2, our three criteria no longer coincide. However, for binary domains, ‖ · ‖1 and ‖ · ‖1,max coincide, since ∑ j=1,2 |r j i (A)− π j i | = 2maxj=1,2 |r j i (A)− π j i |.\nProposition 2\n1. For each p ≥ 3 and binary domains, optimal subsets for ‖ · ‖1 and ‖ · ‖max may be disjoint, even for k = 2.\n2. For each p ≥ 3, optimal subsets for ‖ · ‖max and ‖ · ‖1,max can be disjoint.\n3. For each p ≥ 2, if at least one attribute has 4 values, then optimal subsets for ‖ · ‖1 and ‖ · ‖1,max can be disjoint.\n4. For p = 2 and binary domains, optimal subsets for ‖ · ‖1 and ‖ · ‖max may differ.\nProof. We prove point 1 for p = 3 (the proof extends easily to p > 3 by adding attributes on which all items, and the target, agree). We have four candidates: two (A and B) with attribute vectors (x21, x 1 2, x 1 3), and two (C and D) with (x11, x 2 2, x 2 3). The target distribution is π 1 i = 0 and π 2 i = 1 for i ∈ {1, 2, 3}. The ‖ ·‖max-optimal committees are {A,C}, {A,D}, {B,C} and {B,D}. The ‖ · ‖1-optimal committee is {C,D}. For Point 2: because optimal subsets for ‖ · ‖1 and ‖ · ‖1,max coincide for binary domains, Point 1 implies that optimal subsets for ‖ · ‖max and ‖ · ‖1,max can be disjoint. The counterexample extends easily to nonbinary domains.\nFor Point 3: Let there be two attributes X1 with values x11, x 2 1, x 3 1, x 4 1 and X2 with values x 1 2, x 2 2; four\ncandidates: A with value vector (x11, x 2 2), B with value vector (x 2 1, x 2 2), C with value vector (x 3 1, x 1 2), and D with value vector (x41, x 1 2); k = 2; and π = (0.5, 0.5, 0, 0) for X1 and (0.9, 0.1) for X2. The optimal committees for ‖ · ‖1 are all pairs except {C,D} (with loss 1.8) while the optimal committee for ‖ · ‖1,max is {C,D} (with loss 0.6). Next, we show that ‖ · ‖max and ‖ · ‖1,max can be disjoint. The counterexample extends easily to more attributes and more values.\nFor Point 4, let k = 2, three candidates A, B and C with value vectors (x11, x 1 2), (x 1 1, x 1 2) and (x 2 1, x 2 2);\nand π11 = 1, π 2 1 = 0, π 1 2 = 0, and π 2 2 = 1. {A,B}, {A,C} and {B,C} are all ‖ · ‖1-optimal, but only {A,C} and {B,C} are ‖ · ‖max-optimal. ✷\nThese negative results come from the constraints imposed by the candidate database, which prevent the selection on the different attributes to be done independently. In the example of the proof of point 1, for instance, since all items with the value x12 for X2 have value x 1 3 for X3, selecting q items with X2 = x 1 2 implies selecting q items with X3 = x13. However, if the database is sufficiently diverse so that no such constraints exist, the optimization can be done separately on each attribute. This is captured by the following notion.\nDefinition 5 A candidate database C satisfy the Full Supply (FS) property with respect to k if for any ~x ∈ D there are at least k candidates in C associated with value vector ~x.\nThe candidate database of Example 1 does not satisfy FS, even for k = 1, because there is not a single candidate with group C and age S. If we ignore attributes group and affiliation, then we are left with 2 (resp., 3, 2, 3) candidates with value vector FJ (resp. MJ , FS, MS): the reduced database satisfies FS for k ∈ {1, 2}.\nProposition 3 Let (X,C, k) be an optimal committee selection problem. If C satisfies FS w.r.t. k, then the following statements are equivalent:\n• A is an optimal committee for ‖ · ‖1\n• A is an optimal committee for ‖ · ‖1,max\n• for any attribute Xi, A is a Hamilton committee for the single-attribute problem ({Xi}, D↓Xi , πi, k), where D↓Xi is the projection of D on {Xi}.\nMoreover, any ‖ ·‖1 (and ‖ ·‖1,max) optimal committee is optimal for ‖ ·‖max. (The converse does not always hold.)\nProof. For each attribute Xi and value x j i ∈ Di, let R j i be the number of seats with value x j i given by the Hamilton method for the single-attribute problem ({Xi}, D↓Xi , πi, k). For all j = 1, . . . , k, let ti(j) = min{l | R 1 i + . . . + R l−1 i < j and R 1 i + . . . + R l i ≥ j}. Then take as item cj any item in the database with value vector (xt1(j)1 , . . . , x tp(j) p ), and remove it from the database; the full supply assumption guarantees that it will always be possible to find such an item. Let A = {c1, . . . , ck}; it is easy to check that A is an optimal committee for ‖ · ‖1 and for ‖ · ‖1,max. ✷\nTo illustrate the constructive proof, consider 2 attributes X1 with 3 values x11, x 2 1, x 3 1, and X2 with 2 values\nx12, x 2 2; k = 4; and R 1 1 = 2, R 2 1 = 0, R 3 1 = 2, R 1 2 = 3, R 2 2 = 1. Then t1(1) = t1(2) = 1, t1(3) = t1(4) = 3, t2(1) = t2(2) = t2(3) = 1, t2(4) = 2, which leads to choose c1 with value vector (x11, x 1 2), c2 with vector (x11, x 1 2), c3 with vector (x 3 1, x 1 2), and c4 with vector (x 3 1, x 2 2)."
    }, {
      "heading" : "5 Properties of multi-attribute proportional representation",
      "text" : "Several properties of apportionment methods have been studied, starting with Balinski and Young [1]. We omit their definition in the single-attribute case and directly give their generalizations to our more general model. Let A be any optimal committee for some criterion given π, C and k. We recall that Rji (A) = k r j i (A) denotes the number of elements of A with the attribute Xi equal to x j i .\n• Non-reversal: for any attribute Xi, and attribute values x j i , x\nj′ i , if π j i > π j′ i then r j i (A) ≥ r j′ i (A).\n• Exactness and respect of quota: for all i, either Rji = ⌊kπ j i ⌋ or R j i = ⌈kπ j i ⌉.\n• Population monotonicity (with respect to Xi): consider π and ρ such that (a) π j i > ρ j i , (b) for all\nj′, j′′ 6= j, π j′′ i\nπj ′\ni\n= ρj\n′′\ni\nρj ′\ni\n, and (c) for all i′ 6= i and all j, ρji′ = π j i′ . Then there is an optimal committee B\nfor ρ such that rji (A) ≥ r j i (B).\n• House monotonicity: let B be an optimal committee for π, C and k′ > k. Then for all i, j, rji (B) ≥ rji (A). 4\nIn the single-attribute case, it is known for long that the Hamilton method satisfies all these properties except house monotonicity (this failure of house monotonicity is better known under the name Alabama paradox).\nWe start by noticing that if a property fails to be satisfied in the single-attribute case, a fortiori it is not satisfied in the multi-attribute case. As a consequence, house monotonicity is not satisfied, even under the FS assumption. We now consider the other properties.\n4Some other properties, such as consistency, seem more difficult to generalize to the multi-attribute case. Also, properties that deal with strategy proofness issues, such as resistance to party merging or party splitting, are less relevant in our setting than for political elections and we omit them.\nProposition 4 Under the full supply assumption, non-reversal, exactness and respect of quota, and population monotonicity are all satisfied, for any of our loss functions. In the general case, non-reversal, exactness and respect of quota are not satisfied. If Xi is a binary variable, and for ‖ · ‖1, population monotonicity with respect to Xi is satisfied; however it is not satisfied in the general case.\nProof. Under FS, the result easily comes from Proposition 3 and the fact that the property holds in the single-attribute case.\nIn the general case, we give counterexamples. For exactness and respect of quota, we have two binary attributes, and two items a, b with value vectors (x21, x 2 2) and (x 1 1, x 1 2), k = 1, π defined as π 1 1 = 0, π 2 1 = 1, π12 = 1, π 2 2 = 0. The optimal committee is either {a} or {b}, and does not respect quota even though all values kπji are integers. For non-reversal we have two binary attributes and six items: a, b, c, each with vector (x11, x 1 2) and d, e, f , each with vector (x21, x 2 2). We have a target distribution π defined as follows: π 1 1 = 0.35, π 2 1 = 0.65, π 1 2 = 1, π22 = 0. We set k = 3. The optimal committees for ‖ · ‖1 and ‖ · ‖1,max are {a, b, c} and all triples made up from two items out of {a, b, c} and one out of {d, e, f}. The optimal committees for ‖ · ‖max are all triples made up from two items out of {a, b, c} and one out of {d, e, f}. In all cases, for all optimal committees A we have r11(A) > r 2 1(A) although π 1 1 < π 2 1 .\nNow, we prove that population monotonicity holds for binary domains and for ‖ · ‖1. Consider a binary attribute Xi, with Di = {x0i , x 1 i }.\nAssume that ρ0i > π 0 i (and ρ 0 i > π 0 i ), and that for all i ′ 6= i we have ρi′ = πi′ . Let A be an optimal committee for π and, for the sake of contradiction, assume that for all optimal committees B for ρ we have r0i (B) < r 0 i (A). Let B be such a committee. The proof is a case by case study, with six cases to be considered: (C1) r0i (B) ≤ π 0 i < ρ 0 i ≤ r 0 i (A); (C2) π 0 i ≤ r 0 i (B) ≤ ρ 0 i ≤ r 0 i (A); (C3) π 0 i < ρ0i ≤ r 0 i (B) < r 0 i (A); (C4) r 0 i (B) ≤ π 0 i ≤ r 0 i (A) ≤ ρ 0 i ; (C5) π 0 i ≤ r 0 i (B) < r 0 i (A) ≤ ρ 0 i ; and (C6) r0i (B) < r 0 i (A) ≤ π 0 i < ρ 0 i .\n• Case 1: r0i (B) ≤ π 0 i < ρ 0 i ≤ r 0 i (A). In this case we have r 1 i (B) ≥ π 1 i > ρ 1 i ≥ r 1 i (A) and the\nfollowing holds:\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (π 0 i − r 0 i (B)) + (r 1 i (B)− π 1 i ) (1)\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (ρ 0 i − r 0 i (B)) + (r 1 i (B)− ρ 1 i )\n+π0i − π 1 i − ρ 0 i + ρ 1 i (2)\n= ‖r(B) − ρ‖1 + 2(π 0 i − ρ 0 i ) (3) < ‖r(A) − ρ‖1 + 2(π 0 i − ρ 0 i ) (4) = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − ρ 0 i ) + (ρ 1 i − r 1 i (A)) + 2(π 0 i − ρ 0 i ) (5)\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − π 0 i ) + (π 1 i − r 1 i (A))\n+π0i − π 1 i − ρ 0 i + ρ 1 i + 2(π 0 i − ρ 0 i ) (6)\n= ‖r(A) − π‖1 + 4(π 0 i − ρ 0 i ) (7) ≤ ‖r(A) − π‖1 (8)\n(4) comes from the fact that A is not optimal for ρ. Since, there is one strong inequality in the sequence, we imply that A is not optimal for π, a contradiction.\n• Case 2: π0i ≤ r 0 i (B) ≤ ρ 0 i ≤ r 0 i (A).\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (r 0 i (B)− π 0 i ) + (π 1 i − r 1 i (B))\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (ρ 0 i − r 0 i (B)) + (r 1 i (B)− ρ 1 i )\n+2r0i (B)− π 0 i − ρ 0 i − 2r 1 i (B) + π 1 i + ρ 1 i\n= ‖r(B) − ρ‖1 + 4r 0 i (B)− 2π 0 i − 2ρ 0 i < ‖r(A) − ρ‖1 + 4r 0 i (B)− 2π 0 i − 2ρ 0 i = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − ρ 0 i ) + (ρ 1 i − r 1 i (A)) + 4r 0 i (B)− 2π 0 i − 2ρ 0 i\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − π 0 i ) + (π 1 i − r 1 i (A))\n+π0i − ρ 0 i − π 1 i + ρ 1 i + 4r 0 i (B) − 2π 0 i − 2ρ 0 i\n= ‖r(A) − π‖1 + 4r 0 i (B)− 4ρ 0 i ≤ ‖r(A) − π‖1\nAgain we obtain a contradiction.\n• Case 3: π0i < ρ 0 i ≤ r 0 i (B) < r 0 i (A).\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (r 0 i (B)− π 0 i ) + (π 1 i − r 1 i (B))\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (r 0 i (B) − ρ 0 i ) + (ρ 1 i − r 1 i (B))\n−π0i + ρ 0 i + π 1 i − ρ 1 i\n= ‖r(B) − ρ‖1 − 2π 0 i + 2ρ 0 i < ‖r(A) − ρ‖1 − 2π 0 i + 2ρ 0 i = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − ρ 0 i ) + (ρ 1 i − r 1 i (A))− 2π 0 i + 2ρ 0 i\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − π 0 i ) + (π 1 i − r 1 i (A))\n+π0i − ρ 0 i − π 1 i + ρ 1 i − 2π 0 i + 2ρ 0 i\n= ‖r(A) − π‖1\n• Case 4: r0i (B) ≤ π 0 i ≤ r 0 i (A) ≤ ρ 0 i .\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (π 0 i − r 0 i (B)) + (r 1 i (B)− π 1 i )\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (ρ 0 i − r 0 i (B)) + (r 1 i (B)− ρ 1 i )\nπ0i − ρ 0 i − π 1 i + ρ 1 i\n= ‖r(B) − ρ‖1 + 2π 0 i − 2ρ 0 i < ‖r(A) − ρ‖1 + 2π 0 i − 2ρ 0 i = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (ρ 0 i − r 0 i (A)) + (r 1 i (A)− ρ 1 i ) + 2π 0 i − 2ρ 0 i\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − π 0 i ) + (π 1 i − r 1 i (A))\n−2r0i (A) + 2r 1 i (A) + π 0 i + ρ 0 i − π 1 i − ρ 1 i + 2π 0 i − 2ρ 0 i\n= ‖r(A) − π‖1 − 4r 0 i (A) + 4π 0 i ≤ ‖r(A) − π‖1\n• Case 5: π0i ≤ r 0 i (B) < r 0 i (A) ≤ ρ 0 i .\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (r 0 i (B)− π 0 i ) + (π 1 i − r 1 i (B))\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (ρ 0 i − r 0 i (B)) + (r 1 i (B)− ρ 1 i )\n+2r0i (B)− 2r 1 i (B)− π 0 i − ρ 0 i + π 1 i + ρ 1 i\n= ‖r(B) − ρ‖1 + 4r 0 i (B)− 2π 0 i − 2ρ 0 i < ‖r(A) − ρ‖1 + 4r 0 i (B)− 2π 0 i − 2ρ 0 i = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (ρ 0 i − r 0 i (A)) + (r 1 i (A)− ρ 1 i ) + 4r 0 i (B)− 2π 0 i − 2ρ 0 i\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (r 0 i (A) − π 0 i ) + (π 1 i − r 1 i (A))\n+4r0i (B)− 2r 0 i (A) + 2r 1 i (A) + π 0 i + ρ 0 i − π 1 i − ρ 1 i − 2π 0 i − 2ρ 0 i\n= ‖r(A) − π‖1 + 4r 0 i (B)− 4r 0 i (A) ≤ ‖r(A) − π‖1\n• Case 6: r0i (B) < r 0 i (A) ≤ π 0 i < ρ 0 i .\n‖r(B)− π‖1 = ∑\ni′ 6=i\n∑ j |r j i′(B)− π j i′ |+ (π 0 i − r 0 i (B)) + (r 1 i (B)− π 1 i )\n= ∑\ni′ 6=i\n∑ j |r j i′(B)− ρ j i′ |+ (ρ 0 i − r 0 i (B)) + (r 1 i (B)− ρ 1 i )\n+π0i − ρ 0 i − π 1 i + ρ 1 i\n= ‖r(B) − ρ‖1 + 2π 0 i − 2ρ 0 i < ‖r(A) − ρ‖1 + 2π 0 i − 2ρ 0 i = ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (ρ 0 i − r 0 i (A)) + (r 1 i (A)− ρ 1 i ) + 2π 0 i − 2ρ 0 i\n= ∑\ni′ 6=i\n∑ j |r j i′(A) − ρ j i′ |+ (π 0 i − r 0 i (A)) + (r 1 i (A) − π 1 i )\n−π0i + ρ 0 i + π 1 i − ρ 1 i + 2π 0 i − 2ρ 0 i\n= ‖r(A) − π‖1\nFinally, we give an example showing that population monotonicity does not hold in the general case for ‖ ·‖1. First, we describe the set of attributes. We have one distinguished attribute X1 with 5 possible values x11, x21, x 3 1, x 4 1, and x 5 1 and 64 groups of binary attributes, indexed with the pairs of integers i, j ∈ {1, 2, 3, 4}. These groups of attributes are denoted as X(1,1), X(1,2), . . .X(1,8), X(2,1), . . .X(8,8). Each group contains some large number λ of indistinguishable attributes, each having the same set of possible values {x12, x 2 2}. We have 16 alternatives A1, A2, . . . , A8, and B1, B2, . . . B8, and our goal is to select a subset of k = 8 of them.\nWe start with describing these alternatives on binary attributes: each alternative Ai has the value x12 on all attributes X(i,·) and the value x22 on all the remaining ones; each alternative Bi has the value x 1 2 on all attributes X(·,i) and the value x22 on all the remaining ones. For the binary attributes we set the target probabilities to π12 = 1/8 and π 2 2 = 7/8. Due to this construction, we see that the only two subsets that perfectly agree with target distributions on each of binary attributes are A = {A1, A2, . . . , A8} and B = {B1, B2, . . . , B8}. Indeed, every subset S includingAi andBj , would have r(S) ≥ 1/4 at least for one group of attributes X(i,j). Since λ is large, we infer that, independently what happens on the distinguished attribute X1, the only possible winning committee is either A = {A1, A2, . . . , A8} or B = {B1, B2, . . . , B8}.\nNext, let us describe what happens on the attribute X1. The vector 〈r j i (A)〉 is equal to 〈r j i (A)〉 = (1/2, 0, 1/2, 0, 0). For the committee B, we have 〈rji (B)〉 = (1/4, 1/4, 1/4, 1/8, 1/8), and the vector of target distributions for X1 is equal π1 = (0, 0, 3/8 + ǫ, 5/8 − ǫ, 0). We can see that ‖r(A) − π‖1 = 1/2+1/8−ǫ+5/8−ǫ = 1.25−2ǫ. Since, ‖r(B)−π‖1 = 1/4+1/4+1/8+ǫ+4/8−ǫ+1/8 = 1.25, we get that A is a winning committee. However, if we modify the target fractions so that ρ1 = (1/4, 0, 9/32 + ǫ1, 15/32 − ǫ2, 0), we will get ‖r(A) − ρ‖1 = 1/4 + 7/32 − ǫ1 + 15/32 − ǫ2 = 30/32 − ǫ1 − ǫ2 and ‖r(B) − ρ‖1 = 1/4 + 1/32 + ǫ1 + 11/32− ǫ2 + 1/8 = 24/32 + ǫ1 − ǫ2, thus, B is winning according to ρ. However, B has lower representation of x11 than A, and ρ was obtained from π, by increasing the fraction of π11 . This completes the proof.\n✷\nOther properties, specific to multi-attribute proportional representation, could also be considered, for instance by adapting properties studied by Elkind et al. [10]. One such property is candidate monotonicity (if we add more candidates to the database, the new committee must be at least as good as the old one). We leave this for further research."
    }, {
      "heading" : "6 Computing Optimal Committees",
      "text" : "In this section we now investigate the computation complexity of optimal committees. We start with observing that the problem of deciding whether there is a perfect committee for a given instance is NP-complete.\nProposition 5 Given set of attributes X , a set of candidates C, a vector of target distributions π, an integer k, deciding whether there is a perfect committee is NP-complete.\nProof. Membership is straightforward. Hardness follows by reduction from the NP-complete problem EXACT COVER WITH 3-SETS, or X3C [12]. Let I = 〈X,S〉 with X = {x1, . . . , x3k} and S = {S1, . . . , Sn}\nwith |Si| = 3 for each i. I is a positive instance of X3C iff there is a collection S ′ ⊆ S with |S ′| = k and ∪{S|S ∈ S ′} = X . Define the following instance of PERFECT COMMITTEE: let X1, . . . , X3k be 3k binary attributes, and let C consist of m candidates c1, . . . , cm with Xi(cj) = 1 if xi ∈ Sj and Xi(cj) = 0 if xi /∈ Sj . Finally, for each i, πi(0) = k−1k and πi(1) = 1 k . We want a committee of size k. A = {ci1 , . . . , cik} is perfect for π if for each Xi, there is exactly one j ∈ {1, . . . , k} such that Xi(cij ) = 1, which is equivalent to saying that for each xi, there is exactly one Sj ∈ {Si1 , . . . , Sik} such that xi ∈ Sj . Thus, there is a perfect committee for π and C if and only if I is a positive instance. ✷\nThis simple result implies that the decision problem associated with finding an optimal committee (is there a committee whose loss is less than θ?) is NP-hard for all loss functions. However, if the number of attributes p is fixed, the problem is solvable in polynomial time.\nProposition 6 Let p be a constant integer. Given set of p attributes X , a set of candidates C, a vector of target distributions π, an integer k, deciding whether there is a perfect committee is solvable in polynomial time.\nProof. Let q = maxi qi. Each candidate can be viewed as a vector of values indexed with the attributes; there are qp such possible vectors. Since the size of the input is at least q, the number of distinct candidates is bounded by the polynomial function of the size of the input. The rest of the proof is the same as the proof of Theorem 4. ✷"
    }, {
      "heading" : "6.1 Approximating optimal committees",
      "text" : "A natural approach to alleviate the NP-hardness of the problem is to analyze whether it can be well approximated. Before proceeding to presentation of our approximation algorithms, the core technical contribution of this paper, we define the notion of approximability used in our analysis.\nDefinition 6 An algorithm A is an α-additive-approximation algorithm for OPTIMALREPRESENTATION if for each instance I of OPTIMALREPRESENTATION it holds that |f(π, r(A)) − f(π, r(A∗))| ≤ α, where A is the committee returned by A for I , and A∗ an optimal committee.\nIt is easy to observe that for binary domains it holds that ‖π, r(A)‖1 = 2‖π, r(A)‖1,max. This implies that for binary domains, an α-additive-approximation algorithm for ‖ · ‖1 is an α2 -additive-approximation algorithm for ‖ · ‖1,max.\nIn this paper we mostly present computational results for binary domains. However, this assumption is not as restrictive as it may seem—every instance of the OPTIMALREPRESENTATION problem can be transformed to a new instance with binary domains in the following way:\n• Xnew = {Xij | i = 1, . . . , p, j = 1, . . . , |Di|}.\n• Cnew = {c ′ l | l = 1, . . . ,m}.\n• πnew = (πi,j | 1 ≤ i ≤ p, 1 ≤ j ≤ |Di|), where for all i = 1, . . . ,m, j = 1, . . . , p and j = 1, . . . , |Di|, π0i,j = π j i and π 1 i,j = 1− π j i .\nThe following lemma shows how to obtain approximation guarantees for arbitrary domains having guarantees for the problem transformed to binary domains.\nLemma 1 For a given committee A and target distribution π, let Anew and πnew denote the committee and target distributions obtained as above. The following holds:\n1. ‖πnew, r(Anew)‖1 = 2‖π, r(A)‖1.\n2. 1 ≤ ‖πnew,r(Anew)‖1,max‖π,r(A)‖1,max ≤ maxi |Di|.\n3. max(πnew, r(Anew)) = max(π, r(A)).\nProof. We prove the first equality—the proof for the other two is similar.\n‖π, r(A)‖1 = ∑\ni,j\n|rji (A)− π j i | =\n∑\ni,j\n∣ ∣ ∣ ∣ ∣ |{c ∈ A : Xi(c) = x j i}| k − πji ∣ ∣ ∣ ∣ ∣\n= ∑\ni,j\n∣ ∣ ∣ ∣ |{c ∈ Anew : Xi,j(c) = 1}|\nk − π1i,j\n∣ ∣ ∣ ∣\n= 1\n2\n∑\ni,j\n(∣\n∣ ∣ ∣\n|{c ∈ Anew : Xi,j(c) = 1}|\nk − π1i,j\n∣ ∣ ∣ ∣ + ∣ ∣ ∣ ∣ |{c ∈ Anew : Xi,j(c) = 0}|\nk − π0i,j\n∣ ∣ ∣ ∣ )\n= 1\n2\n∑\ni,j\n∑\nℓ∈{0,1}\n|rℓi,j(A)− π ℓ i,j | =\n1 2 ‖πnew, r(Anew)‖1.\n✷\nLemma 1 has interesting implications—first shows that the transformed instance has the has the same perfect committees as the original instance; then it shows how to obtain additive approximation guarantees for arbitrary domains having guarantees for the problem restricted to binary domains, for different loss functions."
    }, {
      "heading" : "6.2 Approximation algorithms",
      "text" : "In this section we show an approximation algorithm for the OPTIMALREPRESENTATION problem. The algorithm is given in Figure 1 and is parameterized by an integer value ℓ. It starts with a random collection of k samples and, in each step, it looks whether it is possible to replace some ℓ items from the current solution with some other ℓ items to obtain a better solution. The algorithm continues until it cannot find any pair of sets of ℓ items that improves the current solution. As we show now, the approximation guarantees depend on the value of the parameter ℓ.\nTheorem 1 For binary domains natural distributions, and for the ‖ · ‖1 loss function, the local search algorithm defined on Figure 1 with ℓ = 1 is a |X |-additive-approximation algorithm for OPTIMALREPRESENTATION.\nProof. Let A∗ denote an optimal solution for a given instance I of the problem of finding a perfect committee. Let A ∈ Sk(C) denote the set returned by the local search algorithm from Figure 1. From the condition in the “while” loop, we know that there exist no c ∈ C and a ∈ A such that ‖π, r(A)‖1 > ‖π, r((A\\{a})∪{c})‖1.\nNow, let Xex ⊆ X denote the set of all attributes for which A achieves exact match with π, that is, such that for each Xi ∈ Xex, we have that r1i (A) = π 1 i and r 2 i (A) = π 2 i .\nLet us consider the procedure consisting in taking the items from A \\ A∗ and, one by one, replace them with arbitrary items from A∗ \\ A. This procedure, in |A \\ A∗| steps, transforms A into an optimal solution A∗. We now estimate the total gain g induced by this procedure. For each item a ∈ A \\A∗, by a′ ∈ A∗ \\ A we denote the item which was taken to replace a in the procedure. For each attribute Xi ∈ X we define the gain gi(a, a′) of replacing a by a′ as:\ngi(a, a ′) =\n∑\nj∈{1,2}\n(\n|rji (A)− π j i | − |r j i (A \\ {a} ∪ {a ′})− πji | ) .\nWe now extend this definition to sets of k candidates:\ngi(B,B ′) =\n∑\nj∈{1,2}\n(\n|rji (A)− π j i | − |r j i ((A \\ B) ∪ B ′)− πji | ) .\nIf Xi ∈ Xex, then ri(A) = πi, and so the replacement cannot improve the quality of the solution relatively to Xi, hence\n∑\ni∈Xex\ngi(A \\A ∗, A∗ \\A) ≤ 0. (1)\nNote that gi(a, a′) ∈ {− 2k , 0, 2 k}. Moreover, for each attribute Xi /∈ Xex there are two possible cases:\n1. rji (A) > π j i and each exchange of candidate that results in a negative gain increases r j i (A).\n2. rji (A) < π j i and each exchange that results in a negative gain decreases r j i (A).\nIntuitively, 1. and 2. mean that for attributes outside of Xex, the negative gains cumulate. Formally, for each X /∈ Xex:\ngi(A \\A ∗, A∗ \\A) ≤\n∑\na∈A\\A∗\ngi(a, a ′). (2)\nFrom the condition in the “while” loop, we have that for each a ∈ A \\A∗: ∑ i gi(a, a ′) ≤ 0, and so:\n∑\ni\n∑\na∈A\\A∗\ngi(a, a ′) ≤ 0. (3)\nWe now give the following sequence of inequalities:\ng = ∑\ni\ngi(A \\A ∗, A∗ \\A)\n= ∑\ni∈Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\ni/∈Xex\ngi(A \\A ∗, A∗ \\A)\n≤ ∑\ni/∈Xex\ngi(A \\A ∗, A∗ \\A) ≤\n∑\ni/∈Xex\n∑\na∈A\\A∗\ngi(a, a ′)\n≤ − ∑\ni∈Xex\n∑\na∈A\\A∗\ngi(a, a ′)\n≤ |Xex| · k · 2\nk = 2|Xex|. (4)\nFinally, for each attribute Xi ∈ Xex the loss relative to Xi, i.e., |r0i − π 0|+ |r1i − π 1|, is at most 2. Thus, we get g ≤ 2(|X | − |Xex|), which leads to g ≤ |X |. ✷\nIs the bound |X | from Theorem 1 a good result? One way to interpret this result is to observe that a solution that for half of the attributes gives exact match, and for other half is arbitrarily bad, is an |X |- approximate solution. We do not know whether the bound |X | is reached, but we now show that a lower bound on the error made by the algorithm with ℓ = 1 is 23 |X |.\nExample 2 Consider 3p binary attributes X1, . . . , X3p, 4ℓ candidates C = {a1, . . . , a2ℓ, b1, . . . , b2ℓ}, and let k = 2ℓ. For each i ≤ p, we have: for j ≤ ℓ,Xi(aj) = 1 and Xi(bj) = 1; for j > ℓ,Xi(aj) = 0 and Xi(bj) = 0. For each i such that p < i ≤ 2p we have: for j ≤ ℓ,Xi(aj) = 1 and Xi(bj) = 0; for j > ℓ,Xi(aj) = 0 and Xi(bj) = 1. For i > 2p we have: for each j,Xi(aj) = 1 and Xi(bj) = 0. Finally, for i ≤ 2p let π0i = π 1 i = 1 2 , and for i > 2p let π 0 i = 1−π 1 i = 1. It can be easily checked that B = {b1, . . . , b2ℓ} is a perfect committee. Now, A = {a1, . . . , a2ℓ} is locally optimal. To check this, we consider two cases: in the first case, where (r ≤ ℓ and q ≤ ℓ) or (r > ℓ and q > ℓ), replacing ar with bq does not change the distance to the target distribution on each of the first p attributes, increases the distance on each of the next p attributes and decreases the distance on each of the last p attributes. For the second case, where (r ≤ ℓ and q > ℓ) or (r > ℓ; q ≤ ℓ), the line of reasoning is similar. Finally, ‖π, r(A)‖1 = 2p = 23 |X |.\nA better approximation bound can be obtained with ℓ = 2:\nLemma 2 Consider n buckets X1, . . . , Xn, such that in the i-th bucket Xi there are xi white balls and yi black balls. Let A denote the number of pairs of balls such that both balls in the pair belong to the same bucket and are of different color. Let us consider the procedure in which one iteratively selects a bucket and takes out two balls with different colors from the selected bucket. The procedure ends after B steps, when no further steps are possible (in each bucket, either there are no balls anymore, or all balls have the same color). It holds that A ≥ B 2\nn .\nProof. Without loss of generality let us assume that for each i: xi ≤ yi. Thus, B = ∑ i xi and\nA = ∑ i xiyi ≤ ∑ i x 2 i . The inequality ∑ i x 2 i ≥\n( ∑\ni xi)\n2\nn follows from Jensen’s inequality applied to the quadratic function. ✷\nLemma 3 Let xi, yi, Ai, 1 ≤ i ≤ n, be real values satisfying the following constraints:\n1. xi ≥ Ai\n2n−2(i−1) , for each 1 ≤ i ≤ n,\n2. Ai ≥ Ai−1 − 2xi−1, for each 2 ≤ i ≤ n,\n3. yi ≥ xi\n2n−2(i−1)−1 , for each 1 ≤ i ≤ n.\nThen:\nn ∑\ni=1\nyi ≥ |A1| lnn\n4n .\nProof. We can view the set of above inequalities 1, 2, 3 as a linear program with (3n − 1) variables (all xi and yi for 1 ≤ i ≤ n and Ai for 2 ≤ i ≤ q; we treat A1 as a constant) and (3n − 1) constraints. Thus, we know that ∑\ni yi achieves the minimum when each from the above constraints is satisfied with equality.\nWe show by induction that the values xi = A1 2n and Ai = 2n−2(i−1) 2n A1 constitute the solution to the set of equalities that is derived by taking constraints 1, and 2, and treating them as equalities. We can show that\nby induction: It is easy to see that the base step, for i = 1, holds:\nx1 = A1\n2n− 2(i− 1) =\n|A1|\n2n ,\nA1 ≥ 2n− 2(1− 1)\n2n A1.\nLet us assume that from the equalities 1 and 2 taken for i < j, it follows that xi = A12n and Ai = 2n−2(i−1) 2n A1, for i < j. We will show that from equalities 1 and 2 for i = j it follows that xj = A12n andAj = 2n−2(j−1) 2n A1:\nxj = Aj\n2n− 2(j − 1) =\n1 2n− 2(j − 1) · 2n− 2(j − 1) 2n A1 = |A1| 2n ,\nAj = Aj−1 − 2xj−1 = 2n− 2((j − 1)− 1)\n2n A1 − 2\n|A1|\n2n =\n2n− 2(j − 1)\n2n A1.\nFrom constraint 3, treated as equality, we get:\nyi = xi\n2n− 2(i− 1)− 1 =\n|A1|\n2n(2n− 2(i− 1)− 1) .\nThus, we infer that ∑n i=1 yi is minimized when yi = |A1| 2n(2n−2(i−1)−1) . We recall that Hn denotes the n-th harmonic number (Hn = ∑n i=1 1 n ), and that ln(n+ 1) < Hn ≤ 1 + ln(n). As a result we get:\nn ∑\ni=1\nyi ≥ A1 2n\nn ∑\ni=1\n1\n(2n− 2(i− 1)− 1) ≥ A1 2n\nn ∑\ni=1\n1\n2n− 2(i− 1) (5)\n= A1 4n\nn ∑\ni=1\n1\n(n− i+ 1)) = A1 4n Hn ≥ A1 lnn 4n . (6)\n✷\nTheorem 2 For binary domains (|Di| = 2, for each 1 ≤ i ≤ p), natural distributions, and for ‖ · ‖1 loss function, the local search algorithm from Figure 1 with ℓ = 2 is a ln(k/2)2 ln(k/2)−1 ( |X |+ 6|X|k ) -additiveapproximation algorithm for OPTIMALREPRESENTATION.\nProof. In this proof we use similar idea to the proof of Theorem 1, but the proof is technically more involved. As before, byA∗ andA we denote the optimal solution and the solution returned by the local search algorithm, respectively. Similarly to the previous proof, by Xex ⊂ X we denote the set of all attributes for which A achieves exact match with π, i.e.,\nXex = { Xi ∈ X : r 1 i (A) = π 1 i } .\nWe also define the set Xaex ⊂ X of all attributes for which A achieves almost exact match with π, i.e.,\nXaex =\n{\nXi ∈ X : |r 1 i (A)− π 1 i | ≤\n1\nk\n}\n.\nLet qf = |A\\A∗| 2 and q = ⌊qf⌋. Let us rename the items from A \\ A ∗ so that A \\ A∗ = {a1, a2, . . . , a2qf }, and the items from A∗ \\ A, so that A∗ \\ A = {a′1, a ′ 2, . . . , a ′ 2qf\n}. Hereinafter, we follow a convention in which the elements from A∗ \\ A are marked with primes. Renaming of the items that we described above, allows us to the define the following sequence of pairs (a1, a′1), . . . , (a2qf , a ′ 2qf ) in which each element from A \\A∗ is paired with (assigned to) exactly one element from A∗ \\A. For each pair (aj , a′j) and for each attribute Xi we consider what happens if we replace ai in A \\A\n∗ with a′i. One of three scenarios can happen, after such replacement:\n1. The value r0i (A) can increase by 1 k (in such case r 1 i (A) decreases by 1 k ), which we denote by\nXi(aj ↔ a ′ j) = 1,\n2. The value r0i (A) can decrease by 1 k (in such case r 1 i (A) increases by 1 k ), which we denote by\nXi(aj ↔ a ′ j) = −1, or\n3. The value r0i (A) can remain unchanged (in such case r 1 i (A) also remains unchanged), which we denote\nby Xi(aj ↔ a′j) = 0.\nWe follow a procedure which, in q consecutive steps, replaces pairs of items from A \\A∗, with the pairs of items from A∗ \\ A. A pair (ai, aj) is always replaced with (a′i, a ′ j). In other words, when looking for a pair from A∗ \\A to replace (ai, aj) we follow the assignment rule induced by renaming, as described above. The way in which we create pairs within A \\ A∗ for replacement (the way how (ai, aj) is selected in each of q consecutive steps) will be described later. After this whole procedure A can differ from A∗ with at most one element, hence, having distance to the optimal distribution at most equal to |X | 2k . Let us define the sequence of sets Ā1, Ā2, . . . , Āq in the following way: we define Ā1 = A \\ A∗, and we define Āj+1 as Āj after removing the pair from A \\A∗ that was used in replacement in the j-th step of our procedure.\nAs before, for each B ⊆ A \\ A∗ and B′ ⊆ A∗ \\ A, and for each attribute Xi ∈ X we define the gain gi(B,B ′):\ngi(B,B ′) =\n∑\nj∈{1,2}\n(\n|rji (A)− π j i | − |r j i ((A \\B) ∪B ′)− πji | ) .\nSimilarly as in the proof of Theorem 1, we observe that for Xi /∈ Xaex the negative gains cumulate: i.e., that for each sequences of disjoint sets B1, B2, . . . , Bs and B′1, B ′ 2, . . . , B ′ s such that for every 1 ≤ j ≤ s, Bj ⊆ A \\A ∗, B′j ⊆ A ∗ \\A, and |Bj | = |B′j | ≤ 2 we have that:\ngi( ⋃\nj\nBj , ⋃\nj\nB′j) ≤ ∑\nj\ngi(Bj , B ′ j). (7)\nWhy is this the case? If Xi /∈ Xaex, then the distance between A and the target distribution on attribute Xi is at least equal to 2 · 2k . In other words: |r 0 i (A) − π 0 i | ≥ 2 k and |r 1 i (A) − π 1 i | ≥ 2 k . Without loss of generality let us assume that r0i (A) − π 0 i ≥ 2 k . Since each set Bj and each set B ′ j has at most two elements, replacing Bj with B′j can change the distance between A and the target distribution, for each attribute, by at most 2k . Consequently, if gi(Bj , B ′ j) is negative, then it means that replacingBj with B ′ j makes the difference r0i (A)−π 0 i even greater. Thus, each such replacement with the negative gain g causes A to move further from the target distribution by the value g. Naturally, each replacement with the positive gain g causes A to move closer to the target distribution by at most g. Consequently, after the sequence of replacement ∪jBj ↔ B′j the distance on the attribute Xi cannot improve by more than ∑ j gi(Bj , B ′ j).\nIn contrast to the proof of Theorem 1, we note that here we require that Xi /∈ Xaex instead of Xi /∈ Xex— the above observation is not valid if Xi ∈ Xaex even if Xi /∈ Xex.5\nNext, for each Āj , and each attribute Xi ∈ Xex, we define a set Wj of annihilating pairs as:\nWj(Xi) = { ((ax, Xi), (ay, Xi)) : ax ∈ Āj ; ay ∈ Āj ;x < y;Xi(ax ↔ a ′ x) = −Xi(ay ↔ a ′ y) } .\n5 Consider an example in which π1i = 1 k and r1i (A) = 2 k . Let us consider sets B = {b1, b2}, B′ = {b′1, b ′ 2}, C = {c1, c2}, C ′ =\n{c′1, c ′ 2} such that: Xi(c1) = Xi(c2) = Xi(b ′ 1) = Xi(b ′ 2) = d 1 i , and Xi(c ′ 1) = Xi(c ′ 2) = Xi(b1) = Xi(b2) = d 2 i , Thus, we have that:\n• Replacing B with B′ results with r1i (A) = 4 k . • Replacing C with C′ results with r1i (A) = 0. • Replacing B ∪C with B′ ∪ C′ results with r1i (A) = 2 k .\nWe can repeat this reasoning for r2i (A), thus having, gi(B,B ′) = − 4 k , gi(C,C′) = 0 and gi(B ∪ C,B′ ∪ C′) = 0.\n(a1, X4), (a4, X4) ) , ( (a1, X7), (a3, X7) ) }.\nIntuitively, if ((ax, Xi), (ay, Xi)) ∈ Wj , then both replacing ax with a′x and replacing ay with a ′ y move the original set A (i.e., the set before any of the replacements) further from the target distribution for the attribute Xi, but replacing {ax, ay} with {a′x, a ′ y} does not change the distance of A from the target distribution for the attribute Xi. For each j, we set Wj = ∪i∈XexWj(Xi). Let us denote by P the number of annihilated pairs of candidates considered in the process of replacing items from A \\ A∗ with items from A∗ \\ A. Formally, P is the size of the maximal subset W ⊆ W1 composed of disjoint annihilating pairs, i.e., for each i ≤ p, for each ax, and for each ay, if ((ax, Xi), (ay , Xi)) ∈ P then there exists no b 6= ay such that ((ax, Xi), (b,Xi)) ∈ P or ((b,Xi), (ax, Xi)) ∈ P . From Lemma 2, after defining each bucket Xi as containing xi white balls and yi black balls, where xi (respectively, yi) is the number of candidates aj ∈ Ā1 with the value Xi(aj ↔ a′j) equal to 1 (respectively, -1), it follows that W1 ≥ P 2\n|Xex| . The concept of annihilating pairs is explained on\nexample in Table 1. We are now ready to describe the way in which we select pairs from A \\ A∗ in our procedure. In each step j, the pair (aj,1, aj,2) from A \\ A∗ is selected in the following way. For each item a let sj,1(a) be the number of pairs p in Wj such that p = ((a, ·), (·, ·)) or p = ((·, ·), (a, ·)), let aj,1 be such that sj,1(aj) = maxa∈Āj sj,1(a), and let sj,1 = sj,1(aj). Next, for each item b let sj,2(b) be the number of pairs p inWj such that p = ((aj,1, ·), (b, ·)) or p = ((b, ·), (aj,1, ·)), let aj,2 be such that sj,2(b) = maxb∈Āj sj,2(b), and let sj,2 = sj,2(aj,2).\nLet us consider the procedure described above on the example from Table 1. The item a1 belongs to 8 pairs in W1 (a1 belongs to 2 pairs for attribute X1, X2, and X3, and to one pair for attributes X4 and X7), thus: s1,1(a1) = 8. Moreover, s1,1(a2) = 5, s1,1(a3) = 6, and s1,1(a4) = 7. Consequently, a1 will be the item that will replaced with a′1 in the first step: aj,1 = a1 and sj,1 = 8. Further, s1,2(a2) = 2 (there are two annihilating pairs including a1 and a2, i.e.,: ( (a1, X1), (a2, X1) ) and ( (a1, X2), (a2, X2) )\n); similarly: s1,2(a3) = 3, and s1,2(a4) = 3. Thus, an arbitrary of the two items, a3 and a4, say a3, will be the second item that will be replaced with a′3 in the first step. In the second step only two items, a2 and a4, are left, so both will be replaced with a′2 and a ′ 4 in the second step. Nevertheless, let us illustrate our definitions also in the second step of the replacement procedure. The set Ā2 consists of two remaining items: a2 and a4. We have W2 = { ( (a2, X2), (a4, X2) ) , ( (a2, X3), (a4, X3) )\n}. Naturally, s2,1(a2) = s2,1(a4) = s2,2(a2) = s2,2(a4) = 2.\nWe want now to derive bounds on the values sj,1 and sj,2. The following inequalities hold:\n1. sj,1 ≥ 2|Wj |\n2qf−2(j−1) for each 1 ≤ j ≤ q.\nWj contains pairs of items belonging to Āj . Ā1 has 2qf items, and Āj+1 is obtained from Āj by\nremoving two items. Consequently, Āj has 2qf − 2(j − 1) items, and thus, Wj contains pairs of 2qf − 2(j − 1) different items. From the pigeonhole principle it follows that there exists an item that belongs to at least 2|Wj |2qf−2(j−1) pairs. Naturally, we also get the weaker constraint: sj,1 ≥ |Wj | 2qf−2(j−1) .\n2. |Wj | ≥ |Wj−1| − 2sj−1,1 for each 2 ≤ j ≤ q.\nEach item in Wj−1 belongs to at most sj−1,1 pairs (this follows from the definition of sj−1,1). Wj contains all pairs that Wj−1 contained, except for the pairs involving aj−1,1, aj−2,2 (to obtain Āj , we removed these two items from Āj−1). Consequently, Wj is obtained from Wj−1 by removing at most 2sj−1,1 pairs of items.\n3. sj,2 ≥ sj,1\n2qf−2(j−1)−1 for each 1 ≤ j ≤ q.\nIn Wj , there are sj,1 pairs of items involving aj,1. As we noted before, Wj contains pairs of 2qf − 2(j − 1) different items. Thus, in Wj , aj,1 is paired with at most 2qf − 2(j − 1)− 1 items. From the pigeonhole principle it follows that aj,1 must be paired with some item at least\nsj,1 2qf−2(j−1)−1 times.\nFrom Lemma 3 we get that:\nq ∑\nj=1\nsj,2 ≥ |W1| ln q\n4q . (8)\nBefore we proceed further let us make three observations regarding annihilating pairs. First, we note that for each Xi ∈ Xex, and each ax and ay , if the value gi({ax, ay}, {a′x, a ′ y}) is different from (gi(ax, a ′ x) + gi(ay, a ′ y)) than it is greater from (gi(ax, a ′ x) + gi(ay, a ′ y)) by 4 k . We also note that gi({ax, ay}, {a ′ x, a ′ y}) is greater than (gi(ax, a′x) + gi(ay, a ′ y)) if and only if the changes Xi(ax ↔ a ′ x) and Xi(ay ↔ a ′ y) annihilate (this is illustrated in Figure 2). Further, we recall that the value sj,2 counts all attributes for which aj,1 and aj,2 constitute an annihilating pair. Thus, for each 1 ≤ j ≤ q::\n∑\ni∈Xex\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) =\n∑\ni∈Xex\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n) + sj,2 4\nk (9)\nOur second observation is similar in spirit to the first one. We note that for each Xi ∈ Xex:\ngi(A \\A ∗, A∗ \\A)−\n∑\na∈A\\A∗\ngi(a, a ′) = the number of pairs that annihilated for Xi ×\n4 k .\nThe above equality is illustrated in Figure 3. As a consequence, we get that:\n∑\nXi∈Xex\n(\ngi(A \\A ∗, A∗ \\A)−\n∑\na∈A\\A∗\ngi(a, a ′) ) = the number of pairs that annihilated × 4\nk .\nWe recall that after the replacement procedure A can differ from A∗ with at most one element, hence, having distance to the optimal distribution at most equal to |X | 2k . Thus:\n∑\nXi∈Xex\n(\ngi(A \\A ∗, A∗ \\A)−\nq ∑\nj=1\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n)\n) ≤ P · 4\nk + |X |\n2 k . (10)\nOur third observation says that:\n∑\nXi∈Xaex\\Xex\ngi(A \\A ∗, A∗ \\A)−\n∑\nXi∈Xaex\\Xex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) ≤ |Xaex \\Xex| . (11)\nWhere does Inequality 11 come from? Let us use the geometric interpretation, like the one from Figure 3. Let us consider an Xi, Xi ∈ Xaex. For Xi, A lies in a distance of 2k on the left or on the right from the target distribution. Without loss of generality, let us assume it lies on the right. Now, if gi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) < 0 then replacing (aj,1, aj,2) with (a ′ j,1, a ′ j,2) moves the current solution right. If gi({aj,1, aj,2}, {a′j,1, a ′ j,2}) = 2 k , then replacing (aj,1, aj,2) with (a ′ j,1, a ′ j,2) moves the current solution by 2k on left. If gi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) = 0, then replacing (aj,1, aj,2) with (a ′ j,1, a ′ j,2) either does not move the solution or moves it by 4k on left. Let us define yi = gi(A\\A∗, A∗ \\A)− ∑q j=1 gi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}). If the solution moves q times to the right, then the total gain − ∑q\nj=1 gi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) will be maximized, achieving q 4 k . In\nsuch case however, the value gi(A \\A∗, A∗ \\A) will be equal to −q 4k , and thus the value yi will be equal to 0. After some consideration, the reader will see that the value yi is maximized if the current solution moves q 2 times right and q 2 times left, each time by the value of 4 k . This way, the moves to the right induce the total gain of q2 · 4 k , the moves to the left induce the zero gain, but as a consequence, the current solution for Xi does not change (gi(A \\ A∗, A∗ \\ A) = 0). Thus, for each Xi ∈ Xaex, yi is upper bounded by q 2 · 4 k ≤ 1, which proves Inequality 11.\nWe can further proceed with the proof by observing that from the condition in the “while” loop we get that for each 1 ≤ j ≤ q:\n0 ≥ ∑\ni\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2})\n≥ ∑\ni∈Xex\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) +\n∑\ni/∈Xex\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2})\nFrom Equality 9:\n≥ ∑\ni∈Xex\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n) + sj,2 4\nk +\n∑\ni/∈Xex\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}).\nThus, we get:\n− ∑\ni∈Xex\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n) − 4\nk s2j > +\n∑\ni/∈Xex\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}). (12)\nNext, we give the following sequence of inequalities:\ng = ∑\ni\ngi(A \\A ∗, A∗ \\A)\n= ∑\nXi∈Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\nXi∈Xaex\\Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\nXi /∈Xaex\ngi(A \\A ∗, A∗ \\A)\nFrom Inequality 7, for all i /∈ Xaex, we have gi(A \\ A∗, A∗ \\ A) ≤ ∑ a∈A\\A∗ gi(a, a ′). Since the set\nA \\ A∗ and ⋃q j=1{aj,1, aj,2} can differ by at most one item (which induces distance 2|X| k to the optimal solution), we have that\n∑\nXi /∈Xaex\ngi(A \\A ∗, A∗ \\A) ≤\n∑\nXi /∈Xaex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) +\n2|X |\nk .\nAnd, as a consequence:\ng ≤ ∑\nXi∈Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\nXi∈Xaex\\Xex\ngi(A \\A ∗, A∗ \\A)\n+ ∑\nXi /∈Xaex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) +\n2|X |\nk\n≤ ∑\nXi∈Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\nXi∈Xaex\\Xex\ngi(A \\A ∗, A∗ \\A)\n+ ∑\nXi /∈Xex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2})−\n∑\nXi∈Xaex\\Xex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) +\n2|X |\nk .\nFrom Inequality 11 we get:\ng ≤ ∑\nXi∈Xex\ngi(A \\A ∗, A∗ \\A) +\n∑\nXi /∈Xex\nq ∑\nj=1\ngi({aj,1, aj,2}, {a ′ j,1, a ′ j,2}) +\n2|X |\nk + |Xaex \\Xex| .\nFrom Inequality 12:\ng ≤ 2|X |\nk + |Xaex \\Xex|+\n∑\nXi∈Xex\ngi(A \\A ∗, A∗ \\A)−\n∑\nXi∈Xex\nq ∑\nj=1\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n) − 4\nk\n∑\nj\nsj,2.\nFrom Inequality 8:\ng ≤ 2|X |\nk + |Xaex \\Xex| −\n|W1| ln q 4q · 4 k + ∑\ni∈Xex\n\ngi(A \\A ∗, A∗ \\A)−\nq ∑\nj=1\n(\ngi(aj,1, a ′ j,1) + gi(aj,2, a ′ j,2)\n)\n\n\nFrom Inequality 10:\ng ≤ 4|X |\nk + |Xaex \\Xex| −\n|W1| ln q\nkq + P\n4 k .\nAs we noted before, from Lemma 2, we have that W1 ≥ P 2\n|Xex| . Thus:\ng ≤ 4|X |\nk + |Xaex \\Xex|+\n4\nk\n(\nP − P 2 ln q\n4|Xex|q\n)\n.\nSince q ≤ k2 , and since the function ln x x is decreasing for x ≥ 1:\ng ≤ 4|X |\nk + |Xaex \\Xex|+\n4\nk\n(\nP − P 2 ln(k/2)\n2|Xex|k\n)\nThe function f(P ) = P − P 2 ln(k/2) 2|Xex|k takes its maximum for P = |Xex|kln(k/2) . Thus:\ng ≤ 4|X |\nk + |Xaex \\Xex|+\n4 k · |Xex|k 2 ln(k/2) = 4|X | k + |Xaex \\Xex|+ 2|Xex| ln(k/2) .\nSince our local-search algorithm for ℓ = 2 also tries to perform local swaps on single items, we can repeat the analysis from the proof of Theorem 1. Thus, using Inequality 4 from there, we get that g ≤ 2|Xex|, and as a consequence: (\n1 2 − 1 ln(k/2)\n)\ng ≤ |Xex| − 2|Xex| ln(k/2) .\nFor each attribute Xi ∈ X \\Xaex the distance from A and the target distribution is bounded by 2. For Xi ∈ Xaex this distance is bounded by 2k . Thus, we get that g ≤ 2(|X |− |Xex| − |Xaex \\Xex|) + |X | 2 k , and so:\ng +\n(\n1 2 −\n1\nln(k/2)\n)\ng + 1\n2 g ≤\n4|X |\nk + |Xaex \\Xex|+\n2|Xex|\nln(k/2)\n+ |Xex| − 2Xex|\nln(k/2)\n+ (|X | − |Xex| − |Xaex \\Xex|) + |X | 2\nk\n= |X |+ 6|X |\nk\nFinally, we get:\ng ≤ ln(k/2)\n2 ln(k/2)− 1\n(\n|X |+ 6|X |\nk\n)\n.\nWhich proves the thesis. ✷\nSince a brute-force algorithm can be used to compute an optimal solution for small values of k, Theorem 2 implies that for every ǫ > 0 we can achieve an additive approximation of 12 (|X |+ ǫ), that is we can guarantee that the solution returned by our algorithm will be at least 4 times better than a solution that is arbitrarily\nbad on each attribute. A natural open question is whether the local search algorithm achieves even better approximation guarantees for larger values of ℓ.\nOne may argue that the restriction to normal target distributions is a strong one. However, for a given vector of target distributions π, we can easily find a vector πN of target normal distributions such that ‖π, πN‖1 ≤ 2X k . Thus, the results from Theorems 1 and 2 can be modified by providing approximation ratio worse by an additive value of 2Xk but valid for arbitrary target distributions. Again, since an optimal solution can easily be computed for small values of k, we can get arbitrarily close to the approximation guarantees given by Theorems 1 and 2, even for non-normal target distributions.\nBelow we show a lower bound of 2X7 for the approximation ratio of the local search algorithm from Figure 1 with ℓ = 2.\nExample 3 Consider 5p binary attributes X1, . . . , X5p, 6ℓ and the set of distinct candidates C = {a1, . . . , aℓ, a ′ 1, . . . , a ′ ℓ, b1, . . . , bℓ, b ′ 1, . . . , b ′ ℓ, c1, . . . , cℓ, c ′ 1, . . . , c ′ ℓ} (in our database there exists a large number p of copies of each candidate from C). For each i, we have:\nX1 X2 X3 X4 X5 X6 X7\nai 1 0 1 1 0 0 1 a′i 0 1 0 0 1 1 1 bi 0 0 0 0 0 0 0 b′i 0 0 1 1 1 1 0 ci 1 1 1 1 0 0 0 c′i 1 1 0 0 1 1 0\nWe note that for each candidate the value of the attribute X3 is the same as of X4 and the value of the attribute X5 is the same as of X6. For i ∈ {1, 2, 3, 4, 5, 6} let π0i = π 1 i = 1 2 , and let π 0 7 = 1− π 1 i = 1.\nLet k = 4p. It can be easily checked that the set consisting of p copies of candidates bi, b′i, ci, c ′ i is a perfect committee. On the other hand, the set A consisting of 2p copies of candidates ai and a′i is locally optimal. Indeed, replacing candidate ai or a′i with bi or b ′ i moves the solution closer to the target distribution on X7, but the further from the target distribution on X1 or X2. The same situation happens if we replace candidates ai or a′i with ci or c ′ i. If we replace two a-candidates with the pair consisting of one b-candidate (bi or b′i) and one c-candidate (ci or c ′ i), then such replacement will move the solution closer by 4 k to the target distribution on X7, but will move the solution further by 2k on two attributes from {X3, X4, X5, X6}. Finally, ‖π, r(A)‖1 = 2p = 27 |X |."
    }, {
      "heading" : "6.3 Parameterized Complexity",
      "text" : "In this section, we study the parameterized complexity of the problem of finding a perfect committee. We are specifically interested whether for some natural parameters there exist fixed parameter tractable (FPT) algorithms. We recall that the problem is FPT for a parameter P if its each instance I can be solved in time O(f(P ) · poly(|I|)).\nFrom the point of view of parameterized complexity, FPT is seen as the class of easy problems. There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].\nObviously, the problem admits an FPT algorithm for the parameter m. Now, we present a negative result for parameter k (committee size) and a positive result for the parameter p (number of attributes).\nTheorem 3 The problem of deciding whether there exists a perfect committee is W[1]-hard for the parameter k, even for binary domains.\nProof. By reduction from the W[1]-complete PERFECTCODE problem [5]. Let I be an instance of PERFECTCODE that consists of a graph G = (V,E) and a positive integer k. We ask whether there exists\nV ′ ⊆ V such that each vertex in V is adjacent to exactly one vertex from V ′ (by convention, a vertex is adjacent to itself). From I we construct the following instance I ′ of the perfect committee problem. For each v ∈ V there is a binary attribute Xv and a candidate cv. For each u, v ∈ V , Xv(cu) = 1 if and only if u and v are adjacent in G. We look for a committee of size k. For each v, π1v = 1 − π 0 v = 1 k . It is easy to see that perfect codes in I correspond to perfect committees in I ′. ✷\nTheorem 4 For binary domains, there is an FPT algorithm for the perfect committee problem for parameter p.\nProof. Each item can be viewed as a vector of values indexed with the attributes; there are 2p such possible vectors: v1, . . . , v2p . For each vi, let ai denote the number of items that correspond to vi. Consider the following integer linear program, in which each variable bi is the number of candidates corresponding to vi in a perfect committee.\nminimize 2p ∑\ni=1\nbi\nsubject to:\n(a) : bi ≥ 0 1 ≤ i ≤ 2 p (b) : bi ≤ ai 1 ≤ i ≤ 2p\n(c) : 2p ∑\ni=1\nbi = k\n(d) : ∑\ni:vi[j]=1\nbi = π 1 i 1 ≤ j ≤ p\nThis linear program has 2p variables, thus, by the result of Lenstra [15, Section 5] it can be solved in FPT time for parameter p. This completes the proof. ✷\nExample 4 Let p = 2, k = 5, and let the candidate database C consists of 4 candidates with value vector v1 = (0, 0), 2 with value vector v2 = (1, 0), 2 candidates with value vector v3 = (0, 1) and 2 candidates with value vector v4 = (1, 1). Let π = ((0.2, 0.8), (0.6, 0.4)). The integer linear program is\nminimize b1 + b2 + b3 + b4 subject to:\n(a) : bi ≥ 0 1 ≤ i ≤ 4\n(b) : b1 ≤ 4; b2 ≤ 2; b3 ≤ 2; b4 ≤ 2\n(c) : b1 + b2 + b3 + b4 = 5\n(d) : b1 + b3 = 1; b1 + b2 = 3\nand a solution is (b1 = 1, b2 = 2, b3 = 0, b4 = 2): a perfect committee is obtained by taking one candidate with value vector (0, 0), two candidates with value vector (1, 0), and two with value vector (1, 1).\nNow, consider the database C′ consists of 5 candidates with value vector v1 = (0, 0), 2 with value vector v2 = (1, 0), 2 candidates with value vector v3 = (0, 1) and 1 candidate with value vector v4 = (1, 1). Let π = ((0.2, 0.8), (0.6, 0.4)): then the corresponding constraints are inconsistent and there is no perfect committee.\nWe conclude this Section by a short discussion. Finding an optimal committee is likely to be difficult if the candidate database C is large, and the number of attributes not small. Assume |C| is large compared to\nthe size of the domain ∏p\ni=1 |Di|, that each attribute value appears often enough in C and that there is no strong correlation between attributes in C: then, the larger |C|, the more likely C satisfies Full Supply, in which case finding an optimal committee is easy. The really difficult cases are when |C| is not significantly larger than the domain, or when C shows a high correlation between attributes."
    }, {
      "heading" : "7 Conclusion",
      "text" : "We have defined, and studied, multi-attribute generalizations of a well-known apportionment method (Hamilton), albeit with motivations that go far beyond party-list elections (such as the selection of a common set of items). We have shown positive and negative results concerning the properties satisfied by these generalizations and their computation, but a lot remains to be done. Note that other largest remainder apportionment methods can be generalized in a similar way, but it is unclear how largest-average methods can be generalized."
    } ],
    "references" : [ {
      "title" : "Criteria for proportional representation",
      "author" : [ "M. Balinski", "P. Young" ],
      "venue" : "Operations Research, 27(1):80–95",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 1979
    }, {
      "title" : "Fair Representation : Meeting the Ideal of One Man One Vote",
      "author" : [ "M. Balinski", "P. Young" ],
      "venue" : "Brookings Institution Press, seconde edition",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "On the computation of fully proportional representation",
      "author" : [ "N. Betzler", "A. Slinko", "J. Uhlmann" ],
      "venue" : "JAIR",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Computer-assisted constrained approval voting",
      "author" : [ "S.J. Brams" ],
      "venue" : "Interfaces, 20(5):67–80",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 1990
    }, {
      "title" : "Perfect code is W[1]-complete",
      "author" : [ "M. Cesati" ],
      "venue" : "Information Processing Letters, 81(3):163–168",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "Representative deliberations and representative decisions: Proportional representation and the Borda rule",
      "author" : [ "B. Chamberlin", "P. Courant" ],
      "venue" : "American Political Science Review, 77(3):718–733",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 1983
    }, {
      "title" : "Bounded single-peaked width and proportional representation",
      "author" : [ "D. Cornaz", "L. Galand", "O. Spanjaard" ],
      "venue" : "ECAI, pages 270–275",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "On computing optimal strategies in open list proportional representation: The two parties case",
      "author" : [ "N. Ding", "F. Lin" ],
      "venue" : "Proceedings of the Twenty-Eighth AAAI Conference on Artificial Intelligence, July 27 -31, 2014, Québec City, Québec, Canada., pages 1419–1425",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Parameterized Complexity",
      "author" : [ "R. Downey", "M. Fellows" ],
      "venue" : "Springer-Verlag",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "Properties of multiwinner voting rules",
      "author" : [ "E. Elkind", "P. Faliszewski", "P. Skowron", "A. Slinko" ],
      "venue" : "Proceedings of the 13th International Conference on Autonomous Agents and Multiagent Systems ",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Parameterized Complexity Theory",
      "author" : [ "J. Flum", "M. Grohe" ],
      "venue" : "Springer-Verlag",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "Computers and Intractability: A Guide to the Theory of NP-Completeness",
      "author" : [ "M. Garey", "D. Johnson" ],
      "venue" : "W. H. Freeman and Company",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 1979
    }, {
      "title" : "Voting over multiattribute domains",
      "author" : [ "J. Lang", "L. Xia" ],
      "venue" : "F. Brandt, V. Conitzer, U. Endriss, J. Lang, and A. Procaccia, editors, Handbook of Computational Social Choice, chapter 9. Cambridge University Press",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Bidimensional allocation of seats via zero-one matrices with given line sums",
      "author" : [ "I. Lari", "F. Ricca", "A. Scozzari" ],
      "venue" : "Annals OR, 215(1):165–181",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Integer programming with a fixed number of variables",
      "author" : [ "H.W. Lenstra" ],
      "venue" : "Mathematics of Operations Research, 8(4):538–548",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 1983
    }, {
      "title" : "Budgeted social choice: From consensus to personalized decision making",
      "author" : [ "T. Lu", "C. Boutilier" ],
      "venue" : "Proceedings of the 22nd International Joint Conference on Artificial Intelligence ",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Multiwinner social choice with incomplete preferences",
      "author" : [ "T. Lu", "C. Boutilier" ],
      "venue" : "IJCAI",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Fully proportional representation",
      "author" : [ "B.L. Monroe" ],
      "venue" : "American Political Science Review, 89:925–940",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 1995
    }, {
      "title" : "Invitation to Fixed-Parameter Algorithms",
      "author" : [ "R. Niedermeier" ],
      "venue" : "Oxford University Press",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "Use of linear programming for constrained approval voting",
      "author" : [ "R. Potthoff" ],
      "venue" : "Interfaces, 20(5):79–80",
      "citeRegEx" : "20",
      "shortCiteRegEx" : null,
      "year" : 1990
    }, {
      "title" : "On the complexity of achieving proportional representation",
      "author" : [ "A. Procaccia", "J. Rosenschein", "A. Zohar" ],
      "venue" : "Social Choice and Welfare, 30(3):353–362",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Network flow methods for electoral systems",
      "author" : [ "F. Pukelsheim", "F. Ricca", "B. Simeone", "A. Scozzari", "P. Serafini" ],
      "venue" : "Networks, 59(1):73–88",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Parametric maximum flow methods for minimax approximation of target quotas in biproportional apportionment",
      "author" : [ "P. Serafini", "B. Simeone" ],
      "venue" : "Networks, 59(2):191–208",
      "citeRegEx" : "23",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Achieving fully proportional representation: Approximability result",
      "author" : [ "P. Skowron", "P. Faliszewski", "A. Slinko" ],
      "venue" : "Artificial Intelligence, 222:67–103",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Computer-assisted constrained approval voting",
      "author" : [ "A. Straszak", "M. Libura", "J. Sikorski", "D. Wagner" ],
      "venue" : "Group Decision and Negotiation, 2(4):375–385",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 1993
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "First, we notice that our model generalizes the apportionment problem for proportional representation [2].",
      "startOffset" : 102,
      "endOffset" : 105
    }, {
      "referenceID" : 0,
      "context" : "There is a variety of apportionment methods studied in the literature [1].",
      "startOffset" : 70,
      "endOffset" : 73
    }, {
      "referenceID" : 1,
      "context" : "In this paper we do not review these methods in detail (we refer the reader to the survey of Balinski and Young [2]), but we rather focus on a specific set of their properties that have been analyzed, namely non-reversal, exactness and respect of quota, population monotonicity, and house monotonicity.",
      "startOffset" : 112,
      "endOffset" : 115
    }, {
      "referenceID" : 12,
      "context" : "2 Related work Our model is related to three distinct research areas: Voting on multi-attribute domains (see the work of Lang and Xia [13] for a survey).",
      "startOffset" : 134,
      "endOffset" : 138
    }, {
      "referenceID" : 5,
      "context" : "In particular, our model is related to the problem of finding a fully proportional representation [6, 18].",
      "startOffset" : 98,
      "endOffset" : 105
    }, {
      "referenceID" : 17,
      "context" : "In particular, our model is related to the problem of finding a fully proportional representation [6, 18].",
      "startOffset" : 98,
      "endOffset" : 105
    }, {
      "referenceID" : 20,
      "context" : "attention lately [21, 3, 7, 24, 17].",
      "startOffset" : 17,
      "endOffset" : 35
    }, {
      "referenceID" : 2,
      "context" : "attention lately [21, 3, 7, 24, 17].",
      "startOffset" : 17,
      "endOffset" : 35
    }, {
      "referenceID" : 6,
      "context" : "attention lately [21, 3, 7, 24, 17].",
      "startOffset" : 17,
      "endOffset" : 35
    }, {
      "referenceID" : 23,
      "context" : "attention lately [21, 3, 7, 24, 17].",
      "startOffset" : 17,
      "endOffset" : 35
    }, {
      "referenceID" : 16,
      "context" : "attention lately [21, 3, 7, 24, 17].",
      "startOffset" : 17,
      "endOffset" : 35
    }, {
      "referenceID" : 9,
      "context" : "[10], who gives a normative study of multiwinner election rules.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "Budgeted social choice [16] is technically close to committee elections, but it has a different motivation: the aim is to make a collective choice about a set of objects to be consumed by the group (perhaps, subject to some constraints) rather than about the set of candidates to represent voters.",
      "startOffset" : 23,
      "endOffset" : 27
    }, {
      "referenceID" : 1,
      "context" : "Apportionment for party-list representation systems (see the work of Balinski and Young [2] for a survey).",
      "startOffset" : 88,
      "endOffset" : 91
    }, {
      "referenceID" : 7,
      "context" : "Ding and Lin [8] studied a game-theoretic model for a party-list proportional representation system under specific assumptions, and show that computing the Nash equilibria of the game is hard.",
      "startOffset" : 13,
      "endOffset" : 16
    }, {
      "referenceID" : 21,
      "context" : "Also related is the computation of bi-apportionment (assignment of seats to parties within regions), investigated in a few recent papers [22, 23, 14].",
      "startOffset" : 137,
      "endOffset" : 149
    }, {
      "referenceID" : 22,
      "context" : "Also related is the computation of bi-apportionment (assignment of seats to parties within regions), investigated in a few recent papers [22, 23, 14].",
      "startOffset" : 137,
      "endOffset" : 149
    }, {
      "referenceID" : 13,
      "context" : "Also related is the computation of bi-apportionment (assignment of seats to parties within regions), investigated in a few recent papers [22, 23, 14].",
      "startOffset" : 137,
      "endOffset" : 149
    }, {
      "referenceID" : 3,
      "context" : "Constrained approval voting (CAP) [4, 20] is probably the closest work to our setting (MAPR).",
      "startOffset" : 34,
      "endOffset" : 41
    }, {
      "referenceID" : 19,
      "context" : "Constrained approval voting (CAP) [4, 20] is probably the closest work to our setting (MAPR).",
      "startOffset" : 34,
      "endOffset" : 41
    }, {
      "referenceID" : 19,
      "context" : "A simple translation of CAP into an integer linear programming problem is given in [20, 25].",
      "startOffset" : 83,
      "endOffset" : 91
    }, {
      "referenceID" : 24,
      "context" : "A simple translation of CAP into an integer linear programming problem is given in [20, 25].",
      "startOffset" : 83,
      "endOffset" : 91
    }, {
      "referenceID" : 1,
      "context" : "There are two main families of apportionment methods: largest remainders and highest average methods [2].",
      "startOffset" : 101,
      "endOffset" : 104
    }, {
      "referenceID" : 0,
      "context" : "5 Properties of multi-attribute proportional representation Several properties of apportionment methods have been studied, starting with Balinski and Young [1].",
      "startOffset" : 156,
      "endOffset" : 159
    }, {
      "referenceID" : 9,
      "context" : "[10].",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 11,
      "context" : "Hardness follows by reduction from the NP-complete problem EXACT COVER WITH 3-SETS, or X3C [12].",
      "startOffset" : 91,
      "endOffset" : 95
    }, {
      "referenceID" : 0,
      "context" : "There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 1,
      "context" : "There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 8,
      "context" : "There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].",
      "startOffset" : 140,
      "endOffset" : 151
    }, {
      "referenceID" : 18,
      "context" : "There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].",
      "startOffset" : 140,
      "endOffset" : 151
    }, {
      "referenceID" : 10,
      "context" : "There is also a whole hierarchy of hardness classes, FPT ⊆ W [1] ⊆ W [2] ⊆ · · · (for details, we point the reader to appropriate overviews [9, 19, 11].",
      "startOffset" : 140,
      "endOffset" : 151
    }, {
      "referenceID" : 0,
      "context" : "Theorem 3 The problem of deciding whether there exists a perfect committee is W[1]-hard for the parameter k, even for binary domains.",
      "startOffset" : 79,
      "endOffset" : 82
    }, {
      "referenceID" : 0,
      "context" : "By reduction from the W[1]-complete PERFECTCODE problem [5].",
      "startOffset" : 23,
      "endOffset" : 26
    }, {
      "referenceID" : 4,
      "context" : "By reduction from the W[1]-complete PERFECTCODE problem [5].",
      "startOffset" : 56,
      "endOffset" : 59
    } ],
    "year" : 2015,
    "abstractText" : "We consider the following problem in which a given number of items has to be chosen from a predefined set. Each item is described by a vector of attributes and for each attribute there is a desired distribution that the selected set should have. We look for a set that fits as much as possible the desired distributions on all attributes. Examples of applications include choosing members of a representative committee, where candidates are described by attributes such as sex, age and profession, and where we look for a committee that for each attribute offers a certain representation, i.e., a single committee that contains a certain number of young and old people, certain number of men and women, certain number of people with different professions, etc. With a single attribute the problem collapses to the apportionment problem for partylist proportional representation systems (in such case the value of the single attribute would be a political affiliation of a candidate). We study the properties of the associated subset selection rules, as well as their computation complexity.",
    "creator" : "LaTeX with hyperref package"
  }
}