{
  "name" : "1303.3319.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "A new type of judgement theorems for attribute characters in information system",
    "authors" : [ "Anhui Tan", "Jinjin Li", "Guoping Lin" ],
    "emails" : [ "shujujiegouwang@126.com", "jinjinli@fjzs.edu.cn", "guoplin@163.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n30 3.\n33 19\nv1 [\ncs .D\nS] 1\nThe research of attribute characters in information system which contains core, necessary, unnecessary is a basic and important issue in attribute reduct. Many methods for the judgement of attribute characters are based on the relationship between the objects and attributes. In this paper, a new type of judgement theorems which are absolutely based on the relationship among attributes is proposed for the judgement of attribute characters. The method is through comparing the two new attribute sets E(a) and N(a) with respect to the designated attribute a which is proposed in this paper. We conclude that which type of the attribute a belongs to is determined by the relationship between E(a) and N(a) in essence. Secondly, more concise and clear results are given about the judgment of the attribute characters through analyzing the properties of refinement and precise-refinement between E(a) andN(a) in topology. In addition, the relationship among attributes are discussed which is useful for constructing a reduct in the last section of this paper. In the last, we propose a reduct algorithm based on E(a), and this algorithm is an extended application of the analysis of attribute characters above.\nKeywords: Rough set; Information system; Attribute reduct; Attribute characters; Discernibility matrix; reduct algorithm\n∗Corresponding author. Email addresses: shujujiegouwang@126.com (Anhui Tan), jinjinli@fjzs.edu.cn\n(Jinjin Li), guoplin@163.com (Guoping Lin)\nPreprint submitted to Elsevier March 19, 2015"
    }, {
      "heading" : "1. Introduction",
      "text" : "Rough set theory originally proposed by Pawlak [1][2], provides an effective method to deal with imprecision and vague in information system. Because of voluminous data that always generates in information system, multi-granular Rough set is very important as a basic Processing method, and has very widely applications in process control, conflict analysis, data mining, data fusion technique [18, 19, 20, 21]. In recent years, many topics have been widely investigated with rough sets, for example, topology, graph, algebra, lattices, fuzzy set, and so on [24− 33].\nInformation system is an extension of rough set theory, which is denoted as a pair (U,A), where U is a nonempty finite set of objects called the domain set and A = {a1, a2, ..., an} is a nonempty finite set of attributes such that a : U → Va for any a ∈ A, i.e., ax ∈ Va, x ∈ U, where Va is called the domain of attribute a. Each attribute based on an equivalence relation generates a partition on the domain U , and the objects belong to the same partition have the same value in Va, so the set of attributes A generates more than one partitions.\nMoreover, approximation space theory is proposed to approximate the objects that are not precise. In approximation space theory, a pair of approximation operators R∗, R∗ are introduced which are widely used.\nBecause of the importance of the attributes, attribute reduction is a basic topic in rough sets theory and information system, and it is a NP-hard problem.\nA beautiful and efficient method was introduced by Skowron and Rauszer [6] which is the discernibility matrix of the information system (U,A), where DA = {dA(x, y)|x, y ∈ U}, dA(x, y) = {a ∈ A|Va(x) 6= Va(y)}. Otherwise, the boolean discernibility function is proposed to compute the reduct. Many scholars devote to study this issues [11−14], [22, 23]. Especially, many papers studied the attribute reduct theory with the discernibility matrix[15− 21].\nIn [3], Yao and Zhao discussed the reduct by discernibility matrix simplification. The thought is through deleting the attributes in every dA(x, y), and in the end, there is only one attribute in every dA(x, y), then the remaining attributes constitute a reduct. Otherwise, another reduct construction algorithm based on matrix simplification is proposed in [3]. The computing process of this algorithm is just like the operation of the boolean discernibility function. That is, delete the redundant elements in the discernibility matrix through absorption operation, then there exists no inclusion relation-\nship between any two elements of the discernibility matrix. Then pick a dA(x, y) in the discernibility matrix, and an attribute a ∈ dA(x, y), then delete (dA(x, y) − {a}) for any other elements of the discernibility matrix. Then return to repeat the algorithm until there is only one attribute in every element of the discernibility matrix. Then the algorithm ends and a reduct is constructed.\nOtherwise, In [4], Zhang and Qiu depart the attributes into three types based on the relationship with attribute reduct which contain core, relative necessary and unnecessary attributes. Many beautiful theorems are given to describe these three type attributes. However, they are all not substantive description for attribute character.\nIn this paper, we propose an attribute subset E(a) with respect to the attribute a. We conclude that whether the attribute a is relative necessary or unnecessary is determined by E(a) virtually. Secondly, refinement and precise-refinement in topology are used to study the properties of attributes. Moreover, combined with the row-wise simplification reduct construction algorithm in [3], we construct a algorithm based on E(a).\nThe remainder of this paper is organized as follows. Some basic concepts in rough set theory are reviewed in Section 2. The three types of attributes are investigated in Section 3, and more substantial descriptions to the three types are given in this section. In Section 4, With the tool of topology, more clear and easier conclusions are given about the three types of attributes.\nBecause of the reduct based on the relationship between the attributes virtually, in section 5, the relationship between the attributes are discussed. In the last of this paper, we give a reduct algorithm based on E(a), and analysis it’s efficiency through an example in [3]."
    }, {
      "heading" : "2. Preliminaries",
      "text" : "In this section, we review some basic concepts, which includes Pawlak’s rough set, information system, and covering-based rough set. (see [1, 4, 5, 6,"
    }, {
      "heading" : "16, 25, 27, 28])",
      "text" : ""
    }, {
      "heading" : "2.1. Pawlak’s rough set",
      "text" : "Rough set theory, proposed by Pawlak , provides a useful approach to deal with dramatic data. In classical Rough set theory, the data is divided into some equivalency classes.\nDefinition 2.1. (Approximation space) Let U be a nonempty and finite set and R be an equivalence relation on U , i.e., R is reflexive, symmetric and transitive. The ordered pair (U,R) is called an approximation space.\nSo in an approximation space (U,R), R generates a partition U/R = {X1, X2, ..., Xm} on U , where X1, X2, ..., Xm are the equivalence classes generated by the equivalence relation R.\nIn rough set, a pair of approximation operators are used to describe the objects. In the following definition, a pair of approximation operators are introduced which are widely used.\nDefinition 2.2. (Approximation operator) Let U be a nonempty and finite set and R be an equivalence relation on U , a pair of approximation operator R∗(X) = {x ∈ U |RN{x} ⊆ X}, R∗(X) = {x ∈ U |RN{x} ∩ X 6= ∅}. Where RN(x) = {y ∈ U |xRy}. They are called the lower and upper approximation operators with respect to R, respectively.\nDefinition 2.3. (R-precise and R-rough set) Let R be an equivalence relation on U . For all X ⊆ U, if R∗(X) = R\n∗(X), then X is a R−precise set; otherwise, we say X is a R−rough set."
    }, {
      "heading" : "2.2. Information system",
      "text" : "The notion of information systems is an extension of rough set, and provides a convenient tool for the representation of objects in terms of their attribute values. An information system IS is a pair (U,A), where U is a nonempty finite set of objects called the domain set and A = {a1, a2, ..., an} is a nonempty finite set of attributes such that a : U → Va for any a ∈ A, i.e., ax ∈ Va, x ∈ U, where Va is called the domain of attribute a.\nEach nonempty subset B ⊆ A in an IS determines an indiscernibility relation as follows: RB = {(x, y) ∈ U ∗ U : a(x) = a(y), ∀a ∈ B}.\nSince RB is an equivalence relation on U , it forms a partition U/RB = [x]B : x ∈ U, where [x]B is the equivalence class determined by x with respect to B, i.e., [x]B = {y ∈ U : (x, y) ∈ RB}. U/RB reflects the basic granules of knowledge w.r.t. B in the IS.\nDefinition 2.4. (consistent)An information system (U,A), B ⊆ A, B is a consistent set iff U/RB = U/RA.\nDefinition 2.5. (reduct)An information system (U,A), B ⊆ A, B is a reduct iff B is a consistent set and for any C ⊂ B, U/RC 6= U/RA.\nLet we denote a set B can not be reducted iff for all C ⊂ B, U/RC 6= U/RB.\nDefinition 2.6. In an information system (U,A), We divide the the attribute set A into three types as follows:\n(1)(core) For a ∈ A, a is a core attribute iff for all reduct set B, B ⊆ A, a ∈ B.\n(2)(unnecessary) An information system (U,A), for a ∈ A, a is an unnecessary attribute iff for all reduct B, B ⊆ A, but a /∈ B.\n(3)(relative necessary) An information system (U,A), for a ∈ A, a is a relative necessary attribute iff a is not a core attribute and there exists a reduct B, B ⊆ A, and a ∈ B.\nIn an information system (U,A), we denote (U,Bi), i ∈ τ for all the reduct subsets of A, τ is an index set. So we denote the core attribute set as C = ∩i∈τBi, the set of all the relative necessary attributes as RN = ∪i∈τBi − ∩i∈τBi, and the set of all the unnecessary attributes as UN = A− ∪i∈τBi.\nEvery attribute can generates an equivalent relation and generates a partition, so in rough set theory, the study of attribute is very important, and discernibility matrix leads an important role to study the feature of attributes.\nDefinition 2.7. (discernibility matrix)An information system (U,A), |U | = n, for x, y ∈ U , dA(x, y) = {a ∈ A|Va(x) 6= Va(y)}. we say dA(x, y) is a partition discernibility set of x, y. We denote DA = {dA(x, y)|x, y ∈ U} for the discernibility matrix of the information system (U,A).\nDefinition 2.8. (discernibility function)The discernibility function of a discernibility matrix is defined by: f(DA) = ∧ { ∨ d{x, y}|d{x, y} ∈ DA, x, y ∈ U}."
    }, {
      "heading" : "2.3. Covering-based rough set",
      "text" : "Definition 2.9. Let U be the domain of discourse and C a family of subsets of U . If none of the subsets in C is empty, and ⋃ C = U , C is called a covering of U .\nSince it is clear that a partition is definitely a covering, the concept of coverings is an extension of the concept of partitions.\nDefinition 2.10. (Covering approximation space). Let U be a non-empty set and C be a covering of U. We call the ordered pair U, C a covering approximation space.\nDefinition 2.11. (Minimal description). Let (U,C) be a covering approximation space. If x ∈ U , the minimal description of x is defined as Md(x) = {K ∈ C|x ∈ K,∧(∀S ∈ C ∧ x ∈ S ⊆ K ⇒ K = S)}.\nPaper [1, 16] introduced a new definition for binary relation-based rough sets. The concept for this definition is the neighborhood of a point.In the following we introduce the neighborhood concept into covering-based rough set.\nDefinition 2.12. (Neighborhood) Let U be a domain of objects, C a covering of U . For any x ∈ U , we define the neighborhood of x as follows: Neighbore(x) = {∩K|x ∈ K ∈ C}.\nThe concept of Neighbore(x) is proposed to study the covering-based rough set, and let us denote a new concept N(x) that just like the notion of Neighbore(x), but they are different. In an information system (U,A), the partition discernibility sets dA(x, y) in a discernibility matrix are always used, so we denote N(a) = {dA(x, y)|a ∈ dA(x, y), x, y ∈ U} for the attribute a.\nIn the following, we will study the covering-based rough set of attribute with Neiborhood(x) and N(x).\nLet (U,C) be a covering approximation space and X ⊆ U .\nDefinition 2.13. (Lower approximation) The covering lower approximation operation R∗ : P (U) ⇒ P (U) is defined as R∗(X) = ⋃ K∈C∧K⊆X K[28].\nDefinition 2.14. (Upper approximation) Let C be a covering of the domain U . The covering upper approximation operation R∗, is defined as: X ⊆ U,R∗(X) = ⋃ K∈C∧K∩X 6=∅K.\nProposition 2.1. Let C be a covering of U , the followings are equal. (1) {x} ∈ C. (2) Md(x) = {{x}}. (3) R∗(x) = {x}. (4) Md(x) = {R∗(x)}.\nProof. (1) ⇔ (2) ⇔ (3)) is easy to proof. So we only proof (1) ⇔ (4). (4) ⇒ (1): since C be a covering of U , then there exists x ∈ K ∈ C, thus Md(x) 6= ∅, and Md(x) = {R∗(x)}, so R∗(x) 6= ∅, thus R∗(x) = {x}, so {x} ∈ C. (1) ⇒ (4): if {x} ∈ C, then R∗(x) = {x}, then Md(x) = {R∗(x)}."
    }, {
      "heading" : "3. The analysis of attribute characters in information system",
      "text" : "An information system (U,A), |U | = n, for x, y ∈ U , dA(x, y) = {a ∈ A|Va(x) 6= Va(y)}. the discernibility matrix of the information system (U,A) is DA = {dA(x, y)|x, y ∈ U}. Let the covering C = {dA(x, y)}, for all x, y ∈ U , then C is a covering of A. We denote CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute.\nOtherwise, forB ⊆ A, we denoteR∗(B) = {d(x, y)|d(x, y) ∈ DA, d(x, y) ⊆ B}, R∗(B) = {d(x, y)|d(x, y) ∈ DA, d(x, y) ∩ B 6= ∅}. So R∗ and R\n∗ in attribute covering are corresponding to those concepts in classic rough set.\nTheorem 3.1. An information system (U,A), B ⊆ A, B is a consistent set iff ∀x, y ∈ U, dA(x, y) 6= ∅, then B ∩ dA(x, y) 6= ∅.\nproof. Sufficiency. We need to proof U/RB = U/RA. Because [x]B = {y ∈ U : (x, y) ∈ RB}, if B ∩ dA(x, y) 6= ∅, then for y ∈ [x]A, then for any a ∈ A, y ∈ [x]a, and B ⊆ A, then y ∈ [x]B . For y /∈ [x]A, there exists a ∈ A, y /∈ [x]a, then a ∈ dA(x, y), and B ∩ dA(x, y) 6= ∅, then there exists b ∈ B, y /∈ [x]b, then y /∈ [x]B. So U/RB = U/RA.\nNecessity. If (U,B) is a consistent information system, then U/RB = U/RA. For y /∈ [x]A, then For y /∈ [x]B , there exists b ∈ B, y /∈ [x]b, then b ∈ dA(x, y), then B ∩ dA(x, y) 6= ∅.\nTheorem 3.2. An information system (U,A),B ⊆ A, B is a reduct iff ∀x, y ∈ U, dA(x, y) 6= ∅, then B ∩ dA(x, y) 6= ∅, and for any a ∈ B, B − {a} does not holds.\nProof.It is obvious from Theorem 3.1.\nCorollary 3.1. An information system (U,A), B ⊆ A, B is a reduct set iff ∀a ∈ A, ∀K ∈ N{a} ∈ U , then B ∩K 6= ∅.\nProof.It is obvious from Theorem 3.1.\nCorollary 3.2. An information system (U,A), B ⊆ A, B is a reduct set, if for a ∈ A, for every K ∈ N(a), (B − {a}) ∩K 6= ∅, then a /∈ B.\nProof.If for every K ∈ N(a), (B − {a}) ∩ K 6= ∅, then RB−{a} = RB, then B can be reducted.\nIf {a} is an element of CD, we assume dA(x, y) = {a}. then y ∈ [x](A− {a}), and y /∈ [x]A. then U/R(A−{a}) 6= U/RA, so for any reduction (U,B),B * (A− {a}), so a ∈ B.\nIf a ∈ A is a core attribute, then for any reduction (U,B), a ∈ B. If {a} is an element of CD, then for x, y, if a ∈ dA(x, y), then there is another element b ∈ A, b ∈ dA(x, y), then we can proof there is a reduct set C, b ∈ C, and a /∈ C.\nCorollary 3.3. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a core attribute iff Md(x) = {{x}}.\nCorollary 3.4. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a core attribute iff R∗(x) = {x}.\nCorollary 3.5. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a core attribute iff Md(x) = {R∗(x)}.\nTheorem 3.3. [6] In an information system (U,A), attribute a ∈ A is a core iff there exists some d{x, y}, x, y ∈ U , d{x, y} ∈ DA, such that d{x, y} = {a} iff RA−{a} 6= RA.\nTheorem 3.4. [4] In an information system (U,A), we have the conclusions as follows: (1) a ∈ A is a relative necessary attribute iff RA−{a} = RA, and ∪{RB−{a} * Ra ,where RB ⊆ RA, B ⊆ A}. (2) a ∈ A is a unnecessary attribute iff ∪{RB−{a}} ⊆ Ra, where RB ⊆ RA, B ⊆ A.\nTheorem 3.4 describes the character of attributes, but it’s just a kind of representation in definition, and lack of real substance in some degree. What the theorem wants to express is as follows:\n(a) RA−{a} = RA ⇔ when deleting a from A, the partition doesn’t change ⇔ a is not a core.\n(b) RB ⊆ RA⇔B is a consistent set of A. (c) ∪RB−{a} * Ra, where RB ⊆ RA ⇔ there exists a set B0, satisfies RB0−{a} * Ra, where RB0 ⊆ RA} ⇔there exists a reduct B0 satisfies RB0−{a} * Ra⇔ a ∈ B0⇔a belongs to some reduct.\n(d) RA−{a} = RA, ∪RB−{a} * Ra, where RB ⊆ RA⇔ a is not a core, and a belongs to some reduct⇔a is a relative necessary attribute.\n(e) ∪{RB−{a}} ⊆ Ra, where RB ⊆ RA, B ⊆ A⇔ for every reduct B, the partition generated by a is coarser than B − {a}⇔ for every reduct B, a /∈ B⇔a is a unnecessary attribute.\nFrom the explanation above, we can see that the therom 4.2 doesn’t give more essential information. For example, In Theorem 3.4(2), it means for all reduct B, when deleting a from B, the partition doesn’t become finer, then a is unnecessary. In the following, we will give some equivalence conditions to describe the feature of attributes with more substantial meaning and value.\nWe denote E(a) = {d{x, y}|a /∈ d{x, y} ⊆ ∪N(a), d{x, y} ∈ DA}. We conclude that which type of attribute a belongs to is determined by the relation between N(a) and E(a).\nLemma 3.1. ∪E(a) = R∗(∪N(a) − {a}), and E(a) = {d{x, y}|d{x, y} ⊆ (∪N(a)− {a}), d{x, y} ∈ DA}.\nProof. It’s obvious.\nTheorem 3.5. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a unnecessary attribute iff for any set C ⊆ A, RC ⊆ R∪E(a),⇒RC ⊆ Ra.\nProof. Sufficiency. R∗{∪N(a) − {a}} = ∪{M ∈ CD,M ⊆ N(a) − {a}}, R∗C = ∪{N ∈ CD, N ∩ C 6= ∅}.\nFor C ⊆ ∪E(a), RC ⊆ R∪E(a)/, RC ⊆ R∪E(a)/ ⇒ C ∩ {M ∈ CD,M ⊆ N(a)− {a}} 6= ∅, then for any reduct B, there exists C ⊆ ∪{M ∈ CD,M ⊆ N(a) − {a}}, C ⊆ B, C ∩ {M ∈ CD,M ⊆ N(a) − {a}} 6= ∅. If C ∩ {M ∈ CD,M ⊆ N(a)} 6= ∅, then B ∩ {M ∈ CD,M ⊆ N(a)} 6= ∅. Then a /∈ B.\nNecessity. If a ∈ A is a unnecessary attribute, then for any reduction (U,B), a /∈ B, because ∀K ∈ N{a}, B ∩ K 6= ∅, there exists C ⊆ ∪{M ∈ CD,M ⊆ N(a)−{a}}, C ⊆ B, if there is a setK ∈ N{a}, C∩K = ∅, and we can proof B ∩K = C ∩K, then B ∩K = ∅, then a ∈ B.Because a is a unnecessary attribute, then it’s a contradiction.\nTheorem 3.6. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a unnecessary attribute iff for any K ∈ E(a), and any C ⊆ A, satisfying C∩K 6= ∅, then for any F ∈ N(a), satisfying C∩F 6= ∅.\nProof. Sufficiency. Because for reduct B, for any set K ∈ E(a), satisfies B∩K 6= ∅, let C = B∩∪K,K ∈ E(a), then for any F ∈ N(a), C∩K 6= ∅, then B ∩ F 6= ∅, then A /∈ B.\nNecessity. If there exists a set C, C ⊆ A, for any setK ∈ E(a), C∩K 6= ∅, but there exists a set F0, F0 ∈ N(a), C ∩ F0 = ∅. When constructing any\nreduct B, we must pick the attributes in all the d{x, y}, d{x, y} ∈ DA. Assuming we have pick an attribute set C in every F , F ∈ E(a).\nBecause there exists a set F0, F0 ∈ N(a), C ∩F0 = ∅, so secondly we can pick a. Then the remaining d{x, y} that we have not choose attribute satisfies does’t containing a, and does’t contained in any attribute set in N(a). Then we can pick the attribute in the remaining d{x, y} but outside F0. Then a ∈ B. It contradicts with the condition of a is a unnecessary attribute.\nTheorem 3.7. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a relative necessary attribute iff {a} is not an element of CD, and there exist a set C ⊆ A, RC ⊆ R∪E(a), and RC * Ra.\nProof. Sufficiency. {a} is not an element of CD, then a is not a core attribute.\nIf there exists a set C ⊆ ∪E(a), RC ⊆ R∪E(a), and RC * Ra, then for M ∈ CD,M ∈ E(a), C ∩M 6= ∅. Let us assum C can not be reducted, because RC * Ra, then there is K ∈ N(a), satisfies C ∩K = ∅, so we can pick a, satisfies ({a} ∪ C ⊆ B, where B is some reduct set. Then a is a relative necessary attribute.\nNecessity. If a ∈ A is a relative necessary attribute, then {a} is not an element of CD, Then there exist a reduct B ⊆ A, a ∈ B, and B ∩M 6= ∅, where M ∈ E(a). Let C = B ∩ ∪E(a). Then we can proof C ⊆ ∪E(a), and for M ∈ CD,M ∈ E(a), C ∩M 6= ∅, then RC ⊆ R∪E(a).\nIf RC ⊆ Ra, then for M ∈ CD,M ∈ N(a), C ∩ M 6= ∅, then for the ruduct B, a /∈ B. It contradicts with the condition of a is a relative necessary attribute.\nCorollary 3.6. CD = {dA(x, y), x, y ∈ U} the covering-based rough sets of attribute, a ∈ A is a relative necessary attribute iff x is not an element of CD, and there exists C ⊆ A, and F ∈ N(a), for any set K ∈ E(a), and C ∩ K 6= ∅, but C ∩K = ∅.\nProof. From the proof of Theorem 3.7, it holds. In the theorems above, we want to say that attribute a is unnecessary, if and only if for any attribute set C, if the partition it induces is finer than E(a), then it must be finer than a. And for the core and relative necessary attribute, it doesn’t hold."
    }, {
      "heading" : "4. Attribute characters in topology",
      "text" : "An information system (U,A), |U | = n, for x, y ∈ U , dA(x, y) = {a ∈ A|Va(x) 6= Va(y)}. The discernibility matrix of the information system (U,A) is DA = {dA(x, y)|x, y ∈ U}. So DA is the power set of A whose elements are all the discernibility set.\nIn topology, the concept of refinement are important. It’s widely studied in compact set, pre-compact set, and so on. Precise-refinement is an extension of refinement in topology.In the following, we will study the properties of attribute form Precise-refinement and refinement.\nDefinition 4.1. For two class of power set A and B of X, A,B ∈ 2X , we call A precise-refines B iff for any KA ∈ A, KA ⊆ KB, for some KB ∈ B, and for any KB ∈ B there exists some KA ∈ A, such that KA ⊆ KB[7].\nDefinition 4.2. For two class of power set A and B of X, A,B ∈ 2X , we call A is a refinement of B iff for any KB ∈ B, there exists some KA ∈ A, such that KA ⊆ KB.\nTheorem 4.1. For the discernibility matrix DA of the information system (U,A), a ∈ A is a unnecessary attribute iff there exists M ⊆ DA, M ∩ N(a) = ∅, and M precise-refines N(a).\nProof. Sufficiency. If there exists M ⊆ DA, M ∩ N(a) = ∅, and M precise-refines N(a), then for any reduct set B, and for ∀d{x, y} ∈ M , B ∩ d{x, y} 6= ∅, because M refines N(a), for ∀K ∈ N(a), there exists d{x, y} ∈ M , satisfies d{x, y} ⊆ K, then (B−{a})∩K 6= ∅, then a /∈ B.\nNecessity. If there doesn’t exist M ⊆ DA,which satisfies M ∩ N(a) = ∅, and M precise-refines N(a), then there exist some K ∈ N(a), satisfies d{x, y} * K where d{x, y} ∈ DA, and a /∈ d{x, y}. So for any d{x, y} ∈ DA, a /∈ d{x, y}, d{x, y} −K 6= ∅. Let we assume K = d{x\n′, y′}, for some x′, y′ ∈ U . Because K ∩ (A −K) = ∅, so (x′, y′) ∈ IND(A −K), so we can proof {a} ∩RED(A−K) is a reduct of A.\nCorollary 4.1. For the discernibility matrix DA of the information system (U,A), a ∈ A is a unnecessary attribute iff there exists M ⊆ E(a), and M precise-refines N(a).\nProof. From Theorem 4.1, if M ⊆ DA, M ∩ N(a) = ∅, and M preciserefines N(a), then M ⊆ E(a), then it’s easy to proof.\nTheorem 4.2. For the discernibility matrix DA of the information system (U,A), a ∈ A is a unnecessary attribute iff E(a) is a refinement of N(a).\nProof. It holds from the proof of Corollary 4.1. .\nTheorem 4.3. For the discernibility matrix DA of the information system (U,A), a ∈ A is a relative necessary attribute iff a /∈ D(A), and there doen’t exist a set M ,which satisfies M ⊆ E(a), and M precise-refines N(a).\nProof. It’s obvious from Corollary 4.2.\nTheorem 4.4. For the discernibility matrix DA of the information system (U,A), a ∈ A is a relative necessary attribute iff E(a) is not finer than N(a), and {a} /∈ DA.\nCorollary 4.2. For the discernibility matrix DA of the information system (U,A), a ∈ A is a relative necessary attribute iff {a} /∈ DA, and for any a /∈ d{x, y} ∈ DA, there exists some K ∈ N(a), satisfies d{x, y} * K.\nProof. It can be concluded by the proof of Theorem 4.1.\nExample 4.1. An information system (U,A), the domain set U = {1, 2, 3, 4, 5}, the attribute set A = {a1, a2, a3, a4}. For simplicity, we give the partitions by every attribute directly.\nSa1 = {{1, 2}, {3, 4}, {5}}, Sa2 = {{1, 2, 3}, {4, 5}}, Sa3 = {{1, 2, 4}, {3, 5}}, Sa4 = {{1, 2, 3, 4}, {5}}.\nThe discernibility matrix is: U × U 1 2 3 4 5\n1 ∅ ∅ {a1, a3} {a1, a2} {a1, a2, a3, a4} 2 ∅ {a1, a3} {a1, a2} {a1, a2, a3, a4} 3 ∅ {a2, a3} {a1, a2, a4} 4 ∅ {a1, a3, a4} 5 ∅\nAll the reducts are {a1, a2}, {a1, a3}, {a2, a3}. a1, a2, a3 are the relative attributes, a4 is the unnecessary attribute,and there are no core attributes.\nLet we see the relation between E(a) and N(a) for every attribute a ∈ A.\n(1) N(a1) = {a1, a2}, {a1, a3}, {a1, a2, a4}, {a1, a3, a4}, {a1, a2, a3, a4}, E(a1) = {a2, a3}.\nBecause {a1} /∈ N(a), E(a1) is a refinement of N(a1), or there doesn’t exist subset M ⊆ E(a1), such that M precise-refines N(a1), then a1 is a relative necessary attribute.\n(2)The situation of a2, a3 is just the same as a1. (3) N(a4) = {{a1, a2, a4}, {a1, a3, a4}, {a1, a2, a3, a4},\nE(a4) = {a1, a2}, {a1, a3}, {a2, a3} . Because E(a4) is a refinement of N(a4), or E(a4) precise-refines N(a4),\nthen a4 is a unnecessary attribute.\nIn the following, we give one more convenient method to judge the feature of attributes.\nFor the discernibility matrix DA of the information system (U,A), we call d{x, y} ∈ DA a reducible element if there exist another d{x\n′, y′} ∈ DA, satisfies d{x′, y′} ⊂ d{x, y}.\nWe can delete all the reducible elements, and all the reduct of A remain unchanged. So we denote Dreducible as the subset of DA whose elements are all the reducible elements of DA, and denote Dreduct = DA −Dreducible.\nTheorem 4.5. For the discernibility matrix DA of the information system (U,A), a ∈ A, a is a relative necessary attribute iff a ∈ (∪Dreduct),and {a} /∈ Dreduct.\nProof. Sufficiency. For K ∈ DA, if there exists another K ′ ⊂ K, then for any reduct B, B ∩K ′ 6= ∅, then B ∩K 6= ∅, so we can delete K when constructing any reduct.\nFor any a ∈ (∪Dreduct), then a ∈ K, for some K ∈ Dreduct, then for any other K ′ ∈ Dreduct, satisfies K\n′ * K. Then we can proof {a}∩RED(A−K) is a reduct of A. Besides a is not core, then a is a relative necessary attribute.\nNecessity. If a /∈ ∪Dreduct, then N(a) ∩ Dreduct = ∅, then there exists M ⊆ DA, And M ∩ N(a) = ∅, satisfies M a refinement of N(a), then a is unnecessary. Then from Therom4.1, it holds.\nTheorem 4.6. For the discernibility matrix DA of the information system (U,A), a ∈ A is a unnecessary attribute iff a ∈ (A− ∪Dreduct).\nProof. It holds from Theorem 4.5.\nTheorem 4.7. For the discernibility matrix DA of the information system (U,A), for any d{x, y} ∈ Dreduct, and ∀a ∈ d{x, y}, (d{x, y}−{a}) 6= ∅, there always exists a reduct B ⊆ A, satisfies {d{x, y} − {a}} ∩ B = ∅.\nProof. It holds from the proof of Theorem 4.5.\nExample 4.2. In Example 4.1, because {a1, a2} ⊂ {a1, a2, a4}, {a1, a3} ⊂ {a1, a3, a4}, {a1, a3} ⊂ {a1, a2, a3, a4}, otherwise there are not proper subsets for {a1, a2}, {a1, a3}, {a2, a3} in DA.\nThen Dreducible = {a1, a2, a4}, {a1, a3, a4}, {a1, a2, a3, a4}, and Dreduct = {a1, a2}, {a1, a3}, {a2, a3}.\nThen ∪Dreduct = {a1, a2, a3}, A− ∪Dreduct = {a4}. Because all the unnecessary attributes belong to A − ∪Dreduct ,all the relative and the core attributes belong to ∪Dreduct ,otherwise, a1 /∈ DA, a2 /∈ DA, a3 /∈ DA, then we can conclude the unnecessary attribute is a4, the relative attributes are a1, a2, a3."
    }, {
      "heading" : "5. The relationship among attributes",
      "text" : "Attribute reduct is based on the relationship between attributes, in essence. In this section, we will give the relationship between attributes and the attribute set. That may be useful for constructing a reduct.\nLet us give some kinds of marks for the relationship of two attributes in the following statements, and that is valid for two attribute sets.\nDefinition 5.1. In An information system (U,A), for two attributes a, b, we denote A < B, iff RA ⊆ RB, and that means the partition that generated by A is finer than by B. So we denote A ≈ B, if RA = RB, and that means they generate the same partition of U .\nDefinition 5.2. In An information system (U,A), for two attributes a, b, let we denote a ⊲⊳ b, iff for every reduct B, a ∈ B ⇔ b ∈ B.\nDefinition 5.3. In An information system (U,A), for attributes a and attribute set C, we denote C ⊲ a, iff for any reduct B, C ⊆ B ⇒ a /∈ B. That means if we pick C when constructing a reduct, then a needn’t be considered.\nSo from the definitions above, we can say that the propositions of a ⊲⊳ b with A⊲B, or B ⊲A can’t hold simultaneously.\nTheorem 5.1. In An information system (U,A), for two attributes a, b, A < B, iff ∀K ∈ N(b), a ∈ K, and iff a ∈ Neibor(b). A ≈ B iff N(a) = N(b), and iff a ∈ Neibor(b), b ∈ Neibor(a).\nProof. a < b ⇔ Ra ⊆ Rb ⇔ ∀K ∈ N(b),then a ∈ K.\nTheorem 5.2. In An information system (U,A), for two attributes a, b, a ⊲⊳ b, iff for any C ⊆ A, RC ⊆ Rb( RC ⊆ Ra), then RC ⊆ Ra( RC ⊆ Rb).\nProof. Sufficiency. If there exists a reduct B,satisfies a ∈ B,and b /∈ B, then RB ⊆ Rb, and RB * Ra.\nNecessity. Assume there exists a set C, C ⊆ A,and RC ⊆ Rb, but RC * Ra. If there is a reduct B,satisfies a ∈ B,then we can pick some C, C ⊆ A,and RC ⊆ Rb, RC * Ra,and C ∪ {a} belongs to some reduct.\nTheorem 5.3. In An information system (U,A), for two attributes a, b, a ⊲⊳ b, iff for C ⊆ A,and R(C∪{a}) ⊆ Rb ( R(C∪{b}) ⊆ Ra ), then RC ⊆ Ra ( RC ⊆ Rb).\nProof. Sufficiency. If there exists a reduct B, satisfies a ∈ B, and b /∈ B, then RB ⊆ Rb, and RB * Ra. Let C = B − {a}, then R(C∪{a}) ⊆ Rb, but RC * Ra.\nNecessity. Assume there exists a set C, C ⊆ A, and R(C∪{a}) ⊆ Rb, but RC * Ra. If there is a reduct B, satisfies a ∈ B, then we can pick some C, C ⊆ A,and R(C∪{a}) ⊆ Rb, RC * Ra, and C ∪{a} belongs to some reduct.\nIntuitively speaking, Theorem 4.4 means if for a reduct B, a ∈ B ⇒ b ∈ B, then for any set C, if the partition that generated by C ∪ {a} is finer than b, then C ∪ {a} can’t belongs to some reduct.\nCorollary 5.1. In An information system (U,A), for two attributes a, b, a ⊲⊳ b, iff for ∀K ∈ (N(b) − N(a)) ( ∀K ∈ (N(a) − N(b))), C ⊆ A,and C ∩K 6= ∅, then for ∀K ∈ (N(a) (∀K ∈ (N(b)) C ∩K 6= ∅.\nProof. For ∀K ∈ (N(b)−N(a)), C ∩K 6= ∅ ⇔ R(C∪{a}) ⊆ Rb. For ∀K ∈ N(a) , C ∩K 6= ∅⇔ RC ⊆ Ra. Then from Theorem 5.3, it concludes.\nFor a attribute set C and an attribute a, we have C a ⇒ C ⊲ a, but C ⊲ a ; C a. In the following, an example is given to illustrate this.\nExample 5.1. Let U = {1, 2, 3, 4, 5}, A = {a1, a2, a3} is a family of equivalence relations, and the partitions they generate are as follows.\nRa1 = {{1, 2, 3}, {4, 5}}, Ra2 = {{1, 2}, {3, 4, 5}}, Ra3 = {{1, 3}, {2, 4, 5}}.\nThe discernibility matrix is:\nU × U 1 2 3 4 5 1 ∅ {a3} {a2, a3} {a1, a2, a3} {a2, a3} 2 ∅ {a2, a3} {a1, a2} {a1, a2} 3 ∅ {a1, a3} {a1, a3} 4 ∅ ∅ 5 ∅\nThen N(a1) = {{a1, a2}, {a1, a3}, {a1, a2, a3}}, E(a1) = {{a3}, {a2, a3}}. All the reducts are {a1, a3} and {a2, a3}, so for any reduct B, if a2 ∈ B, then a1 /∈ B, so let C = {a2}, then C⊲a1, but the partition that generated by C is not finer than a1.\nThe next we give an equivalent conditions for C ⊲ a.\nTheorem 5.4. In An information system (U,A, V ), for attribute a, and attribute set C, C ⊲ a, iff any attribute set D, for ∀K ∈ {E(a) − N(C)}, satisfies D ∩K 6= ∅,then RC∪D ⊆ Ra,where N(C) = {d(x, y)|d(x, y) ∩ C 6= ∅, d(x, y) ∈ DA}.\nProof. Sufficiency. For any reduct B, then for ∀K ∈ {E(a) − N(C)}, satisfies B ∩ K 6= ∅. If C ⊆ B, then for ∀K ∈ E(a), satisfies B ∩ K 6= ∅, then RB ⊆ Ra, then a /∈ B. Necessity. If there exists an attribute set D, for ∀K ∈ {E(a) − N(C)}, satisfies D ∩ K 6= ∅, then for ∀K ∈ E(a), satisfies (C ∪D) ∩K 6= ∅, but RC∪D * Ra, that means to say there exists a K0 ∈ N(a) , (C ∪D) ∩K0 = ∅.\nIf C is contained in some reduct, then by Theorem 4.5, we can construct a reduct B, satisfies (C ∪ {a} ∪ RED(D)) ⊆ B, then a ∈ B.It contradicts with the condition of C ⊲ a.\n6. A kind of attribute reduct algorithm based on E(a)\nIn [3], Yao proposed a row-wise simplification reduct construction algorithm. His thought is described as follows:\nIt is based on the discernibility matrix M whose element in i−th row, j− th column is M(i, j). For an non-empty M(x, y), it ’s simplified into three steps. First, absorb M(i, j) by all the elements in M ,so there are not proper subset of M(i, j) in M . Secondly, select an attribute a in M(i, j) for constructing a reduct, and absorb elements in M by {a}.Thirdly,for all M(x, y) 6= ∅,M(x, y) ∈ M , let M(x, y) = M(x, y)−M(i, j). Then back to the first step to continue. In the end, a reduct is constructed. The row-wise simplification reduct construction algorithm proposed by Yao in [3] is recalled in the following: Input:The discernibility matrix M of an information table S. Output: A reduct R. for i = 2 to n do { for j = 1 to i− 1{ if M(i, j) 6= ∅{ //Absorb M(i, j) by every non-empty element in M for every non-empty element element M(x′, y′) ∈ M do if M(x′, y′) ⊆ M(i, j) then M(i, j) = M(x′, y′).\n//Divide M(i, j) into two parts select an attribute a from M(i, j); A = M(i, j)− {a}; M(i, j) = {a};\n//simplify every non-empty element in M for every non-empty element M(x′, y′) ∈ M do if a ∈ M(x′, y′) then M(x′, y′) = {a} ; else M(x′, y′) = M(x′, y′)−M(i, j) ; }// end if }// end for loop of j }// end for loop of i\nIn the section above, we point out that E(a) can decide the attribute a whether or not belongs to some reduct, so we construct a algorithm with the use of E(a) and the row-wise simplification reduct construction algorithm. The detailed algorithm is given in the following.\nIn the following,we denote a reduct set REDE(a) with respect to E(a) iff\nREDE(a) ⊆ ∪E(a), and for any K ∈ E(a), REDE(a) ∩K 6= ∅, and for any proper subset of REDE(a), that’s not true.\nA algorithm with respect to E(a): Input: The set CD of subsets of attributes transformed from the dis-\ncernibility matrix DA; //Let CD = {C(i); 1 6 i 6 N}, where N represents the number of nonempty-set elements in the discernibility matrix DA; so N 6 (n2 − n)/2, n is the cardinal of the object set U . Output: A reduct R. first let R = ∅ while ( C 6= ∅ ) first step: select an attribute a, a ∈ C(1) ; compute N(a), E(a); second step: compute a reduct respect to E(a) with the row-wise simplification reduct construction algorithm in [3]; we denote the reduct with respect toE(a) asREDE(a); let R = R ∪REDE(a); third step: if there exists a K ∈ N(a),such that REDE(a) ∩K = ∅; then let R = R ∩ {a}; else continue; forth step: for every C(i′) ∈ C, let C(i′) = C(i′)− ∪N(a); //because E(a) ⊆ ∪N(a), thus C(i′)− ∪N(a) = C(i′)− ∪N(a) − ∪E(a) if C = ∅; {Output R; // R is a reduct End.} else return; //goto the first step } } In the second step, we can also return to the first step to compute a reduct with respect to E(a), and so the absorption operation needn’t be used. We don’t give more description because of the limitation of length.\nTheorem 6.1. The algorithm respect to E(a) can construct a reduct of A.\nProof. In the second step of the algorithm, we can pick a reduct respect to E(a).\nAfter the third step, we can pick a reduct with respect to E(a) ∪N(a).\nIn the forth step,for C(i′) ∈ C, if C(i′) /∈ E(a) ∪ N(a), then C(i′) − ∪N(a) 6= ∅.\nFrom the method of induction, in the following of the operations of the algorithm, we will construct a reduct respect to C −E(a)−N(a).\nBecause after the forth step, for any C(i′) ∈ C, C(i′) 6= ∅, and for anyK ∈ N(a), orK ∈ E(a), such that C(i′)∩K = ∅, thus the union of the reduct with respect to E(a)∪N(a) and the reduct with respect to A−∪E(a)−∪N(a) is also a reduct.\nThen it’s easy to proof that’s a reduct of A.\nIn [3], Yao used an example to inspect the row-wise simplification reduct construction algorithm, now we will quote this example in [3] to exam the algorithm with respect to E(a).\nExample 6.1. The discernibility matrix is: U × U 1 2 3 4 5 6\n1 ∅ ∅ ∅ {a, b, f} {a, c} {a, d} 2 ∅ ∅ {c, d, f} {b, d} {b, c} 3 ∅ {b, e, f} {c, e} {d, e} 4 ∅ ∅ ∅ 5 ∅ ∅ 6 ∅\nThe steps that we use the algorithm are as follows: The set CD of subsets of attributes transformed from the discernibility\nmatrix DA is CD = {{a, b, f}, {a, c}, {a, d}, {c, d, f}, {b, d}, {b, c}, {b, e, f}, {c, e}, {d, e}}.\nfirst step: select the attribute a, a ∈ C(1) ; compute E(a) = {{c, d, f}, {b, d}, {b, c}}, N(a) = {{a, b, f}, {a, c}, {a, d}}.\nsecond step: compute a reduct respect to E(a) with the row-wise simplification reduct construction algorithm in[3]; then REDE(a) = {c, b}. Then R = REDE(a).\nthird step: because for {a, d} ∈ N(a),such that REDE(a) ∩ {a, d} = ∅,\nthen R = REDE(a) ∩ {a} = {a, b, c}; forth step: for every C(i′) ∈ C , let C(i′) = C(i′)− ∪N(a). Then CD = {{e}}. Then R = REDE(a) ∪ {e}; then R = {a, b, c, e}.\nComplexity analysis of algorithms: All the elements need the absorption operation in he row-wise simplification reduct construction algorithm, and the time that each absorption operation cost is about 0(n2), so that’s a complex operation. In the algorithm based on E(a), the absorption operation is performed only in E(a), but not in all the elements of the discernibility matrix. Otherwise, in the forth step,we let C(i′) = C(i′)−∪N(a),for every C(i′) ∈ C , so we can delete more attributes in the matrix, and remain the elements of the discernibility matrix with fewer attributes, So that may be more simple when constructing a reduct.\nThe thought of using E(a) in this algorithm is useful for attribute reduct. Because when we construct the reduct of E(a), then a must or can’t select is determined. In the next, we can delete the union of E(a) ,then the attribute set with fewer elements remained that is more simple.\nLet we study the complexity of the row-wise simplification reduct construction algorithm for Example 6.1 which is first used by Yao in [3].The algorithm traverses the discernibility matrix DA three times, and every time, the algorithm experienced the operations which contain absorption,partition for some attribute set,and inspection. So the total of times for the algorithm which used in Example 6.1 is about 36 ∗ 3 ∗ 3, where 36 is the number of the elements in the discernibility matrix DA.\nIn the algorithm based on E(a), the operations we experienced included computing E(a) and N(a), computing a reduct respect to E(a) with the rowwise simplification reduct construction algorithm, comparing REDE(a) with N(a), and for every C(i′) ∈ C, computing C(i′) = C(i′) − ∪N(a). So the total of times for this algorithm is about 9 ∗ 4 where 9 is the number of elements in CD in Example 6.1.\nIn the algorithm based on E(a), we only use the row-wise simplification reduct construction algorithm for E(a), and after we pick the reduct of E(a) and N(a),we will delete all the attribute in ∪N(a), then less attributes are left. The time complexity for the worst is about 0(n2 ∗ ln3n),\nSo this algorithm maybe more efficient when constructing a reduct for some cases."
    }, {
      "heading" : "7. Conclusion",
      "text" : "Attribute reduct is a NP-hard problem, many methods are proposed to to find all the reducts or a single reduct, but there haven’t the optimal solutions for it, so it’s still a problem worth of intensive researching. In some degree, constructing a reduct is based on the relationship between attributes. In this paper, we give the substantive conclusions of attribute character in terms of the relationship among attributes. We point out that the attribute is whether unnecessary or relative necessary is determined by the relationship between E(a) and N(a) in virtual, and whether unnecessary or relative necessary with respect to some reduct is determined by the relationship of this reduct, E(a) and N(a).\nFurthermore, we give some easy and clear description of the attribute features in topology. Besides, some relationships between attributes are given and that is helpful for constructing reducts. Finally, a method of attribute reduct is given based on E(a). This kind of thought is maybe useful for the further study of attribute reduct in rough set theory."
    }, {
      "heading" : "Acknowledgement",
      "text" : "The authors would like to thank the anonymous reviews for their constructive comments. This work is supported by grants from National Natural Science Foundation of China under Grant (Nos. 71140004, 10971186)."
    }, {
      "heading" : "5 (2011) 689-69.",
      "text" : "[12] W. Wu, Attribute reduction based on evidence theory in incomplete decision systems, Information sciences 178 (2008) 1355-1371. [13] Y. Yao, Constructive and algebra methods of theory of rough sets, Information sciences 109 (1998) 21-47. [14] L. Feng, T. Li, D. Ruan, S. Gou, A vague-rough set approach for uncertain knowledge acquisition Original Research Article, Knowledge-Based Systems 6 (2011) 837C843. [15] Y. Yao, Y. Zhao, Attribute Reduction in decision-theoretic rough set models, Information sciences 178 (2008) 3356-3373. [16] J. Wang, J. Wang, Reduction algorithms based on discernibility matrix: the ordered attributes method, Journal of Computer Science and Technology 16 (2001) 489-504. [17] K. Zhao, J. Wang, A reduction algorithm meeting users’ requirements, Journal of Computer Science and Technology 17 (2002) 578-593. [18] Y. Yao, Y. Zhao, J. Wang, S. Han, A model of machine learning based on user preference of attributes, Proceedings of International Conference on Rough Sets and Current Trends in Computing, 2006, pp. 587-596. [19] W. Zhang, J. Mi, W. Wu, Approaches to knowledge reductions in inconsistent systems, International Journal of Intelligent Systems 18 (2003) 989-1000. [20] Z. Pawlak, A. Skowron, Rough sets and boolean reasoning, Information Sciences 177 (2007) 41-73.\n[21] D. Chen, C. Zhang, Q. Hu, A new approach to attribute reduction of consistent and inconsistent covering decision systems with covering rough sets, Information Sciences 177 (2007) 3500-3518. [22] D. Ślezak, W. Ziarko, The investigation of the Bayesian rough set model, International Journal of Approximate Reasoning 40 (2005) 81-91. [23] Y. Qian, J. Liang, C. Dang, Knowledge structure, knowledge granulation and knowledge distance in a knowledge base, International Journal of Approximate Reasoning 50 (2009) 174-188. [24] T. Yang, Q. Li, The reduction and fusion of fuzzy covering systems based on the evidence theory, International Journal of Approximate Reasoning 53 (2012) 87-103. [25] M. Hall, G. Holmes, Bench marking attribute selection techniques for discrete class data mining, IEEE Transactions on Knowledge and Data Engineering 15 (2003) 1437-1447. [26] G. Liu, Generalized rough sets over fuzzy lattices, Information Sciences"
    }, {
      "heading" : "178 (2008) 1651-1662.",
      "text" : "[27] L. Zadeh, Fuzzy logic=computing with words, IEEE Transactions on Fuzzy Systems 4 (1996) 103-111. [28] Z. Pei, D. Pei, Li Zheng, Topology vs generalized rough sets, International journal of Approximate Reasoning 52 (2001) 231-239. [29] X. Li, S. Liu, Matroidal approaches properties of rough sets via closure operators, International Journal of Approximate Reasoning 53 (2012) 513- 527. [30] A. Salama, Some topological properties of rough sets with tools for data mining, International Journal of Computer Science 8 (2011) 588-595. [31] W. Zhu, Topological approaches to covering rough sets based on relations, Information sciences 177 (2007) 1499-1508. [32] Y. Chen, D. Miao, R. Zhang, K. Wu, A rough set approach to feature selection based on power trees, Knowledge-based Systems 24 (2011) 275-281. [33] W. Zhu, F. Wang, On three types of covering rough sets, IEEE Transactions on Knowledge and Data Engineering 19 (2007) 1131-1144."
    } ],
    "references" : [ {
      "title" : "Rough sets",
      "author" : [ "Z. Pawlak" ],
      "venue" : "International Journal of Computer and Information Sciences 11 ",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 1982
    }, {
      "title" : "Rough sets: theoretical aspects of reasoning about data",
      "author" : [ "Z. Pawlak" ],
      "venue" : "Kluwer Academic Publishers, Dordrecht, MA",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1991
    }, {
      "title" : "Discernibility matrix simplification for constructing attribute reducts",
      "author" : [ "Y. Yao", "Y. Zhao" ],
      "venue" : "Information sciences 179 ",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Uncertain decision making based on rough sets",
      "author" : [ "W. Zhang", "G. Qiou" ],
      "venue" : "Publishing Company of Qinghua University",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "Approximations in the space (U",
      "author" : [ "W. Zakowski" ],
      "venue" : "π) , Demonstratio Mathematica 16 ",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 1983
    }, {
      "title" : "C.Rauszer, The discernibility matrices and functions in information systems, in: R.Slowiński(Ed.), Intelligent Decision Support, Handbook of Applications and Advances of the Rough Sets",
      "author" : [ "A. Skowron" ],
      "venue" : null,
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 1992
    }, {
      "title" : "The theory of topology spaces[M",
      "author" : [ "G. Gao" ],
      "venue" : "Science Publishing Company of Beijing",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Introduction to special issues on data mining and granular computing",
      "author" : [ "T. Lin" ],
      "venue" : "International Journal of Approximate Reasoning 40 ",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "y",
      "author" : [ "J. Mi" ],
      "venue" : "Leung, W. Wu, An uncertainty measure in partition-based fuzzy rough sets,International Journal of Approximate Reasoning 34 ",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "A rough set approach for the discovery of classi?cation rules in interval-valued information systems, International",
      "author" : [ "Yee. Leung", "Manfred M. Fischer", "W. Wu", "J. Mi" ],
      "venue" : "Journal of Approximate Reasoning",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2008
    }, {
      "title" : "Fuzzy rough set based attribute reduction for information systems with fuzzy decisions",
      "author" : [ "Q. He", "C. Wu", "D. Chen", "S. Zhao" ],
      "venue" : "Knowledge-Based Systems 5 ",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Attribute reduction based on evidence theory in incomplete decision systems",
      "author" : [ "W. Wu" ],
      "venue" : "Information sciences 178 ",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Constructive and algebra methods of theory of rough sets",
      "author" : [ "Y. Yao" ],
      "venue" : "Information sciences 109 ",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 1998
    }, {
      "title" : "A vague-rough set approach for uncertain knowledge acquisition Original Research Article",
      "author" : [ "L. Feng", "T. Li", "D. Ruan", "S. Gou" ],
      "venue" : "Knowledge-Based Systems 6 ",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Attribute Reduction in decision-theoretic rough set models",
      "author" : [ "Y. Yao", "Y. Zhao" ],
      "venue" : "Information sciences 178 ",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Reduction algorithms based on discernibility matrix: the ordered attributes method",
      "author" : [ "J. Wang", "J. Wang" ],
      "venue" : "Journal of Computer Science and Technology 16 ",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "A reduction algorithm meeting users’ requirements",
      "author" : [ "K. Zhao", "J. Wang" ],
      "venue" : "Journal of Computer Science and Technology 17 ",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "A model of machine learning based on user preference of attributes",
      "author" : [ "Y. Yao", "Y. Zhao", "J. Wang", "S. Han" ],
      "venue" : "Proceedings of International Conference on Rough Sets and Current Trends in Computing",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "Approaches to knowledge reductions in inconsistent systems",
      "author" : [ "W. Zhang", "J. Mi", "W. Wu" ],
      "venue" : "International Journal of Intelligent Systems 18 ",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2003
    }, {
      "title" : "Rough sets and boolean reasoning",
      "author" : [ "Z. Pawlak", "A. Skowron" ],
      "venue" : "Information Sciences 177 ",
      "citeRegEx" : "20",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "A new approach to attribute reduction of consistent and inconsistent covering decision systems with covering rough sets",
      "author" : [ "D. Chen", "C. Zhang", "Q. Hu" ],
      "venue" : "Information Sciences 177 ",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "The investigation of the Bayesian rough set model",
      "author" : [ "D. Ślezak", "W. Ziarko" ],
      "venue" : "International Journal of Approximate Reasoning 40 ",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "Knowledge structure",
      "author" : [ "Y. Qian", "J. Liang", "C. Dang" ],
      "venue" : "knowledge granulation and knowledge distance in a knowledge base, International Journal of Approximate Reasoning 50 ",
      "citeRegEx" : "23",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "The reduction and fusion of fuzzy covering systems based on the evidence theory",
      "author" : [ "T. Yang", "Q. Li" ],
      "venue" : "International Journal of Approximate Reasoning 53 ",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Bench marking attribute selection techniques for discrete class data mining",
      "author" : [ "M. Hall", "G. Holmes" ],
      "venue" : "IEEE Transactions on Knowledge and Data Engineering 15 ",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 2003
    }, {
      "title" : "Generalized rough sets over fuzzy lattices",
      "author" : [ "G. Liu" ],
      "venue" : "Information Sciences 178 ",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Fuzzy logic=computing with words",
      "author" : [ "L. Zadeh" ],
      "venue" : "IEEE Transactions on Fuzzy Systems 4 ",
      "citeRegEx" : "27",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Li Zheng",
      "author" : [ "Z. Pei", "D. Pei" ],
      "venue" : "Topology vs generalized rough sets, International journal of Approximate Reasoning 52 ",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Matroidal approaches properties of rough sets via closure operators",
      "author" : [ "X. Li", "S. Liu" ],
      "venue" : "International Journal of Approximate Reasoning 53 ",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Some topological properties of rough sets with tools for data mining",
      "author" : [ "A. Salama" ],
      "venue" : "International Journal of Computer Science 8 ",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Topological approaches to covering rough sets based on relations",
      "author" : [ "W. Zhu" ],
      "venue" : "Information sciences 177 ",
      "citeRegEx" : "31",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "A rough set approach to feature selection based on power trees",
      "author" : [ "Y. Chen", "D. Miao", "R. Zhang", "K. Wu" ],
      "venue" : "Knowledge-based Systems 24 ",
      "citeRegEx" : "32",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "On three types of covering rough sets",
      "author" : [ "W. Zhu", "F. Wang" ],
      "venue" : "IEEE Transactions on Knowledge and Data Engineering 19 ",
      "citeRegEx" : "33",
      "shortCiteRegEx" : null,
      "year" : 2007
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Rough set theory originally proposed by Pawlak [1][2], provides an effective method to deal with imprecision and vague in information system.",
      "startOffset" : 47,
      "endOffset" : 50
    }, {
      "referenceID" : 1,
      "context" : "Rough set theory originally proposed by Pawlak [1][2], provides an effective method to deal with imprecision and vague in information system.",
      "startOffset" : 50,
      "endOffset" : 53
    }, {
      "referenceID" : 17,
      "context" : "Because of voluminous data that always generates in information system, multi-granular Rough set is very important as a basic Processing method, and has very widely applications in process control, conflict analysis, data mining, data fusion technique [18, 19, 20, 21].",
      "startOffset" : 252,
      "endOffset" : 268
    }, {
      "referenceID" : 18,
      "context" : "Because of voluminous data that always generates in information system, multi-granular Rough set is very important as a basic Processing method, and has very widely applications in process control, conflict analysis, data mining, data fusion technique [18, 19, 20, 21].",
      "startOffset" : 252,
      "endOffset" : 268
    }, {
      "referenceID" : 19,
      "context" : "Because of voluminous data that always generates in information system, multi-granular Rough set is very important as a basic Processing method, and has very widely applications in process control, conflict analysis, data mining, data fusion technique [18, 19, 20, 21].",
      "startOffset" : 252,
      "endOffset" : 268
    }, {
      "referenceID" : 20,
      "context" : "Because of voluminous data that always generates in information system, multi-granular Rough set is very important as a basic Processing method, and has very widely applications in process control, conflict analysis, data mining, data fusion technique [18, 19, 20, 21].",
      "startOffset" : 252,
      "endOffset" : 268
    }, {
      "referenceID" : 5,
      "context" : "A beautiful and efficient method was introduced by Skowron and Rauszer [6] which is the discernibility matrix of the information system (U,A), where DA = {dA(x, y)|x, y ∈ U}, dA(x, y) = {a ∈ A|Va(x) 6= Va(y)}.",
      "startOffset" : 71,
      "endOffset" : 74
    }, {
      "referenceID" : 21,
      "context" : "Many scholars devote to study this issues [11−14], [22, 23].",
      "startOffset" : 51,
      "endOffset" : 59
    }, {
      "referenceID" : 22,
      "context" : "Many scholars devote to study this issues [11−14], [22, 23].",
      "startOffset" : 51,
      "endOffset" : 59
    }, {
      "referenceID" : 2,
      "context" : "In [3], Yao and Zhao discussed the reduct by discernibility matrix simplification.",
      "startOffset" : 3,
      "endOffset" : 6
    }, {
      "referenceID" : 2,
      "context" : "Otherwise, another reduct construction algorithm based on matrix simplification is proposed in [3].",
      "startOffset" : 95,
      "endOffset" : 98
    }, {
      "referenceID" : 3,
      "context" : "Otherwise, In [4], Zhang and Qiu depart the attributes into three types based on the relationship with attribute reduct which contain core, relative necessary and unnecessary attributes.",
      "startOffset" : 14,
      "endOffset" : 17
    }, {
      "referenceID" : 2,
      "context" : "Moreover, combined with the row-wise simplification reduct construction algorithm in [3], we construct a algorithm based on E(a).",
      "startOffset" : 85,
      "endOffset" : 88
    }, {
      "referenceID" : 2,
      "context" : "In the last of this paper, we give a reduct algorithm based on E(a), and analysis it’s efficiency through an example in [3].",
      "startOffset" : 120,
      "endOffset" : 123
    }, {
      "referenceID" : 0,
      "context" : "Paper [1, 16] introduced a new definition for binary relation-based rough sets.",
      "startOffset" : 6,
      "endOffset" : 13
    }, {
      "referenceID" : 15,
      "context" : "Paper [1, 16] introduced a new definition for binary relation-based rough sets.",
      "startOffset" : 6,
      "endOffset" : 13
    }, {
      "referenceID" : 27,
      "context" : "(Lower approximation) The covering lower approximation operation R∗ : P (U) ⇒ P (U) is defined as R∗(X) = ⋃ K∈C∧K⊆X K[28].",
      "startOffset" : 117,
      "endOffset" : 121
    }, {
      "referenceID" : 5,
      "context" : "[6] In an information system (U,A), attribute a ∈ A is a core iff there exists some d{x, y}, x, y ∈ U , d{x, y} ∈ DA, such that d{x, y} = {a} iff RA−{a} 6= RA.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] In an information system (U,A), we have the conclusions as follows: (1) a ∈ A is a relative necessary attribute iff RA−{a} = RA, and ∪{RB−{a} * Ra ,where RB ⊆ RA, B ⊆ A}.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 6,
      "context" : "For two class of power set A and B of X, A,B ∈ 2 , we call A precise-refines B iff for any KA ∈ A, KA ⊆ KB, for some KB ∈ B, and for any KB ∈ B there exists some KA ∈ A, such that KA ⊆ KB[7].",
      "startOffset" : 187,
      "endOffset" : 190
    }, {
      "referenceID" : 2,
      "context" : "In [3], Yao proposed a row-wise simplification reduct construction algorithm.",
      "startOffset" : 3,
      "endOffset" : 6
    }, {
      "referenceID" : 2,
      "context" : "The row-wise simplification reduct construction algorithm proposed by Yao in [3] is recalled in the following: Input:The discernibility matrix M of an information table S.",
      "startOffset" : 77,
      "endOffset" : 80
    }, {
      "referenceID" : 2,
      "context" : "struction algorithm in [3]; we denote the reduct with respect toE(a) asREDE(a); let R = R ∪REDE(a); third step: if there exists a K ∈ N(a),such that REDE(a) ∩K = ∅; then let R = R ∩ {a}; else continue; forth step: for every C(i) ∈ C, let C(i) = C(i)− ∪N(a); //because E(a) ⊆ ∪N(a), thus C(i)− ∪N(a) = C(i)− ∪N(a) − ∪E(a) if C = ∅; {Output R; // R is a reduct End.",
      "startOffset" : 23,
      "endOffset" : 26
    }, {
      "referenceID" : 2,
      "context" : "In [3], Yao used an example to inspect the row-wise simplification reduct construction algorithm, now we will quote this example in [3] to exam the algorithm with respect to E(a).",
      "startOffset" : 3,
      "endOffset" : 6
    }, {
      "referenceID" : 2,
      "context" : "In [3], Yao used an example to inspect the row-wise simplification reduct construction algorithm, now we will quote this example in [3] to exam the algorithm with respect to E(a).",
      "startOffset" : 132,
      "endOffset" : 135
    }, {
      "referenceID" : 2,
      "context" : "second step: compute a reduct respect to E(a) with the row-wise simplification reduct construction algorithm in[3]; then REDE(a) = {c, b}.",
      "startOffset" : 111,
      "endOffset" : 114
    }, {
      "referenceID" : 2,
      "context" : "1 which is first used by Yao in [3].",
      "startOffset" : 32,
      "endOffset" : 35
    } ],
    "year" : 2015,
    "abstractText" : "The research of attribute characters in information system which contains core, necessary, unnecessary is a basic and important issue in attribute reduct. Many methods for the judgement of attribute characters are based on the relationship between the objects and attributes. In this paper, a new type of judgement theorems which are absolutely based on the relationship among attributes is proposed for the judgement of attribute characters. The method is through comparing the two new attribute sets E(a) and N(a) with respect to the designated attribute a which is proposed in this paper. We conclude that which type of the attribute a belongs to is determined by the relationship between E(a) and N(a) in essence. Secondly, more concise and clear results are given about the judgment of the attribute characters through analyzing the properties of refinement and precise-refinement between E(a) andN(a) in topology. In addition, the relationship among attributes are discussed which is useful for constructing a reduct in the last section of this paper. In the last, we propose a reduct algorithm based on E(a), and this algorithm is an extended application of the analysis of attribute characters above.",
    "creator" : "LaTeX with hyperref package"
  }
}