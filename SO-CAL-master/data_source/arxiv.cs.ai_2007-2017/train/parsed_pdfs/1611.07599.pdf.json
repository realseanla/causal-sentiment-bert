{
  "name" : "1611.07599.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Efficient Delivery Policy to Minimize User Traffic Consumption in Guaranteed Advertising∗",
    "authors" : [ "Jia Zhang", "Zheng Wang", "Qian Li", "Jialin Zhang", "Yanyan Lan", "Qiang Li", "Xiaoming Sun" ],
    "emails" : [ "sunxiaoming}@ict.ac.cn", "3zwang@cs.hku.hk" ],
    "sections" : [ {
      "heading" : "Introduction",
      "text" : "Online advertising is now an industry which is worth tens of billions of dollars. According to the latest report released by Interactive Advertising Bureau (IAB 2016), the annual revenue of online advertising in the US reaches $59.6 billion in 2015, which is $10.1 billion (or 20.4%) higher than that in 2014. In online advertising, ad exposures (also called impressions) are sold in two major ways: either in spot through auction (real-time bidding, or RTB) or in advanced by guaranteed contracts (guarantee delivery, or GD) (Chen, Yuan, and Wang 2014). Although RTB is developing rapidly, only 13% of publishers’ revenue is generated by RTB by the year 2012 (eMarketer 2012). Large amounts of ad exposures are still sold through GD. ∗This work was supported in part by the National Natural Science Foundation of China Grant 61222202, 61433014, 61502449, 61602440 and the China National Program for support of Topnotch Young Professionals. Copyright c© 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nGD is usually adopted by top tier advertisers (Apple, P&G, Coca-Cola etc.) and publishers (Yahoo!, Amazon etc.). Generally, top tier publishers have frequently visited web pages and large amounts of first-hand user data. These resources are valuable, and undoubtedly, heavily attractive for advertisers, especially for those top tier advertisers. When promoting their products or brands, top tier advertisers usually prefer to sign a contract with publisher of high quality to ensure advertising effects. This contract contains targeted user types (what kinds of users the ads can only be displayed to) and the amount of exposures of corresponding ad to those targeted users. Publisher should comply with this contract and is paid when this contract is satisfied.\nPrevious works in GD domain usually focus on meeting the requirements of all contracts. Specifically, they perform study on designing delivery policy to minimize some loss functions, which are related to unsatisfied contracts and other particular requirements such as representativeness and smoothness of delivery (Chen et al. 2012; Lefebvre, Contournet, and Crivelli 2012). In this work we propose a novel optimization model, in which the primary target is to minimize the user traffic1 within the constraint of satisfying all exposure requirements. Compared to previous model, this model has more practical value: • For most publishers, the redundant user traffic2 will be\nsold in exchange market to avoid waste. However, compared with contract orders, selling user traffic in exchange market is usually less profitable. User traffic consumption for all contracts is minimized implies that more contracts can be accepted. Consequently, the proportion of user traffic sold to exchange market is decreased.\n• Under the consumption minimization model, the amount of required user traffic can be estimated when the delivery policy is properly designed. This estimation can be viewed as an important indicator for publishers to predict how much user traffic is redundant or short. Then, publishers can sell or purchase user traffic in bulk, which is more profitable than doing that in scattered.\n• The estimation for user traffic consumption is also useful for order management. When a particular contract comes, 1The page views of users on the publish platform. 2The part of user traffic that is not targeted by any contract or corresponding contracts are already satisfied.\nar X\niv :1\n61 1.\n07 59\n9v 1\n[ cs\n.D S]\n2 3\nN ov\n2 01\npublisher can make decision on whether to accept it based on the change of user traffic consumption."
    }, {
      "heading" : "Contributions",
      "text" : "In this work we propose a practical consumption minimization model for Guarantee Delivery. Under this model, we provide the theoretical analysis and design a near optimal delivery policy. Our contributions mainly consist of two parts which are listed as follows.\nTheoretical analysis for optimal expected user traffic consumption. By employing some fundamental results in stopping theory, we prove that the optimal offline expected user traffic consumption is lower bounded by an expected flow (THEOREM 1). This is shown to be very useful for performance measurement of delivery policies. Besides, we construct an optimal online delivery policy based on a recursion. However, solving this recursion needs exponential time, which motivates us to design more efficient approximation delivery policy.\nEfficient near optimal delivery policy. Inspired by some insights derived from the proof of lower bound for optimal offline user traffic consumption, we design a flow based delivery policy (ALGORITHM 1) in the online setting. This delivery policy has several advantages: (i) It consumes nearly as least as possible user traffic to sat-\nisfy all exposure requirements. Let n stand for the number of user types. If the total amount of all ads exposures is large enough, which is a realistic assumption in practice, the delivery policy achieves a near optimal competitive ratio 1 + 1poly(n) (THEOREM 2).\n(ii) It is robust on the priori knowledge of user type distribution. As this distribution is learned from history data, it usually has a bias compared to the real one. It is a concern that whether this bias will influence the delivery efficiency significantly. For this issue, we provide a robustness result indicating that when the bias between the learned user type distribution and the ground truth is bounded, the loss on delivery efficiency is also bounded (THEOREM 3).\n(iii) Besides ad delivery, our policy can estimate user traffic consumption as well (THEOREM 2). As aforementioned, this estimation is very useful for order and traffic management.\n(iv) Our delivery policy is also flexible. It can be easily implemented to reach some other requirements, such as representativeness and smoothness of delivery (REMARK 1.). According to simulation experiments, our delivery policy works well under different settings and outperforms other delivery policies including the well known HWM policy (Chen et al. 2012)."
    }, {
      "heading" : "Related Works",
      "text" : "Online advertising is a hot topic concerned by researchers in both economic and computer science communities. We discuss the line of works that are most related to our paper.\nThe GD problem has been well studied as a special version of online assignment in theoretical domain. The classical online assignment problem studies adversary (or worst\ncase) setting, such as (Karp, Vazirani, and Vazirani 1990; Mehta et al. 2007). Some generalizations take distribution information into account. In the work (Feldman et al. 2009), the authors study the online matching problem when types of users are drawn independently from a known distribution, which is similar to our setting. However, their target is to maximize the matching size when there are n users in total. They propose an algorithm with competitive ratio 0.6702. This result is improved by works such as (Bahmani and Kapralov 2010; Jaillet and Lu 2013). Correspondingly, authors in the work (Karande, Mehta, and Tripathi 2011) study the online matching problem when the distribution of user types is unknown. In the work (Vee, Vassilvitskii, and Shanmugasundaram 2010), the authors propose the online allocation problem with forecast and suppose there is a sample set of vertices that will come online. They provide a general framework to optimize several object functions which satisfy some constraints. According to (Chen et al. 2012), this framework is sensitive to the accuracy of the forecast and requires solving a non-linear convex problem. We refer to the survey (Mehta 2012) for a systemic view.\nSome more practical works have also been done in this field. In the work (Chen et al. 2012), the authors propose a delivery policy which is called High Water Mark (or HWM). It is efficient, space saving and stateless so that can run in parallel on distributed machines. However, it is not designed to optimize the user traffic consumption. Numerical results in the experimental part of our work show that HWM is not good enough when considering user traffic consumption. In the work (Lefebvre, Contournet, and Crivelli 2012), the authors design a policy called SHALE, which can be treated as an improvement of HWM. Actually, SHALE achieves a better performance on delivery with a loss on efficiency. However, SHALE is a heuristic algorithm, and usually needs specific number of iterations, which is sensitive to input, to get good enough results. A common problem for HWM and SHALE is that expected user traffic consumption is hard to estimated. Both HWM and SHALE take representativeness into consideration, which means ads in one campaign should be delivered somehow fairly to users among all targeted user types, instead of only partial types. Besides, user reach (the number of different individuals who see the ad) and delivery frequency (the number of times a user should see the ad) are also concerned by some works (Turner et al. 2014; Shen, Li, and Chen 2014).\nIn this work, we assume the user type distribution D is known in advance and the types of users are sampled from this distribution, while in other works, such as (Cetintas, Chen, and Si 2013; Cetintas et al. 2011), authors study how to estimate user traffic in a particular period. Another line of works concern the pricing mechanism and revenue maximization in GD (Bharadwaj et al. 2010; Radovanovic and Heavlin 2012). In the work (Bharadwaj et al. 2010), two algorithms are provided to calculate the price of each guaranteed contract based on the price of each targeted user.\nAs RTB is adopted by more and more publishers, some works study how to combine RTB and GD to make more profit. In the work (Ghosh et al. 2009), publishers are considered to act as bidders for guaranteed contracts. In\nworks (Araman and Popescu 2010; Balseiro et al. 2011; Chen, Yuan, and Wang 2014), a similar framework is considered that publishers can dynamically select which ad campaign contract to accept. In the work (Chen, Yuan, and Wang 2014), it is shown that RTB and GD can be seamlessly combined programmatically and the authors provide some results about what percentages of user traffic should be sold in GD and what the price is."
    }, {
      "heading" : "Consumption Minimization Model",
      "text" : "In guaranteed delivery (GD) scenario, users are categorized into a set of atomic types according to their traits, e.g., geographic, gender, age etc. Atomic means each user visiting the publish platform can only belong to a unique type. Each advertiser has one or more ad campaigns and each campaign corresponds to a contract with publisher. The contract specifies how many times the corresponding ad should be exposed and the set of targeted user types. See Figure 1 as an example. The first ad campaign reserves 200 thousand exposures and all users at the age of 20 to 25 are targets of this campaign. Thus when a user who satisfies this requirement visits the platform, corresponding ad can be displayed to this user.\nFormally speaking, the ad campaigns and user types relationship can be modeled as a demand-supply graph G = (A,U,E) with |A| = m and |U | = n. The nodes in A stand for m ad campaigns, while nodes in U stand for n atomic user types. For each ad campaign ai ∈ A and user type uj ∈ U , the edge (ai, uj) ∈ E means that uj is targeted by ai. Conventionally, for any v ∈ A ∪ U , we use Γ(v) to stand for the neighbors of v in G. Wi stands for total amount of exposures that ai reserves in the contract. We denote W = {W1,W2, · · · ,Wm} for convenience, and let M , ∑m i=1Wi. Under the GD setting, we can safely assume M n. We assume the users come one by one online. Once a user visits the publish platform, her type is revealed and the publisher should irrevocably deliver only one ad3. Usually, there are large amounts of users’ visiting logs available on the publish platform, thus, we assume that each user type is drawn from a distribution D = {pj | 1 ≤ j ≤ n} which can be learned from those log data. That’s to say, for any unseen user, she belongs to type uj with probability pj , which satisfies ∑n j=1 pj = 1. We define pmin (resp. pmax) as the minimum (resp. maximum) arrival probability. D is consid-\n3Our model and policy can be easy extended to meet multiple delivery requirement. See supplemental material for detail.\nered as a part of the input. Thus, the input instance I is a triple (G,W,D).\nOur objective is to design an ads delivery policy to minimize the expectation of user traffic consumed. Here the user traffic consumed means the number of users’ visits when all contracts are fulfilled. It is a random variable due to the uncertainty of user traffic and the delivery policy. This is the consumption minimization problem for user traffic (abbreviated as CMPUT). For a delivery policy π, we employ the concept of competitive ratio to measure its performance. We say π has a competitive ratio c if and only if for any input instance, E(π)E(OPT ) ≤ c, where E(π) is the expected user traffic consumed by policy π and E(OPT ) is the expectation of optimal user traffic consumption when the publisher is allowed to modify previous delivery decisions. We also call E(OPT ) optimal offline expected user traffic consumption.\nWe provide several important definitions for further analysis. Given an input instance I = (G,W,D) and a nonnegative number T , we can construct an expected network FG(T ) by adding two nodes s (source) and t (sink) into G and set the capacities as follows. For ai ∈ A, we connect s with ai and set the capacity of the edge (s, ai) as Wi. For uj ∈ U , we connect t with uj and set the capacity of the edge (uj , t) as Tpj . For those edges in E, we just set their capacities as M . Let MAX-FLOW(FG(T )) stand for the maximum flow that can pass through FG(T ). Zflow is defined as the minimum value of T that satisfies MAX-FLOW(FG(T )) = M ."
    }, {
      "heading" : "Theoretical Analysis",
      "text" : "In this section we first prove a lower bound of the optimal offline expected user traffic consumption, and then construct an optimal online policy based on a recursion which needs exponential time to solve. To beat this hardness we develop an efficient and near optimal flow based policy."
    }, {
      "heading" : "Lower Bound for Optimal Offline User Traffic Consumption",
      "text" : "The main tool we employ to develop our lower bound is Wald’s identity (Wald 1944). Wald’s identity is a foot stone in optimal stopping theory. Here we use a variant introduced in work (Blackwell 1946), and it can be described as follow.\nWald’s Identity. Let X1, X2, · · · be i.i.d. random variables withE(X1) <∞, and let τ be a stopping rule which is independent withXτ+1, Xτ+2, · · · and satisfiesE(τ) <∞, then there has E( ∑τ i=1Xi) = E(τ)E(X1).\nTo use Wald’s Identity, we need an upper bound of E(OPT ). Consider a simple delivery policy called RANDOM, in which each ad campaign ai is expanded as Wi ads. These ads target the same types of users and each of them needs to be exposed only once. When a user that belongs to uj comes, RANDOM uniformly chooses one ad from all valid ones waiting for exposure. For each uj , denote W (uj) = ∑ ai∈Γ(uj)Wi, we have the following result. Proposition 1.\nE(RANDOM) ≤ ∫ ∞\n0 (1− m∏ i=1 (1− e −t ∑ uj∈Γ(ai) pj W (uj) )Wi)dt.\nProof. In RANDOM, each expanded ad will be delivered with probability ∑ uj∈Γ(ai) pj W (uj)\nwhen the first user comes. This probability will increase with more and more ads are delivered. If we fix the probability just as∑ uj∈Γ(ai) pj W (uj)\n, the GD problem is reduced to the nonuniform coupon collection problem, and according to the work (Flajolet, Gardy, and Thimonier 1992), the expected user traffic consumption can be calculated by an integral as shown in this proposition. Clearly, this integral will converge to a value, which is an upper bound of E(RANDOM).\nAccording to above proposition, E(OPT ) ≤ E(RANDOM) <∞.\nDenote Uj as the number of users belong to type uj when all contracts are fulfilled and let [n] stand for the set {1, 2, · · · , n}. We can use Wald’s Identity to show the following proposition.\nProposition 2. E(Uj) = pjE(OPT ) for any j ∈ [n].\nProof. This is a direct application of Wald’s Identity. Fix any j ∈ [n], define\nXt = { 1, the t-th user belongs to type uj , 0, otherwise.\nWe can find that {Xt}t≥1 is a sequence of i.i.d. random variables and E(Xt) = pi < ∞. In addition, the stopping time of the policy, i.e. OPT is independent of XOPT+1, XOPT+2, · · · and E(OPT ) < ∞. Thus E(Uj) = E (∑OPT t=1 Xt ) = pjE(OPT ).\nTheorem 1. For any input instance, E(OPT ) ≥ Zflow.\nProof. According to the definition of Zflow and the property of maximum flow, there exists a subset S ⊆ A such that∑ ai∈SWi ≥ ∑ uj∈Γ(S) pjZflow, where Γ(S) ⊆ U is the set of user types targeted by ad campaigns in S. Otherwise, Zflow can be decreased to a smaller value which still satisfies MAX-FLOW(FG(Zflow)) = M. It is a contradiction to the definition of Zflow.\nOn the other hand, the delivery procedure can stop only if the ad corresponding to campaign ai has been delivered Wi times, thus ∑ uj∈Γ(S) Uj is always no less than ∑ ai∈SWi.\nAccording to PROPOSITION 2, we have E(Uj) = pjE(OPT ) for any i ∈ [n], thus∑\nuj∈Γ(S)\npjE(OPT ) = E ∑\nuj∈Γ(S)\nUj ≥ ∑\nuj∈Γ(S)\npjZflow,\nwhich implies E(OPT ) ≥ Zflow."
    }, {
      "heading" : "Optimal Online Delivery Policy",
      "text" : "Suppose the first user comes with type uj . If no ad campaign targets uj , nothing will be delivered to this user; otherwise, the delivery policy should decide which ad in Γ(uj) will be delivered. It is easy to argue that if Γ(uj) is not empty, delivering nothing can not be better than delivering any arbitrary ad to the user. Suppose ai ∈ Γ(uj) is delivered, then the problem is reduced to a sub problem in which\nad ai should be delivered Wi − 1 times. For convenience, we construct an input I(i) = (G,W (i),D), where W (i) = {W1, . . . ,Wi−1,max{0,Wi − 1},Wi+1, . . . ,Wm}. Based on above analysis, in the optimal online delivery policy π∗, ai must be chosen to satisfy that ai = arg minak∈Γ(uj)E (π\n∗(I(k))), where E(π∗(I(k))) stands for expected user traffic consumed by π∗ on input instance I(k). According to the properties of conditional expectation, we have E(π∗(I)) = 1 +∑n j=1 pj minai∈Γ(uj)E(π\n∗(I(i))). Thus, π∗ can be constructed from bottom to top by dynamic programming (DP). However, it is easy to check that there are ∏m i=1(Wi + 1) sub problems in this DP. Thus, exponential time is needed to construct π∗ in this way. In fact, we believed that π∗ is hard to construct in any way. This motivates us to design some delivery policies with polynomial running time."
    }, {
      "heading" : "Delivery Policy Design for CMPUT",
      "text" : "According to previous analysis, Zflow is highly related to E(OPT ). It somehow reminds us to use expected flow to guide ads delivery. Inspired by this insight, we design a flow based delivery policy.\nFlow Based Delivery Policy As shown in ALGORITHM 1, the flow based delivery policy can be divided into two parts: the offline part and the online part. In the offline part, we first construct an expected network with integer capacities on all edges, that’s F̂G(Ẑ) used in ALGORITHM 1. The difference between FG(Ẑ) and F̂G(Ẑ) lies in that the capacity of edge (uj , t) is set to be dẐpje for j ∈ [n] in the latter. Then we find the minimum value of Ẑ while ensuring the max flow on F̂G(Ẑ) is no less than M . To find such a value of Ẑ, we extend the idea of binary search, that’s to say, we enumerate a value Ẑ, and calculate MAX-FLOW(F̂G(Ẑ)), then adjust the value of Ẑ with a similar idea of binary search. According to the properties of maximum flow, the traffic on each edge in maximum flow is a non-negative integer when the capacities of all edges are integers. This is why we use F̂G(Ẑ) instead of FG(Ẑ). In the online part, when a user comes, we deliver a proper ad according to the maximum flow of F̂G(Ẑ).\nNote that we haven’t specified how to deliver an ad according to the maximum flow of F̂G(Ẑ) in the line 23. Actually, FLOW-BASED-DELIVERY-RULE stands for a class of delivery rules which satisfy that when there are no less than dẐpje users of type uj come to the publish platform, either all ads of ai are delivered or no less than Ci,j ads of ai are delivered to users of type uj . We can implement a FLOW-BASED-DELIVERY-RULE according to particular requirements, such as representativeness and smoothness of delivery. Here we give a simple implementation in ALGORITHM 2.\nNext, we will prove that the performance of ALGORITHM 1 is quite good by showing that it is close to the lower bound provided in THEOREM 1 whenMpmin = Ω(n−ε) for ε > 0. The main tool we employ is the Chernoff Bound, which is an important tool in probability theory. Besides the Chernoff Bound, the full proof of THEOREM 2 mainly depends\non delicate analysis of expectation. We leave this proof in supplemental material due to space limitation.\nAlgorithm 1: Expected Flow Based Delivery Policy 1INPUT: I = (G,W,D). 2OFFLINE PART: 3 Set Ẑ ←M/2. 4 repeat 5 Set Ẑ ← 2Ẑ. 6 Construct an expected network F̂G(Ẑ). 7 until MAX-FLOW(F̂G(N̂)) ≥M ; 8 Set Begin← Ẑ/2, End← Ẑ. 9 repeat\n10 Set Mid← (Begin+ End)/2. 11 if MAX-FLOW(F̂G(N̂)) < M then 12 Set Begin←Mid+ 1. 13 else 14 Set End←Mid. 15 until Begin ≥ End; 16 Set Ẑ ← Begin. 17 for each (ai, uj) ∈ E do 18 Set Ci,j as the traffic passing through (ai, uj) in\nthe maximum flow of F̂G(Ẑ). 19ONLINE PART: 20 for each user comes to the publish platform do 21 if M = 0 then exit. 22 Suppose uj is the type of this user. 23REM Set i← FLOW-BASED-DELIVERY-RULE(uj). 24IF if i = NULL then 25 Taking this user for other purpose.\n26 Deliver an ad of ai to current user. 27 Set Wi ←Wi − 1 and M ←M − 1.\nAlgorithm 2: GREEDY-DELIVERY-RULE 1GREEDY-DELIVERY-RULE(uj) 2 Set i′ ← arg maxai∈Γ(uj),Wj>0 {Ci,j}. 3 if we can’t find such an i′ then 4 return NULL. 5 Set Ci′,j ← Ci′,j − 1. 6 return i′.\nTheorem 2. Given ε > 0, when Mpmin = Ω (nε), the expected user traffic consumption of ALGORITHM 1 is at most( 1 +O ( n−ε/2 )) · Zflow, which implies that it achieves a\ncompetitive ratio 1 +O ( n−ε/2 ) .\nRemark 1. It should be pointed out that the flow based delivery policy can be generalized to solve the representativeness, smoothness and multiple delivery issues. The details can be found in the supplemental material. Remark 2. The flow based delivery policy provides a threshold that how many users of each type are needed to satisfy all contracts, thus user traffic beyond this threshold can be safely utilized for other purpose, such as sell it in an exchange market. It is shown in Line 24 of ALGORITHM 1.\nRobustness In our model, we assume the user type distribution is accurate. However, there usually has a bias between estimated distribution and the real one. The following analysis provides a robustness guarantee for flow based delivery policy.\nGiven a delivery policy π, denote ED(π(D̂)) as the expected user traffic consumption when the distribution input to π is D̂ while the real distribution is D. We also define p̂j as the estimated probability for pj in D̂. Now we have the following theorem for the flow based delivery policy. The full proof is moved to supplemental material for space limitation.\nTheorem 3. Denote the flow based delivery policy as πf , for any δ > 0, if (1− δ)pj ≤ p̂j ≤ (1 + δ)pj for each user type aj , we have ED(πf (D̂)) ≤ (1+O(n −ε/2))(1+δ) 1−δ ED(πf (D))."
    }, {
      "heading" : "Experiments",
      "text" : "In this section, we perform some simulations of the flow based delivery policy and several other policies on different random graphs. All experiment arguments are selected to approximate the real world system. The results show the superiority of the flow based delivery policy."
    }, {
      "heading" : "Experimental Setup",
      "text" : "Hardware A desktop with an Intel i5-4570 CPU @ 3.2GHZ and a 4GB DDR3 memory. Settings Restricted by the business model of GD, the size of demand-supply graph in real system is usually not large. Thus we conduct experiments on a random demand and supply graph with 500 ad campaigns and 1000 user types. Edges are generated uniformly and randomly while the average degree of user types are fixed. To generate the user types distribution D, we choose a random value rj > 0 for each uj , and set pj =\nrj∑1000 l=1 rl\n. rj is chosen in two ways: rj is drawn uniformly from [0, 1] (we call this method Random-Normalization) or rj equals to 11000 +ε, where ε ∼ N (0, 1/60002) (we call this method Gauss-Perturbation). Delivery Policies We compare the flow based delivery policy (FB) with other four delivery policies, including RANDOM, HWM, and two intuitive greedy policies: PROBABILITY-GREEDY (PG) and DEGREE-GREEDY (DG).\nPolicies DG and PG are based on a straightforward idea that ad campaigns that are difficult to be fulfilled should have a higher priority. Specifically, when a user comes, the ad with minimum degree on demand-supply graph is chosen in DG, while in PG, it calculates a delivery value ri =∑ uj∈Γ(ai) pj W (uj)\nfor each ad campaign ai, and delivers an ad with minimum delivery value. Recall that W (uj) =∑ ai∈Γ(uj)Wi. For these policies, we compare their competitive ratios and the robustness on different random graphs and different user visiting sequences. On each generated random graph, we simultaneously run five policies with 100 sampled user sequences. The competitive ratio for each policy is estimated as dividing the average user traffic consumed on these sampled sequences by the average optimal user traffic needed."
    }, {
      "heading" : "Experiments under Different Average Degrees",
      "text" : "The first experiment is conducted under different average degrees of user types. With a specific average degree, there are 100 input instances generated independently and randomly. Half of them use Random-Normalization to generate D, the others use Normalization-Perturbation. Wi is drawn uniformly from [50, 100]. In the second experiment we will show that the amount of exposures has little influence on performance, thus a small value for Wi is enough.\nExperiment results for average degrees 5, 10, 15, 20 and 25 are shown in Figure 2. The height of the bar stands for the average competitive ratios on 50 input instances with corresponding setting while the vertical lines indicate the fluctuation ranges of those competitive ratios. According to this figure, the flow based delivery policy has a much better competitive ratio under all average degrees. These fluctuation ranges of competitive ratios also show that the flow based delivery policy is more robust on different graphs.\nSurprisingly, DG is the second best policy. When the average degree is 5, its average competitive ratio is very close to that of the flow based delivery policy with a gap about 0.015 for Random-Normalization and 0.035 for GaussPerturbation. However, these gaps will be enlarged as the average degree increases to 10, 15 and 20. From Figure 2 we can also find the fact that the performances of all delivery policies will be improved continuously with average degree increasing. In fact, when the average degree is large enough, all polices are near optimal4. However, for the purpose of accurately targeting, the demand-supply graph is usually very sparse in real world.\nIn Figure 3, we show more detail experiment results of five delivery polices on 50 input instances with RandomNormalization and average degree 10. Figure 3a shows the results of competitive ratios. The horizontal axis stands for 50 input instances. As we can see, the flow based delivery policy achieves a much better competitive ratio on each input instance and it works more steadily. The worst case performance among all sampled user visiting sequences on 50 input instances is shown in Figure 3b. Clearly, the flow based delivery policy is more robust on the worst sampled sequence too."
    }, {
      "heading" : "Experiments under Different Exposure",
      "text" : "In this part, we compare five polices under different exposure settings. The number of exposures for each ad campaign is uniformly drawn from 100 to 2500, 5000, 10000 and 20000. We only consider average degrees of 5 and 10. Similarly, 100 graphs are drawn independently, and for 50 of them, we construct distributions by Random-Normalization and for the rest, Gauss-Perturbation is used. Then input instances are constructed with different exposure settings.\nFigure 4 shows the results for Random-Normalization. The flow based delivery policy outperforms other polices under all exposure settings. We point out that the amount of exposures seems to have little influence on the performance for each delivery policy. It is somehow means the\n4Considering an extreme case that when the demand-supply graph is complete, any reasonable delivery policy will be optimal.\nuser traffic consumption of each studied policy has a linear relationship with the total amount of exposures for a fixed demand-supply graph. Besides, comparing Figure 4a and 4b and combining previous experiments, we can find that the structure of demand-supply is much more crucial for the GD problem. Similar results are obtained for GaussPerturbation. These results can be found in supplemental material."
    }, {
      "heading" : "Conclusions and Future Works",
      "text" : "In this work, we study the consumption minimization problem for user traffic (CMPUT), which lies in the heart of GD scenario. We provide a lower bound for the optimal offline user traffic consumption by using an expected flow, which is shown to be useful for performance evaluation. We then propose a flow based delivery policy. This delivery policy\nconsumes nearly as least as possible user traffic to satisfy all contracts under a realistic constraint. What’s more important, it is robust with regard to estimation error of user type distribution and shown to be very useful for order and traffic management.\nOur flow based delivery policy can be extended to solve other issues in GD, such as representativeness and smoothness of delivery. Nevertheless, there are some works remained to be done. For example, there may be a time window for each advertiser which indicates the ad campaign’s starting time and deadline. Another interesting problem is how to design delivery policy when advertisers also come online instead of being revealed in advance."
    }, {
      "heading" : "Supplemental Material",
      "text" : ""
    }, {
      "heading" : "Omitted Proofs",
      "text" : "Theorem 2. Given ε > 0, when Mpmin = Ω (nε), the expected user traffic consumption of ALGORITHM 1 is at most ( 1 +O ( n−ε/2 )) · Zflow, which implies that it\nachieves a competitive ratio 1 +O ( n−ε/2 ) .\nProof. According to THEOREM 1, we have E(OPT ) ≥ Zflow. By the definitions of Zflow and F̂G, it is clear that\nMAX-FLOW(F̂G(Zflow)) ≥M.\nThus, Ẑ ≤ Zflow, as Ẑ takes the minimum value that satisfies MAX-FLOW(F̂G(Ẑ)) = M after the execution of ONLINE PART.\nLet Y stand for the user traffic consumption of ALGORITHM 1. Now we establish a relationship between E(Y ) and Ẑ. We first bound the probability that Y is greater than (1 + ε′)Ẑ for a positive number ε′. The range of ε′ will be determined later. Suppose there are (1 + ε′)Ẑ users come to the platform, and denote Uj as the number of users belong to type uj among them. Uj is a random variable in fact. According to the property of FLOW-BASED-DELIVERY-RULE, if Uj ≥ dẐpje, for any ai ∈ Γ(uj), either no less than Ci,j ads of ai is delivered to users belong to uj or all Wi ads are delivered. Thus, if Uj ≥ dẐpje is held for all j ∈ [n], all M ads are ensured to be delivered by our policy, as MAX-FLOW(F̂G(Ẑ)) = M .\nNow we bound the probability that Uj ≥ dẐpje for j ∈ [n]. As Ẑ + n ≥ ∑n j=1dẐpje ≥M ,\nE(Uj) = (1 + ε ′)Ẑpj > (M − n)pmin = Ω(nε),\nas pmin ≤ 1n . Let δ = ε′ 1+ε′ − 1 E(Uj) . If δ > 0, we have\nPr(Uj < dẐpje) ≤ Pr (Uj ≤ (1− δ)E(Uj)) = O ( e−δ 2E(Uj)/2 ) ,\naccording to Chernoff Bound. Define δ′ = ε ′\n1+ε′ − 1\n(1+ε′)Ẑpmin ≥ 0. Clearly, δ′ ≤ δ. We have\nPr(∃uj ∈ U,Uj < dẐepj) ≤ cne−δ ′2(1+ε′)Ẑpmin/2, (1)\nfor a proper constant number c > 0. Let F be the cumulative distribution function of Y . The Equation (1) implies\nF ((1 + ε′)Ẑ) ≥ 1− cne−δ ′2(1+ε′)Ẑpmin/2. (2)\nNext, we bound the expectation of Y based on the above estimation. Since Y is a discrete random variable, in order to simplify our proof, we define a continuous random variable Y ′ which satisfies Y ′ ∈ [M,+∞) and\nF ′((1 + ε′)Ẑ) = 1− cne−δ ′2(1+ε′)Ẑpmin/2, (∀δ′ > 0)\nwhere F ′(y) is the cumulative distribution function of Y ′. It should be emphasized that F ′ can be taken as a function of ε′ because δ′ is a function of ε′. This will be useful for further analysis. Let T = (1 + ε′)Ẑ, we have\nE(Y ) = +∞∑ i=M (F (i)− F (i− 1)) i\n≤ T + +∞∑\ni=T+1\n(F (i)− F (i− 1)) i\n= T + lim b→+∞\n( bF (b)− (T + 1)F (T )−\nb−1∑ i=T+1 F (i)\n) .\n(3)\nNote that for any integer y that satisfies y ≥ T , we have F (y) ≥ F ′(y) according to their definitions, thus\n0 ≤ lim b→∞ b(F (b)− F ′(b)) ≤ lim b→∞ b(1− F ′(b))\n= lim x→∞\n(1 + x)Ẑ · cne − ( x 1+x − 1 (1+x)Ẑpmin )2 (1+x)Ẑpmin/2 = 0.\nThe second line of above inequality is obtained by replacing b with (1 + x)Ẑ. Above inequality implies that limb→+∞ bF (b) = limb→+∞ bF\n′(b). Applying this equation into Equation (3), we have\nE(Y ) ≤ T + lim b→+∞\n( bF ′(b)− (T + 1)F ′(T )−\nb−1∑ i=T+1 F ′(i)\n)\n= T + +∞∑ i=T+1 (F ′(i)− F ′(i− 1))i\n≤ T + ∫ +∞ T xdF ′(x)\n= T + ∫ +∞ ε′ (1 + x)Ẑ d F ′((1 + x)Ẑ)\n= T + ∫ +∞ ε′ (1 + x)Ẑ d cne − ( x 1+x − 1 (1+x)Ẑpmin )2 (1+x)Ẑpmin/2\nUsing integration by parts and some tricks about inequality, we can show that when ε′ = ω(n−ε), E(Y ) ≤ T + o(1). The procedure is regular and tedious, thus we omit it in this work.\nSo far, we have E(Y ) ≤ (1 + ε′)Ẑ + o(1) for any ε′ = ω(n−ε). Combine the fact that E(OPT ) ≥ Zflow and Ẑ ≤ Zflow, we have E(Y ) E(OPT ) ≤ 1 + ε ′ + o ( 1 M ) . Recall that to employ the Chernoff Bound, we need δ ≥ δ′ > 0. As δ′ ≥ ε ′\n1+ε′ − 1 (M−n)pmin , δ ′ > 0 is satisfied by setting ε′ to\nbe any number greater than 1(M−n)pmin−1 = O(n −ε). Thus setting ε′ = Θ ( n−ε/2 ) , we have\nE(Y )\nE(OPT ) = 1 + Θ\n( n−ε/2 ) + o ( 1\nM\n) = 1 +O ( n−ε/2 ) .\nTheorem 3. Denote the flow based delivery policy as πf , for any δ > 0, if (1− δ)pj ≤ p̂j ≤ (1 + δ)pj for each user type\naj , we have ED(πf (D̂)) ≤ (1+O(n −ε/2))(1+δ) 1−δ ED(πf (D)).\nBefore the proof of this theorem, we first provide several useful definitions and an important fact.\nGiven a user visiting sequence ω with length t, we construct a new user visiting sequence ω′ by inserting some users into ω arbitrarily. Here arbitrarily means the number, positions and types of those inserted users are decided at will. Suppose the length of ω′ is t′ (t′ > t), we say ω′ is a t′-expansion of ω. With these definitions, we have the following fact for the flow based delivery policy. Fact 1. Given a user visiting sequence ω with length t and its t′-expansion ω′, if all contracts are satisfied by the flow based delivery policy after the t-th user visiting on ω, they will also be satisfied after the t′-th user visiting on ω′.\nThis fact is clear, as the flow based delivery policy employs the edge capacities Ci,j to guide the delivery.\nNow we show the THEOREM 3.\nProof. We first show that\nED(πf (D̂)) ≤ (1 + δ)ED̂(πf (D̂)). (4)\nTo show this inequality, we construct a new user type distribution D′ by adding a dummy user type un+1 and call those users belong to type un+1 as dummy users. In this distribution,\np′j =  p̂j 1 + δ , j ∈ [n] δ\n1 + δ . j = n+ 1\nNote that p′j ≤ pj for j ∈ [n]. Consider a user visiting sequence ω′ sampled from dis-\ntribution D′. Suppose all contracts are satisfied by policy πf (D′) when τ ′-th user comes. As we can see, there may be some dummy users among those first τ ′ users. Intuitively, if we change those dummy users to other types randomly to make up the bias between p′j and pj for j ∈ [n], the number of users consumed will be no more than τ ′ according to FACT 1. More formally, for any dummy user in ω′, we change her type to uj with probability\npj−p′j p′n+1\nfor j ∈ [n]. Clearly, the obtained user visiting sequence can be viewed as satisfying the distribution D. Based on FACT 1, the user traffic consumed on the obtained sequence is no more than ω′. Thus, we have ED′(πf (D̂)) ≥ ED(πf (D̂)).\nOn the other hand, we have\nED′(πf (D̂)) = n+1∑ j=1 ED′(πf (D̂, uj))\nwhere ED′(πf (D̂, uj)) is the number of users of type uj consumed. In next step, we aim to show\nn∑ j=1 ED′(πf (D̂, uj)) = ED̂(πf (D̂)). (5)\nThat’s the expected non-dummy user traffic used under D̂ and D′ are same.\nAs p′j is in proportion to p̂j for j ∈ [n], the edge capacity Ĉi,j calculated based on distribution D̂ is the same with C ′i,j calculated based on D′. Given a user visiting sequence ω′ sampled according to distribution D′. Suppose the length of ω′ is t and all contracts are satisfied exactly when t-th user in ω′ comes. We drop out all dummy users in ω′, and obtain a user sequence ω̂ which is a valid sequence with regard to distribution D̂. We say ω̂ is a dropped sequence of ω′. As the online part of our flow based delivery policy only employs edge capacities to perform deliver, all ad contracts must be satisfied by π(D̂) exactly when the last one in ω̂ comes.\nNote that there are same numbers of non-dummy users in ω′ and ω̂. That’s to say, for any user sequence sampled based on distribution D′, there is a dropped sequence sampled from D̂, and the non-dummy user traffic consumed are same. For ω̂, denote S(ω̂) as the set of all the sequences sampled from D′ and theirs dropped sequences are ω̂. It is clear that Pr(ω̂|D̂) = ∑ ω′∈S(ω̂) Pr(ω\n′|D), as the latter can be viewed as inserting dummy users arbitrarily into the former. Thus the Equation (5) is held.\nAccording to Wald’s Identity, we have\nED′(πf (D̂, un+1)) = p′n+1ED′(πf (D̂)) = δ\n1 + δ ED′(πf (D̂)),\nthus we can conclude that ED′(πf (D̂)) = (1 + δ)ED̂(πf (D̂)). Combining above analysis we get the inequality (4).\nDenote Zflow(D) as the expected flow with user type distribution D. Similarly we can define Zflow(D̂). As (1 − δ)pj ≤ p̂j , we can get Zflow(D̂) ≤ Zflow(D)1−δ based on the definition of expected flow. According to THEOREM 2, given Mpmin = Θ(n ε), we have\nZflow(D̂) ≤ ED̂(πf (D̂)) ≤ (1 +O(n−ε/2))Zflow(D̂), Zflow(D) ≤ ED(πf (D)) ≤ (1 +O(n−ε/2))Zflow(D).\nIt is easy to get that\nED̂(πf (D̂)) ≤ 1 +O(n−ε/2)\n1− δ ED(πf (D)). (6)\nCombining Equation (4) and (6), we can finish this proof."
    }, {
      "heading" : "Extensions of the Flow Based Delivery Policy",
      "text" : "Representativeness. Representativeness requires that the exposures to users of an ads should be diverse. More specifically, when all contracts are satisfied, UijWi should be close to\nUj U(Γ(ai)) , where Uj is the total user used belonging to type uj , Uij is the number of ad ai displayed to users with type uj and U(Γ(ai)) is the total number of users used with types in Γ(ai).\nThe flow based delivery policy can be easily modified to achieve representativeness approximately. In the OFFLINE PART, we can just set the edge capacity Ci,j as\nWi·pj∑ ul∈Γ(ai) pl\nand needn’t calculate the Ẑ. We also modify the ALGORITHM 2 by changing the condition in line 24 to be\nwe can’t find such an i′ or Ci′,j = 0.\nWith this modified GREEDY-DELIVERY-RULE, when all contracts are satisfied, we have\nUij Wi = Ci,j Wi\n= pj∑\nul∈Γ(ai) pl (7)\nSuppose that when all contracts are satisfied, there are Y users visiting the publisher platform. Based on the Chernoff Bound, we can prove that for a constant δ > 0 and j ∈ [m], (1 − δ)Y pj ≤ Uj ≤ (1 + δ)Y pj with high probability. Consequently, for any δ > 0, (ai, uj) ∈ E,\nUj U(Γ(ai)) ∈\n[ (1− δ)pj\n(1 + δ) ∑ ul∈Γ(ai) pl , (1 + δ)pj (1− δ) ∑ ul∈Γ(ai) pl ] with high probability. Combining with Equation (7), we can achieve an approximation for representativeness.\nSmoothness of Delivery. Smoothness of delivery requires that the unexposed amount of each ad decreases steadily with time. As mentioned in work (Chen et al. 2012), the perfect smoothness is usually impossible to achieve due to the intersection of different advertisers. We try to make the delivery procedure smooth while keeping the user traffic consumption unchanged. To achieve this objective, we employ a new delivery rule, that is the SMOOTH-DELIVERY-RULE shown in ALGORITHM 3. As we can see, when a user visiting the publish platform, the SMOOTH-DELIVERY-RULE choose an unsatisfied ad ai to minimize the ratio\nĈi,j Ci,j . As the type of users are drawn from the distribution D, the smoothness is ensured to some extent.\nAlgorithm 3: SMOOTH-DELIVERY-RULE\n1INIT: ∀(ai, uj) ∈ E, set Ĉi,j ← Ci,j 2SMOOTH-DELIVERY-RULE(uj)\n3 Set i′ ← arg minai∈Γ(uj),Wj>0 { Ĉi,j Ci,j } . 4 if we can’t find such an i′ then 5 return NULL.\n6 Set Ĉi′,j ← Ĉi′,j − 1. 7 return i′.\nMultiple Delivery. To generate more profit, the publishers usually display multiple ads in a single web page. Now we suppose k ads can be displayed when a user comes. Our flow based delivery policy can be easy extended to cover this setting. In ALGORITHM 1, we construct an expected flow F̂G(Ẑ, k) instead of F̂G(Ẑ). There are two changes in F̂G(Ẑ, k): capacity of edge (ai, uj) ∈ E is set to Ẑ and that of edge (uj , t) is set to dẐkpje. The first change ensures that all contracts can be satisfied with constraint that one ad can’t be displayed more than once for single user visiting. Through the second change, we somehow copy the user k times when she visits the platform. We also modify the ALGORITHM 2 and let it return k ads whose residual capacity values Ci,j are the top k minimum when a user of type\nuj comes. With similar analysis, we can show that the performance of the modified flow based delivery policy keeps unchanged for the multiple delivery setting."
    }, {
      "heading" : "Omitted Experiment Results",
      "text" : "The results for 50 input instances with average degree 10 and Random-Normalization are shown in Figure 5. Similar experiments results for Gauss-Perturbation are shown in Figure 6 and 7."
    } ],
    "references" : [ {
      "title" : "Media revenue management with audience uncertainty: Balancing upfront and spot market sales. Manufacturing & Service Operations Management 12(2):190–212",
      "author" : [ "Araman", "V.F. Popescu 2010] Araman", "I. Popescu" ],
      "venue" : null,
      "citeRegEx" : "Araman et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Araman et al\\.",
      "year" : 2010
    }, {
      "title" : "Improved bounds for online stochastic matching",
      "author" : [ "Bahmani", "B. Kapralov 2010] Bahmani", "M. Kapralov" ],
      "venue" : "In 18th Annual European Symposium Algorithms,",
      "citeRegEx" : "Bahmani et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Bahmani et al\\.",
      "year" : 2010
    }, {
      "title" : "Yield optimization of display advertising with ad exchange",
      "author" : [ "Balseiro" ],
      "venue" : "In Proceedings of the 12th ACM conference on Electronic commerce,",
      "citeRegEx" : "Balseiro,? \\Q2011\\E",
      "shortCiteRegEx" : "Balseiro",
      "year" : 2011
    }, {
      "title" : "Pricing guaranteed contracts in online display advertising",
      "author" : [ "Bharadwaj" ],
      "venue" : "In Proceedings of the 19th ACM international conference on Information and knowledge management,",
      "citeRegEx" : "Bharadwaj,? \\Q2010\\E",
      "shortCiteRegEx" : "Bharadwaj",
      "year" : 2010
    }, {
      "title" : "Forecasting counts of user visits for online display advertising with probabilistic latent class models",
      "author" : [ "Cetintas" ],
      "venue" : "In Proceedings of the 34th International ACM Conference on Research and Development in Information",
      "citeRegEx" : "Cetintas,? \\Q2011\\E",
      "shortCiteRegEx" : "Cetintas",
      "year" : 2011
    }, {
      "title" : "Forecasting user visits for online display advertising. Information Retrieval 16(3):369–390",
      "author" : [ "Chen Cetintas", "S. Si 2013] Cetintas", "D. Chen", "L. Si" ],
      "venue" : null,
      "citeRegEx" : "Cetintas et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Cetintas et al\\.",
      "year" : 2013
    }, {
      "title" : "Ad serving using a compact allocation plan",
      "author" : [ "Chen" ],
      "venue" : "In Proceedings of the 13th ACM Conference on Electronic Commerce,",
      "citeRegEx" : "Chen,? \\Q2012\\E",
      "shortCiteRegEx" : "Chen",
      "year" : 2012
    }, {
      "title" : "A dynamic pricing model for unifying programmatic guarantee and real-time bidding in display advertising",
      "author" : [ "Yuan Chen", "B. Wang 2014] Chen", "S. Yuan", "J. Wang" ],
      "venue" : "In Proceedings of the 8th International Workshop on Data Mining for Online Advertising,",
      "citeRegEx" : "Chen et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2014
    }, {
      "title" : "Online stochastic matching: Beating 1-1/e",
      "author" : [ "Feldman" ],
      "venue" : "In Proceedings of the 50th Annual IEEE Symposium on Foundations of Computer Science,",
      "citeRegEx" : "Feldman,? \\Q2009\\E",
      "shortCiteRegEx" : "Feldman",
      "year" : 2009
    }, {
      "title" : "Birthday paradox, coupon collectors, caching algorithms and self-organizing search",
      "author" : [ "Gardy Flajolet", "P. Thimonier 1992] Flajolet", "D. Gardy", "L. Thimonier" ],
      "venue" : "Discrete Applied Mathematics",
      "citeRegEx" : "Flajolet et al\\.,? \\Q1992\\E",
      "shortCiteRegEx" : "Flajolet et al\\.",
      "year" : 1992
    }, {
      "title" : "Bidding for representative allocations for display advertising",
      "author" : [ "Ghosh" ],
      "venue" : "In Internet and Network Economics,",
      "citeRegEx" : "Ghosh,? \\Q2009\\E",
      "shortCiteRegEx" : "Ghosh",
      "year" : 2009
    }, {
      "title" : "Online stochastic matching: New algorithms with better bounds",
      "author" : [ "Jaillet", "P. Lu 2013] Jaillet", "X. Lu" ],
      "venue" : "Mathematics of Operations Research",
      "citeRegEx" : "Jaillet et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Jaillet et al\\.",
      "year" : 2013
    }, {
      "title" : "Online bipartite matching with unknown distributions",
      "author" : [ "Mehta Karande", "C. Tripathi 2011] Karande", "A. Mehta", "P. Tripathi" ],
      "venue" : "In Proceedings of the 43rd annual ACM symposium on Theory of computing,",
      "citeRegEx" : "Karande et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Karande et al\\.",
      "year" : 2011
    }, {
      "title" : "An optimal algorithm for on-line bipartite matching",
      "author" : [ "Vazirani Karp", "R.M. Vazirani 1990] Karp", "U.V. Vazirani", "V.V. Vazirani" ],
      "venue" : "In Proceedings of the 22nd Annual ACM Symposium on Theory of Computing,",
      "citeRegEx" : "Karp et al\\.,? \\Q1990\\E",
      "shortCiteRegEx" : "Karp et al\\.",
      "year" : 1990
    }, {
      "title" : "Shale: An efficient algorithm for allocation of guaranteed display advertising",
      "author" : [ "Contournet Lefebvre", "F. Crivelli 2012] Lefebvre", "P. Contournet", "A.J. Crivelli" ],
      "venue" : "In the 18th ACM international conference on Knowledge discovery and data mining,",
      "citeRegEx" : "Lefebvre et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Lefebvre et al\\.",
      "year" : 2012
    }, {
      "title" : "Adwords and generalized online matching",
      "author" : [ "Mehta" ],
      "venue" : "Journal of the ACM 54(5):264–273",
      "citeRegEx" : "Mehta,? \\Q2007\\E",
      "shortCiteRegEx" : "Mehta",
      "year" : 2007
    }, {
      "title" : "Risk-aware revenue maximization in display advertising",
      "author" : [ "Radovanovic", "A. Heavlin 2012] Radovanovic", "W.D. Heavlin" ],
      "venue" : "In Proceedings of the 21st international conference on World Wide Web,",
      "citeRegEx" : "Radovanovic et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Radovanovic et al\\.",
      "year" : 2012
    }, {
      "title" : "Robust ad delivery plan for guaranteed display advertising",
      "author" : [ "Li Shen", "H. Chen 2014] Shen", "Y. Li", "Y. Chen" ],
      "venue" : "In IEEE International Conference on Information and Automation,",
      "citeRegEx" : "Shen et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Shen et al\\.",
      "year" : 2014
    }, {
      "title" : "Delivering guaranteed display ads under reach and frequency requirements",
      "author" : [ "Turner" ],
      "venue" : "In Proceedings of the 28th AAAI Conference on Artificial Intelligence",
      "citeRegEx" : "Turner,? \\Q2014\\E",
      "shortCiteRegEx" : "Turner",
      "year" : 2014
    }, {
      "title" : "Optimal online assignment with forecasts",
      "author" : [ "Vassilvitskii Vee", "E. Shanmugasundaram 2010] Vee", "S. Vassilvitskii", "J. Shanmugasundaram" ],
      "venue" : "In Proceedings of the 11th ACM conference on Electronic commerce,",
      "citeRegEx" : "Vee et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Vee et al\\.",
      "year" : 2010
    }, {
      "title" : "2012), the perfect smoothness is usually impossible to achieve due to the intersection of different advertisers. We try to make the delivery procedure smooth while keeping the user traffic consumption",
      "author" : [ "Chen" ],
      "venue" : null,
      "citeRegEx" : "Chen,? \\Q2012\\E",
      "shortCiteRegEx" : "Chen",
      "year" : 2012
    } ],
    "referenceMentions" : [ ],
    "year" : 2016,
    "abstractText" : "In this work, we study the guaranteed delivery model which is widely used in online display advertising. In the guaranteed delivery scenario, ad exposures (which are also called impressions in some works) to users are guaranteed by contracts signed in advance between advertisers and publishers. A crucial problem for the advertising platform is how to fully utilize the valuable user traffic to generate as much as possible revenue. Different from previous works which usually minimize the penalty of unsatisfied contracts and some other cost (e.g. representativeness), we propose the novel consumption minimization model, in which the primary objective is to minimize the user traffic consumed to satisfy all contracts. Under this model, we develop a near optimal method to deliver ads for users. The main advantage of our method lies in that it consumes nearly as least as possible user traffic to satisfy all contracts, therefore more contracts can be accepted to produce more revenue. It also enables the publishers to estimate how much user traffic is redundant or short so that they can sell or buy this part of traffic in bulk in the exchange market. Furthermore, it is robust with regard to priori knowledge of user type distribution. Finally, the simulation shows that our method outperforms the traditional state-of-the-art methods.",
    "creator" : "LaTeX with hyperref package"
  }
}