{
  "name" : "1610.08640.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Anomaly Detection with the Voronoi Diagram Evolutionary Algorithm",
    "authors" : [ "Luis Mart́ı", "Arsene Fansi-Tchango", "Laurent Navarro", "Marc Schoenauer" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Anomalous Internet traffic detection is a major question of computer network security. Intrusion detection systems (IDSs) [9] have proposed with the intention of tackling this issue. They are meant to protect a network by providing a line of defense that is able to detect and react to network attacks. Two main approaches are used when building an IDS: i) misuse-based and ii) anomaly-based detection. While the former focuses on detecting attacks that follow a known pattern or signature, the latter is interested in building a model representing the system’s normal behavior while assuming all deviated activities to be anomalous or intrusions. Because of that fact anomaly detection has received increasing attention in the recent past.\nAnomaly detection has been addressed with different approaches (see [2] for a survey). Among nature-inspired approaches artificial immune systems (AISs) [7] have received an special attention.\nThis paper proposes the Voronoi diagram-based evolutionary algorithm (VorEAl). VorEAl is inspired on AISs and the representations that had been proposed for evolutionary shape design consolidating previous progresses made in this direction [8]. Its main distinctive feature is that it evolves Voronoi diagrambased representations for normal/abnormal regions of the search space. Such representation offers a flexible and compact alternative to some common representations used in AIS such as hyper-spheres and hyper-rectangles. VorEAl applies a multi-objective approach that takes into account the detection accuracy and other especially devised volume-based methods that promotes the emergence of solutions that also adequately represent areas of the input space\nar X\niv :1\n61 0.\n08 64\n0v 1\n[ cs\n.A I]\n2 7\nO ct\nwhere no normal data has been received and, therefore, should represent anomalies. As in any multi-objective approach, the algorithm produces a set of trade-off solutions. VorEAl applies a committee approach that is based on the best (in term of a priori given set of preferences) subset of those solution.\nThe paper is organized as follows. Section 2 presents the context of AIS and some existing approaches to anomaly detection. Section 3 introduces the Voronoi representation for abnormal and normal input subsets, together with the variation operators and objective functions used to evolve it and VorEAl as a whole. Section 4 introduces our methodology for the experimental validation of VorEAl, also presenting the results of the study and comparing them with other approaches from the literature. Finally, Section 5 discusses the results and sketches some further research directions."
    }, {
      "heading" : "2 Foundations",
      "text" : "There has been a consistent interest by the community on proposing natureinspired approaches to anomaly detection. In this context, AISs have attracted attention as they embody an analogy to the biological immune system. They are particularly appealing for anomaly detection problems as they capture the ability of the biological system of telling apart normal body cells from pathogens. That is, from a computational perspective, they create a model that is able to discriminate between normal (self) and abnormal (non-self) objects. This feature make AISs specially suited to be applied in the context of anomaly-based IDSs.\nIn order to extend AISs’ performance it is necessary to apply algorithms that combine a powerful representation capacity as well as the possibility of adequately adapting that capacity to meet the problem characteristics.\nVoronoi diagrams are geometrical constructs that were known by ancient Greeks. Any set of points, known as Voronoi sites, in a given n-dimensional Euclidean space E defines a Voronoi diagram, i.e., a partition of that space into Voronoi cells: the cell corresponding to a given site S is the set of points whose closest site is S. The boundaries between Voronoi cells are the medians of the [SiSj ] segments, for neighbor Voronoi sites Si and Sj . Though originally defined in two or three dimensions, there exist several algorithmic procedures to efficiently compute Voronoi diagrams in any dimension.\nVoronoi diagrams offer a compact representation for shapes (surfaces in 2D and volumes in 3D, for instance), by attaching to each Voronoi cell (or, equivalently, to the corresponding Voronoi site), a Boolean label. The resulting Voronoi diagram is a partition of the space into 2 subsets: the “true” cells are the shape/volume, and the “false” cells are the outside of the shape/volume. The genotype is here a (variable length) list of labeled Voronoi sites, and the phenotype is the corresponding partition in the space into two subsets. More generally, any piece-wise constant function on the underlying space can be represented by a similar representation by using real-valued labels. Such representation has been successfully used in the context of Evolutionary Optimum Design [5,10]. In particular, it has been demonstrated that the local complexity of the representation\ncan also be adjusted by evolution: in regions of the space where the shape has a complex boundary, several Voronoi sites will be used, whereas only a few of them will be necessary elsewhere.\nIn the context of classification, the target phenotypes are partitions of the parameter space into positive and negative examples (in the case of 2 classes), and can hence also be represented by Voronoi diagrams with Boolean labels —or with labels taken from a finite alphabet in the case of more than 2 classes."
    }, {
      "heading" : "3 The Voronoi diagrams-based evolutionary algorithm",
      "text" : "We now discuss the building blocks of VorEAl. In particular, we present variation operators, the possible strategies used for evaluating the individuals and how these elements are assembled together to form the algorithm."
    }, {
      "heading" : "3.1 Variation operators",
      "text" : "The genotypes of Voronoi representations is a variable length list of Voronoi sites (S1, . . . , Sp), with p ∈ [Pmin, Pmax], where each site is defined by its n coordinates in E . Each site S has an associated label S.` that determines how a point that falls within the corresponding cell is classified.\nfunction crossover voronoi(I1, I2) . I1 and I2, individuals to mate. repeat\nP ← random hyperplane(I1 ∪ I2). ξ (1) 1 , ξ (1) 2 ← split individual(I1,P ). ξ (2) 1 , ξ (2) 2 ← split individual(I2,P ).\nuntil ξ (i) k 6= ∅, ∀i, k O1 = ξ(1)1 ∪ ξ (2) 2 ; O1.` = I1.`; O2 = ξ(2)1 ∪ ξ (1) 2 ; O2.` = I2.`. return O1,O2, offspring.\n(a) Crossover of two Voronoi diagrams, applied with probability pc. (b) Example of crossover of two Voronoi genotype individuals in 2D.\nFig. 2: Crossover operator for Voronoi diagrams.\nMutation Operator Several mutation operators can be designed for such a variablelength representation.\n– At the individual level, a Voronoi site can be added, at a randomly chosen position, with a random label; or a randomly chosen Voronoi site can be removed. – At the site level, Voronoi sites can be moved around in the space – and the well-known self-adaptive Gaussian mutation has been chosen here, inspired by Evolution Strategies (see (1) below); or the label of a Voronoi site can be changed.\nIn the self-adaptive Gaussian mutation [11], each coordinate x of each Voronoi site also “carries” its own variance σ that is used for its Gaussian mutation. Coordinate x undergoes Gaussian mutation with variance σ while σ undergoes a log-normal mutation with learning rate η as follows:\nx← σN (x, 1) and σ ← σeηN0,1 (1)\nThe different mutation operators are applied according to different probabilities, following the procedure described in Figure 1.\nCrossover Operator The crossover operator for Voronoi representation should not simply exchange some Voronoi sites between both parents, but should respect the locality of the representation. Voronoi sites that are close to each other should have more chance to stay together than Voronoi sites that are far apart. This is achieved by the geometric crossover that operates on two (randomly selected) parents by creating a random cutting hyperplane, and exchanges the Voronoi sites from both sides of the hyperplane. The Voronoi diagrams are of course reconstructed after the crossover. This procedure is described in detail in Figure 2a. A two-dimensional example is given in Figure 2b."
    }, {
      "heading" : "3.2 Objectives and fitness assignment",
      "text" : "Anomaly detection can be posed as a particular case of classification problem where data items must be tagged either as “normal” or “anomalous”. That relying on a dataset Ψ = { x(i), y(i) } where, without loss of generality we can state that x ∈ Rn and y(i) ∈ {normal; anomaly} obtain a classifier that correctly detects instances that correspond to each of the two categories. Because of this fact the existing metrics devised to assess the quality of a classification algorithm are also applicable in this context. For this particular problem, the most relevant metrics are accuracy, recall and specificity, although many more could also be of use. Accuracy seems the best choice in the general case, as one wants to correctly identify all examples. But when dealing with anomalies, the dataset is generally highly imbalanced, as normally there are fewer anomalous instances than ‘normal’ ones. If only the classification accuracy is used, the error contribution of the anomalies will be reduced and hence the model will be biased to not regard them.\nFurthermore, as already mentioned, the anomaly detection problem requires that the classifier is not only able to correctly classify the “normal” and “anomalous” instances present in the training dataset but is also capable of detecting when a given input falls in an area that was not covered by data of the training set and, therefore, also can be interpreted as an anomaly.\nIt is possible to prompt the Voronoi diagrams (individuals) to represent the known data in a form as compact as possible by expressing that as the relation between the volumes of the Voronoi cell and the convex hull of the training data that it contains. Let I = {Si, i = 1 . . . nI} be a Voronoi diagram, and, for each cell Ci, let vi ∈ R be its volume and Di the set of data points it contains, i.e., Di = {x ∈ Ψ ; d(x, Si) ≤ d(x, Sj)∀i 6= j}, d being the n-dimensional Euclidian distance. We can then define the individual compactness as the sum, for each cell, of the ratio of the volume of the convex hulls of Di and the volume of the cell,\nC(I) = {∑ i volume(convex hull(Di)) vi if |Di| > n,\n0 in other case. (2)\nIt could be hypothesized that the previous formulation can be improved by adding a multiplicative term that counts the number of elements in Di, resulting in the multiplicative compactness\nCmult(I) = {∑ i (|Di| − n) volume(convex hull(Di)) vi if |Di| > n,\n0 in other case. (3)\nIn both cases, maximizing the compactness will produce cells that contain the data in a form as tight as possible. Those compactness objectives can be complemented by one that promotes the existence of empty cells that represent areas of the input domain that are now present in the training data. Such objective would take care of sites with small Di’s and promote that they become empty as the evolution takes place. A form of representing this is by computing the\ntotal volume of cells with an anomaly label of an individual and rate it by the number of elements it contains,\nEV(I) = ∑\ni,Si.`=anomaly\nvi 1 + 2 ln(|Di|+ 1) . (4)\nConsequently, it is obvious that it is necessary to jointly address all of those objectives. Therefore, a multi-objective optimization approach will empower the algorithm with the capacity to address all the requirements of the task at the same time."
    }, {
      "heading" : "3.3 Algorithm description",
      "text" : "VorEAl consolidates the previous components as an algorithm that constructs a classification model. The algorithm starts by creating an initial random population P0 of npop individuals. At a given iteration t, individuals in the population Pt are then mutated and mated using operators described above and thus producing an offspring population Poff that consists of noff individuals. At this point, individuals that have not yet been evaluated are presented with the dataset and the values of the different objective functions are calculated. In this work, we compute the accuracy, recall and specificity, but it should be noted that others are available. From the union of Pt and Poff, the best npop are selected using the non-dominated sorting selection of NSGA-II [3].\nThis process repeats until the stopping criterion of the algorithm is met. When that happens, the algorithm has a final population Pfinal from which the best individual(s) can be selected to represent the ‘self’ of the AIS. This a nontrivial task as it implies taking into account the different conflictive objectives. In this work, we select a committee of individuals Pcommittee ⊆ Pfinal that contains the ρ-percent of Pfinal with the highest accuracy. Hence, the classifier returns the most voted decision among the members of Pcommittee."
    }, {
      "heading" : "4 Experimental study",
      "text" : "The previous discussion and proposal must be complemented by a set of experiments that establish the validity of VorEAl and studies the impacts of the different components presented. That is the focus of this section.\nOne of the main questions regarding VorEAl is at what point a multiobjective affinity function would actually generate better results at an admissible cost. It could be argued that there exists the possibility that adding more objectives would just make the search process more complex and resource demanding.\nAn important matter to be clarified was the impact of each of the objectives presented in previous section. For that reason different combinations were tested. In particular, we tested accuracy and compactness (a/c); accuracy, compactness and total empty volume (a/c/t); accuracy and multiplicative compactness (a/m) and accuracy, multiplicative compactness and total empty volume (a/m/t).\nIn order to provide grounds for comparison with similar approaches as well as well-known approaches, other methods were included in the experiments. In particular, we included the negative selection algorithm (NSA) [6] using both variable-sized hyper-spheres and hyper-rectangles. For fair comparisons, we applied the NSA+sp and NSA + re in which non-self training samples are subsequently used to enrich the detector library generated by NSA. Similarly, we have included in the experiments two well-known classifiers: one-class vector machines (SVMs) [12] and the näıve Bayes classifier. The experiments involved six classification benchmarks problems: the ‘two spiral’, ‘crescent and full moon’, ‘half densities’, ‘corners’, ‘outliers’ and ‘cluster in cluster’ problems. They have the advantage that they can be visualized in 2D while still posing a substantial challenge to the algorithm. One key element that must be addressed is the ability of the method to detect anomalies that were present in the original dataset and also those that were not present. Six tests were prepared with that goal in mind by adding random anomaly data in the areas that did not had any data in the training dataset. The resulting training and test datasets can be observed in Figure 3. Besides fixing these parameters we limited the population to 100 individuals and ran the algorithms for 500 generations. The rest of the parameters are tuned using a grid search procedure on a reduced-size problem. The same parameters were used for all problems. The mutation of the parameters were ps = 0.5, pf = 0.5, pt = 0.1, p+ = 0.2, p− = 0.1 and η = 0.5, while the mating probability was 0.5, the minimum and maximum number of sites in an individual was set to 20 and 100, respectively and the committee selection percentile (ρ) was set to 5% of the population.\nThe stochastic nature of the algorithms being analyzed calls for the use of an experimental methodology that relies on statistical hypothesis tests. Using those tests, we are able to determine in a statistical sound way if one algorithm instance outperforms another. The topic of assessing stochastic classification algorithms is studied in depth in [4]. There, it is shown that the Bergmann–Hommel procedure is the most suitable for our class of problem. In all cases, we have used a base level of significance of 0.05 and we run the same experiment instances 50 times. The results of this experiments are shown as box plots in Figure 4. It can be inferred\nfrom those plots that the three-objective form of with accuracy, multiplicative compactness, and total empty volume VorEAl yielded the best results.\nWhen many tests are carried out, a comprehensive analysis of the results is rather difficult as it implies cross-examining and comparing the results presented separately. Consequently, we present them in summarized form in Table 1. It should be noted that experiment parameters and results are available online at http://lmarti.com/VorEAl. To further simplify the understanding of results, why we decided to adopt a more integrative representation like the one proposed in [1]. Figure 5 summarizes the outcome of the hypothesis tests by grouping them by metric and problem, as explained in the previous section. Here it is clearly visible how VorEAl with multiplicative compactness and total empty volume objectives is generally able to yield better results. Finally, as an illustrative example, we show in Figure 5c an example of an evolved Voronoi diagram."
    }, {
      "heading" : "5 Discussion and conclusion",
      "text" : "In this paper we have presented VorEAl, a multi-objective evolutionary algorithm that relies on Voronoi diagrams for representation. VorEAl has been devised with the problem of anomaly detection in mind. The experimental results obtained as part of this work point out that this is a promising direction of work. However, there are many areas that should be further studied and ex-\nplored. From an algorithmic point of view, we should explore other classification objectives (metrics).\nIt is important to try other multi-objective fitness assignments, like those based on multi-objective performance indicators or reference points. This last approach is of particular interest as, as we already mentioned, in our case we have an a priori known ideal solution that can be used to guide the search. In parallel, work should the done in understanding and reducing the computational complexity of the algorithm. In this direction, we are already working on creating approximative versions of the volume meant to decrease the computational cost of the computation of the objective functions."
    }, {
      "heading" : "Acknowledgements",
      "text" : "This work has been funded by the project PIA-FSN-P3344-146479. Authors wish to thank the reviewers for their fruitful comments."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2016,
    "abstractText" : "This paper presents the Voronoi diagram-based evolutionary<lb>algorithm (VorEAl). VorEAl partitions input space in abnormal/normal<lb>subsets using Voronoi diagrams. Diagrams are evolved using a multi-<lb>objective bio-inspired approach in order to conjointly optimize classifi-<lb>cation metrics while also being able to represent areas of the data space<lb>that are not present in the training dataset. As part of the paper VorEAl<lb>is experimentally validated and contrasted with similar approaches.",
    "creator" : "LaTeX with hyperref package"
  }
}