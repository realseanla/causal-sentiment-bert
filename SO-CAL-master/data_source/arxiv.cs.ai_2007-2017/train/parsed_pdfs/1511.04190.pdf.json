{
  "name" : "1511.04190.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "On Choosing Committees Based on Approval Votes in the Presence of Outliers",
    "authors" : [ "Palash Dey", "Neeldhara Misra" ],
    "emails" : [ "palash@csa.iisc.ernet.in", "neeldhara@csa.iisc.ernet.in", "hari@csa.iisc.ernet.in" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n51 1.\n04 19\n0v 1\n[ cs\n.M A\n] 1\nWe also study approximation algorithms for this problem. We show that there does not exist any α(·) factor approximation algorithm for approval and net approval voting rules, for any computable function α(·), unless P = NP. For the minisum voting rule, we provide a (1 + ε) factor approximation algorithm running in time nO( log m/ε2), for every constant ε > 0, where m and n are the number of candidates and the number of votes respectively."
    }, {
      "heading" : "1 Introduction",
      "text" : "Aggregating preferences of agents is a fundamental problem in artificial intelligence and social choice theory [Conitzer, 2010]. Typically, agents (or voters) express their preferences over alternatives (or candidates). There are many different models for the expression of preferences, ranging from the simplistic (each voter provides his or her favorite choice, also known as plurality voting) to the comprehensive (each voter provides a complete ranking over the set of all candidates). Approval ballots are an intermediate model, where a voter approves or disapproves of each candidate — thus a vote may be thought of as a subset of approved candidates or as a binary string indexed by the candidate set. Approval votes are considered as a good compromise between the extreme models — they provide the agent an opportunity to make a comment about every candidate, without incurring the overhead of determining a full ranking on the candidate set [Fishburn, 1978, Brams, 2008, Kilgour, 2010, Lepelley, 2013, Baumeister et al., 2010].\nOur work in this paper focuses on finding the “best” subset of k candidates when given n approval votes over m candidates. The set of candidates together with all the votes is usually called an election instance or simply an election. We use the term electorate to refer to the set of votes of all the agents, and the term committee to refer to a subset of k candidates. Since a committee is a subset of candidates, and a vote can\nalso be interpreted as a subset of the candidate set1, one might consider various natural notions of distance between these two sets. A fixed notion of distance leads to a measure of suitability of a committee with respect to an election — for instance, by considering the sum of distances to all voters, or the maximum distance incurred from any voter. For a committee X and a vote S, the notions of distance that are wellstudied in the literature include the size of the symmetric difference (leading to the minisum or minimax rules) [Brams et al., 2007, LeGrand et al., 2007, Caragiannis et al., 2010, Gramm et al., 2003], the size of the intersection (leading to the notion of approval score), or the difference between |X ∩S| and |X \\S| (leading to the notion of net approval scores) [Procaccia et al., 2008, Skowron and Faliszewski, 2015, Aziz et al., 2015].\nMotivation The standard approach to the selection of a winning committee is to look for one that optimizes these scoring functions over the entire election — that is, when the sum or max of scores are taken over all the votes. However, it is plausible that for some elections, there is a committee that represents a very good consensus when the scores are taken over a subset of the voters rather than the entire set. For example, consider the approval voting rule mentioned above. The approval score of a committee X is the sum of |X ∩ S|, taken over all votes S in the electorate. Let the approval score per vote be the ratio of the approval score of X to n. For a committee of size k, the best approval score per vote possible is k. Clearly, the higher the approval score per vote, the greater a voter is ‘satisfied’ on average. Now, consider the following toy example. Let L ⊆ [m] be an arbitrary but fixed subset of k candidates. Suppose the election has (n − 1) votes that are all exactly equal to L, and one vote that approves [m] \\ L. The best approval score per vote that one can hope for here is k(1− 1/n), whereas if we restrict our attention to the election on the first (n− 1) votes alone, then L’s approval score per vote is k, which is now the best possible. Of course, the difference here is not significant for large n, but the illustration does provoke the following thought: is there a subset of at least n∗ votes that admit a committee whose approval score per vote is at least k∗? For n∗ = n, we are back to the original question of finding the best committee. This more general setting, however, allows us to explore trade-offs and structure in the election: if there is a committee that prescribes a very good consensus over a large fraction of the election, then it is likely to be a more suitable choice for the community compared to a committee that optimizes the same score function over the entire election. While these committees may coincide (as in the toy example), there are easy examples where they would not, making this a question worth exploring.\nThe notion of finding a good consensus over a large subset has been explored in various contexts. In particular, the idea of using outliers is quite common in the the literature of Closest String problems. The setting of closest string involves a collection of n strings, and the goal is to find a single string that minimizes either the maximum distance, or the sum of distances, from all the input strings. The most commonly studied notion of distance is the Hamming distance. Notice that once we interpret votes as binary strings, we are asking a very similar question, and the main distinction is that our search is only over strings that have a fixed number of ones. This similarity has been noted and explored in some works on voting before (see, for instance, [Byrka and Sornat, 2014]). In the context of Closest String, a question that is often asked is the following: given a budget k, is there a string that is “close to” at least k strings? This question has been studied for both the minimax and minisum notions of closeness [Boucher et al., 2013, Lo et al., 2014]. Typically, the strings that are left out are called outliers. In the context of voting, one imagines that there may be a few votes that express rather tangential opinions, and that a good consensus emerges once they are removed. We will also refer to such votes as outliers. In the context of social choice theory, the very notion of Young voting rule can be regarded as to finding minimum number of outliers whose removal makes some candidate Condorcet winner [Young and Levenglick, 1978, Bartholdi III et al., 1989a, Rothe et al., 2003, Betzler et al., 2010].\nOur Framework One of the advantages of using scoring rules for approval ballots described above is that the winning committees are polynomially computable for most of them (with the notable exception\n1This is simply the subset of approved candidates.\nof the minimax voting rule). However, once we pose the question of whether a target score t is achievable after the removal of at most k outliers, the complexity landscape changes dramatically. We show that this question is a computationally hard problem — in particular, we establish NP-hardness. Having shown hardness in the classical setting, we explore the complexity further, primarily from the perspective of exact exponential algorithms and approximation algorithms. In the context of the former, we use the framework of parameterized complexity. Briefly, a parameterized problem instance comprises of an instance x in the usual sense, and a parameter k. A problem with parameter k is called fixed parameter tractable (FPT) if it is solvable in time f(k) · p(|x|), where f is an arbitrary function of k and p is a polynomial in the input size |x|. While there have been important examples of traditional algorithms that have been analyzed in this fashion, the theoretical foundations for deliberate design of such algorithms, and a complementary complexity-theoretic framework for hardness, were developed in the late nineties [Downey and Fellows, 1988, Downey and Fellows, 1995a, Abrahamson et al., 1995, Downey and Fellows, 1995b]. Just as NP-hardness is used as evidence that a problem probably is not polynomial time solvable, there exists a hierarchy of complexity classes above FPT, and showing that a parameterized problem is hard for one of these classes is considered evidence that the problem is unlikely to be fixed-parameter tractable. Indeed, assuming the Exponential Time Hypothesis, a problem hard forW[1] does not belong to FPT [Downey and Fellows, 1999a]. The main classes in this hierarchy are:\nFPT ⊆ W[1] ⊆ W[2] ⊆ · · · ⊆ W[P ] ⊆ XP,\nwhere a parameterized problem belongs to the class XP if there exists an algorithm for it with running time bounded by ng(k). A parameterized problem is said to be para-NP-complete if it is NP-complete even for constant values of the parameter. A classic example of a para-NP-complete problem is graph coloring parameterized by the number of colors — recall that it is NP-complete to determine if a graph can be properly colored with three colors. Observe that a para-NP-complete problem does not belong to XP unless P = NP. We are now ready to describe our contributions in greater detail."
    }, {
      "heading" : "1.1 Our Contributions",
      "text" : "We consider three standard approval scoring mechanisms, namely the minisum, approval, and net approval scores. The last two scores, as originally defined in the literature, are designed to simply give us the total amount of approval that a committee incurs from all the voters. The scores themselves are therefore nondecreasing functions of n, and as such, the question of outliers is not interesting if we use the scores directly (in particular, it is impossible to improve these scores by removing votes). Therefore, we consider the dual scoring system that complements the original — namely, we score a committee based on the amount disapproval that it incurs from all the votes, and seek to minimize the total disapproval. Typically, for any notion of approval, there are either one or two natural complementary notions of disapproval that present themselves (discussed in greater detail below). This formulation is consistent with the idea that we want our scores to capture “distance” rather than closeness. We note that in terms of scores, these rules are equivalent to the original, but choosing to ask the minimization question allows us to formulate the problem of finding the best committee in the presence of outliers.\nRemark 1. One might also consider the approval score per vote instead of the total score, as described earlier. However, we chose to use the notion of disapproval because of its consistency with the other distance-based rules (like minisum and minimax). All the variations are equivalent as scoring functions, and we note that our choice is only a matter of exposition.\nIn Table 1, we summarize the notions of distances between a committee and a vote. Each of these notions naturally gives rise to a score-based voting rule. Formally, for any distance function s : 2C ×2C → N between two subsets of candidates, we overload notation and define the corresponding score function s : 2C × V → N\nfor a set of votes V = {S1, . . . ,Sn} as follows:\ns(X ,V) := n ∑\ni=1\ns(X ,Si)\nFor the winner determination problem, the goal is to find a committee X of size m∗ that minimizes s(X ,V). For all the scoring rules in Table 1, a winning committee of size m∗ can be found in polynomial time for any m∗ ≤ m. We refer the reader to Table 2 for an overview of the notation we use in this paper. We are now ready to define the problem of winner determination for a scoring rule s in the presence of outliers:\ns-Outliers Input: A set of votes V = {S1, . . . ,Sn} over a set of candidates C = {c1, . . . , cm}, a committee size m∗, a target number of non-outliers n∗, and a target score t. Question: Does there exist a committee C∗ ⊂ C and a set of non-outliers V∗ ⊂ V such that |V∗| ≥ n∗, |C∗| = m∗, and s(V∗, C∗) ≤ t?\nRemark 2. We will focus on only one variant of disapproval for the approval scoring rule, namely the one given by the top row in Table 1. The other variation is symmetric and our results hold in the exact same fashion, as explained in Lemma 9 (in Section 6).\nWe first show that the s-Outliers problem is NP-complete for all the scoring rules considered here, even in the special case when every vote approves exactly three candidates and every candidate is approved by exactly three votes. This also establishes the para-NP-hardness of the problem with respect to the (combined) parameters (maximum) number of candidates approved by any vote and (maximum) number of votes that approve a candidate.\nTheorem 1. Let s ∈ {Minisum, Disapproval, Net-Disapproval}. The s-Outliers problem is NP-complete even if every vote approves exactly 3 candidates and every candidate is approved by exactly 3 votes.\nTo initiate the parameterized study of the s-Outliers problem, we propose the following parameters: the size of the committee (m∗), the number of candidates not in the committee (m), the number of non-outliers (n∗), the number of outliers (n), and the target score t (which one might think of as the “solution size” or the standard parameter).\nOur main results are the following. For any subset of these parameters, we establish if the s-Outliers problem is FPT or W[1]-hard when s ∈ {Minisum, Net Approval}, and for the Disapproval voting rule, we have a classification for all cases but one. Specifically, for the minisum voting rule, we establish the following dichotomy.\nTheorem 2. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Minisum-outliers problem parameterized by Q is FPT if Q contains either {m∗,m}, {n∗, n}, or {n, t}, and is W[1]-hard otherwise.\nFor the net disapproval voting rule, we establish the following dichotomy.\nTheorem 3. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Net-Disapproval-outliers problem parameterized by Q is FPT if Q contains either {m∗,m} or {n∗, n}, and is W[1]-hard otherwise.\nFurther, for the disapproval voting rule, we have the following theorem that classifies all cases but one.\nTheorem 4. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Disapproval-Outliers problem parameterized by Q is FPT if Q contains either {m∗,m} or {n∗, n}, and is W[1]-hard for all other cases except for Q = {m,n, t}.\nApart from these classification results in the context of exact algorithms, we also pursue approximation algorithms and other special cases. We briefly summarize our contributions in these contexts below.\nApproximation Results. We provide a polynomial time εm-approximation algorithm for optimizing the minisum score considering outliers, for every constant ε > 0 [Theorem 5]. We also show a (1+ ε)-approximation algorithm for optimizing the minisum score considering outliers running in time nO(log m/ε\n2), for every constant ε > 0 [Theorem 6]. On the hardness side, we show that in the presence of outliers, there does not exist an α(m,n)-aproximation algorithm for optimizing score of the selected committee for any computable function α(·, ·), for the net disapproval [Corollary 2] and disapproval voting rules (unless P = NP) [Lemma 8].\nOther Special Cases. We show that when every voter approves at most one candidate, then the Minisumoutlier problem can be solved in polynomial amount of time. For some W[1]-hard cases, we show that the problem becomes FPT if the maximum number of candidates approved by a vote or the maximum number of votes that approve of a candidate is a constant. We refer the reader to Section 6 for a more detailed discussion."
    }, {
      "heading" : "1.2 Related Work",
      "text" : "The notion of outliers is quite prominent in the literature pertaining to closest strings, where the usual setting is that we are given n strings over some alphabet Σ, and the task is to find a string x that minimizes either the maximum Hamming distance from any string, or the sum of\nits Hamming distances from all strings. In the context of social choice theory, the notion of outliers are intimately related to manipulation and control of election by removing voters and candidates [Bartholdi et al., 1992, Bartholdi III et al., 1989b, Conitzer et al., 2007, Chevaleyre et al., 2007, Hemaspaandra et al., 2007, Brandt et al., 2012, Faliszewski et al., 2009, Faliszewski et al., 2011, Meir et al., 2008, Procaccia et al., 2007, Elkind et al., 2009, Betzler and Uhlmann, 2008].\nIn the minimax notion of distance, the problem of finding a closest string in the presence of outliers was initiated in [Boucher and Ma, 2011], and was further refined in [Boucher et al., 2013]. The work in [Boucher et al., 2013] demonstrates hardness of approximation for variations involving outliers. With the minisum notion of distance, the study of finding the best string with respect to outliers was studied in [Lo et al., 2014]. In contrast with the minimax rule, this work shows a PTAS for Consensus Sequence with Outliers.\nThe fact that the closest string problem has similarities to the setup of approval ballots has been explored in the past, see, for instance [Byrka and Sornat, 2014]. More specifically, and again in the spirit of observing similarities with the closest string family of problems, the minimax approval rule has been studied from the perspective of outliers [Misra et al., 2015]. To the best of our knowledge, our work is the first comprehensive study of the complexity behavior of approval ballots in the presence of outliers."
    }, {
      "heading" : "2 Preliminaries",
      "text" : "In this section we briefly recall some terminology and notation that we will use throughout.\nApproval Voting Let V = {S1, . . . ,Sn} be the set of all votes and C = {c1, . . . , cm} the set of all candidates. Each vote Si is a subset of C. We say voter i approves a candidate x ∈ C if x ∈ Si; otherwise we say, voter i does not approve the candidate x. A voting rule r for choosing a committee of size m∗ is a mapping r : ∪n≥1(2C)n −→ Pm∗(C), where Pm∗(C) is the set of all subsets of C of size m∗. We call a voting rule r a scoring rule if there exists a scoring function s : ∪n≥1(2C)n × 2C −→ N such that r(V) = argminX∈P m ∗(C) s(V , X), for every V ∈ (2\nC)n. We refer to Table 1 for some common scoring rules. Unless mentioned otherwise, we use the notations listed in Table 2.\nAlgorithmic Terminology Given a set A, we denote the complement of A by Ac. For a positive integer ℓ, we denote the set {1, 2, · · · , ℓ} by [ℓ]. We use the notation O∗(f(m,n)) to denote O(f(m,n)poly(m,n)).\nFor a minimization problem P , we say an algorithm A archives an approximation factor of α if A(I) ≤ αOPT (I) for every problem instance I of P . In the above, OPT (I) denotes the value of the optimal solution of the problem instance I.\nDefinition 1. (Parameterized Reduction [Downey and Fellows, 1999b]) Let Γ1 and Γ2 be parameterized problems. A parameterized reduction from Γ1 to Γ2 is an algorithm that, given an instance (x, k) of Γ1, outputs an instance (x ′, k′) of Γ2 such that:\n1. (x, k) is a yes-instance of Γ1 if and only if (x ′, k′) is a yes-instance of Γ2, 2. k′ ≤ g(k) for some computable function g, and\n3. the running time of the algorithm is f(k)|x|O(1) for some computable function f .\n3 Classical Complexity: NP-hardness Results\nWe begin by showing that even for rules where winner determination is polynomial time solvable, the possibility of choosing outliers makes the winner determination problem significantly harder. In particular,\nwe show that the s-Outliers problem is hard for minisum, disapproval, and net disapproval voting rules. We reduce from the well known Vertex Cover problem, which is known to be NP-complete even on 3-regular graphs [Garey and Johnson, 1979].\n3-Vertex-cover Input: A 3-regular graph G and a positive integer k. Question: Is there a subset S of at most k vertices such that G[V \\ S] is an independent set?\nTheorem 1. Let s ∈ {Minisum, Disapproval, Net-Disapproval}. The s-Outliers problem is NP-complete even if every vote approves exactly 3 candidates and every candidate is approved by exactly 3 votes.\nProof. First let us prove the result for the minisum voting rule. The problem is clearly in NP. To prove NP-hardness, we reduce the 3-Vertex-cover problem to the Minisum-outliers. Let (G = (U,E), k) be an arbitrary instance of 3-Vertex-cover problem. Let U = {u1, · · · , un}. We will introduce a candidate and a vote corresponding to every vertex, and have candidate i approved by a vote j if and only if the vertices corresponding to i and j are adjacent in G. We define the corresponding instance (V , C, n∗,m∗, t) of the Minisum-outliers problem as follows:\nV = {S1, · · · ,Sn}, C = {c1, · · · , cn},\nSi = {cj : (ui, uj) ∈ E} ∀i ∈ [n],\nn∗ = n− k,m∗ = k, t = (n− k)(k − 3)\nNotice that, |Si| = 3 and each candidate is approved in exactly 3 votes since G is 3-regular. We claim that the two instances equivalent. In the forward direction, suppose W ⊂ U forms a vertex cover with |W | = k. Consider the committee C∗ = {ci : ui ∈ W} and the set of nonoutliers V∗ = {Si : ui /∈ W}. We claim that h(Si, C∗) = (k − 3) for every Si ∈ V∗ thereby proving h(V∗, C∗) = (n − k)(k − 3). Notice that, h(Si, C∗) ≥ (k − 3) since |C∗| = k and |Si| = 3 for every Si ∈ V∗. Suppose, there exist an Si ∈ V∗ such that h(Si, C∗) < k− 3. Then there exist a candidate cj ∈ Si \\ C∗. However, this implies that the edge (ui, uj) ∈ E is not covered by W which contradicts that fact that W is a vertex cover.\nFor the reverse direction, suppose there exists a set of outliers V ⊂ V and a committee C∗ ⊂ C such that |V| ≤ n, |C∗| = m∗, and h(V∗, C∗) ≤ t. Since, adding votes in the set of outliers V can only reduce h(V∗, C∗), we may assume without loss of generality that |V| = n. Now, since h(Si, C∗) ≥ (k − 3) for every Si ∈ V∗, we have h(V∗, C∗) = (n−k)(k−3) and thus h(Si, C∗) = (k−3) for every Si ∈ V \\V. Let X = {ui ∈ U : Si ∈ V∗} and Y = {ui ∈ U : ci ∈ C∗}. We claim that X covers all the edges incident on the vertices in Y. Indeed, otherwise there exist a ui ∈ X such that all the edges incident on ui are not covered by Y and thus we have h(Si, C∗) > k − 3. We now construct a vertex cover W of G of size at most k as follows. If X and Y are disjoint then, Y forms a vertex cover of G. Otherwise we let Y0 = Y, u ∈ X ∩ Y0, v ∈ (U \\ X ) \\ Y0 and notice that Y0 \\ {u} still covers all the edges incident on X . We define Y1 = (Y0 \\ {u})∪ {v}. We note that |X ∩ Y1| = |X ∩ Y0| − 1 and |Y1| = |Y0|. We iterate this process for |X ∩ Y| many times. Let us call Y|X∩Y| W . By the argument above, W covers all the edges incident on the vertices in X , W ∩X = ∅, and thus we have W = U \\ X . Hence, W forms a set cover of G.\nThe proofs for the other rules are identical, except for the values of the target score. We define t = (n − k)(k − 3) for the disapproval, and t = (n − k)(k − 6) for the net disapproval voting rule. It is easily checked that the details are analogous.\nTheorem 1 immediately yields the following corollary.\nCorollary 1. Let s ∈ {Minisum, Disapproval, Net-Disapproval}. Then the s-Outliers problem is paraNP-hard when parameterized by the sum of the maximum number of approvals that a candidate obtains and the maximum number of candidates that a vote approves.\nOutside the CommitteeCommittee\nN o n -o u tl ie rs\nO u tl ie rs\nAdjacency Matrix of G.\nIndependent Set. (All Zeroes)\nV (G)\nV (G\n)"
    }, {
      "heading" : "4 Parameterized Complexity Results",
      "text" : "In this section, we present the results on parameterized complexity of the s-Outliers problem.\n4.1 FPT algorithms\nThe following result follows from the fact that the s-Outliers problem is polynomial time solvable for all the voting rules considered here if we know either the committee or the non-outliers of the solution.\nProposition 1. Let s ∈ {Minisum, Disapproval, Net-Disapproval}. Then, there is a O∗(2m) time algorithm and a O∗(2n) time algorithm for the s-Outliers problem.\nNow, we show that the Minisum-outliers problem, parameterized by (t+ n), is FPT.\nLemma 1. There is a O∗(2t+n) time algorithm for the Minisum-outliers problem.\nProof. We consider the following two cases.\nCase t < n− n: In this case there exist a vote say Si such that h(X ,Si) = 0, where X is the committee selected. Hence, we can iterate over all possible such Si (if |Si| 6= m\n∗ then, do not consider that Si) and fix X to be Si. We now identify the non-outliers V∗ with respect to the committee X .\nCase t ≥ n− n: Use the algorithm in Proposition 1 which runs in O∗(2n) = O∗(2t+n) time.\n4.2 W[1]-hardness Results\nIn this section, we establish our W[1]-hardness results. To begin with, we focus on parameters combined with the target score t. Notice that we have tractability when we combine either (n+n∗) or (m+m∗) along with t (follows from Proposition 1). For minisum, we even have tractability for t and n, from Lemma 1. Therefore, the interesting combinations for the minisum rule are (t + n∗ + m) and (t + n∗ + m∗). We first consider the combination (t+ n∗ +m), and show W[1]-hardness for all the voting rules considered here by exhibiting a parameterized reduction from the d-Clique problem which is known to be W[1]-hard parameterized by clique size [Downey and Fellows, 2013].\nd-Clique Parameter: k Input: A d-regular graph G and a positive integer k. Question: Is there a clique of size k?\nLemma 2. The Minisum-outliers problem is W[1]-hard, when parameterized by (t + n∗ +m). Also, for s ∈ {disapproval, net disapproval}, the s-Outliers problem is W[1]-hard when parameterized by (n∗ +m), even when t = 0.\nProof. First let us prove the result for the Minisum-outliers problem. We exhibit a parameterized reduction from the d-Clique problem to the Minisum-outliers problem thereby proving the result. Let (G = (U,E), k) be an arbitrary instance of the d-Clique problem. Let U = {u1, · · · , un} and E = {e1, · · · , em}. We define the corresponding instance (V , C, n∗,m∗, t) of the Minisum-outliers problem as follows:\nV = {S1, · · · ,Sm}, C = {c1, · · · , cn},Si = {cj : uj /∈ ei} ∀i ∈ [n],\nn∗ =\n(\nk\n2\n)\n,m = k, t = (k − 2)\n(\nk\n2\n)\nWe claim that the two instances are equivalent. In the forward direction, suppose W ⊂ U forms a clique with |W | = k, and let Q denote the set of edges that have both endpoints in W . Then the committee C∗ = {ci : ui /∈ W} along with the set of non-outliers V∗ = {Si : ui ∈ Q} achieves minisum score of (k − 2) (\nk 2\n)\n.\nIn the reverse direction, suppose there exist a set of non-outliers V∗ ⊂ V and a committee C∗ ⊂ C such that h(V∗, C∗) ≤ (k − 2) (\nk 2\n)\n. We claim that the vertices in W = {ui : ci ∈ C} form a clique with edge set Q = {ei : Si ∈ V∗}. If not then, there exist a vote Sj ∈ V∗ such that h(Sj , C) ≥ k. On the other hand we have h(Si, C) ≥ k − 2 for every Si ∈ V∗. This implies that h(V∗, C∗) > (k − 2) ( k 2 ) , which is a contradiction.\nWe define t = 0 for the disapproval and net disapproval voting rules. It is easily checked that the details are analogous.\nWe now turn to the combination (m∗+n∗+ t). Again, we have W[1]-hardness for all voting rules considered.\nLemma 3. Let s ∈ {Minisum, Net-Disapproval, Disapproval}. Then the s-Outliers problem is W[1]-hard, when parameterized by (t+m∗ + n∗), even when every vote approves exactly two candidates.\nWe now consider the other combinations involving t that are non-trivial for voting rules different from minisum, namely (t+n+m∗) and (t+n+m). Lemma 4 below shows W[1]-hardness for the first combination, for the Disapproval voting rule. This also shows W[1]-hardness with respect to the parameter (n+m∗) alone, for the minisum voting rule.\nLemma 4. The Minisum-Outliers problem is W[1]-hard when parameterized by (n + m∗). Also, the Disapproval-Outliers problem is W[1]-hard parameterized by (m∗+n), even when the target score t = 0. In particular, s-Outliers is W[1]-hard parameterized by (m∗ + n+ t).\nProof. To begin with, let us prove the result for the Minisum-outliers problem. We exhibit a parameterized reduction from the d-Clique problem to the Minisum-outliers problem thereby proving the result. Let (G = (U,E), k) be an arbitrary instance of the d-Clique problem. Let U = {u1, · · · , un} and E = {e1, · · · , em}. We define the corresponding instance (V , C, n∗,m∗, t) of the Minisum-outliers problem as follows:\nV = {S1, · · · ,Sn}, C = {c1, · · · , cm},Si = {cj : ui /∈ ej} ∀i ∈ [n],\nn = k,m∗ =\n(\nk\n2\n)\n, t = (m−\n(\nk\n2\n)\n)(n− k)\nWe claim that the two instances are equivalent. In the forward direction, suppose W ⊂ U forms a clique with |W | = k, and let Q denote the set of edges that have both endpoints in W . Then the committee C∗ = {ci : ei ∈ Q} and the set of non-outliers V∗ = {Si : ui /∈ W} achieves minisum score of (m− ( k 2 ) )(n−k).\nIn the reverse direction, suppose there exist a set of outliers V ⊂ V and a committee C∗ ⊂ C such that h(V∗, C∗) ≤ (m − (\nk 2\n)\n)(n − k). We claim that the vertices in W = {ui : Si ∈ V} form a clique. If not then, there exist a candidate x ∈ C∗ that is not approved by at least one vote in V∗. However, this implies that h(V∗, C∗) > (m− (\nk 2\n)\n)(n− k), which is a contradiction.\nWe define t = 0 for the disapproval voting rule. It is easily checked that the details are analogous.\nNext, we show that Net-Disapproval-outliers is W[1]-hard with respect to the combined parameter (n+ t+m∗).\nLemma 5. The Net-Disapproval-outliers problem is W[1]-hard, when parameterized by (n + m∗), even when the target score is 0. In particular, Net-Disapproval-outliers problem is W[1]-hard, when parameterized by (t+ n+m∗).\nProof. We reduce the Clique problem to the Net-approval-outlier problem. Let (G = (U,E), k) be an arbitrary instance of the Clique problem. Let U = {u1, · · · , un}. We define the corresponding instance (V , C, n∗,m∗, t) of the Net-approval-outlier problem as follows:\nC = {ce : e ∈ E} ∪D, where |D| =\n(\nk\n2\n)\n,\nV = {S1, · · · ,Sn} ∪ {T1, · · · , Tn+2k},\nSi = {ce : ui /∈ e}, ∀i ∈ [n], Tj = D, ∀j ∈\n[(\nk\n2\n)]\n,\nn = k, m∗ = 2\n(\nk\n2\n)\n, t = 0\nWe claim that the two instances equivalent. In the forward direction, suppose G has a clique on a subset of vertices W ⊂ U of size k; let Q be the clique edges. Then we define the set of outlier votes to be V = {Si : ui ∈ W} and the committee to be the set of candidates C∗ = D ∪ {ce : e ∈ Q}. Now we have ∑\nS∈V∗ |S ∩ C ∗| = (n− k)\n(\nk 2\n) + (n+ 2k)|D| = (n+ k) ( k 2 ) and ∑ S∈V∗ |S c ∩ C∗| = (n− k)|D|+ (n+ 2k) ( k 2 ) =\n(n+ k) ( k 2 ) thereby achieving the net approval score t of 0.\nIn the reverse direction, suppose we have a set of outlier votes V and a committee C∗ which achieves a net approval score t of 0. First observe that we can assume without loss of generality that D is a subset of C∗ since irrespective of the outliers chosen, every candidate in D receives at least (n + k) approvals and every candidate not in D receives at most n approvals. Now since the committee C∗ contains D, for every j ∈ [n + 2k], the vote Tj contributes at most |D| − ( k 2 ) = 0 to the net approval score, whereas, for every i ∈ [n], the vote Si contributes at least ( k 2 )\n− |D| = 0 to the net approval score. Hence, we may assume without loss of generality that Tj belongs to the set of non-outliers V∗ for every j ∈ [n+ 2k]. Now we claim\nthat the set of edges Q = {e : ce ∈ C∗} must form a clique on the set of vertices W = {u : Su ∈ V}. If not then, ∑\nS∈V∗ |S ∩ C ∗| < (n+ k)\n(\nk 2\n)\nand ∑ S∈V∗ |S c ∩C∗| > (n+ k)\n(\nk 2\n)\nthereby making the net approval score t strictly more than 0.\nFinally, we show that for all rules considered, the s-Outliers problem is W[1]-hard when parameterized by (n + m). In particular, for the Net-Disapproval-outliers problem, we have W[1]-hardness even when t = 0 and every candidate is approved in exactly two votes.\nLemma 6. Let s ∈ {Minisum, Disapproval, Net-Disapproval}. Then s-Outliers is W[1]-hard, when parameterized by (n + m), even when every candidate is approved in exactly two votes. Further, the NetDisapproval-outliers problem, parameterized by (n+m), is W[1]-hard even when t = 0 and every candidate is approved in exactly two votes. In particular, the Net-Disapproval-outliers problem is W[1]-hard parameterized by (n+m+ t).\nProof. First let us prove the result for the Minisum-outliers problem. We exhibit a parameterized reduction from the d-Clique problem to the Minisum-outliers problem thereby proving the result. Let (G = (U,E), k) be an arbitrary instance of the d-Clique problem. Let U = {u1, · · · , un} and E = {e1, · · · , em}. We define the corresponding instance (V , C, n∗,m∗, t) of the Minisum-outliers problem as follows:\nV = {S1, · · · ,Sn}, C = {c1, · · · , cm},Si = {cj : ui ∈ ej}, ∀i ∈ [n],\nn = k,m =\n(\nk\n2\n)\n, t = (n− k)\n(\nm−\n(\nk\n2\n)\n− d\n)\nWe claim that the two instances are equivalent. In the forward direction, suppose W ⊂ U forms a clique with |W | = k, and let Q denotes the set of edges that have both endpoints in W . Consider the committee C∗ = {ci : ei /∈ Q} and the set of outliers V = {Si : ui ∈ W}. Consider now a vote Sj ∈ V∗. Note that |C∗ ∩ Sj | = d, since every edge incident on uj is an edge that does not belong to Q, by the definition of C ∗. Further, this also implies that |C∗ \\ Sj | = ( m− ( k 2 ) − d ) . Therefore, h(Sj , C∗) = ( m− ( k 2 ) − d ) . Hence we have h(V∗, C∗) = (n− k) ( m− (\nk 2\n) − d ) .\nFor the reverse direction, suppose there exist a set of non-outliers V∗ ⊂ V and a committee C∗ ⊂ C such that h(V∗, C∗) ≤ (n − k) ( m− (\nk 2\n) − d )\n. We claim that the vertices in W = {ui : Si ∈ V} form a clique. If not\nthen there exists a vote S ∈ V∗, such that h(S, C∗) > ( m− (\nk 2\n) − d ) . However, for every vote S ′ ∈ V∗, we\nhave h(S ′, C∗) ≥ ( m− (\nk 2\n) − d ) . This makes h(V∗, C∗) > (n− k) ( m− (\nk 2\n) − d ) which is a contradiction.\nThe proofs for the other rules are identical, except for the values of the target score. We define t = (n− k) ( m− (\nk 2\n) − d ) for the disapproval voting rule. For the net disapproval voting rule, we add (m− 2d)\nmany dummy candidates who are approved by every vote. We keep m = ( k 2 )\nand make t = 0. It is easily checked that the remaining details are analogous."
    }, {
      "heading" : "4.3 Proofs of the Main Theorems",
      "text" : "We are now ready to present the proofs of Theorems 2 to 4 . First, we recall the dichotomy for the minisum voting rule.\nTheorem 2. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Minisum-outliers problem parameterized by Q is FPT if Q contains either {m∗,m}, {n∗, n}, or {n, t}, and is W[1]-hard otherwise.\nProof. Since m∗ +m = m and m∗ + n = n, the tractability results follow from Proposition 1 and Lemma 1. Now, we only have to consider subsets of parameters Q such that:\n1. Q does not contain both m∗ and m\n2. Q does not contain both n∗ and n\n3. Q does not contain both t and n\nAmong such choices of Q, we have the following cases.\n1. Suppose t ∈ Q. Then Q is either a subset of Q1 = {t, n∗,m} or a subset of Q2 = {t, n∗,m∗}. The hardness for all of these cases follow from Lemma 2 and Lemma 3, respectively.\n2. Suppose n ∈ Q. Then Q is either a subset of Q1 = {n,m} or a subset of Q2 = {n,m∗}. The hardness for all of these cases follow from Lemma 4 and Lemma 6, respectively.\n3. If neither t nor n belongs to Q, then Q is either a subset of Q1 = {n∗,m∗}, or Q2 = {n∗,m}. Note that these cases are already subsumed by Case (1) above.\nThis completes the proof of the theorem.\nNow, we turn to the case of the net disapproval voting rule.\nTheorem 3. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Net-Disapproval-outliers problem parameterized by Q is FPT if Q contains either {m∗,m} or {n∗, n}, and is W[1]-hard otherwise.\nProof. Since m∗ +m = m and m∗ + n = n, the tractability results follow from Proposition 1. Now, we only have to consider subsets of parameters Q such that Q does not contain both m∗ and m, and Q does not contain both n∗ and n. Among such choices of Q, we have the following cases.\n1. Suppose n∗ ∈ Q. Then Q is either a subset of Q1 = {n ∗,m, t} or a subset of Q2 = {n ∗,m∗, t}. The hardness for all of these cases follow from Lemma 2 and Lemma 3, respectively.\n2. Suppose n ∈ Q. Then Q is either a subset of Q1 = {n,m, t} or a subset of Q2 = {n,m∗, t}. The hardness for all these cases follow from Lemma 6 and Lemma 5, respectively.\n3. If neither n∗ nor n belongs to Q, then Q is either a subset of Q1 = {t,m∗}, or Q2 = {t,m}. Note that these cases are already subsumed by the cases above.\nThis completes the proof of the theorem.\nFinally, we turn to the case of the disapproval voting rules.\nTheorem 4. Let P = {m∗,m, n∗, n, t}, and Q ⊆ P. The Disapproval-Outliers problem parameterized by Q is FPT if Q contains either {m∗,m} or {n∗, n}, and is W[1]-hard for all other cases except for Q = {m,n, t}.\nProof. Since m∗ +m = m and m∗ + n = n, the tractability results follow from Proposition 1. Now, we only have to consider subsets of parameters Q such that Q does not contain both m∗ and m, and Q does not contain both n∗ and n. Among such choices of Q, we have the following cases.\n1. Suppose n∗ ∈ Q. Then Q is either a subset of Q1 = {n∗,m, t} or a subset of Q2 = {n∗,m∗, t}. The hardness for all of these cases follows from Lemma 2 and Lemma 3, respectively.\n2. Suppose n ∈ Q. Then Q is either a subset of Q1 = {n,m∗, t} or Q2 = {n,m, t}. The hardness for all subsets of Q1 follows from Lemma 4. The status for Q2, as stated in the theorem, is open. The hardness for all strict subsets of Q2 follows from Lemma 6 and the cases that are already resolved. 3. If neither n∗ nor n belongs to Q, then Q is either a subset of Q1 = {t,m∗}, or Q2 = {t,m}. Note that these cases are already subsumed by the cases above.\nThis completes the proof of the theorem."
    }, {
      "heading" : "5 Approximation Results",
      "text" : "In this section, we describe our results in the context of approximation algorithms, where our goal is to minimize the target score, given a committee size m∗ and a budget n for the number of outliers as a part of input. In the first part, we focus on the minisum voting rule, and show an εm approximation algorithm, for every constant ε > 0. We also have a (1+ ε)-approximation algorithm whose running time is nO(log m/ε\n2), for every constant ε > 0. Subsequently, we show that for all the voting rules, the target score is NP-hard to approximate within any factor, as it is NP-hard already to determine if t = 0."
    }, {
      "heading" : "5.1 Approximation Algorithms",
      "text" : "We now turn to some approximation algorithms for the Minisum-Outliers problem. Our first result is the following.\nTheorem 5. There is a εm-approximation algorithm for the Minisum-outliers problem, for every constant ε > 0.\nOur next result is an approximation scheme with a subexponential running time, loosely based on the framework introduced in [Lo et al., 2014]. To this end, we will need the following lemma.\nLemma 7. Let ε be any positive constant. Then, given a set of votes V, there exists a subset V ′ ⊂ V of size O (\nlogm ε2\n)\nsuch that h(V , c(V ′)) ≤ (1 + ε)h(V , c(V)), where c(V) and c(V ′) are the committees chosen by\nMinisum voting rule on V and V ′ respectively.\nProof. We prove the existence of a subset V ′ ⊂ V of size O(logm/ε2) such that h(V , c(V ′)) ≤ (1 + 20ε)h(V , c(V)). Applying the weaker inequality with ε′ = ε20 then proves the Lemma. We assume without loss of generality that ε ≤ 140 . We prove the statement using probabilistic methods. We pick r votes from V uniformly at random to form the set V ′. Let c ∈ C be any arbitrary candidate. Let 1V(c) and 1V′(c) be the number of approvals that the candidate c receives from the votes in V and V ′ respectively. There exist an r = O(logm/ε2) such that the following holds (Theorem 5 in [Dey and Bhattacharyya, 2015]).\nPr [ ∀c ∈ C, ∣ ∣\n∣\nn r 1V′(c)− 1V(c)\n∣ ∣ ∣ ≤ εn ] > 0\nNow assume that for every candidate c ∈ C, we have ∣ ∣ n r 1V ′(c)− 1V(c) ∣\n∣ ≤ εn and the statement above shows that there exists such a set V ′. With this assumption, we now prove the result. Suppose c(V ′) \\ c(V) = {zi : i ∈ [ℓ]}. Then there exists exactly ℓ many candidates z′i, i ∈ [ℓ] such that, c(V) \\ c(V\n′) = {z′i : i ∈ [ℓ]} since both c(V) and c(V ′) are committees of same size m∗. The assumption that for every candidate c ∈ C, we have ∣ ∣\nn r 1V ′(c)− 1V(c) ∣ ∣ ≤ εn gives us the following:\nh(V , c(V ′)) ≤ h(V , c(V)) + 4εℓn\nNow we consider the following two cases.\n• Case 1: 1(z′i) ≤ n 4 for every i ∈ [ℓ] :\nWe have h(V , c(V)) ≥ 3n4 ℓ and thus h(V , c(V ′)) ≤ (1 + 169 ε)h(V , c(V)).\n• Case 2: 1(z′i) ≥ n 4 for some i ∈ [ℓ] :\nFor every j ∈ [ℓ], the candidate zj is in the committee c(V ′) implies the following.\n1(zi) ≥ n\n4 − 2εn for every i ∈ [ℓ]\n⇒ h(V , c(V)) ≥ ( n\n4 − 2εn)ℓ\n≥ n\n5 ℓ\n⇒ h(V , c(V ′)) ≤ (1 + 20ε)h(V , c(V))\nThe third line follows from the the assumption that ε ≤ 140 .\nWe now turn to our approximation algorithm.\nTheorem 6. There is a (1 + ε)-approximation algorithm for the Minisum-outliers problem running in time nO(log m/ε 2), for every constant ε > 0.\nProof. Let V∗ ⊂ V be the set of non-outliers in the optimal solution. We apply Lemma 7 to the set V∗. The algorithm guesses the set V ′ by trying all possible nO(log m/ε\n2) subsets of V (since we do not know V∗). Let c(V ′) be the Minisum committee of the votes in V ′. The algorithm returns the set V ′′ of the n∗ votes that have the smallest Hamming distances from c(V ′) and the committee c(V ′′). Then we have the following.\nh(c(V ′′),V ′′) ≤ h(c(V ′),V ′′) ≤ h(c(V ′),V∗) ≤ (1 + ε)h(c(V∗),V∗)\nThe last inequality follows from Lemma 7."
    }, {
      "heading" : "5.2 Hardness of Approximation",
      "text" : "In the previous section, we demonstrated some approaches for approximating the target score in the context of minisum voting rule. We now show that the other voting rules are inapproximable in a very strong sense. Our first hardness result is that it is NP-hard to check even if there is a subset of outliers and a corresponding committee for which the net disapproval score is zero. This follows from Lemma 6.\nCorollary 2. There does not exist any polynomial time α(m,n)-approximation algorithm for the NetDisapproval-outliers problem for any computable function α(·, ·), unless P = NP.\nNext, we show that it is NP-hard to check even if there is a subset of outliers and a corresponding committee for which the disapproval score is zero. For this, we reduce from a problem closely related to Max-Clique, namely that of finding a largest-sized biclique in a graph G, which is known to be NPcomplete [Garey and Johnson, 1979, Johnson, 1987].\nBiclique Input: An undirected bipartite graph G = (VL, VR, E) and an integer k Question: Do there exist two subsets of vertices A ⊂ VL and B ⊂ VR with |A| = |B| = k such that (A,B) forms a biclique?\nLemma 8. There does not exist any polynomial time α(m,n)-approximation algorithm for Disapprovaloutliers for any computable function α(·, ·), unless P = NP.\nProof. We will show that deciding whether the optimal disapproval score is zero or not, is NP-complete, thereby implying the result. The problem is clearly in NP. To prove NP-hardness, we reduce the Biclique problem to the Disapproval-outliers problem. Let (G = (VL, VR, E), k) be an arbitrary instance of the Biclique problem. Let VL = {u1, · · · , un} and VR = {u′1, · · · , u ′ m}. We define the corresponding instance (V , C, n∗,m∗, t) of the Disapproval-outliers problem as follows:\nV = {S1, · · · ,Sn}, C = {c1, · · · , cm},\nSi = {cj : (ui, u ′ j) ∈ E} ∀i ∈ [n], n ∗ = k,m∗ = k, t = 0\nWe claim that the two instances are equivalent. In the forward direction, suppose A ⊂ VL and B ⊂ VR with |A| = |B| = k forms a biclique. Consider the set of non-outliers to be V∗ = {Si : ui ∈ A} and the committee C∗ = {cj : u′j ∈ B}. This achieves disapproval score of 0. In the reverse direction, suppose there exist a set of non-outliers V∗ and a committee C∗ which achieves disapproval score of 0. Without loss of generality, we assume that |V∗| = k since removing votes from the set of non-outliers can only reduce the score. Consider A = {ui : Si ∈ V∗} ⊂ VL and B = {cj : cj ∈ C∗} ⊂ VR. We claim that A and B must form a biclique. Indeed, otherwise the disapproval score would be strictly more than 0."
    }, {
      "heading" : "6 Concluding Remarks and Future Directions",
      "text" : "We have studied the problem of determining the a committee that is good for a large portion of the electorate, based on some common voting rules. We begin this is section by showing that our choice of the notion of disapproval was an arbitrary one, by demonstrating the following lemma. We use the notation disapproval′ to denote the voting rule given by the corresponding bottom row in Table 1.\nLemma 9. There is a polynomial time approximation preserving reduction from Disapproval-outliers problem to Disapproval′-outliers problem and vice-versa. Moreover, the reductions are such that m∗ in the original instance becomes m in the reduced instance, m in the original instance becomes m∗ in the reduced instance, and every other parameter remain exactly same.\nProof. We provide the reduction from Disapproval-outliers to Disapproval′-outliers. The other cases are exactly same. Let (V , C, n∗,m∗, t) be an arbitrary instance of Disapproval-outliers. We define the corresponding instance (V ′, C′, n∗′,m∗′, t′) of Disapproval′-outliers as follows.\nC′ = C,S ′i = {x ∈ C ′ : x /∈ Si}, n ∗′ = n∗,m∗′ = m, t′ = t\nWe claim that the two instances are equivalent. If there exist a V∗ ⊂ V and C∗ ⊂ C such that sdisapproval(V∗, C∗) ≤ t then sdisapproval′ (V∗, C) ≤ t and vice versa.\nThere are some very special cases that are solvable in polynomial time. In particular, when every candidate is approved by at most one vote, or when every vote approves at most one candidate, then the Minisumoutliers problem can be solved in polynomial amount of time.\nLemma 10. The Minisum-outliers problem is in P when every vote approves at most one candidate.\nProof. The following greedy algorithm computes the committee and the set of outliers which achieves lowest minisum score. First choose the m∗ candidates with maximum number of approvals. Let C∗ be the chosen set of m∗ candidates. Let U be the set of votes who approve some candidate in C∗, W be the set of votes who approve some candidate in C(= C \\ C∗), and Y = V \\ (U ∪W ). Then, if |W | ≥ n, then define the set of outliers to be V for any arbitrary V ⊆ W with |V| = n. If |W | < n and |W |+ |Y | ≥ n, then define the set of outliers to be V = W ∪Z, for any arbitrary Z ⊆ Y with |Z| = n− |W |. Otherwise, define the set of outliers to be W ∪ Y ∪ A, for any arbitrary A ⊆ U with |A| = n− |W |+ |Y |.\nLemma 11. The Minisum-outliers problem is in P when every candidate is approved in at most one vote\nProof. Consider the following dynamic programming based algorithm. Let the votes be S1,S2, · · · ,Sn. We define M(i, j, ℓ) to be a set of j outliers (call it an optimal set of outliers) that minimizes the sum of Hamming distances when we are selecting a committee of size ℓ considering only votes in {S1,S2, · · · ,Si}. We compute the value of M(i, j, ℓ). Consider the case when the vote Si belongs to an optimal set of outliers when we are selecting a committee of size ℓ considering only votes in {S1,S2, · · · ,Si}. In this case, M(i, j, ℓ) = M(i − 1, j − 1, ℓ). Consider the other case when the vote Si does not belong to any optimal set of outliers when we are selecting a committee of size ℓ considering only votes in {S1,S2, · · · ,Si}. Then M(i, j, ℓ) = M(i − 1, j, ℓ − |Si|) if ℓ ≥ |Si| and M(i, j, ℓ) = M(i − 1, j, 0) otherwise, since when the vote Si is not an outlier then we can assume without loss of generality that the committee has maximum overlap with the vote Si. Base cases are taken care from the fact that M(i, j, ℓ) can be computed in polynomial time irrespective of the values of ℓ and j when i is a constant. We compute the value of M(i, j, ℓ) for every i ∈ [n], j ≤ i, ℓ ∈ [m]. M(n, n,m∗) gives us the optimal set of outliers (which also in turn gives us the committee to choose).\nFuture Directions One pertinent open problem is to close the only unresolved case of parameterized complexity of s-Outliers for the disapproval voting rule when parameterized by (m,n, t). It is also open to improve, or prove lower bounds, for our approximation results in the context of the minsum voting rule. Refining the FPT fragment of our dichotomy to kerenlization is also an exciting direction for further investigation. Finally, we are also interested in extending our dichotomous results to a dichotomy based on more parameters. We have made progress towards that by incorporating two more parameters, namely the maximum number of candidates that any vote approves and maximum number of approvals that any candidate obtains."
    } ],
    "references" : [ {
      "title" : "Fixed-parameter tractability and completeness IV: on completeness for W[P] and PSPACE analogues",
      "author" : [ "Abrahamson et al", "K.R. 1995] Abrahamson", "R.G. Downey", "M.R. Fellows" ],
      "venue" : "Annals of Pure and Applied Logic,",
      "citeRegEx" : "al. et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 1995
    }, {
      "title" : "Justified representation in approval-based committee voting",
      "author" : [ "Aziz et al", "H. 2015] Aziz", "M. Brill", "V. Conitzer", "E. Elkind", "R. Freeman", "T. Walsh" ],
      "venue" : "In Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence, January 25-30,",
      "citeRegEx" : "al. et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2015
    }, {
      "title" : "How hard is it to control an election",
      "author" : [ "Bartholdi et al", "J.J. 1992] Bartholdi", "C.A. Tovey", "M.A. Trick" ],
      "venue" : "Mathematical and Computer Modelling,",
      "citeRegEx" : "al. et al\\.,? \\Q1992\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 1992
    }, {
      "title" : "Voting schemes for which it can be difficult to tell who won the election",
      "author" : [ "Bartholdi III et al", "J. 1989a] Bartholdi III", "C.A. Tovey", "M.A. Trick" ],
      "venue" : "Social Choice and welfare,",
      "citeRegEx" : "al. et al\\.,? \\Q1989\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 1989
    }, {
      "title" : "The computational difficulty of manipulating an election",
      "author" : [ "Bartholdi III et al", "J.J. 1989b] Bartholdi III", "C.A. Tovey", "M.A. Trick" ],
      "venue" : "Social Choice and Welfare,",
      "citeRegEx" : "al. et al\\.,? \\Q1989\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 1989
    }, {
      "title" : "Computational aspects of approval voting",
      "author" : [ "Baumeister et al", "D. 2010] Baumeister", "G. Erdélyi", "E. Hemaspaandra", "L.A. Hemaspaandra", "J. Rothe" ],
      "venue" : "In Handbook on Approval Voting,",
      "citeRegEx" : "al. et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2010
    }, {
      "title" : "Parameterized computational complexity of dodgson and young elections",
      "author" : [ "Betzler et al", "N. 2010] Betzler", "J. Guo", "R. Niedermeier" ],
      "venue" : "Information and Computation,",
      "citeRegEx" : "al. et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2010
    }, {
      "title" : "Parameterized complexity of candidate control in elections and related digraph problems",
      "author" : [ "Betzler", "Uhlmann", "N. 2008] Betzler", "J. Uhlmann" ],
      "venue" : "In Combinatorial Optimization and Applications,",
      "citeRegEx" : "Betzler et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Betzler et al\\.",
      "year" : 2008
    }, {
      "title" : "On approximating string selection problems with outliers",
      "author" : [ "Boucher et al", "C. 2013] Boucher", "G.M. Landau", "A. Levy", "D. Pritchard", "O. Weimann" ],
      "venue" : "Theoretical Compututer Science,",
      "citeRegEx" : "al. et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2013
    }, {
      "title" : "Closest string with outliers",
      "author" : [ "Boucher", "Ma", "C. 2011] Boucher", "B. Ma" ],
      "venue" : "BMC Bioinformatics,",
      "citeRegEx" : "Boucher et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Boucher et al\\.",
      "year" : 2011
    }, {
      "title" : "A minimax procedure for electing committees",
      "author" : [ "Brams et al", "S.J. 2007] Brams", "D.M. Kilgour", "M.R. Sanver" ],
      "venue" : "Public Choice,",
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "PTAS for minimax approval voting",
      "author" : [ "Byrka", "Sornat", "J. 2014] Byrka", "K. Sornat" ],
      "venue" : "In Web and Internet Economics,",
      "citeRegEx" : "Byrka et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Byrka et al\\.",
      "year" : 2014
    }, {
      "title" : "Approximation algorithms and mechanism design for minimax approval voting",
      "author" : [ "Caragiannis et al", "I. 2010] Caragiannis", "D. Kalaitzis", "E. Markakis" ],
      "venue" : "In Proceedings of the Twenty-Fourth AAAI Conference on Artificial Intelligence,",
      "citeRegEx" : "al. et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2010
    }, {
      "title" : "A short introduction to computational social",
      "author" : [ "Chevaleyre et al", "Y. 2007] Chevaleyre", "U. Endriss", "J. Lang", "N. Maudet" ],
      "venue" : null,
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "When are elections with few candidates hard to manipulate",
      "author" : [ "Conitzer et al", "V. 2007] Conitzer", "T. Sandholm", "J. Lang" ],
      "venue" : "Journal of the ACM (JACM),",
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "Sample complexity for winner prediction in elections",
      "author" : [ "Dey", "Bhattacharyya", "P. 2015] Dey", "A. Bhattacharyya" ],
      "venue" : "In Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems,",
      "citeRegEx" : "Dey et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Dey et al\\.",
      "year" : 2015
    }, {
      "title" : "Fixed-parameter tractability and completeness I: Basic results",
      "author" : [ "Downey", "Fellows", "1995a] Downey" ],
      "venue" : "SICOMP: SIAM Journal on Computing,",
      "citeRegEx" : "Downey et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Downey et al\\.",
      "year" : 1995
    }, {
      "title" : "Fixed-parameter tractability and completeness II: On completeness for W[1",
      "author" : [ "Downey", "Fellows", "1995b] Downey" ],
      "venue" : "TCS: Theoretical Computer Science,",
      "citeRegEx" : "Downey et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Downey et al\\.",
      "year" : 1995
    }, {
      "title" : "Fixed-parameter tractability and completeness III: Some structural aspects of the W hierarchy",
      "author" : [ "Downey", "Fellows", "R. 1988] Downey", "M. Fellows" ],
      "venue" : "Complexity Theory: Current Research,",
      "citeRegEx" : "Downey et al\\.,? \\Q1988\\E",
      "shortCiteRegEx" : "Downey et al\\.",
      "year" : 1988
    }, {
      "title" : "Fundamentals of Parameterized Complexity",
      "author" : [ "Downey", "Fellows", "R.G. 2013] Downey", "M.R. Fellows" ],
      "venue" : null,
      "citeRegEx" : "Downey et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Downey et al\\.",
      "year" : 2013
    }, {
      "title" : "On distance rationalizability of some voting rules",
      "author" : [ "Elkind et al", "E. 2009] Elkind", "P. Faliszewski", "A. Slinko" ],
      "venue" : "In Proceedings of the 12th Conference on Theoretical Aspects of Rationality and Knowledge,",
      "citeRegEx" : "al. et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2009
    }, {
      "title" : "Multimode control attacks on elections",
      "author" : [ "Faliszewski et al", "P. 2011] Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra" ],
      "venue" : "Journal of Artificial Intelligence Research,",
      "citeRegEx" : "al. et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2011
    }, {
      "title" : "A richer understanding of the complexity of election systems",
      "author" : [ "Faliszewski et al", "P. 2009] Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra", "J. Rothe" ],
      "venue" : "In Fundamental Problems in Computing,",
      "citeRegEx" : "al. et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2009
    }, {
      "title" : "Fixed-parameter algorithms for closest string and related problems",
      "author" : [ "Gramm et al", "J. 2003] Gramm", "R. Niedermeier", "P Rossmanith" ],
      "venue" : null,
      "citeRegEx" : "al. et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2003
    }, {
      "title" : "Anyone but him: The complexity of precluding an alternative",
      "author" : [ "Hemaspaandra et al", "E. 2007] Hemaspaandra", "L.A. Hemaspaandra", "J. Rothe" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "Approval balloting for multi-winner elections",
      "author" : [ "Kilgour", "D.M. 2010] Kilgour" ],
      "venue" : "In Handbook on approval voting,",
      "citeRegEx" : "Kilgour and Kilgour,? \\Q2010\\E",
      "shortCiteRegEx" : "Kilgour and Kilgour",
      "year" : 2010
    }, {
      "title" : "Some results on approximating the minimax solution in approval voting",
      "author" : [ "LeGrand et al", "R. 2007] LeGrand", "E. Markakis", "A. Mehta" ],
      "venue" : "In AAMAS,",
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "SeeSite: characterizing relationships between splice junctions and splicing enhancers",
      "author" : [ "Lo et al", "C. 2014] Lo", "B. Kakaradov", "D. Lokshtanov", "C. Boucher" ],
      "venue" : "IEEE/ACM Transactions on Computational Biology and Bioinformatics,",
      "citeRegEx" : "al. et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2014
    }, {
      "title" : "Complexity of strategic behavior in multi-winner elections",
      "author" : [ "Meir et al", "R. 2008] Meir", "A.D. Procaccia", "J.S. Rosenschein", "A. Zohar" ],
      "venue" : "J. Artif. Intell. Res.(JAIR),",
      "citeRegEx" : "al. et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2008
    }, {
      "title" : "On the parameterized complexity of minimax approval voting",
      "author" : [ "Misra et al", "N. 2015] Misra", "A. Nabeel", "H. Singh" ],
      "venue" : "In Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems,",
      "citeRegEx" : "al. et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2015
    }, {
      "title" : "Multi-winner elections: Complexity of manipulation, control and winner-determination",
      "author" : [ "Procaccia et al", "A.D. 2007] Procaccia", "J.S. Rosenschein", "A. Zohar" ],
      "venue" : "In IJCAI,",
      "citeRegEx" : "al. et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2007
    }, {
      "title" : "On the complexity of achieving proportional representation",
      "author" : [ "Procaccia et al", "A.D. 2008] Procaccia", "J.S. Rosenschein", "A. Zohar" ],
      "venue" : "Social Choice and Welfare,",
      "citeRegEx" : "al. et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2008
    }, {
      "title" : "Exact complexity of the winner problem for young elections",
      "author" : [ "Rothe et al", "J. 2003] Rothe", "H. Spakowski", "J. Vogel" ],
      "venue" : "Theory of Computing Systems,",
      "citeRegEx" : "al. et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "al. et al\\.",
      "year" : 2003
    }, {
      "title" : "Fully proportional representation with approval ballots: Approximating the maxcover problem with bounded frequencies in FPT time",
      "author" : [ "Skowron", "Faliszewski", "P.K. 2015] Skowron", "P. Faliszewski" ],
      "venue" : "In Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence, January 25-30,",
      "citeRegEx" : "Skowron et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Skowron et al\\.",
      "year" : 2015
    }, {
      "title" : "A consistent extension of condorcet’s election principle",
      "author" : [ "Young", "Levenglick", "H.P. 1978] Young", "A. Levenglick" ],
      "venue" : "SIAM Journal on applied Mathematics,",
      "citeRegEx" : "Young et al\\.,? \\Q1978\\E",
      "shortCiteRegEx" : "Young et al\\.",
      "year" : 1978
    } ],
    "referenceMentions" : [ ],
    "year" : 2015,
    "abstractText" : "We study the computational complexity of committee selection problem for several approval-based voting rules in the presence of outliers. Our first result shows that outlier consideration makes committee selection problem intractable for approval, net approval, and minisum approval voting rules. We then study parameterized complexity of this problem with five natural parameters, namely the target score, the size of the committee (and its dual parameter, the number of candidates outside the committee), the number of outliers (and its dual parameter, the number of non-outliers). For net approval and minisum approval voting rules, we provide a dichotomous result, resolving the parameterized complexity of this problem for all subsets of five natural parameters considered (by showing either FPT or W[1]-hardness for all subsets of parameters). For the approval voting rule, we resolve the parameterized complexity of this problem for all subsets of parameters except one. We also study approximation algorithms for this problem. We show that there does not exist any α(·) factor approximation algorithm for approval and net approval voting rules, for any computable function α(·), unless P = NP. For the minisum voting rule, we provide a (1 + ε) factor approximation algorithm running in time n log /ε2), for every constant ε > 0, where m and n are the number of candidates and the number of votes respectively.",
    "creator" : "LaTeX with hyperref package"
  }
}