{
  "name" : "1501.05613.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Second-order Belief Hidden Markov Models",
    "authors" : [ "Jungyeul Park", "Mouna Chebbah", "Siwar Jendoubi", "Arnaud Martin" ],
    "emails" : [ "jungyeul.park@univ-rennes1.fr", "mouna.chebbah@univ-rennes1.fr", "arnaud.martin@univ-rennes1.fr", "jendoubi.siwar@etudiant.univ-rennes1.fr" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Keywords: Belief functions, Dempster-Shafer theory, first-order belief HMM, second-order belief HMM, probabilistic HMM"
    }, {
      "heading" : "1 Introduction",
      "text" : "A Hidden Markov Model (HMM) is one of the most important statistical models in machine learning [?]. A HMM is a classifier or labeler that can assign label or class to each unit in a sequence [?]. It has been successfully utilized over several decades in many applications for processing text and speech such as Part-of-Speech (POS) tagging [?], named entity recognition [?] and speech recognition [?]. However, such works in the early part of the period are mainly based on first-order HMMs. As a matter of fact, the assumption in the first-order HMM, where the state transition and output observation depend only on one previous state, does not exactly match with the real applications [?]. Therefore, they require a number of sophistications. For example, even though the first-order HMM for POS tagging in early 1990s performs reasonably well, it captures a more limited amount of the contextual information than is available [?]. As consequence, most modern statistical POS taggers use a second-order model [?].\nUncertainty theories can be integrated in statistical models such as HMMs: The probability theory has been used to classify units in a sequence with the Bayesian model. Then, the theory of belief functions is employed to this statistical model because the fusion proposed in this theory simplifies computations of a posteriori distributions of hidden data in Markov models. This theory can provide rules to combine evidences from different sources to reach a certain level of belief [?,?,?,?,?]. Belief HMMs introduced in [?,?,?,?,?,?,?,?,?], use combination rules proposed in the framework of the theory of belief functions. This paper is an extension of previous ideas for second-order belief HMMs. For the current work, we focus on explaining a second-order model. However, the proposed method can be easily extended to higher-order models. ar X iv :1\n50 1.\n05 61\n3v 1\n[ cs\n.A I]\n2 2\nJa n\n20 15\nThis paper is organized as follows: In Sections 2 and 3, we detail probabilistic HMMs for the problem of POS tagging where HMMs have been widely used. Then, we describe the first-order belief HMM in Section 4. Finally, before concluding, we propose the second-order belief HMM."
    }, {
      "heading" : "2 First-order probabilistic HMMs",
      "text" : "POS tagging is a task of finding the most probable estimated sequence of n tags given the observation sequence of v words. According to [?], a first-order probabilistic HMM can be characterized as follows:\nN The number of states in a model St = {st1,st2, · · ·stN} at the time t. M The number of distinct observation symbols. V = {v1,v2, · · · ,vM}. A = {ai j} The set of N transition probability distributions. B = {b j(ot)} The observation probability distributions in state j. π = {πi} The initial probability distribution. Figure 1 illustrates the first-order probabilistic HMM allowing to estimate the prob-\nability of the sequence st−1i and s t j where ai j is the transition probability from s t−1 i to stj and b j(ot) is the observation probability on the state s t j. Regarding POS tagging, the number of possible POS tags that are hidden states St of the HMM is N. The number of words in the lexicons V is M. The transition probability ai j is the probability that the model moves from one tag st−1i to another tag s t j. This probability can be estimated using a training data set in supervised learning for the HMM. The probability of a current POS tag appearing in the first-order HMM depends only on the previous tag. In general, first-order probabilistic HMMs should be characterized by three fundamental problems as follows [?]:\n– Likelihood: Given a set of transition probability distributions A, an observation sequence O = o1,o2, · · · ,oT and its observation probability distribution B, how do we determine the likelihood P(O|A,B)? The first-order model relies on only one observation where b j(ot) = P(o j|stj) and the transition probability based on one previous tag where ai j = P(stj|s t−1 i ). Using the forward path probability, the likelihood αt( j)\nof a given state stj can be computed by using the likelihood αt−1(i) of the previous state st−1i as described below:\nαt( j) = ∑ i αt−1(i)ai jb j(ot) (1)\n– Decoding: Given a set of transition probability distributions A, an observation sequence O = o1,o2, · · · ,oT and its observation probability distribution B, how do we discover the best hidden state sequence? The Viterbi algorithm is widely used for calculating the most likely tag sequence for the decoding problem. The Viterbi algorithm can calculate the most probable path δt( j) which contains the sequence of ψt( j). It can select the path that maximizes the likelihood of the sequence as described below:\nδt( j) = maxδt−1(i)ai jb j(ot) ψt( j) = argmaxψt−1(i)ai j\n(2)\n– Learning: Given an observation sequence O = o1,o2, · · · ,oT and a set of states S = {st1,st2, · · · ,stN}, how do we learn the HMM parameters for A and B? The parameter learning task usually uses the Baum-Welch algorithm which is a special case of the Expectation-Maximization (EM) algorithm.\nIn this paper, we focus on the likelihood and decoding problems by assuming a supervised learning paradigm where labeled training data are already available."
    }, {
      "heading" : "3 Second-order probabilistic HMMs",
      "text" : "Now, we explain the extension of the first-order model to a trigram3 in the second-order model. Figure 2 illustrates the second-order probabilistic HMM allowing to estimate the probability of the sequence of three states st−2i , s t−1 j and s t k where ai jk is the transition probability from st−2i and s t−1 j to s t k, and bk(ot) is the observation probability on the state stk. Therefore, the second-order probabilistic HMM is characterized by three fundamental problems as follows:\n– Likelihood: The second-order model relies on one observation bk(ot). Unlike the first-order model, the transition probability is based on two previous tags where ai jk = P(stk|s t−2 i , s t−1 j ) as described below:\nαt(k) = ∑ j αt−1( j)ai jkbk(ot) (3)\nHowever, it will be more difficult to find a sequence of three tags than a sequence of two tags. Any particular sequence of tags st−2i , s t−1 j , s t k that occurs in the test set may simply never have occurred in the training set because of data sparsity [?]. Therefore, a method for estimating P(stk|s t−2 i ,s t−1 j ), even if the sequence s t−2 i , st−1j , s t k never occurs, is required. The simplest method to solve this problem is to combine the trigram P̂(stk|s t−2 i ,s t−1 j ), the bigram P̂(s t k|s t−1 j ), and even the unigram P̂(stk) probabilities [?]:\nP(stk|st−2i ,s t−1 j ) = λ1P̂(s t k|st−2i ,s t−1 j )+λ2P̂(s t k|st−1j )+λ3P̂(s t k) (4)\nNote that P̂ is the maximum likelihood probabilities which are derived from the relative frequencies of the sequence of tags. Values of λ are such that λ1+λ2+λ3 = 1 and they can be estimated by the deleted interpolation algorithm [?]. Otherwise, [?] describes a different method for values of λ as below:\nλ1 = k3 λ2 = (1− k3) · k2 λ3 = (1− k3) · (1− k2)\n(5)\n3 The trigram is the sequence of three elements, i.e. three states in our case.\nwhere k2 = log(C(st−1j ,s t k)+1)+1\nlog(C(st−1j ,s t k)+1)+2\n, k3 = log(C(st−2i ,s t−1 j ,s t k)+1)+1\nlog(C(st−2i ,s t−1 j ,s t k)+1)+2\n, and C(st−2i ,s t−1 j ,s t k) is the\nfrequency of a sequence st−2i ,s t−1 j ,s t k in the training data. Note that λ1 +λ2 +λ3 is not always equal to one in [?]. The likelihood of the observation probability for the second-order model uses B where bk(ot) = P(ok|stk,s t−1 j ). – Decoding: For second-order model we require a different Viterbi algorithm. For a given state s at the time t, it would be redefined as follows [?]:\nδt(k) = maxδt−1( j)ai jkbk(ot) where δt( j) = maxP(s1,s2, · · · ,st−1 = si,st = s j,o1,o2, · · · ,ot) ψt(k) = argmaxψt−1( j)ai jk where ψt(k) = argmaxP(s1,s2, · · · ,st−1 = si,st = s j,o1,o2, · · · ,ot) (6)\n– Learning: The problem of learning would be similar to the first-order model except that parameters A and B are different.\nWith respect to performance measures, different transition probability distributions in [?] and [?] obtain 97.0% and 97.09% tagging accuracy for known words, respectively for the same data (the Penn Treebank corpus). Even though probabilistic HMMs perform reasonably well, belief HMMs can learn better under certain conditions on observations [?]."
    }, {
      "heading" : "4 First-order Belief HMMs",
      "text" : "In probabilistic HMMs, A and B are probabilities estimated from the training data. However, A and B in belief HMMs are mass functions (bbas) [?,?].According to previous works on belief HMMs, a first-order HMM using belief functions can be characterized as follows4:\nN The number of states in a model Ωt = {St1,St2, · · · ,StN}. M The number of distinct observation symbols V . A = {mΩta [St−1i ](Stj)} The set of conditional bbas to all possible subsets of states. B = {mΩtb [ot ](S t j)} The set of bbas according to all possible observations Ot . π = {mΩ1π (SΩ1i )} The bba defined for the the initial state. Difference between the first-order probabilistic and belief HMMs is presented in Figure 1, the transition and observation probabilities in belief HMMs are described as mass functions. Therefore, we can replace ai j by mΩta [S t−1 i ](S t j) and b j(ot) by m Ωt b [ot ](S t j). The set Ωt has been used to denote states for HMMs using belief functions [?,?]. Note that sti is the single state for probabilistic HMMs and S t i is the multi-valued state for belief HMMs. First-order belief HMMs should also be characterized by three fundamental problems as follows:\n– Likelihood: The likelihood problem in belief HMMs is not solved by likelihood, but by using the combination. The first-order belief model relies on (i) only one observation mΩtb [ot ](S t j) and (ii) a transition conditional mass function based on\n4 In the model Ωt , St are focal elements\none previous tag mΩta [S t−1 i ](S t j). Mass functions of sets A and B are combined using the Disjunctive Rule of Combination (DRC) for the forward propagation and the Generalized Bayesian Theorem (GBT) for the backward propagation [?]. Using the forward path propagation, the mass function of a given state Stj can be computed as the combination of mass functions on the observation and the transition as described below:\nqΩtα (S t j) = ∑mΩt−1α (St−1i ) ·qΩta [St−1i ](Stj) ·qΩtb (Stj) (7)\nNote that the mass function of the given state Stj is derived from the commonality\nfunction qΩtα . – Decoding: Several solutions have been proposed to extend the Viterbi algorithm to\nthe theory of belief functions [?,?,?]. Such solutions maximize the plausibility of the state sequence. In fact, the credal Viterbi algorithm starts from the first observation and estimates the commonality distribution of each observation until reaching the last state. For each state Stj, the estimated commonality distribution (q Ωt δ (S t j)) is converted back to a mass function that is conditioned on the previous state. Then, we apply the pignistic transform to make a decision about the current state (ψt(stj)):\nqΩtδ (S t j) = ∑St−1i ⊆At−1 m Ωt−1 δ (S t−1 i ) ·qΩta [S t−1 i ](S t j) ·q Ωt b (S t j) ψt(stj) = argmaxSt−1i ∈Ωt−1 (1−m Ωt δ [S t−1 i ]( /0)) ·Pt [S t−1 i ](S t j)\n(8)\nwhere At = ∪St−1j ∈Ωt ψt(S t j) [?].\n– Learning: Instead of the traditional EM algorithm, we can use the E2M algorithm for the belief HMM [?].\nTo build belief functions from what we learned using probabilities in the previous section, we can employ the least commitment principle by using the inverse pignistic transform [?,?]."
    }, {
      "heading" : "5 Second-order Belief HMMs",
      "text" : "Like the first-order belief HMM, N, M, B and π are similarly defined in the second-order HMM. The set A is quite different and is defined as follows:\nA = {mΩta [St−2i ,S t−1 j ](S t k)} (9)\nwhere A is the set of conditional bbas to all possible subsets of states based on the two previous states. Second-order belief HMMs should also be characterized by three fundamental problems as follows:\n– Likelihood: The second-order belief model relies on one observation mΩtb [ot ](S t k)\nin a state Sk at time t and the transition conditional mass function based on two previous states St−2i and S t−1 j , defined by m Ωt a [S t−2 i ,S t−1 j ](S t k). Using the forward path\npropagation, the mass function of a given state Stk can be computed as the disjunctive combination (DRC) of mass functions on the transition mΩta [S t−2 i ,S t−1 j ](S t k) and the observation mΩtb (S t k) as described below:\nqΩtα (S t k) = ∑mΩt−1α (St−1j ) ·qΩta [St−2i ,St−1j ](Stk) ·qΩtb (Stk) (10)\nwhere qΩta [S t−2 i ,S t−1 j ](S t k) is the commonality function derived from the conjunctive combination of mass functions of two previous transitions. The conjunctive combination is used to have the conjunction of observations on previous two states St−2i and St−1j . The combined mass function mΩta [S t−2 i ,S t−1 j ](S t k) of two transitions m Ωt−1 a [St−2i ](S t−1 j ) and mΩta [S t−1 j ](S t k) is defined as follows:\nmΩta [S t−2 i ,S t−1 j ](S t k) = m Ωt−1 a [St−2i ](S t−1 j ) ∪© mΩta [S t−1 j ](S t k) (11)\nThe conjunctive combination is required to obtain the conjunction of both transitions. Note that the mass function of the given state Stk is derived from the commonality function qΩtα . We use DRC with commonality functions like in [?]. Note that the observation only on one previous state is taken into account in the firstorder belief HMM, but the conjunction of observations on two previous states is considered in the second-order belief HMM. – Decoding: We accept our assumption of the first-order belief HMM for the secondorder model. Similarly to the first-order belief HMM, we propose a solution that maximizes the plausibility of the state sequence. The credal Viterbi algorithm estimates the commonality distribution of each observation from the first observation till the final state. For each state Stk, the estimated commonality distribution (qΩtδ (S t k)) is converted back to a mass function that is conditioned on a mass func-\ntion of the two previous states. This mass function is the conjunctive combination of mass functions of the two previous states. Then, we apply the pignistic transform to make a decision about the current state (ψt(stj)) as before:\nqΩtδ (S t k) = ∑St−1j ⊆At−1 m Ωt−1 δ (S t−1 j ) ·qΩta [S t−2 i ,S t−1 j ](S t k) ·q Ωt b (S t k) ψt(stk) = argmaxSt−1j ∈Ωt−1 (1−m Ωt δ [S t−1 j ]( /0)) ·Pt [S t−2 i ,S t−1 j ](S t k)\n(12)\n– Learning: Like the first-order belief model, we can still use the E2M algorithm for the belief HMM [?].\nSince the combination of mass functions in the belief HMM is required where the previous observation is already considered in the set of conditional bbas mΩta [S t−2 i ,S t−1 j ], we do not need to refine the observation probability for the second-order model as in the second-order probabilistic model."
    }, {
      "heading" : "6 Conclusion and future perspectives",
      "text" : "The problem of POS tagging has been considered as one of the most important tasks for natural language processing systems. We described such a problem based on HMMs\nand tried to apply our idea to the theory of belief functions. We extended previous works on belief HMMs to the second-order model. Using the proposed method, we will be able to easily extend the higher-order model for belief HMMs. Some technical aspects still remain to be considered. Robust implementation for belief HMMs are required where in general we can find over one million observations in the training data to deal with the problem of POS tagging. As described before, the choice of inverse pignistic transforms would be empirically verified.5 We are planning to implement these technical aspects in near future.\nThe current work is described to rely on a supervised learning paradigm from labeled training data. Actually, the forward-backward algorithm in HMMs can do completely unsupervised learning. However, it is well known that EM performs poorly in unsupervised induction of linguistic structure because it tends to assign relatively equal numbers of tokens to each hidden state [?].6 Therefore, the initial conditions can be very important. Since the theory of belief functions can take into consideration of uncertainty and imprecision, especially for the lack of data, we might obtain a better model using belief functions on an unsupervised learning paradigm."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2015,
    "abstractText" : "Hidden Markov Models (HMMs) are learning methods for pattern recognition. The probabilistic HMMs have been one of the most used techniques based on the Bayesian model. First-order probabilistic HMMs were adapted to the theory of belief functions such that Bayesian probabilities were replaced with mass functions. In this paper, we present a second-order Hidden Markov Model using belief functions. Previous works in belief HMMs have been focused on the first-order HMMs. We extend them to the second-order model.",
    "creator" : "LaTeX with hyperref package"
  }
}