{
  "name" : "1702.08791.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Robust Budget Allocation via Continuous Submodular Functions",
    "authors" : [ "Matthew Staib" ],
    "emails" : [ "stefje}@mit.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "The optimal allocation of resources for maximizing influence, spread of information or coverage, has gained attention in the past few years, in particular in machine learning and data mining [Domingos & Richardson, 2001; Kempe et al., 2003; Chen et al., 2009; Gomez Rodriguez & Schölkopf, 2012; Borgs et al., 2014].\nIn the Budget Allocation Problem, one is given a bipartite influence graph between channels S and people T , and the task is to assign a budget y(s) to each channel s in S with the goal of maximizing the expected number of influenced people I(y). Each edge (s, t) ∈ E between channel s and person t is weighted with a probability pst that, e.g., an advertisement on radio station s will influence person t to buy some product. The budget y(s) controls how many independent attempts are made via the channel s to influence the people in T . The probability that a customer t is influenced when the advertising budget is y is\nIt(y) = 1− ∏\n(s,t)∈E [1− pst]y(s), (1)\nand hence the expected number of influenced people is I(y) = ∑\nt∈T It(y). We write I(y; p) = I(y) to make the dependence on the probabilities pst explicit. The total budget y must remain within some feasible set Y which may encode e.g. a total budget limit ∑ s∈S y(s) ≤ C. We allow the budgets y to be continuous, as in [Bian et al., 2017].\nar X\niv :1\n70 2.\n08 79\n1v 2\n[ cs\n.L G\n] 1\n3 Ju\nn 20\nSince its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al. [2015]; Maehara et al. [2015]; Soma et al. [2014]; Soma & Yoshida [2015]. Budget Allocation may also be viewed as influence maximization on a bipartite graph, where information spreads as in the Independent Cascade model. For integer y, Budget Allocation and Influence Maximization are NP-hard. Yet, constant-factor approximations are possible, and build on the fact that the influence function is submodular in the binary case, and DR-submodular in the integer case [Soma et al., 2014; Hatano et al., 2015]. If y is continuous, the problem is a concave maximization problem.\nThe formulation of Budget Allocation assumes that the transmission probabilities are known exactly. But this is rarely true in practice. Typically, the probabilities pst, and possibly the graph itself, must be inferred from observations [Gomez Rodriguez et al., 2010; Du et al., 2013; Narasimhan et al., 2015; Du et al., 2014; Netrapalli & Sanghavi, 2012]. In Section 4 we will see that a misspecification or point estimate of parameters pst can lead to much reduced outcomes. A more realistic assumption is to know confidence intervals for the pst. Realizing this severe deficiency, recent work studied robust versions of Influence Maximization, where a budget y must be chosen that maximizes the worst-case approximation ratio over a set of possible influence functions [He & Kempe, 2016; Chen et al., 2016; Lowalekar et al., 2016]. The resulting optimization problem is hard but admits bicriteria approximations.\nIn this work, we revisit Budget Allocation under uncertainty from the perspective of robust optimization [Bertsimas et al., 2011; Ben-Tal et al., 2009]. We maximize the worst-case influence – not approximation ratio – for p in a confidence set centered around the “best guess” (e.g., posterior mean). This avoids pitfalls of the approximation ratio formulation (which can be misled to return poor worst-case budgets, as demonstrated in Appendix A), while also allowing us to formulate the problem as a max-min game:\nmax y∈Y min p∈P\nI(y; p), (2)\nwhere an “adversary” can arbitrarily manipulate p within the confidence set P. With p fixed, I(y; p) is concave in y. However, the influence function I(y; p) is not convex, and not even quasiconvex, in the adversary’s variables pst.\nThe new, key insight we exploit in this work is that I(y; p) has the property of continuous submodularity in p – in contrast to previously exploited submodular maximization in y – and can hence be minimized by generalizing techniques from discrete submodular optimization Bach [2015]. The techniques in [Bach, 2015], however, are restricted to box constraints, and do not directly apply to our confidence sets. In fact, general constrained submodular minimization is hard [Svitkina & Fleischer, 2011; Goel et al., 2009; Iwata & Nagano, 2009]. We make the following contributions:\n1. We present an algorithm with optimality bounds for Robust Budget Allocation in the nonconvex adversarial scenario (2).\n2. We provide the first results for continuous submodular minimization with box constraints and one more “nice” constraint, and conditions under which the algorithm is guaranteed to return a global optimum."
    }, {
      "heading" : "1.1 Background and Related Work",
      "text" : "We begin with some background material and, along the way, discuss related work."
    }, {
      "heading" : "1.1.1 Submodularity over the integer lattice and continuous domains",
      "text" : "Submodularity is perhaps best known as a property of set functions. A function F : 2V → R defined on subsets S ⊆ V of a ground set V is submodular if for all sets S, T ⊆ V , it holds that F (S) + F (T ) ≥ F (S ∩ T ) + F (S ∪ T ). A similar definition extends to functions defined over a distributive lattice L, e.g. the integer lattice. Such a function f is submodular if for all x, y ∈ L, it holds that\nf(x) + f(y) ≥ f(x ∨ y) + f(x ∧ y). (3)\nFor the integer lattice and vectors x, y, x ∨ y denotes the coordinate-wise maximum and x ∧ y the coordinate-wise minimum. Submodularity has also been considered on continuous domains X ⊂ Rd, where, if f is also twice-differentiable, the property of submodularity means that all off-diagonal entries of the the Hessian are nonpositive, i.e., ∂f(x)∂xi∂xj ≤ 0 for all i 6= j [Topkis, 1978, Theorem 3.2]. These functions may be convex, concave, or neither.\nSubmodular functions on lattices can be minimized by a reduction to set functions, more precisely, ring families Birkhoff [1937]. Combinatorial algorithms for submodular optimization on lattices are discussed in [Khachaturov et al., 2012]. More recently, Bach [2015] extended results based on the convex Lovász extension, by building on connections to optimal transport. The subclass of L\\-convex functions admits strongly polynomial time minimization [Murota, 2003; Kolmogorov & Shioura, 2009; Murota & Shioura, 2014], but does not apply in our setting.\nSimilarly, results for submodular maximization extend to integer lattices, e.g. [Gottschalk & Peis, 2015]. Stronger results are possible if the submodular function also satisfies diminishing returns: for all x ≤ y (coordinate-wise) and i such that y+ ei ∈ X , it holds that f(x+ ei)− f(x) ≥ f(y + ei) − f(y). For such DR-submodular functions, many approximation results for the set function case extend [Bian et al., 2017; Soma & Yoshida, 2015; Soma et al., 2014]. In particular, Ene & Nguyen [2016] show a generic reduction to set function optimization that they apply to maximization. In fact, it also applies to minimization:\nProposition 1.1. A DR-submodular function f defined on ∏n i=1[ki] can be minimized in strongly polynomial time O(n4 log4 k · log2(n log k) ·EO+n4 log4 k · logO(1)(n log k)), where k = maxi ki and EO is the time complexity of evaluating f . Here, [ki] = {0, 1, . . . , ki − 1}.\nProof. The function f can be reduced to a submodular set function g : 2V → R via [Ene & Nguyen, 2016], where |V | = O(n log k). The function g can be evaluated via mapping from 2V to the domain of f , and then evaluating f , in time O(n log k ·EO). We can directly substitute these complexities into the runtime bound from [Lee et al., 2015].\nIn particular, the time complexity is logarithmic in k. For general lattice submodular functions, this is not possible without further assumptions."
    }, {
      "heading" : "1.1.2 Related Problems",
      "text" : "A sister problem of Budget Allocation is Influence Maximization on general graphs, where a set of seed nodes is selected to start a propagation process. The influence function is still monotone submodular and amenable to the greedy algorithm Kempe et al. [2003], but it cannot be evaluated explicitly and requires approximation Chen et al. [2010]. Stochastic Coverage [Goemans & Vondrák, 2006] is a version of Set Cover where the covering sets Si ⊂ V are random. A variant of Budget Allocation can be written as stochastic coverage with multiplicity. Stochastic Coverage has mainly\nbeen studied in the online or adaptive setting, where logarithmic approximation factors can be achieved [Golovin & Krause, 2011; Deshpande et al., 2016; Adamczyk et al., 2016].\nOur objective function (2) is a signomial in p, i.e., a linear combination of monomials of the form ∏ i x ci i . General signomial optimization is NP-hard [Chiang, 2005], but certain subclasses are tractable: posynomials with all nonnegative coefficients can be minimized via Geometric Programming [Boyd et al., 2007], and signomials with a single negative coefficient admit sum of squares-like relaxations [Chandrasekaran & Shah, 2016]. Our problem, a constrained posynomial maximization, is not in general a geometric program. Some work addresses this setting via monomial approximation [Pascual & Ben-Israel, 1970; Ecker, 1980], but, to our knowledge, our algorithm is the first that solves this problem to arbitrary accuracy."
    }, {
      "heading" : "1.1.3 Robust Optimization",
      "text" : "Two prominent strategies of addressing uncertainty in parameters of optimization problems are stochastic and robust optimization. If the distribution of the parameters is known (stochastic optimization), formulations such as value-at-risk (VaR) and conditional value-at-risk (CVaR) Rockafellar & Uryasev [2000, 2002] apply. In contrast, robust optimization [Ben-Tal et al., 2009; Bertsimas et al., 2011] assumes that the parameters (of the cost function and constraints) can vary arbitrarily within a known confidence set U , and the aim is to optimize the worst-case setting, i.e.,\nmin y sup u,A,b∈U\n{g(y;u) s.t. Ay ≤ b}. (4)\nHere, we will only have uncertainty in the cost function. In this paper we are principally concerned with robust maximization of the continuous influence function I(y), but mention some results for the discrete case. While there exist results for robust and CVaR optimization of modular (linear) functions [Nikolova, 2010; Bertsimas & Sim, 2003], submodular objectives do not in general admit such optimization Maehara [2015], but variants admit approximations [Zhang et al., 2014]. The brittleness of submodular optimization under noise has been studied in [Balkanski et al., 2016, 2017; Hassidim & Singer, 2016].\nApproximations for robust submodular and influence optimization have been studied in [Krause et al., 2008; He & Kempe, 2016; Chen et al., 2016; Lowalekar et al., 2016], where an adversary can pick among a finite set of objective functions or remove selected elements Orlin et al. [2016]."
    }, {
      "heading" : "2 Robust and Stochastic Budget Allocation",
      "text" : "The unknown parameters in Budget Allocation are the transmission probabilities pst or edge weights in a graph. If these are estimated from data, we may have posterior distributions or, a weaker assumption, confidence sets for the parameters. For ease of notation, we will work with the failure probabilities xst = 1− pst instead of the pst directly, and write I(y;x) instead of I(y; p)."
    }, {
      "heading" : "2.1 Stochastic Optimization",
      "text" : "If a (posterior) distribution of the parameters is known, a simple strategy is to use expectations. We place a uniform prior on xst, and observe nst independent observations drawn from Ber(xst). If we observe αst failures and and βst successes, the resulting posterior distribution on the variable\nXst is Beta(1 + αst, 1 + βst). Given such a posterior, we may optimize\nmax y∈Y\nI(y;E[X]), or (5)\nmax y∈Y\nE[I(y;X)]. (6)\nProposition 2.1. Problems (5) and (6) are concave maximization problems over the (convex) set Y and can be solved exactly.\nConcavity of (6) follows since it is an expectation over concave functions, and the problem can be solved by stochastic gradient ascent or by explicitly computing gradients.\nMerely maximizing expectation does not explicitly account for volatility and hence risk. One option is to include variance Ben-Tal & Nemirovski [2000]; Bertsimas et al. [2011]; Atamtürk & Narayanan [2008]:\nmin y∈Y −E[I(y;X)] + ε\n√ Var(I(y;X)), (7)\nbut in our case this CVaR formulation seems difficult: Fact 2.1. For y in the nonnegative orthant, the term √\nVar(I(y;X)) need not be convex or concave, and need not be submodular or supermodular.\nThis observation does not rule out a solution, but the apparent difficulties further motivate a robust formulation that, as we will see, is amenable to optimization."
    }, {
      "heading" : "2.2 Robust Optimization",
      "text" : "The focus of this work is the robust version of Budget Allocation, where we allow an adversary to arbitrarily set the parameters x within an uncertainty set X . This uncertainty set may result, for instance, from a known distribution, or simply assumed bounds. Formally, we solve\nmax y∈Y min x∈X\nI(y;x), (8)\nwhere Y ⊂ RS+ is a convex set with an efficient projection oracle, and X is an uncertainty set containing an estimate x̂. In the sequel, we use uncertainty sets X = {x ∈ Box(l, u) : R(x) ≤ B}, where R is a distance (or divergence) from the estimate x̂, and Box(l, u) is the box ∏ (s,t)∈E [lst, ust]. The intervals [lst, ust] can be thought of as either confidence intervals around x̂, or, if [lst, ust] = [0, 1], enforce that each xst is a valid probability.\nCommon examples of uncertainty sets used in Robust Optimization are Ellipsoidal and D-norm uncertainty sets Bertsimas et al. [2011]. Our algorithm in Section 3.1 applies to both.\nEllipsoidal uncertainty. The ellipsoidal or quadratic uncertainty set is defined by\nXQ(γ) = {x ∈ Box(0, 1) : (x− x̂)TΣ−1(x− x̂) ≤ γ},\nwhere Σ is the covariance of the random vector X of probabilities distributed according to our Beta posteriors. In our case, since the distributions on each xst are independent, Σ\n−1 is actually diagonal. Writing Σ = diag(σ2), we have\nXQ(γ) = { x ∈ Box(0, 1) : ∑ (s,t)∈E Rst(xst) ≤ γ } ,\nwhere Rst(x) = (xst − x̂st)2σ−2st . D-norm uncertainty. The D-norm uncertainty set is similar to an `1-ball around x̂, and is defined as\nXD(γ) = { x : ∃c ∈ Box(0, 1) s.t.\nxst = x̂st + (ust − x̂st)cst, ∑\n(s,t)∈E\ncst ≤ γ } .\nEssentially, we allow an adversary to increase x̂st up to some upper bound ust, subject to some total budget γ across all terms xst. The set XD(γ) can be rewritten as\nXD(γ) = { x ∈ Box(x̂, u) : ∑ (s,t)∈E Rst(xst) ≤ γ } ,\nwhere Rst(xst) = (xst − x̂st)/(ust − x̂st) is the fraction of the interval [x̂st, ust] we have used up in increasing xst.\nThe min-max formulation maxy∈Y minx∈X I(y;x) has several merits: the model is not tied to a specific learning algorithm for the probabilities x as long as we can choose a suitable confidence set. Moreover, this formulation allows to fully hedge against a worst-case scenario."
    }, {
      "heading" : "3 Optimization Algorithm",
      "text" : "As noted above, the function I(y;x) is concave as a function of y for fixed x. As a pointwise minimum of concave functions, F (y) := minx∈X I(y;x) is concave. Hence, if we can compute subgradients of F (y), we can solve our max-min-problem via the subgradient method, as outlined in Algorithm 1.\nA subgradient gy ∈ ∂F (y) at y is given by the gradient of I(y;x∗) for the minimizing x∗ ∈ arg minx∈X I(y;x), i.e., gy = ∇yI(y;x∗). Hence, we must be able to compute x∗ for any y. We also obtain a duality gap: for any x′, y′ we have\nmin x∈X I(y′;x) ≤ max y∈Y min x∈X I(y;x) ≤ max y∈Y I(y;x′). (9)\nThis means we can estimate the optimal value I∗ and use it in Polyak’s stepsize rule for the subgradient method Polyak [1987].\nBut I(y;x) is not convex in x, and not even quasiconvex. For example, standard methods [Wainwright & Chiang, 2004, Chapter 12] imply that f(x1, x2, x3) = 1− x1x2 − √ x3 is not quasiconvex on R3+. Moreover, the above-mentioned signomial optimization techniques do not apply for an exact solution either. So, it is not immediately clear that we can solve the inner optimization problem.\nThe key insight we will be using is that I(y;x) has a different beneficial property: while not convex, I(y;x) as a function of x is continuous submodular.\nLemma 3.1. Suppose we have n ≥ 1 differentiable functions fi : R→ R+, for i = 1, . . . , n, either all nonincreasing or all nondecreasing. Then, f(x) = ∏n i=1 fi(xi) is a continuous supermodular function from Rn to R+.\nAlgorithm 1 Subgradient Ascent\nInput: suboptimality tolerance ε > 0, initial feasible budget y(0) ∈ Y Output: ε-optimal budget y for Problem (8) repeat x(k) ← arg minx∈X I(y(k);x) g(k) ← ∇yI(y(k);x(k)) L(k) ← I(y(k);x(k)) U (k) ← maxy∈Y I(y;x(k)) γ(k) ← (U (k) − L(k))/‖g(k)‖22 y(k+1) ← projY(y(k) + γ(k)g(k)) k ← k + 1 until U (k) − L(k) ≤ ε\nProof. For n = 1, the resulting function is modular and therefore supermodular. In the case n ≥ 2, we simply need to compute derivatives. The mixed derivatives are\n∂f\n∂xi∂xj = f ′i(xi)f ′ j(xj) · ∏ k 6=i,j fk(xk). (10)\nBy monotonicity, f ′i and f ′ j have the same sign, so their product is nonnegative, and since each fk is nonnegative, the entire expression is nonnegative. Hence, f(x) is continuous supermodular by Theorem 3.2 of [Topkis, 1978].\nCorollary 3.1. The influence function I(y;x) defined in Section 2 is continuous submodular in x over the nonnegative orthant, for each y ≥ 0.\nProof. Since submodularity is preserved under summation, it suffices to show that each function It(y) is continuous submodular. By Lemma 3.1, since fs(z) = z y(s) is nonnegative and monotone\nnondecreasing for y(s) ≥ 0, the product ∏\n(s,t)∈E x y(s) st is continuous supermodular in x. Flipping\nthe sign and adding a constant term yields It(y), which is hence continuous submodular.\nConjecture 3.1. Strong duality holds, i.e.\nmax y∈Y min x∈X I(y;x) = min x∈X max y∈Y I(y;x). (11)\nIf strong duality holds, then the duality gap maxy∈Y I(y;x∗)−minx∈X I(y∗;x) in Equation (9) is zero at optimality. If I(y;x) were quasiconvex in x, strong duality would hold by Sion’s min-max theorem, but this is not the case. In practice, we observe that the duality gap always converges to zero.\nBach [2015] demonstrates how to minimize a continuous submodular function H(x) subject to box constraints x ∈ Box(l, u), up to an arbitrary suboptimality gap ε > 0. The constraint set X in our Robust Budget Allocation problem, however, has box constraints with an additional constraint R(x) ≤ B. This case is not addressed in any previous work. Fortunately, for a large class of functions R, there is still an efficient algorithm for continuous submodular minimization, which we present in the next section."
    }, {
      "heading" : "3.1 Constrained Continuous Submodular Function Minimization",
      "text" : "We next address an algorithm for minimizing a monotone continuous submodular function H(x) subject to box constraints x ∈ Box(l, u) and a constraint R(x) ≤ B:\nminimize H(x) s.t. R(x) ≤ B\nx ∈ Box(l, u). (12)\nIf H and R were convex, the constrained problem would be equivalent to solving, with the right Lagrange multipler λ∗ ≥ 0:\nminimize H(x) + λ∗R(x) s.t. x ∈ Box(l, u). (13)\nAlthough H and R are not necessarily convex here, it turns out that a similar approach indeed applies. The main idea of our approach bears similarity with [Nagano et al., 2011] for the set function case, but our setting with continuous functions and various uncertainty sets is more general, and requires more argumentation. We outline our theoretical results here, and defer further implementation details and proofs to the appendix.\nFollowing Bach [2015], we discretize the problem; for a sufficiently fine discretization, we will achieve arbitrary accuracy. Let A be an interpolation mapping that maps the discrete set ∏n i=1[ki]\ninto Box(l, u) = ∏n i=1[li, ui] via the componentwise interpolation functions Ai : [ki] → [li, ui]. We say Ai is δ-fine if Ai(xi + 1) − Ai(xi) ≤ δ for all xi ∈ {0, 1, . . . , ki − 2}, and we say the full interpolation function A is δ-fine if each Ai is δ-fine.\nThis mapping yields functions Hδ : ∏n i=1[ki]→ R and Rδ : ∏n i=1[ki]→ R via Hδ(x) = H(A(x)) and Rδ(x) = R(A(x)). Hδ is lattice submodular (on the integer lattice). This construction leads to a reduction of Problem (12) to a submodular minimization problem over the integer lattice:\nminimize Hδ(x) + λRδ(x) s.t. x ∈ ∏n i=1[ki].\n(14)\nIdeally, there should then exist a λ such that the associated minimizer x(λ) yields a close to optimal solution for the constrained problem. Theorem 3.1 below states that this is indeed the case.\nMoreover, a second benefit of submodularity is that we can find the entire solution path for Problem (14) by solving a single optimization problem.\nLemma 3.2. Suppose H is continuous submodular, and suppose the regularizer R is strictly increasing and separable: R(x) = ∑n i=1Ri(xi). Then we can recover a minimizer x(λ) for the induced discrete Problem (14) for any λ ∈ R by solving a single convex optimization problem.\nThe problem in question arises from a relaxation h↓ that extends H δ in each coordinate i to a function on distributions over the domain [ki]. These distributions are represented via their inverse cumulative distribution functions ρi, which take the coordinate xi as input, and output the probability of exceeding xi. The function h↓ is an analogue of the Lovász extension of set functions to continuous submodular functions [Bach, 2015], it is convex and coincides with Hδ on lattice points.\nFormally, this resulting single optimization problem is: minimize h↓(ρ) + ∑n\ni=1 ∑ki−1 ji=1 aixi(ρi(xi))\ns.t. ρ ∈ ∏n i=1R ki−1 ↓\n(15)\nwhere Rk↓ refers to the set of ordered vectors z ∈ Rk that satisfy z1 ≥ z2 ≥ · · · ≥ zk, the notation ρi(xi) denotes the xi-th coordinate of the vector ρi, and the aixi are strictly convex functions given by\naixi(t) = 1\n2 t2 · [Rδi (xi)−Rδi (xi − 1)]. (16)\nProblem (15) can be solved by Frank-Wolfe methods [Frank & Wolfe, 1956; Dunn & Harshbarger, 1978; Lacoste-Julien, 2016; Jaggi, 2013]. This is because the greedy algorithm for computing subgradients of the Lovász extension can be generalized, and yields a linear optimization oracle for the dual of Problem (15). We detail the relationship between Problems (14) and (15), as well as how to implement the Frank-Wolfe methods, in Appendix C.\nLet ρ∗ be the optimal solution for Problem (15). For any λ, we obtain a rounded solution x(λ) for Problem (14) by thresholding: we set x(λ)i = max{j | 1 ≤ j ≤ ki − 1, ρ∗i (j) ≥ λ}, or zero if ρ∗i (j) < λ for all j. Each x(λ\n′) is the optimal solution for Problem (14) with λ = λ′. We use the largest parameterized solution x(λ) that is still feasible, i.e. the solution x(λ∗) where λ∗ solves\nmin Hδ(x(λ)) s.t. λ ≥ 0\nRδ(x(λ)) ≤ B. (17)\nThis λ∗ can be found efficiently via binary search or a linear scan.\nTheorem 3.1. Let H be continuous submodular and monotone decreasing, with `∞-Lipschitz constant G, and let R be strictly increasing and separable. Assume all entries ρ∗i (j) of the optimal solution ρ∗ of Problem (15) are distinct. Let x′ = A(x(λ∗)) be the thresholding corresponding to the optimal solution λ∗ of Problem (17), mapped back into the original continuous domain X . Then x′ is feasible for the continuous Problem (12), and is a 2Gδ-approximate solution:\nH(x′) ≤ 2Gδ + min x∈Box(l,u), R(x)≤B H(x).\nTheorem 3.1 implies an algorithm for solving Problem (12) to ε-optimality: (1) set δ = ε/G, (2) compute ρ∗ which solves Problem (15), (3) find the optimal thresholding of ρ∗ by determining the smallest λ∗ for which Rδ(x(λ∗)) ≤ B, and (4) map x(λ∗) back into continuous space via the interpolation mapping A.\nOptimality Bounds. Theorem 3.1 is proved by comparing x′ and x∗ to the optimal solution on the discretized mesh\nx∗d ∈ argmin x∈ ∏n i=1[ki]:R δ(x)≤B Hδ(x).\nBeyond the theoretical guarantee of Theorem 3.1, for any problem instance and candidate solution x′, we can compute a bound on the gap between H(x′) and Hδ(x∗d). The following two bounds are proved in the appendix:\n1. We can generate a discrete point x(λ+) satisfying\nH(x′) ≤ [H(x′)−Hδ(x(λ+))] +Hδ(x∗d).\n2. The Lagrangian yields the bound\nH(x′) ≤ λ∗(B −R(x′)) +Hδ(x∗d).\nImprovements. The requirement in Theorem 3.1 that the elements of ρ∗ be distinct may seem somewhat restrictive, but as long as ρ∗ has distinct elements in the neighborhood of our particular λ∗, this bound still holds. We see in Section 4.1.1 that in practice, ρ∗ almost always has distinct elements in the regime we care about, and the bounds of Remark 3.1 are very good.\nIf H is DR-submodular and R is affine in each coordinate, then Problem (14) can be represented more compactly via the reduction of Ene & Nguyen [2016], and hence problem (12) can be solved more efficiently. In particular, the influence function I(y;x) is DR-submodular in x when for each s, y(s) = 0 or y(s) ≥ 1."
    }, {
      "heading" : "3.2 Application to Robust Budget Allocation",
      "text" : "The above algorithm directly applies to Robust Allocation with the uncertainty sets in Section 2.2. The ellipsoidal uncertainty set XQ corresponds to the constraint that ∑ (s,t)∈E Rst(xst) ≤ γ with Rst(x) = (xst−x̂st)2σ−2st , and x ∈ Box(0, 1). By the monotonicity of I(x, y), there is never incentive to reduce any xst below x̂st, so we can replace Box(0, 1) with Box(x̂, 1). On this interval, each Rst is strictly increasing, and Theorem 3.1 applies.\nFor D-norm sets, we have Rst(xst) = (xst − x̂st)/(ust − x̂st). Since each Rst is monotone, Theorem 3.1 applies.\nRuntime and Alternatives. Since the core algorithm is Frank-Wolfe, it is straightforward to show that Problem (15) can be solved to ε-suboptimality in time O(ε−1n2δ−3α−1|T |2 log nδ−1), where α is the minimum derivative of the functions Ri. If ρ\n∗ has distinct elements separated by η, then choosing ε = η2αδ/8 results in an exact solution to (14) in time O(η−2n2δ−4α−2|T |2 log nδ−1).\nNoting that Hδ + λRδ is submodular for all λ, one could instead perform binary search over λ, each time converting the objective into a submodular set function via Birkhoff’s theorem and solving submodular minimization e.g. via one of the recent fast methods [Chakrabarty et al., 2017; Lee et al., 2015]. However, we are not aware of a practical implementation of the algorithm in [Lee et al., 2015]. The algorithm in [Chakrabarty et al., 2017] yields a solution in expectation. This approach also requires care in the precision of the search over λ, whereas our approach searches directly over the O(nδ−1) elements of ρ∗."
    }, {
      "heading" : "4 Experiments",
      "text" : "We evaluate our Robust Budget Allocation algorithm on both synthetic test data and a real-world bidding dataset from Yahoo! Webscope yah to demonstrate that our method yields real improvements. For all experiments, we used Algorithm 1 as the outer loop. For the inner submodular minimization step, we implemented the pairwise Frank-Wolfe algorithm of Lacoste-Julien & Jaggi [2015]. In all cases, the feasible set of budgets Y is {y ∈ RS+ : ∑ s∈S y(s) ≤ C} where the specific budget C depends on the experiment. Our code is available at git.io/vHXkO."
    }, {
      "heading" : "4.1 Synthetic",
      "text" : "On the synthetic data, we probe two questions: (1) how often does the distinctness condition of Theorem 3.1 hold, so that we are guaranteed an optimal solution; and (2) what is the gain of using a robust versus non-robust solution in an adversarial setting? For both settings, we set |S| = 6 and\n|T | = 2 and discretize with δ = 0.001. We generated true probabilties pst, created Beta posteriors, and built both Ellipsoidal uncertainty sets XQ(γ) and D-norm sets XD(γ)."
    }, {
      "heading" : "4.1.1 Optimality",
      "text" : "Theorem 3.1 and Remark 3.1 demand that the values ρ∗i (j) be distinct at our chosen Lagrange multiplier λ∗ and, under this condition, guarantee optimality. We illustrate this in four examples: for Ellipsoidal or a D-norm uncertainty set, and a total influence budget C ∈ {0.4, 4}. Figure 3 shows all elements of ρ∗ in sorted order, as well as a horizontal line indicating our Lagrange multiplier λ∗ which serves as a threshold. Despite some plateaus, the entries ρ∗i (j) are distinct in most regimes, in particular around λ∗, the regime that is needed for our results. Moreover, in practice (on the Yahoo data) we observe later in Figure 3 that both solution-dependent bounds from Remark 3.1 are very good, and all solutions are optimal within a very small gap."
    }, {
      "heading" : "4.1.2 Robustness and Quality",
      "text" : "Next, we probe the effect of a robust versus non-robust solution for different uncertainty sets and budgets γ of the adversary. We compare our robust solution with using a point estimate for x,\ni.e., ynom ∈ argmaxy∈Y I(y; x̂), treating estimates as ground truth, and the stochastic solution yexpect ∈ argmaxy∈Y E[I(y;X)] as per Section 2.1. These two optimization problems were solved via standard first-order methods using TFOCS Becker et al. [2011].\nFigure 2 demonstrates that indeed, the alternative budgets are sensitive to the adversary and the robustly-chosen budget yrobust performs better, even in cases where the other budgets achieve zero influence. When the total budget C is large, yexpect performs nearly as well as yrobust, but when resources are scarce (C is small) and the actual choice seems to matter more, yrobust performs far better."
    }, {
      "heading" : "4.2 Yahoo! data",
      "text" : "To evaluate our method on real-world data, we formulate a Budget Allocation instance on advertiser bidding data from Yahoo! Webscope [yah]. This dataset logs bids on 1000 different phrases by advertising accounts. We map the phrases to channels S and the accounts to customers T , with an edge between s and t if a corresponding bid was made. For each pair (s, t), we draw the associated transmission probability pst uniformly from [0, 0.4]. We bias these towards zero because we expect people not to be easily influenced by advertising in the real world. We then generate an estimate\np̂st and build up a posterior by generating nst samples from Ber(pst), where nst is the number of bids between s and t in the dataset.\nThis transformation yields a bipartite graph with |S| = 1000, |T | = 10475, and more than 50,000 edges that we use for Budget Allocation. In our experiments, the typical gap between the naive ynom and robust yrobust was 100-500 expected influenced people. We plot convergence of the outer loop in Figure 3, where we observe fast convergence of both primal influence value and the dual bound."
    }, {
      "heading" : "4.3 Comparison to first-order methods",
      "text" : "Given the success of first-order methods on nonconvex problems in practice, it is natural to compare these to our method for finding the worst-case vector x. On one of our Yahoo problem instances with D-norm uncertainty set, we compared our submodular minimization scheme to Frank-Wolfe with fixed stepsize as in [Lacoste-Julien, 2016], implementing the linear oracle using MOSEK [MOSEK ApS, 2015]. Interestingly, from various initializations, Frank-Wolfe finds an optimal solution, as verified by comparing to the guaranteed solution of our algorithm. Note that, due to non-convexity, there are no formal guarantees for Frank-Wolfe to be optimal here, motivating the question of global convergence properties of Frank-Wolfe in the presence of submodularity.\nIt is important to note that there are many cases where first-order methods are inefficient or do not apply to our setup. These methods require either a projection oracle (PO) onto or linear optimization oracle (LO) over the feasible set X defined by `, u and R(x). The D-norm set admits a LO via linear programming, but we are not aware of any efficient LO for Ellipsoidal uncertainty, nor PO for either set, that does not require quadratic programming. Even more, our algorithm applies for nonconvex functions R(x) which induce nonconvex feasible sets X . Such nonconvex sets may not even admit a unique projection, while our algorithm achieves provable solutions."
    }, {
      "heading" : "5 Conclusion",
      "text" : "We address the issue of uncertain parameters (or, model mis-specification) in Budget Allocation or Bipartite Influence Maximization [Alon et al., 2012] from a robust optimization perspective. The resulting Robust Budget Allocation is a nonconvex-concave saddle point problem. Although the inner optimization problem is nonconvex, we show how continuous submodularity can be leveraged to solve the problem to arbitrary accuracy ε, as can be verified with the proposed bounds on the duality gap. In particular, our approach extends continuous submodular minimization methods [Bach, 2015] to more general constraint sets, introducing a mechanism to solve a new class of constrained nonconvex optimization problems. We confirm on synthetic and real data that our method finds high-quality solutions that are robust to parameters varying arbitrarily in an uncertainty set, and scales up to graphs with over 50,000 edges.\nThere are many compelling directions for further study. The uncertainty sets we use are standard in the robust optimization literature, but have not been applied to e.g. Robust Influence Maximization; it would be interesting to generalize our ideas to general graphs. Finally, despite the inherent nonconvexity of our problem, first-order methods are often able to find a globally optimal solution. Explaining this phenomenon requires further study of the geometry of constrained monotone submodular minimization."
    }, {
      "heading" : "Acknowledgements",
      "text" : "We thank the anonymous reviewers for their helpful suggestions. We also thank MIT Supercloud and the Lincoln Laboratory Supercomputing Center for providing computational resources. This research was conducted with Government support under and awarded by DoD, Air Force Office of Scientific Research, National Defense Science and Engineering Graduate (NDSEG) Fellowship, 32 CFR 168a, and also supported by NSF CAREER award 1553284."
    }, {
      "heading" : "A Worst-Case Approximation Ratio versus True Worst-Case",
      "text" : "Consider the function f(x; θ) defined on {0, 1} × {0, 1}, with values given by:\nf(x; 0) =\n{ 1 x = 0\n0.6 x = 1, f(x; 1) =\n{ 1 x = 0\n2 x = 1. (18)\nWe wish to choose x to maximize f(x; θ) robustly with respect to adversarial choices of θ. If θ were fixed, we could directly choose x∗θ to maximize f(x; θ). In particular, x ∗ 0 = 0 and x ∗ 1 = 1. Of course, we want to deal with worst-case θ. One option is to maximize the worst-case approximation ratio:\nmax x min θ\nf(x; θ)\nf(x∗θ; θ) . (19)\nOne can verify that the best x according to this criterion is x = 1, with worst-case approximation ratio 0.6 and worst-case function value 0.6. In this paper, we optimize the worst-case of the actual function value:\nmax x min θ f(x; θ). (20)\nThis criterion will select x = 0, which has a worse worst-case approximation ratio of 0.5, but actually guarantees a function value of 1, significantly better than the 0.6 achieved by the other formulation of robustness.\nB DR-submodularity and L\\-convexity\nA function is L\\-convex if it satisfies a discrete version of midpoint convexity, i.e. for all x, y it holds that f(x) + f(y) ≥ f (⌈ x+ y\n2\n⌉) + f (⌊ x+ y\n2\n⌋) . (21)\nRemark B.1. An L\\-convex function need not be DR-submodular, and vice-versa. Hence algorithms for optimizing one type may not apply for the other.\nProof. Consider f1(x1, x2) = −x21 − 2x1x2 and f2(x1, x2) = x21 + x22, both defined on {0, 1, 2} × {0, 1, 2}. The function f1 is DR-submodular but violates discrete midpoint convexity for the pair of points (0, 0) and (2, 2), while f2 is L\n\\-convex but does not have diminishing returns in either dimension.\nIntuitively-speaking, L\\-convex functions look like discretizations of convex functions. The continuous objective function I(x, y) we consider need not be convex, hence its discretization need not be L\\-convex, and we cannot use those tools. However, in some regimes (namely if each y(s) ∈ {0} ∪ [1,∞)), it happens that I(x, y) is DR-submodular in x."
    }, {
      "heading" : "C Constrained Continuous Submodular Function Minimization",
      "text" : "Define Rn↓ to be the set of vectors ρ in Rn which are monotone nonincreasing, i.e. ρ(1) ≥ ρ(2) ≥ · · · ≥ ρ(n). As in the main text, define [k] = {0, 1, . . . , k − 1}. One of the key results from Bach [2015] is that an arbitrary submodular function H(x) defined on ∏n i=1[ki] can be extended to a particular convex function h↓(ρ) so that\nminimize H(x) s.t. x ∈ ∏n i=1[ki] ⇔ minimize h↓(ρ) s.t. ρ ∈ ∏n i=1R ki−1 ↓ .\n(22)\nMoreover, Theorem 4 from Bach [2015] states that, if aiyi are strictly convex functions for all i = 1, . . . , n and each yi ∈ [ki], then the two problems\nminimize H(x) + ∑n\ni=1 ∑xi yi=1 a′iyi(λ)\ns.t. x ∈ ∏n i=1[ki].\n(23)\nand minimize h↓(ρ) + ∑n i=1 ∑ki−1 xi=1 aixi [ρi(xi)]\ns.t. ρ ∈ ∏n i=1R ki−1 ↓\n(24)\nare equivalent. In particular, one recovers a solution to Problem (23) for any λ just as alluded to in Lemma 3.2: find ρ∗ which solves Problem (24) and, for each component i, choose xi to be the maximal value for which ρ∗i (xi) ≥ λ.\nC.1 Proof of Lemma 3.2 Proof. The discretized form of the regularizer Rδ is also separable and can be written Rδ(x) =∑n i=1R δ i (x). For each i = 1, . . . , n and each yi ∈ [ki] with yi ≥ 1, define aiyi(t) = 12 t\n2 · [Rδi (yi) − Rδi (yi − 1)], so that a′iyi(t) = t · [R δ i (yi)−Rδi (yi − 1)]. Since we assumed R(x) is strictly increasing, the coefficient of t2 in each aiyi(t) is strictly positive, so that each aiyi(t) is strictly convex. Then,\nλRδi (xi) = λ · Rδi (0) + xi∑ yi=1 ( Rδi (yi)−Rδi (yi − 1) ) (25) = λRδi (0) +\nxi∑ yi=1 a′iyi(λ), (26)\nso that the discretized version of the minimization problem can be written as minimize Hδ(x) + λRδ(0) + ∑n\ni=1 ∑xi yi=1 a′iyi(λ)\ns.t. x ∈ ∏n i=1[ki].\n(27)\nSince the term Rδ(0) does not depend on the variable x, this minimization is equivalent to\nminimize Hδ(x) + ∑n\ni=1 ∑xi yi=1 a′iyi(λ)\ns.t. x ∈ ∏n i=1[ki].\n(28)\nThis problem is in the precise form where we can apply the preceding equivalence result between Problems (23) and (24), so we are done.\nC.2 Proof of Theorem 3.1\nProof. The general idea of this proof is to first show that the integer-valued point x∗d which solves\nx∗d ∈ argmin x∈ ∏n i=1[ki]:R δ(x)≤B Hδ(x)\nis also nearly a minimizer of the continuous version of the problem, due to the fineness of the discretization. Then, we show that the solutions traced out by x(λ) get very close to x∗d. These two results are simply combined via the triangle inequality.\nC.2.1 Continuous and Discrete Problems\nWe begin by proving that Hδ(x∗d) ≤ Gδ + min\nx∈X :R(x)≤B H(x). (29)\nConsider x∗ ∈ arg minx∈X :R(x)≤BH(x). If x∗ corresponds to an integral point in the discretized domain, then H(x∗) = Hδ(x∗d) and we are done. Else, x\n∗ has at least one non-integral coordinate. By rounding coordinatewise, we can construct a set X = {x1, . . . , xm} ⊆ ∏n i=1[ki] so that x\n∗ ∈ conv({A(x1), . . . , A(xm)}. By monotonicity, there must be some xi ∈ X with Rδ(xi) ≤ B, i.e. A(xi) is feasible for the original continuous problem. By construction, since the discretization given by A is δ-fine, we must have ‖x∗ − A(xi)‖∞ ≤ δ. Applying the Lipschitz property of H and the optimality of x∗, we have\nGδ ≥ H(A(xi))−H(x∗) = Hδ(xi)−H(x∗) ≥ Hδ(x∗d)−H(x∗),\nfrom which (29) follows.\nC.2.2 Discrete and Parameterized Discrete Problems\nDefine λ− and λ+ by\nλ− ∈ argmin λ≥0:Rδ(x(λ))≤B Hδ(x(λ)) and\nλ+ ∈ argmax λ≥0:Rδ(x(λ))≥B Hδ(x(λ)).\nThe next step in proving our suboptimality bound is to prove that\nHδ(x(λ+)) ≤ Hδ(x∗d) ≤ Hδ(x(λ−)), (30)\nfrom which it will follow that Hδ(x(λ−)) ≤ Gδ +Hδ(x∗d).\nWe begin by stating the min-max inequality, i.e. weak duality:\nmin x∈ ∏n i=1[ki]:R δ(x)≤B Hδ(x) = min x∈ ∏n i=1[ki] max λ≥0\n{ Hδ(x) + λ(Rδ(x)−B) } (31)\n≥ max λ≥0 min x∈ ∏n i=1[ki]\n{ Hδ(x) + λ(Rδ(x)−B) } (32)\n= max λ≥0\n{ Hδ(x(λ)) + λ(Rδ(x(λ))−B) } (33)\n≥ max λ≥0:Rδ(x(λ))≥B\n{ Hδ(x(λ)) + λ(Rδ(x(λ))−B) } (34)\n≥ max λ≥0:Rδ(x(λ))≥B Hδ(x(λ)) (35)\n= Hδ(x(λ+)). (36)\nWe can also bound the optimal value of Hδ(x∗d) from the other side:\nHδ(x∗d) = min x∈ ∏n i=1[ki]:R δ(x)≤B Hδ(x) ≤ min λ≥0:Rδ(x(λ))≤B Hδ(x) = Hδ(x(λ−)) (37)\nbecause the set of x(λ) parameterized by λ is a subset of the full set {x ∈ ∏n i=1[ki] : R\nδ(x) ≤ B}. We have now bounded the optimal value of Hδ(x∗d) on either side by optimization problems\nwhere we seek an optimal λ ≥ 0 for the parameterization x(λ):\nHδ(x(λ+)) ≤ Hδ(x∗d) ≤ Hδ(x(λ−)). (38)\nRecall that x(λ) comes from thresholding the values of ρ∗ by λ, and that we assume that the elements of ρ∗ are unique. Hence, as we increase λ, the components of x decrease by 1 each time. Combining this with the strict monotonicity of R, we see that ‖x(λ+) − x(λ−)‖∞ ≤ 1. By the Lipschitz properties of Hδ, it follows that\n∣∣Hδ(x(λ+))−Hδ(x(λ−))∣∣ ≤ Gδ. Since Hδ(x∗d) lies in the interval between Hδ(x(λ+)) and H δ(x(λ−)), it follows that ∣∣Hδ(x∗d)−Hδ(x(λ−))∣∣ ≤ Gδ.\nC.3 Proof of Remark 3.1\nDefine λ∗ = λ− as in the previous section, so that x ′ = A(x(λ∗). The x(λ+) bound is a simple consequence from the above result that\nHδ(x(λ+)) ≤ Hδ(x∗d) ≤ Hδ(x(λ−)) = H(x′).\nAs for the Lagrangian bound, since x(λ∗) is a minimizer for the regularized function Hδ(x) + λ∗(Rδ(x)−B), it follows that\nHδ(x(λ∗)) + λ∗(Rδ(x(λ∗))−B) ≤ Hδ(x∗d) + λ∗(Rδ(x∗d)−B). (39)\nRearranging, and observing that Rδ(x∗d) ≤ B because x∗d is feasible, it holds that\nH(x′) = Hδ(x(λ∗)) ≤ Hδ(x∗d) + λ∗(Rδ(x∗d)−Rδ(x(λ∗))) ≤ Hδ(x∗d) + λ∗(B −R(x′)). (40)\nOne can also combine either of these bounds with the result from the proof of Theorem 3.1 that Hδ(x∗d) ≤ Gδ +H(x∗) yielding e.g.\nH(x′) ≤ Gδ + λ∗(B −R(x′)) +Hδ(x∗d).\nC.4 Solving the Optimization Problem\nNow that we have proven equivalence results between the constrained problem we want to solve and the convex problem (24), we need to actually solve the convex problem. At the beginning of Section 5.2 in Bach [2015], it is stated that this surrogate problem can optimized via the FrankWolfe method and its variants, but only the the version of Problem (24) without the extra functions aixi is elaborated upon. Here we detail how Frank-Wolfe algorithms can be used to solve the more general parametric regularized problem. Our aim is to spell out very clearly the applicability of Frank-Wolfe to this problem, for the ease of future practitioners.\nBach [2015] notes that by duality, Problem (24) is equivalent to:\nmin ρ∈ ∏n i=1 R ki−1 ↓ h↓(ρ)−H(0) + n∑ i=1 ki−1∑ xi=1 aixi [ρi(xi)] = min ρ∈ ∏n i=1 R ki−1 ↓ max w∈B(H) 〈ρ, w〉+ n∑ i=1 ki−1∑ xi=1 aixi [ρi(xi)]\n= max w∈B(H)  minρ∈∏ni=1 Rki−1↓ 〈ρ, w〉+ n∑ i=1 ki−1∑ xi=1 aixi [ρi(xi)]  := max\nw∈B(H) f(w).\nHere, the base polytope B(H) happens to be the convex hull of all vectors w which could be output by the greedy algorithm in Bach [2015].\nIt is the dual problem, where we maximize over w, which is amenable to Frank-Wolfe. For FrankWolfe methods, we need two oracles: an oracle which, given w, returns ∇f(w); and an oracle which, given∇f(w), produces a point s which solves the linear optimization problem maxs∈B(H)〈s,∇f(w)〉.\nPer Bach [2015], an optimizer of the linear problem can be computed directly from the greedy algorithm. For the gradient oracle, recall that we can find a subgradient of g(x) = miny h(x, y) at the point x0 by finding y(x0) which is optimal for the inner problem, and then computing ∇xh(x, y(x0)). Moreover, if such y(x0) is the unique optimizer, then the resulting vector is indeed the gradient of g(x) at x0. Hence, in our case, it suffices to first find ρ(w) which solves the inner problem, and then ∇f(w) is simply ρ(w) because the inner function is linear in w. Since each function aixi is strictly convex, the minimizer ρ(w) is unique, confirming that we indeed get a gradient of f , and that f is differentiable.\nOf course, we still need to compute the minimizer ρ(w). For a given w, we want to solve\nmin ρ∈ ∏n i=1 R ki−1 ↓ 〈ρ, w〉+ n∑ i=1 ki−1∑ xi=1 aixi [ρi(xi)]\nThere are no constraints coupling the vectors ρi, and the objective is similarly separable, so we can independently solve n problems of the form\nmin ρ∈Rk−1↓ 〈ρ, w〉+ k−1∑ j=1 aj(ρj).\nRecall that each function aiyi(t) takes the form 1 2 t 2riyi for some riyi > 0. Let D = diag(r), the\n(k − 1)× (k − 1) matrix with diagonal entries rj . Our problem can then be written as\nmin ρ∈Rk−1↓\n〈ρ, w〉+ 1 2 k−1∑ j=1 rjρ 2 j = min ρ∈Rk−1↓ 〈ρ, w〉+ 1 2 〈Dρ, ρ〉\n= min ρ∈Rk−1↓\n〈D1/2ρ, D−1/2w〉+ 1 2 〈D1/2ρ, D1/2ρ〉.\nCompleting the square, the above problem is equivalent to\nmin ρ∈Rk−1↓ ‖D1/2ρ+D−1/2w‖22 = min ρ∈Rk−1↓ k−1∑ j=1 (r 1/2 j ρj + r −1/2 j wj) 2\n= min ρ∈Rk−1↓ k−1∑ j=1 rj(ρj + r −1 j wj) 2.\nThis last expression is precisely the problem which is called weighted isotonic regression: we are fitting ρ to diag(r−1)w, with weights r, subject to a monotonicity constraint. Weighted isotonic regression is solved efficiently via the Pool Adjacent Violators algorithm of Best & Chakravarti [1990].\nC.5 Runtime\nFrank-Wolfe returns an ε-suboptimal solution in O(ε−1D2L) iterations, where D is the diameter of the feasible region, and L is the Lipschitz constant for the gradient of the objective [Jaggi, 2013]. Our optimization problem is maxw∈B(H) f(w) as defined in the previous section. Each w ∈ B(H) has O(nδ−1) coordinates of the form Hδ(x + ei) − Hδ(x). Since Hδ is an expected influence in the range [0, T ], we can bound the magnitude of each coordinate of w by T and hence D2 by O(nδ−1T 2). If α is the minimum derivative of the functions Ri, then the smallest coefficient of the functions aixi(t) is bounded below by αδ. Hence the objective is the conjugate of an αδ-strongly convex function, and therefore has α−1δ−1-Lipschitz gradient. Combining these, we arrive at the O(ε−1nδ−2α−1T 2) iteration bound. The most expensive step in each iteration is computing the subgradient, which requires sorting the O(nδ−1) elements of ρ in time O(nδ−1 log nδ−1). Hence the total runtime of Frank-Wolfe is O(ε−1n2δ−3α−1T 2 log nδ−1).\nAs specified in the main text, relating an approximate solution of (15) to a solution of (14) is nontrivial. Assume ρ∗ has distinct elements separated by η, and chose ε to be less than η2αδ/8. If ρ is ε-suboptimal, then by αδ-strong convexity we must have ‖ρ− ρ∗‖2 < η/2, and therefore ‖ρ− ρ∗‖∞ < η/2. Since the smallest consecutive gap between elements of ρ∗ is η, this implies that ρ and ρ∗ have the same ordering, and therefore admit the same solution x after thresholding. Accounting for this choice in ε, we have an exact solution to (14) in total runtime ofO(η−2n2δ−4α−2T 2 log nδ−1)."
    }, {
      "heading" : "D Expectation and Variance of the Influence Function",
      "text" : "We wish to study the influence I(X, y), its expectation and its variance as a function of y. By definition, the influence function is given by\nI(X, y) = ∑ t∈T 1− ∏ (s,t)∈E X y(s) st  . (41) Before we prove the stated results, we will simplify the functions involved.\nMaximizing I(X, y) is equivalent to minimizing the function∑ t∈T ∏ (s,t)∈E X y(s) st (42)\nand vice-versa. The particular properties we are interested in, namely convexity and submodularity, are preserved under sums. Moreover, expectation is linear and variances add, so for our purposes we can focus on only one term of the above sum. After reindexing in terms of i = 1, . . . , n instead of (s, t) ∈ E, we are left studying functions of the form\nf(y) = n∏ i=1 Xyii . (43)\nIf f(y) is always convex (or supermodular), then I(X, y) is always concave (submodular) in y, and similarly for their expectations and variances.\nExpectation By independence,\nE[f(y)] = n∏ i=1 E[Xyii ]. (44)\nSuppose that each Xi ∼ Beta(αi, βi), so that\nE[Xyii ] = Γ(αi + βi)Γ(αi + yi)\nΓ(αi + βi + yi) (45)\n= Γ(αi + βi)Γ(αi + yi)Γ(βi)\nΓ(αi + βi + yi)Γ(βi) (46)\n= B(αi + yi, βi)\nB(αi, βi) . (47)\nThen,\nE[f(y)] = n∏ i=1 B(αi + yi, βi) B(αi, βi) ∝ n∏ i=1 B(αi + yi, βi), (48)\nwhere by ∝ we mean that the product of the denominators is a positive constant, dependent on the problem data but independent of y.\nVariance The variance of f(y) can be written as\nVar [ n∏ i=1 Xyii ] = E [ n∏ i=1 X2yii ] − E [ n∏ i=1 Xyii ]2 (49)\n= n∏ i=1 E [ X2yii ] − n∏ i=1 E [Xyii ] 2\n(50)\n= n∏ i=1 B(αi + 2yi, βi) B(αi, βi) − n∏ i=1 ( B(αi + yi, βi) B(αi, βi) )2 . (51)\nD.1 Gradient of Expected Influence\nRecall the identity ∂\n∂a B(a, b) = B(a, b)(ψ(a)− ψ(a+ b)), (52)\nwhere ψ is the digamma function. We can then compute each component of the gradient of E[f(y)]:\n∂\n∂yi (E[f(y)]) = n∏ i=1\n1 B(αi, βi) · ∏ j 6=i B(αj + yj , βj) · ∂ ∂yi (B(αi + yi, βi)) (53)\n= n∏ i=1\n1 B(αi, βi) · ∏ j 6=i B(αj + yj , βj) ·B(αi + yi, βi) · (ψ(αi + yi)− ψ(αi + yi + βi))\n(54)\n= E[f(y)] · (ψ(αi + yi)− ψ(αi + yi + βi)). (55)\nD.2 Counterexample for Fact 2.1 We give a specific choice of parameters n, αi, βi and yi for which the resulting function √\nVar(f(y)) is non-convex, non-concave, non-submodular and non-supermodular for various points y ∈ Rn+. For the case T = 1, the function 1−f(y) is a valid influence function, so we have a valid counterexample for √\nVar(I(X, y)). Consider the case n = 2, with α1 = α2 = 1 and β1 = β2 = 1. This corresponds to the Budget Allocation problem where we have two sources each with an edge to one customer, and we have only our prior (i.e. no data) on either of the edge probabilities. Using equation (51), we can directly compute the Hessian of √ Var(f(y)) at any point y, e.g. using Mathematica. In particular, for\ny1 = y2 = 1, the Hessian has a positive and a negative eigenvalue, so √\nVar(f(y)) is neither convex nor concave at this point. Also for y1 = y2 = 1, the off-diagonal element is negative, so √ Var(f(y)) is not supermodular over all of R2+. However, for y1 = y2 = 3, the off-diagonal element is positive, so our function is also not submodular."
    } ],
    "references" : [ {
      "title" : "Submodular Stochastic Probing on Matroids",
      "author" : [ "Adamczyk", "Marek", "Sviridenko", "Maxim", "Ward", "Justin" ],
      "venue" : "Mathematics of Operations Research,",
      "citeRegEx" : "Adamczyk et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Adamczyk et al\\.",
      "year" : 2016
    }, {
      "title" : "Optimizing Budget Allocation Among Channels and Influencers",
      "author" : [ "Alon", "Noga", "Gamzu", "Iftah", "Tennenholtz", "Moshe" ],
      "venue" : "In WWW",
      "citeRegEx" : "Alon et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Alon et al\\.",
      "year" : 2012
    }, {
      "title" : "Polymatroids and mean-risk minimization in discrete optimization",
      "author" : [ "Atamtürk", "Alper", "Narayanan", "Vishnu" ],
      "venue" : "Operations Research Letters,",
      "citeRegEx" : "Atamtürk et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Atamtürk et al\\.",
      "year" : 2008
    }, {
      "title" : "Submodular Functions: From Discrete to Continous Domains",
      "author" : [ "Bach", "Francis" ],
      "venue" : null,
      "citeRegEx" : "Bach and Francis.,? \\Q2015\\E",
      "shortCiteRegEx" : "Bach and Francis.",
      "year" : 2015
    }, {
      "title" : "The power of optimization from samples",
      "author" : [ "Balkanski", "Eric", "Rubinstein", "Aviad", "Singer", "Yaron" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Balkanski et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Balkanski et al\\.",
      "year" : 2016
    }, {
      "title" : "The limitations of optimization from samples",
      "author" : [ "Balkanski", "Eric", "Rubinstein", "Aviad", "Singer", "Yaron" ],
      "venue" : "In STOC,",
      "citeRegEx" : "Balkanski et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Balkanski et al\\.",
      "year" : 2017
    }, {
      "title" : "Templates for convex cone problems with applications to sparse signal recovery",
      "author" : [ "Becker", "Stephen R", "Candès", "Emmanuel J", "Grant", "Michael C" ],
      "venue" : "Mathematical programming computation,",
      "citeRegEx" : "Becker et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Becker et al\\.",
      "year" : 2011
    }, {
      "title" : "Robust solutions of Linear Programming problems contaminated with uncertain data",
      "author" : [ "Ben-Tal", "Aharon", "Nemirovski", "Arkadi" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "Ben.Tal et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Ben.Tal et al\\.",
      "year" : 2000
    }, {
      "title" : "Robust Optimization",
      "author" : [ "Ben-Tal", "Aharon", "El Ghaoui", "Laurent", "Nemirovski", "Arkadi" ],
      "venue" : null,
      "citeRegEx" : "Ben.Tal et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Ben.Tal et al\\.",
      "year" : 2009
    }, {
      "title" : "Robust discrete optimization and network flows",
      "author" : [ "Bertsimas", "Dimitris", "Sim", "Melvyn" ],
      "venue" : "Mathematical programming,",
      "citeRegEx" : "Bertsimas et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Bertsimas et al\\.",
      "year" : 2003
    }, {
      "title" : "Theory and Applications of Robust Optimization",
      "author" : [ "Bertsimas", "Dimitris", "Brown", "David B", "Caramanis", "Constantine" ],
      "venue" : "SIAM Review,",
      "citeRegEx" : "Bertsimas et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Bertsimas et al\\.",
      "year" : 2011
    }, {
      "title" : "Active set algorithms for isotonic regression; A unifying framework",
      "author" : [ "Best", "Michael J", "Chakravarti", "Nilotpal" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "Best et al\\.,? \\Q1990\\E",
      "shortCiteRegEx" : "Best et al\\.",
      "year" : 1990
    }, {
      "title" : "Guaranteed Non-convex Optimization: Submodular Maximization over Continuous Domains",
      "author" : [ "Bian", "Andrew An", "Mirzasoleiman", "Baharan", "Buhmann", "Joachim M", "Krause", "Andreas" ],
      "venue" : null,
      "citeRegEx" : "Bian et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Bian et al\\.",
      "year" : 2017
    }, {
      "title" : "Maximizing Social Influence in Nearly Optimal Time",
      "author" : [ "Borgs", "Christian", "Brautbar", "Michael", "Chayes", "Jennifer", "Lucier", "Brendan" ],
      "venue" : "In SODA,",
      "citeRegEx" : "Borgs et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Borgs et al\\.",
      "year" : 2014
    }, {
      "title" : "Relative Entropy Relaxations for Signomial",
      "author" : [ "Chandrasekaran", "Venkat", "Shah", "Parikshit" ],
      "venue" : null,
      "citeRegEx" : "Chandrasekaran et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Chandrasekaran et al\\.",
      "year" : 2017
    }, {
      "title" : "Efficient influence maximization in social networks",
      "author" : [ "Wei", "Wang", "Yajun", "Yang", "Siyu" ],
      "venue" : "mization. SIAM Journal on Optimization,",
      "citeRegEx" : "Wei et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Wei et al\\.",
      "year" : 2016
    }, {
      "title" : "Scalable Influence Maximization for Prevalent Viral",
      "author" : [ "KDD", "2009. Chen", "Wei", "Wang", "Chi", "Yajun" ],
      "venue" : null,
      "citeRegEx" : "KDD et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "KDD et al\\.",
      "year" : 2009
    }, {
      "title" : "Marketing in Large-scale Social Networks",
      "author" : [ "Wei", "Lin", "Tian", "Tan", "Zihan", "Zhao", "Mingfei", "Zhou", "Xuren" ],
      "venue" : "In KDD,",
      "citeRegEx" : "Wei et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Wei et al\\.",
      "year" : 2010
    }, {
      "title" : "Chiang, Mung",
      "author" : [ "In KDD." ],
      "venue" : "Geometric Programming for Communication Systems. Commun. Inf. Theory, 2",
      "citeRegEx" : "KDD.,? 2016",
      "shortCiteRegEx" : "KDD.",
      "year" : 2016
    }, {
      "title" : "Approximation Algorithms",
      "author" : [ "Deshpande", "Amol", "Hellerstein", "Lisa", "Kletenik", "Devorah" ],
      "venue" : null,
      "citeRegEx" : "Deshpande et al\\.,? \\Q2005\\E",
      "shortCiteRegEx" : "Deshpande et al\\.",
      "year" : 2005
    }, {
      "title" : "Mining the network value of customers",
      "author" : [ "2016. Domingos", "Pedro", "Richardson", "Matt" ],
      "venue" : "Knapsack. ACM Trans. Algorithms,",
      "citeRegEx" : "Domingos et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Domingos et al\\.",
      "year" : 2001
    }, {
      "title" : "Influence function learning",
      "author" : [ "Du", "Nan", "Liang", "Yingyu", "Balcan", "Maria-Florina", "Song", "Le" ],
      "venue" : null,
      "citeRegEx" : "Du et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Du et al\\.",
      "year" : 2013
    }, {
      "title" : "Conditional gradient algorithms with open loop step size",
      "author" : [ "Dunn", "Joseph C", "S. Harshbarger" ],
      "venue" : null,
      "citeRegEx" : "Dunn et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Dunn et al\\.",
      "year" : 2014
    }, {
      "title" : "A Reduction for Optimizing Lattice Submodular Functions",
      "author" : [ "1980. Ene", "Alina", "Nguyen", "Huy L" ],
      "venue" : null,
      "citeRegEx" : "Ene et al\\.,? \\Q1980\\E",
      "shortCiteRegEx" : "Ene et al\\.",
      "year" : 1980
    }, {
      "title" : "An algorithm for quadratic programming",
      "author" : [ "Marguerite", "Wolfe", "Philip" ],
      "venue" : "Diminishing Returns",
      "citeRegEx" : "Marguerite et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Marguerite et al\\.",
      "year" : 2016
    }, {
      "title" : "Approximability of combina",
      "author" : [ "Goel", "Gagan", "Karande", "Chinmay", "Tripathi", "Pushkar", "Wang", "Lei" ],
      "venue" : null,
      "citeRegEx" : "Goel et al\\.,? \\Q1956\\E",
      "shortCiteRegEx" : "Goel et al\\.",
      "year" : 1956
    }, {
      "title" : "torial problems with multi-agent submodular cost functions",
      "author" : [ "Goemans", "Michel", "Vondrák", "Jan" ],
      "venue" : null,
      "citeRegEx" : "Goemans et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Goemans et al\\.",
      "year" : 2009
    }, {
      "title" : "Learning and Stochastic Optimization",
      "author" : [ "Gomez Rodriguez", "Manuel", "Schölkopf", "Bernhard" ],
      "venue" : "Journal of Artificial Intelligence,",
      "citeRegEx" : "Rodriguez et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Rodriguez et al\\.",
      "year" : 2011
    }, {
      "title" : "Inferring networks of diffusion",
      "author" : [ "Gomez Rodriguez", "Manuel", "Leskovec", "Jure", "Krause", "Andreas" ],
      "venue" : null,
      "citeRegEx" : "Rodriguez et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Rodriguez et al\\.",
      "year" : 2012
    }, {
      "title" : "Submodular function maximization on the bounded integer",
      "author" : [ "Gottschalk", "Corinna", "Peis", "Britta" ],
      "venue" : null,
      "citeRegEx" : "Gottschalk et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Gottschalk et al\\.",
      "year" : 2010
    }, {
      "title" : "Decomposition Algorithm for Allocating Marketing Channels",
      "author" : [ "He", "Xinran", "Kempe", "David" ],
      "venue" : null,
      "citeRegEx" : "He et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "He et al\\.",
      "year" : 2015
    }, {
      "title" : "Revisiting Frank-Wolfe: Projection-Free Sparse Convex Optimization",
      "author" : [ "Jaggi", "Martin" ],
      "venue" : null,
      "citeRegEx" : "Jaggi and Martin.,? \\Q2009\\E",
      "shortCiteRegEx" : "Jaggi and Martin.",
      "year" : 2009
    }, {
      "title" : "New algorithms for convex cost tension problem",
      "author" : [ "Vladimir", "Shioura", "Akiyoshi" ],
      "venue" : null,
      "citeRegEx" : "Vladimir et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Vladimir et al\\.",
      "year" : 2012
    }, {
      "title" : "On the global linear convergence of Frank-Wolfe",
      "author" : [ "2016. Lacoste-Julien", "Simon", "Jaggi", "Martin" ],
      "venue" : null,
      "citeRegEx" : "Lacoste.Julien et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Lacoste.Julien et al\\.",
      "year" : 2016
    }, {
      "title" : "A faster cutting plane method and its",
      "author" : [ "Lee", "Yin Tat", "Sidford", "Aaron", "Wong", "Sam Chiu-wai" ],
      "venue" : null,
      "citeRegEx" : "Lee et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Lee et al\\.",
      "year" : 2015
    }, {
      "title" : "implications for combinatorial and convex optimization",
      "author" : [ "Lowalekar", "Meghna", "Varakantham", "Pradeep", "Kumar", "Akshat" ],
      "venue" : null,
      "citeRegEx" : "Lowalekar et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Lowalekar et al\\.",
      "year" : 2015
    }, {
      "title" : "Budget Allocation Problem",
      "author" : [ "Maehara", "Takanori", "Yabe", "Akihiro", "Kawarabayashi", "Ken-ichi" ],
      "venue" : null,
      "citeRegEx" : "Maehara et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Maehara et al\\.",
      "year" : 2015
    }, {
      "title" : "Discrete convex analysis",
      "author" : [ "toolbox/index.html. Murota", "Kazuo" ],
      "venue" : null,
      "citeRegEx" : "Murota and Kazuo.,? \\Q2003\\E",
      "shortCiteRegEx" : "Murota and Kazuo.",
      "year" : 2003
    }, {
      "title" : "Learnability of influence",
      "author" : [ "Narasimhan", "Harikrishna", "Parkes", "David C", "Singer", "Yaron" ],
      "venue" : null,
      "citeRegEx" : "Narasimhan et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Narasimhan et al\\.",
      "year" : 2011
    }, {
      "title" : "Learning the graph of epidemic cascades",
      "author" : [ "Netrapalli", "Praneeth", "Sanghavi", "Sujay" ],
      "venue" : null,
      "citeRegEx" : "Netrapalli et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Netrapalli et al\\.",
      "year" : 2015
    }, {
      "title" : "Nikolova, Evdokia",
      "author" : [ "RICS." ],
      "venue" : "Approximation algorithms for reliable stochastic combinatorial optimization.",
      "citeRegEx" : "RICS.,? 2012",
      "shortCiteRegEx" : "RICS.",
      "year" : 2012
    }, {
      "title" : "Robust monotone submodular function",
      "author" : [ "Orlin", "James B", "Schulz", "Andreas", "Udwani", "Rajan" ],
      "venue" : null,
      "citeRegEx" : "Orlin et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Orlin et al\\.",
      "year" : 2010
    }, {
      "title" : "Constrained maximization of posynomials",
      "author" : [ "maximization. In IPCO", "2016. Pascual", "Luis D", "Ben-Israel", "Adi" ],
      "venue" : null,
      "citeRegEx" : "IPCO et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "IPCO et al\\.",
      "year" : 2016
    }, {
      "title" : "Optimization of conditional value-at-risk",
      "author" : [ "Rockafellar", "R Tyrrell", "Uryasev", "Stanislav" ],
      "venue" : "Journal of Optimization Theory and Applications,",
      "citeRegEx" : "Rockafellar et al\\.,? \\Q1970\\E",
      "shortCiteRegEx" : "Rockafellar et al\\.",
      "year" : 1970
    }, {
      "title" : "Conditional value-at-risk for general loss",
      "author" : [ "Rockafellar", "R Tyrrell", "Uryasev", "Stanislav" ],
      "venue" : null,
      "citeRegEx" : "Rockafellar et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Rockafellar et al\\.",
      "year" : 2000
    }, {
      "title" : "A Generalization of Submodular Cover via the Diminishing",
      "author" : [ "Tasuku", "Yoshida", "Yuichi" ],
      "venue" : "tions. Journal of banking & finance,",
      "citeRegEx" : "Tasuku et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Tasuku et al\\.",
      "year" : 2002
    }, {
      "title" : "Return Property on the Integer Lattice",
      "author" : [ "Soma", "Tasuku", "Kakimura", "Naonori", "Inaba", "Kazuhiro", "Kawarabayashi", "Ken-ichi" ],
      "venue" : null,
      "citeRegEx" : "Soma et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Soma et al\\.",
      "year" : 2015
    }, {
      "title" : "Theoretical Guarantee and Efficient Algorithm",
      "author" : [ "Svitkina", "Zoya", "Fleischer", "Lisa" ],
      "venue" : null,
      "citeRegEx" : "Svitkina et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Svitkina et al\\.",
      "year" : 2014
    }, {
      "title" : "Minimizing seed set",
      "author" : [ "McGraw-Hill Education", "2004. Zhang", "Peng", "Chen", "Wei", "Sun", "Xiaoming", "Wang", "Yajun", "Zhang", "Jialin" ],
      "venue" : null,
      "citeRegEx" : "Education et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Education et al\\.",
      "year" : 2004
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "We hence revisit a continuous version of the Budget Allocation or Bipartite Influence Maximization problem introduced by Alon et al. [2012] from a robust optimization perspective, where an adversary may choose the least favorable parameters within a confidence set.",
      "startOffset" : 121,
      "endOffset" : 140
    }, {
      "referenceID" : 13,
      "context" : "The optimal allocation of resources for maximizing influence, spread of information or coverage, has gained attention in the past few years, in particular in machine learning and data mining [Domingos & Richardson, 2001; Kempe et al., 2003; Chen et al., 2009; Gomez Rodriguez & Schölkopf, 2012; Borgs et al., 2014].",
      "startOffset" : 191,
      "endOffset" : 314
    }, {
      "referenceID" : 12,
      "context" : "We allow the budgets y to be continuous, as in [Bian et al., 2017].",
      "startOffset" : 47,
      "endOffset" : 66
    }, {
      "referenceID" : 21,
      "context" : "Typically, the probabilities pst, and possibly the graph itself, must be inferred from observations [Gomez Rodriguez et al., 2010; Du et al., 2013; Narasimhan et al., 2015; Du et al., 2014; Netrapalli & Sanghavi, 2012].",
      "startOffset" : 100,
      "endOffset" : 218
    }, {
      "referenceID" : 10,
      "context" : "In this work, we revisit Budget Allocation under uncertainty from the perspective of robust optimization [Bertsimas et al., 2011; Ben-Tal et al., 2009].",
      "startOffset" : 105,
      "endOffset" : 151
    }, {
      "referenceID" : 8,
      "context" : "In this work, we revisit Budget Allocation under uncertainty from the perspective of robust optimization [Bertsimas et al., 2011; Ben-Tal et al., 2009].",
      "startOffset" : 105,
      "endOffset" : 151
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al.",
      "startOffset" : 26,
      "endOffset" : 45
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al.",
      "startOffset" : 26,
      "endOffset" : 154
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al. [2015]; Maehara et al.",
      "startOffset" : 26,
      "endOffset" : 176
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al. [2015]; Maehara et al. [2015]; Soma et al.",
      "startOffset" : 26,
      "endOffset" : 199
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al. [2015]; Maehara et al. [2015]; Soma et al. [2014]; Soma & Yoshida [2015].",
      "startOffset" : 26,
      "endOffset" : 219
    }, {
      "referenceID" : 1,
      "context" : "Since its introduction by Alon et al. [2012], several works have extended the formulation of Budget Allocation and provided algorithms Bian et al. [2017]; Hatano et al. [2015]; Maehara et al. [2015]; Soma et al. [2014]; Soma & Yoshida [2015]. Budget Allocation may also be viewed as influence maximization on a bipartite graph, where information spreads as in the Independent Cascade model.",
      "startOffset" : 26,
      "endOffset" : 242
    }, {
      "referenceID" : 12,
      "context" : "For such DR-submodular functions, many approximation results for the set function case extend [Bian et al., 2017; Soma & Yoshida, 2015; Soma et al., 2014].",
      "startOffset" : 94,
      "endOffset" : 154
    }, {
      "referenceID" : 34,
      "context" : "We can directly substitute these complexities into the runtime bound from [Lee et al., 2015].",
      "startOffset" : 74,
      "endOffset" : 92
    }, {
      "referenceID" : 12,
      "context" : "For such DR-submodular functions, many approximation results for the set function case extend [Bian et al., 2017; Soma & Yoshida, 2015; Soma et al., 2014]. In particular, Ene & Nguyen [2016] show a generic reduction to set function optimization that they apply to maximization.",
      "startOffset" : 95,
      "endOffset" : 191
    }, {
      "referenceID" : 0,
      "context" : "been studied in the online or adaptive setting, where logarithmic approximation factors can be achieved [Golovin & Krause, 2011; Deshpande et al., 2016; Adamczyk et al., 2016].",
      "startOffset" : 104,
      "endOffset" : 175
    }, {
      "referenceID" : 8,
      "context" : "In contrast, robust optimization [Ben-Tal et al., 2009; Bertsimas et al., 2011] assumes that the parameters (of the cost function and constraints) can vary arbitrarily within a known confidence set U , and the aim is to optimize the worst-case setting, i.",
      "startOffset" : 33,
      "endOffset" : 79
    }, {
      "referenceID" : 10,
      "context" : "In contrast, robust optimization [Ben-Tal et al., 2009; Bertsimas et al., 2011] assumes that the parameters (of the cost function and constraints) can vary arbitrarily within a known confidence set U , and the aim is to optimize the worst-case setting, i.",
      "startOffset" : 33,
      "endOffset" : 79
    }, {
      "referenceID" : 4,
      "context" : "The brittleness of submodular optimization under noise has been studied in [Balkanski et al., 2016, 2017; Hassidim & Singer, 2016]. Approximations for robust submodular and influence optimization have been studied in [Krause et al., 2008; He & Kempe, 2016; Chen et al., 2016; Lowalekar et al., 2016], where an adversary can pick among a finite set of objective functions or remove selected elements Orlin et al. [2016].",
      "startOffset" : 76,
      "endOffset" : 419
    }, {
      "referenceID" : 9,
      "context" : "One option is to include variance Ben-Tal & Nemirovski [2000]; Bertsimas et al. [2011]; Atamtürk & Narayanan [2008]: min y∈Y −E[I(y;X)] + ε √ Var(I(y;X)), (7)",
      "startOffset" : 63,
      "endOffset" : 87
    }, {
      "referenceID" : 9,
      "context" : "One option is to include variance Ben-Tal & Nemirovski [2000]; Bertsimas et al. [2011]; Atamtürk & Narayanan [2008]: min y∈Y −E[I(y;X)] + ε √ Var(I(y;X)), (7)",
      "startOffset" : 63,
      "endOffset" : 116
    }, {
      "referenceID" : 9,
      "context" : "Common examples of uncertainty sets used in Robust Optimization are Ellipsoidal and D-norm uncertainty sets Bertsimas et al. [2011]. Our algorithm in Section 3.",
      "startOffset" : 108,
      "endOffset" : 132
    }, {
      "referenceID" : 34,
      "context" : "via one of the recent fast methods [Chakrabarty et al., 2017; Lee et al., 2015].",
      "startOffset" : 35,
      "endOffset" : 79
    }, {
      "referenceID" : 34,
      "context" : "However, we are not aware of a practical implementation of the algorithm in [Lee et al., 2015].",
      "startOffset" : 76,
      "endOffset" : 94
    }, {
      "referenceID" : 6,
      "context" : "These two optimization problems were solved via standard first-order methods using TFOCS Becker et al. [2011]. Figure 2 demonstrates that indeed, the alternative budgets are sensitive to the adversary and the robustly-chosen budget yrobust performs better, even in cases where the other budgets achieve zero influence.",
      "startOffset" : 89,
      "endOffset" : 110
    }, {
      "referenceID" : 1,
      "context" : "We address the issue of uncertain parameters (or, model mis-specification) in Budget Allocation or Bipartite Influence Maximization [Alon et al., 2012] from a robust optimization perspective.",
      "startOffset" : 132,
      "endOffset" : 151
    } ],
    "year" : 2017,
    "abstractText" : "The optimal allocation of resources for maximizing influence, spread of information or coverage, has gained attention in the past years, in particular in machine learning and data mining. But in applications, the parameters of the problem are rarely known exactly, and using wrong parameters can lead to undesirable outcomes. We hence revisit a continuous version of the Budget Allocation or Bipartite Influence Maximization problem introduced by Alon et al. [2012] from a robust optimization perspective, where an adversary may choose the least favorable parameters within a confidence set. The resulting problem is a nonconvex-concave saddle point problem (or game). We show that this nonconvex problem can be solved exactly by leveraging connections to continuous submodular functions, and by solving a constrained submodular minimization problem. Although constrained submodular minimization is hard in general, here, we establish conditions under which such a problem can be solved to arbitrary precision .",
    "creator" : "LaTeX with hyperref package"
  }
}