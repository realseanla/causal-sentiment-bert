{
  "name" : "1701.04238.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Thompson Sampling For Stochastic Bandits with Graph Feedback",
    "authors" : [ "Aristide C. Y. Tossou", "Christos Dimitrakakis", "Devdatt Dubhashi" ],
    "emails" : [ "aristide@chalmers.se", "christos.dimitrakakis@gmail.com", "dubhashi@chalmers.se" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Sequential decision making problems under uncertainty appear in most modern applications, such as automated experimental design, recommendation systems and optimisation. The common structure of these applications that, at each time step t, the decision-making agent is faced with a choice. After each decision, it obtains some problem-dependent feedback (Cesa-Bianchi and Lugosi 2006). For the so-called bandit problem, the choices are between different arms, and the feedback consists of a single scalar reward obtained by the arm at time t. For the prediction (or full-information) problem, it obtains the reward of the chosen arm, but also observes the rewards of all other choices at time t. In both cases, the problem is to maximise the total reward obtained over time. However, dealing with specific types of feedback may require specialised algorithms. In this paper, we show that the Thompson sampling algorithm can be applied successfully to a range of sequential decision problems, whose feedback structure is characterised by a graph.\nOur algorithm is an extension of Thompson sampling, introduced in (Thompson 1933). Although easy to implement and effective in practice, it remained unpopular until relatively recently. Interest grew after empirical studies\nCopyright c© 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\n(Scott 2010; Chapelle and Li 2011) demonstrated performance exceeding state of the art. This has prompted a surge of interest in Thompson sampling, with the first theoretical results (Agrawal and Goyal 2012) and industrial adoption (Scott 2015) appearing only recently. However, there are still only a few theoretical results and many of these are in the simplest settings. However, it is easy to implement and effective under very many different settings with complex feedback structures, and there is thus great need to extend the theoretical results to these wider settings.\nRusso and Roy argue that Thompson sampling is a very effective and versatile strategy for different information structures. Their paper focuses on specific examples: the two extreme cases of no and full information mentioned above and the case of linear bandits and combinatorial feedback.\nHere we consider the case where the feedback is defined through a graph (Caron et al. 2012; Alon et al. 2015). More specifically, the arms (choices) are vertices of a (potentially changing) graph and when an arm is chosen, we see the reward of that arm as well as its neighbours. On one hand, it is a clean model for theoretical and experimental analysis and on the other hand, it also corresponds to realistic settings in social networks, for example in advertisement settings (c.f. (Caron et al. 2012)).\nWe provide a problem-independent1 regret bound that is parametrized by the clique cover number of the graph and naturally generalizes the two extreme cases of zero and full information. We present two variants of Thompson sampling, that are both very easy to implement and computationally efficient. The first is straightforward Thompson sampling, and so draws an arm according to its probability of being the best, but also uses the graph feedback to update the posterior distribution. The second one can be seen as sampling cliques in the graph according to their probability of containing the best arm, and then choosing the empirically best arm in that clique. Neither algorithm requires knowledge of the complete graph.\nAlmost all previous algorithms require the full structure of the feedback graph in order to operate. Some require the entire graph for performing their updates only at the end of round (e.g. (Alon et al. 2015)) Others actually need the description of the graph at the beginning of the round to make\n1In the sense that it does not depend on the reward structure.\nar X\niv :1\n70 1.\n04 23\n8v 1\n[ cs\n.L G\n] 1\n6 Ja\nn 20\n17\ntheir decision and almost none of the algorithms previously proposed in the literature is able to provide non-trivial regret guarantees without the feedback graphs being disclosed. However, Cohen, Hazan, and Koren (2016) argue that the assumption that the entire observation system is revealed to the learner on each round, even if only after making her prediction, is rather unnatural. In principle, the learner need not be even aware of the fact that there is a graph underlying the feedback model; the feedback graph is merely a technical notion for us to specify a set of observations for each of the possible arms. Ideally, the only signal we would like the agent to receive following each round is the set of observations that corresponds to the arm she has taken on that round (in addition to the obtained reward). Our algorithms work in this setup - they do not need the whole graph to be disclosed either when selecting the arm or when updating beliefs - only the local neighborhood is needed. Furthermore, the underlying graph is allowed to change arbitrarily at each step. The detailed proofs of all our main results are available in the full version of this paper."
    }, {
      "heading" : "2 Setting",
      "text" : ""
    }, {
      "heading" : "2.1 The stochastic bandit model",
      "text" : "The stochastic K-armed bandit problem is a well known sequential decision problem involving an agent sequentially choosing among a set of K arms V = {1 . . .K}. At each round t, the agent plays an arm At ∈ V and receives a reward rt = R(Yt,At), where Yt,At : Ω → Y is a random variable defined on some probability space (P,Ω,Σ) and R : Y → R is a reward function.\nEach arm i has mean reward µi(P ) = EP R(Yt,i). Our goal is to maximize its expected cumulative reward after T rounds. An equivalent notion is to minimize the expected regret against an oracle which knows P . More formally, the expected regret EπP L of an agent policy π for a bandit problem P is defined as:\nEπP L = Tµ∗(P )− EπP T∑ t=1 rAt , (2.1)\nwhere µ∗(P ) = maxi∈V µi(P ) is the mean of the optimal arm and π(At|ht) is the policy of the agent, defining a probability distribution on the next armAt given the history ht = 〈A1:t−1, r1:t−1〉 of previous arms and rewards.\nThe main challenge in this model is that the agent does not know P , and it only observes the reward of the arm it played. As a consequence, the agent must trade-off exploitation (taking the apparently best arm) with exploration (trying out other arms to assess their quality).\nThe Bayesian setting offers a natural way to model this uncertainty, by assuming that the underlying probability law P is in some set P = {Pθ | θ ∈ Θ } parametrised by θ, over which we define a prior probability distribution P. In that case, we can define the Bayesian regret:\nEπ L = ∫\nΘ\nEπPθ (L) dP(θ). (2.2)\nA policy with small Bayesian regret may not be uniformly good in all P . Since in the Bayesian setting we frequently\nneed to discuss posterior probabilities and expectations, we also introduce the notation Et f , E(f | ht) and Pt(·) , P(· | ht) for expectations and probabilities conditioned on the current history."
    }, {
      "heading" : "2.2 The graph feedback model",
      "text" : "In this model, we assume the existence of an undirected graph G = (V, E) with vertices corresponding to arms. By taking an arm a ∈ V , we not only receive the reward of the arm we played, but we also observe the rewards of all neighbouring arms N a = { a′ ∈ V | (a, a′) ∈ E }. More precisely, at each time-step t we observe Yt,a′ for all a′ ∈ NAt , while our reward is still rt = R(Yt,At).\nIf the graph is empty, then the setting is equivalent to the bandit problem. If the graph is fully connected, then it is equivalent to the prediction (i.e. full information) problem. However, many practical graphs, such as those derived from social networks, have an intermediate connectivity. In such cases, the amount of information that we can obtain by picking an arm can be characterised by graph properties, such as the clique cover number: Definition 2.1 (Clique cover number). A clique covering C of a graph G is a partition of all its vertices into sets S ∈ C such that the sub-graph formed by each S is a clique i.e. all vertices in S are connected to each other in G. The smallest number of cliques into which the nodes of G can be partitioned is called the clique cover number. We denote by C(G) the minimum clique cover and χ(G) its size, omitting G when clear from the context.\nThe domination number is another useful similar notion for the amount of information that we can obtain. Definition 2.2 (Domination number). A dominating set in a graph G = (V, E) is a subset U ⊆ V such that for every vertex u ∈ V , either u ∈ U or (u, v) ∈ E for some v ∈ U . The smallest size of a dominating set in G is called the domination number of G and denoted γ(G).\n3 Related work and our contribution Optimal policies for the stochastic multi-armed bandit problem were first characterised by (Lai and Robbins 1985), while index-based optimal policies for general non-parametric problems were given by (Burnetas and Katehakis 1997). Later (Auer, Cesa-Bianchi, and Fischer 2002a) proved finite-time regret bounds for a number of UCB (Upper Confidence Bound) index policies, while (Garivier and Cappé 2011) proved finite-time bounds for index policies similar to those of (Burnetas and Katehakis 1997), with problem-dependent bounds O(K lnT ). Recently, a number of policies based on sampling from the posterior distribution (i.e. Thompson sampling(Thompson 1933)) were analysed in both the frequentist (Agrawal and Goyal 2012) and Bayesian setting (Russo and Roy 2016) and shown to obtain the same order of regret bound for the stochastic case. For the adversarial bandit problem the bounds are of order O( √ KT ). The analysis for the full information case generally results in O(ln(K) √ T ) bounds on the regret (Cesa-Bianchi and Lugosi 2006), i.e. with a much lower dependence on the number of arms.\nIntermediate cases between full information and bandit feedback can be obtained through graph feedback, introduced in (Mannor and Shamir 2011), which is the focus of this paper. In particular, (Caron et al. 2012) and (Alon et al. 2015) analysed graph feedback problems with stochastic and adversarial reward sequences respectively. Specifically, Caron et al. analysed variants of Upper Confidence Bound policies, for which they obtained O(χ(G) lnT ) problem-dependent bounds. In more recent work, (Cohen, Hazan, and Koren 2016) also introduced algorithms for graphs where the structure is never fully revealed showing that (unlike the bandit setting) there is a large gap in the regret between the adversarial and stochastic cases. In particular, they show that in the adversarial setting one cannot do any better than ignore all additional feedback, while they provide an action-elimination algorithm for the stochastic setting. Finally, (Buccapatnam, Eryilmaz, and Shroff 2014) obtain a problem-dependent bound of the form O(γ∗(G) log T +Kδ) where γ∗ is the linear programming relaxation to γ and δ is the minimum degree of G.\nContributions. In this paper, we provide much simpler strategies based on Thompson sampling, with a matching regret bound. Unlike previous work, these are also applicable to graphs whose structure is unknown or changing over time. More specifically: 1. We extend (Russo and Roy 2016) to graph-structured\nfeedback, and obtain a problem-independent bound of O( √\n1 2χ(G)T ).\n2. Using planted partition models, we verify the bound’s dependence on the clique cover.\n3. We provide experiments on data drawn from two types of random graphs: Erdős–Rényi graphs and power law graphs, showing that our algorithms clearly outperform UCB and its variations (Caron et al. 2012).\n4. Finally, we measured the performance on graphs estimated from the data used in (Caron et al. 2012). Once again, Thompson sampling clearly outperforms UCB and its variants."
    }, {
      "heading" : "4 Algorithms and analysis",
      "text" : "We consider two algorithms based on Thompson sampling. The first uses standard Thompson sampling to select arms. As this also reveals the rewards of neighbouring arms, the posterior is conditioned on those as well. The second algorithm uses Thompson sampling to select an arm, and then chooses the empirically best arm within that arm’s clique.\n4.1 The TS-N policy The TS-N policy is an adaptation of Thompson Sampling for graph-structured feedback. Thompson Sampling maintains a distribution over the problem parameters. At each step, it selects an arm according to the probability of its mean being the largest. It then observes a set of rewards which it uses to update its probability distribution over the parameters.\nFor the case where each arm has an independent parameter defining its reward distribution, we can update the distribution of all arms observed separately. A particularly simple\ncase is when all the reward are generated from Bernoulli distributions. Then we can simply use a Beta prior for each arm, illustrated by the TS-N policy in Algorithm 1. We note that the algorithm trivially extends to other priors and families.\nAlgorithm 1 TS-N (Bernoulli case) For each arm i, set Si = 1 and Fi = 1 for all round t = 1, · · · , T do\nFor each arm i, sample θi from the Beta distribution Beta(Si, Fi) Play arm At = arg maxi∈V θi for all k ∈ NAt do\nr̂k = Bernoulli(rk) If r̂k = 1 the Sk = Sk + 1, else Fk = Fk + 1\nend for end for\n4.2 The TS-MaxN policy The TS-N policy does not fully exploit the graphical structure. For example, as noted by (Caron et al. 2012), instead of doing exploration on arm i we could explore an apparently better neighbour, which would give us the same information. More precisely, instead of picking arm i, we pick the arm j ∈ Ni with the best empirical mean. The intuition behind it is that, if we take any arm inNi, we are going to observe anyway the reward of i. So it is always better to exploit the best arm inNi. The resulting policy, TS-MaxN is summarized in Algorithm 2. Although our theoretical results do not apply to this policy, it can have better performance as it uses more information.\nAlgorithm 2 TS-MaxN For each arm i, set Si = 1 and Fi = 1 Let x̄i be the empirical mean of arm i for all round t = 1, · · · , T do\nFor each arm i, sample θi from the Beta distribution Beta(Si, Fi) Let j = arg maxi∈V θi Play arm At = arg maxk∈Nj x̄k for all k ∈ NAt do\nr̂k = Bernoulli(rk) If r̂k = 1 the Sk = Sk + 1, else Fk = Fk + 1\nend for end for\n4.3 Analysis of TS-N policy Russo and van Roy introduced an elegant approach to the analysis of Thompson sampling. They define the information ratio as a key quantity for analysing information structures:\nΓt := Et [R(Yt,A∗)−R(Yt,At)]2\nIt(A∗, (At, Yt,At)) , (4.1)\nwhere Et and It denote expectation and mutual information respectively, conditioned on the history of arms and observations until time t. They show that it follows very generally that\nProposition 4.1. If Γt ≤ Γ almost surely for all 1 ≤ t ≤ T , then, EL(T, πTS) ≤ √ ΓH(α1)T .\nHere H denotes entropy. Thus to analyse the performance of Thompson sampling on a specific problem, one may focus on bounding the information ratio (4.1). For the (independent) K-armed bandit case, they show that Γt ≤ K/2, while for full-information (K experts) case, they show that Γt ≤ 1/2. We now give a simple but useful extension of their results which is intermediate between these cases. Proposition 4.2. Let ≡ be an equivalence relation defined on the arms with a denoting the equivalence class of a. Let Yt,a = (a, Zt,a) for sequence of random variables Zt,a : Ω → Z . Then Γt ≤ 12 |K/≡ |, half the number of equivalence classes.\nThis is a direct generalisation of propositions 3 and 4 in (Russo and Roy 2016), to which it reduces when the equivalence relation is trivial (bandit case) or full (expert case).\nWe can now use Proposition 4.2 to analyse graph structured arms:\nLemma 4.1. Let G = (V, E) be a graph with V corresponding to the arms and suppose that when an arm a is played, we observe the rewards R(Yt,a′) for all a′ ∈ N(a) i.e we observe the rewards corresponding to both a and all its neighbours. Let C be a clique cover of G i.e. a partition of V into cliques. Then Γt ≤ 12 |C|.\nApplying Proposition 4.1 and Lemma 4.1, we get a performance guarantee for Thompson sampling with graphstructured feedback:\nTheorem 4.3. For Thompson sampling with feedback from the graph G, we have Eπ TS L ≤ √\n1 2χ(G)H(α1)T , where\nχ(G) is the clique cover number of G.\nRemark 4.1. The bandit and expert cases are special cases corresponding to the empty graph and the complete graph respectively since χ(G) = K for the empty graph and χ(G) = 1 for the complete graph. Remark 4.2 (Planted Partition Models). The planted partition models or stochastic block models graphs G(n, k, p, q) are defined as follows (McSherry 2001; Condon and Karp 2001): first a fixed partition of the n vertices into k parts is chosen, then an edge between two vertices within the same class exists with probability p and that between vertices in different classes exists with probability q, independently with p > q. If p = 1, then with high probability, the clique cover number of the resulting graph is k (corresponding to the planted k cliques). Thus for this class of graphs, the regret grows as O( √ k) as per Theorem 4.3. This is explored in Section 5. When p 6= 1 but large, the planted partition graph is considered a good model of the structure of network communities.\nIf the underlying graph changes at each time step, then we also have the bound for the same algorithm:\nCorollary 4.1. Suppose the underlying graph at time t ≥ 1 is Gt, then:\nEπ TS L ≤\n√ 1\n2 max t χ(Gt)H(α1)T\nProof. The information ratio at time t is bounded by χ(Gt) ≤ maxt χ(Gt).\n5 Experiments We compared our proposed algorithms in terms of the actual expected regret against a number of other algorithms that can take advantage of the graph structure. Our comparison was performed over both synthetic graphs and networks derived from real-world data.2"
    }, {
      "heading" : "5.1 Algorithms and hyperparameters.",
      "text" : "In all our experiments, we tested against the UCB-MaxN and UCB-N algorithms, introduced in (Caron et al. 2012). These are the analogues of our algorithms, using upper confidence bounds instead of Thompson sampling.\n-greedy-D and -greedy-LP. For the real-world networks, we also evaluated our algorithms against a variant of -greedy-LP from (Buccapatnam, Eryilmaz, and Shroff 2014). This is based on a linear program formulation for finding a lower bound γ(G) on the size of the minimum dominating set. We observe first that their analysis holds for any fixed dominating set D and the bound so obtained is O(|D|lnT ). In particular, we may use a simple greedy algorithm to compute a near–optimal dominating set D′ such that |D′|≤ γ(G) log ∆, where ∆ is the maximum degree of the graph. 3 Using such a near optimal dominating set in place of the LP relaxation and choosing arms from it uniformly at random, we obtain a variant of the original algorithm, which we call -greedy-D, which is much more computationally efficient, and which enjoys a similar regret bound:\nTheorem 5.1. The regret of -greedy-D is at most O(γ(G) ln ∆ lnT ), where ∆ is the maximum degree of the graph.\n-greedy-D and -greedy-LP have the hyper-parameters c and d, which control the amount of exploration. We found that its performance is highly sensitive to their choice. In our experiments, we find the optimal values for these parameters by performing a separate grid search for each problem, and only reporting the best results. Since there is no obvious way to tune these parameters online, this leads to a favourable bias in our results for this algorithm. 4\nAs Thompson sampling is a Bayesian algorithm, we can view the prior distribution as a hyper-parameter. In our experiments, we always set that to a Beta(1,1) prior for all rewards.\n2Our source code and data sets will be made available on an open hosting website.\n3No polynomial time algorithm can guarantee a better approximation unless P=NP, (Ruan et al. 2004)\n4A similar observation was made in (Auer, Cesa-Bianchi, and Fischer 2002b), which noted that an optimally tuned -greedy performs almost always best, but its performance can degrade significantly when the parameters are changed. Although (Buccapatnam, Eryilmaz, and Shroff 2014) suggests a method for selecting these parameters, we find that using it leads to a near-linear regret."
    }, {
      "heading" : "5.2 General experimental setup.",
      "text" : "For all of our experiments, we performed 210 independent trials and reported the median-of-means estimator5 of the cumulative regret. It partitions the trials into a0 equal groups and return the median of the sample means of each group. We set the number of groups to a0 = 14, so that the confidence interval holds with probability at least 0.955.\nWe also reported the deviation of each algorithm using the Gini’s Mean Difference (GMD hereafter) (Gini and Pearson 1912). GMD computes the deviation as ∑N j=1(2j − N − 1)x(j) with x(j) the j-th order statistics of the sample (that is x(1) ≤ x(2) ≤ . . . ≤ x(N)). As shown in (Yitzhaki and others 2003; David 1968) the GMD provides a superior approximation of the true deviation than the standard one. To account for the fact that the cumulative regret of our algorithms might not follow a symmetric distribution, we computed the GMD separately for the values above and below the median-of-means."
    }, {
      "heading" : "5.3 Simulated graphs",
      "text" : "In our synthetic problems, unless otherwise stated, the rewards are drawn from a Bernoulli distribution whose mean is generated uniformly randomly in [0.45, 0.55] except for the optimal arm whose mean is generated randomly in [0.55, 0.6]. The number of nodes in the graph is 500. We tested with a sparse graph of 2500 edges and also with a dense graph of 62625 edges.\nErdős–Rényi graphs In our first experiment, we generate the graph randomly using the Erdős–Rényi model. Figure 2e and 2f respectively show the result in the sparse and dense graph.\nOur first observation here is that all policies take advantage of a large number of edges as their cumulative regret is better by using the dense graph (Figure 2f) rather than the sparse one (Figure 2e). This confirms the theoretical result as a dense graph will have a smaller clique cover number than a sparse one.\nThe policy TS-MaxN outperforms all other in both the sparse and dense graph model. However, the performance of TS-N is very close to that of TS-MaxN in the near complete graph. This is explained by the fact that in a near complete graph we have many cliques. It is revealing to see that TS-N outperforms both the UCB-N and UCB-MaxN policies.\nPower Law graph Such graphs are commonly used to generate static scale-free networks (Goh, Kahng, and Kim 2001). In this experiment, we generated a non-growing random graph with expected power-law degree distribution.\nshow the results respectively for the dense and sparse graph Figure 2d and 2c show the results respectively for the dense and sparse graph. Again, the policy TS-MaxN clearly outperforms all other. In the sparse graph model, TS-N is beaten by UCB-MaxN at the beginning of the rounds ( t ≤ 100000), but catches and ended up beating UCB-MaxN.\n5Used heavily in the streaming literature (Alon, Matias, and Szegedy 1996)\nPlanted Partition Model The aim of the experiment on this model is to check the dependency on the number of cliques for each policy. Figure 1 shows the results where on the x-axis we have the parameter k of the planted partition graph (which is almost equal to the number of cliques) on a graph with 1024 nodes. On the y-axis we have the relative regret of each policy, i.e. the ratio between the regret of each policy with the regret of the best policy when there are two groups, for ease of comparison. As we can see, all methods’ regret scales similarly. Thus, the theoretical bounds appear to hold in practice, and to be somewhat pessimistic. For a larger number of nodes, we would expect the plots to flatten later."
    }, {
      "heading" : "5.4 Social networks datasets",
      "text" : "Our experiments on real world datasets follow the methodology described in (Caron et al. 2012). We first infer a graph from data, and then define a reward function for movie recommendation from user ratings. Missing ratings are predicted using matrix factorization. This enables us to generate rewards from the graph. We explain the datasets, reward function and graph inference in the full version.\nResults Figure 2a shows the results for the Facebook graph and Figure 2b for the Flixster graph. Once again, the Thompson sampling strategies dominate all other strategies for the Facebook and they are matched by the optimised -greedy-D policy in the Flixster graph. We notice that in this setting the gap between the UCB policies and the rest is much larger, as is the overall regret of all policies. This can be attributed to the larger size of these graphs.\n6 Conclusion We have presented the first Thompson sampling algorithms for sequential decision problems with graph feedback, where we not only observe the reward of the arm we select, but also those of the neighbouring arms in the graph. Thus, the graph feedback allows us the flexibility to model different types of feedback information, from bandit feedback to expert feedback. Since the structure of the graph need not be known in advance, our algorithms are directly applicable to problems with changing and/or unknown topology. Our analysis leverages the information-theoretic construction of (Russo and Roy 2016), by bounding the expected information gain in terms of fundamental graph properties. Although our problem-independent bound of is not directly comparable to (Caron et al. 2012), we believe that a problem-independent version of the latter should beO( √ χ lnT ), in which case our results would represent an improvement of O( √ χ).\nIn practice, our two variants always outperform UCB-N, UCB-MaxN, which also use graph feedback but rely on upper confidence bounds. We are also favourably compared against -greedy-D, even when we tune the parameters of the latter post hoc.\nIt would be interesting to extend our techniques to other types of feedback. For example, the Bayesian foundations of Thompson sampling render our algorithms applicable to arbitrary dependencies between arms. In future work, we will analytically and experimentally consider such problems and\nrelated applications. Finally, an open question is the existence of information-theoretic lower bounds in settings with partial feedback.\nAcknowledgments. This research was partially supported by the SNSF grants “Adaptive control with approximate Bayesian computation and differential privacy” (IZK0Z2 167522), “Swiss Sense Synergy” (CRSII2 154458), by the the People Programme (Marie Curie Actions) of the European Union’s Seventh Framework Programme (FP7/2007-2013) under REA grant agreement number 608743, and the Future of Life Institute."
    } ],
    "references" : [ {
      "title" : "N",
      "author" : [ "S. Agrawal", "Goyal" ],
      "venue" : "2012. Analysis of thompson sampling for the multi-armed bandit problem. In COLT",
      "citeRegEx" : "Agrawal and Goyal 2012",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Online learning with feedback graphs: beyond bandits",
      "author" : [ "Alon" ],
      "venue" : "In Proceedings of the 28th Annual Conference on Learning",
      "citeRegEx" : "Alon,? \\Q2015\\E",
      "shortCiteRegEx" : "Alon",
      "year" : 2015
    }, {
      "title" : "The space complexity of approximating the frequency moments",
      "author" : [ "Matias Alon", "N. Szegedy 1996] Alon", "Y. Matias", "M. Szegedy" ],
      "venue" : null,
      "citeRegEx" : "Alon et al\\.,? \\Q1996\\E",
      "shortCiteRegEx" : "Alon et al\\.",
      "year" : 1996
    }, {
      "title" : "Finite time analysis of the multiarmed bandit problem. Machine Learning 47(2/3):235–256",
      "author" : [ "Cesa-Bianchi Auer", "P. Fischer 2002a] Auer", "N. CesaBianchi", "P. Fischer" ],
      "venue" : null,
      "citeRegEx" : "Auer et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Auer et al\\.",
      "year" : 2002
    }, {
      "title" : "Finite-time analysis of the multiarmed bandit problem. Machine learning 47(2-3):235–256",
      "author" : [ "Cesa-Bianchi Auer", "P. Fischer 2002b] Auer", "N. CesaBianchi", "P. Fischer" ],
      "venue" : null,
      "citeRegEx" : "Auer et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Auer et al\\.",
      "year" : 2002
    }, {
      "title" : "N",
      "author" : [ "S. Buccapatnam", "A. Eryilmaz", "Shroff" ],
      "venue" : "B.",
      "citeRegEx" : "Buccapatnam. Eryilmaz. and Shroff 2014",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "M",
      "author" : [ "A.N. Burnetas", "Katehakis" ],
      "venue" : "N.",
      "citeRegEx" : "Burnetas and Katehakis 1997",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Leveraging side observations in stochastic bandits. UAI",
      "author" : [ "Caron" ],
      "venue" : null,
      "citeRegEx" : "Caron,? \\Q2012\\E",
      "shortCiteRegEx" : "Caron",
      "year" : 2012
    }, {
      "title" : "and Lugosi",
      "author" : [ "N. Cesa-Bianchi" ],
      "venue" : "G.",
      "citeRegEx" : "Cesa.Bianchi and Lugosi 2006",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "and Li",
      "author" : [ "O. Chapelle" ],
      "venue" : "L.",
      "citeRegEx" : "Chapelle and Li 2011",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "T",
      "author" : [ "A. Cohen", "T. Hazan", "Koren" ],
      "venue" : "2016. Online learning with feedback graphs without the graphs. In ICML",
      "citeRegEx" : "Cohen. Hazan. and Koren 2016",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "R",
      "author" : [ "A. Condon", "Karp" ],
      "venue" : "M.",
      "citeRegEx" : "Condon and Karp 2001",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Miscellanea: Gini’s mean difference rediscovered",
      "author" : [ "H. David 1968] David" ],
      "venue" : null,
      "citeRegEx" : "David,? \\Q1968\\E",
      "shortCiteRegEx" : "David",
      "year" : 1968
    }, {
      "title" : "and Cappé",
      "author" : [ "A. Garivier" ],
      "venue" : "O.",
      "citeRegEx" : "Garivier and Cappé 2011",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "and Pearson",
      "author" : [ "C. Gini" ],
      "venue" : "K.",
      "citeRegEx" : "Gini and Pearson 1912",
      "shortCiteRegEx" : null,
      "year" : 1912
    }, {
      "title" : "Universal behavior of load distribution in scale-free networks",
      "author" : [ "Kahng Goh", "K.-I. Kim 2001] Goh", "B. Kahng", "D. Kim" ],
      "venue" : "Physical Review Letters 87(27):278701",
      "citeRegEx" : "Goh et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Goh et al\\.",
      "year" : 2001
    }, {
      "title" : "and Robbins",
      "author" : [ "T.L. Lai" ],
      "venue" : "H.",
      "citeRegEx" : "Lai and Robbins 1985",
      "shortCiteRegEx" : null,
      "year" : 1985
    }, {
      "title" : "and Shamir",
      "author" : [ "S. Mannor" ],
      "venue" : "O.",
      "citeRegEx" : "Mannor and Shamir 2011",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "F",
      "author" : [ "McSherry" ],
      "venue" : "2001. Spectral partitioning of random graphs. In Foundations of Computer Science,",
      "citeRegEx" : "McSherry 2001",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "A greedy approximation for minimum connected dominating sets. Theoretical Computer Science 329(1):325–330",
      "author" : [ "Ruan" ],
      "venue" : null,
      "citeRegEx" : "Ruan,? \\Q2004\\E",
      "shortCiteRegEx" : "Ruan",
      "year" : 2004
    }, {
      "title" : "B",
      "author" : [ "D. Russo", "Roy" ],
      "venue" : "V.",
      "citeRegEx" : "Russo and Roy 2016",
      "shortCiteRegEx" : null,
      "year" : 2016
    }, {
      "title" : "S",
      "author" : [ "Scott" ],
      "venue" : "L.",
      "citeRegEx" : "Scott 2010",
      "shortCiteRegEx" : null,
      "year" : 2010
    }, {
      "title" : "S",
      "author" : [ "Scott" ],
      "venue" : "L.",
      "citeRegEx" : "Scott 2015",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Gini’s mean difference: A superior measure of variability for nonnormal distributions. Metron 61(2):285–316",
      "author" : [ "Yitzhaki", "S others 2003] Yitzhaki" ],
      "venue" : null,
      "citeRegEx" : "Yitzhaki and Yitzhaki,? \\Q2003\\E",
      "shortCiteRegEx" : "Yitzhaki and Yitzhaki",
      "year" : 2003
    } ],
    "referenceMentions" : [ ],
    "year" : 2017,
    "abstractText" : "We present a novel extension of Thompson Sampling for stochastic sequential decision problems with graph feedback, even when the graph structure itself is unknown and/or changing. We provide theoretical guarantees on the Bayesian regret of the algorithm, linking its performance to the underlying properties of the graph. Thompson Sampling has the advantage of being applicable without the need to construct complicated upper confidence bounds for different problems. We illustrate its performance through extensive experimental results on real and simulated networks with graph feedback. More specifically, we tested our algorithms on power law, planted partitions and Erdős–Rényi graphs, as well as on graphs derived from Facebook and Flixster data. These all show that our algorithms clearly outperform related methods that employ upper confidence bounds, even if the latter use more information about the graph.",
    "creator" : "LaTeX with hyperref package"
  }
}