{
  "name" : "1503.08141.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Revisable Justified Belief: Preliminary Report",
    "authors" : [ "Alexandru Baltag", "Bryan Renne", "Sonja Smets" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Conditional Doxastic Logic is Baltag and Smets’ [4] name for a single-agent version of Board’s [5] multi-agent theory of conditional belief BRSIC. CDL has formulas Bψϕ to express that the agent believes ϕ conditional on ψ. As we will see, CDL has a certain relationship with the “AGM theory” of belief revision due to due to Alchourrón, Gärdenfors, and Makinson [1]. So we may also think of Bψϕ as say that the agent will believe ϕ after revising her belief state by successfully incorporating the information that ψ is true. As with AGM theory, CDL assumes that conditionalization (i.e., revision) is always successful: the agent is to assume that the incoming information ψ is completely trustworthy and therefore update her belief state by consistently incorporating this incoming information. If before the revision she holds beliefs that imply ¬ψ, then she must give up these beliefs so that she will come to believe ψ after the revision takes place. The question then is how to do this in general.\nThe models of CDL are “plausibility models.” These are very close to Grove’s “system of spheres” for AGM theory [6]. As we will see, we can view the conditionalization/revision process either from the semantic perspective, as a definite operation on plausibility models, or from the syntactic perspective, as an axiomatic formulation analogous to the postulate-based approach of AGM. However, it is perhaps simplest to start with the semantic perspective."
    }, {
      "heading" : "2 Plausibility models",
      "text" : "Definition 2.1 (Plausibility models). Let P be a set of propositional letters. A plausibility model is a structure M = (W,≤, V ) consisting of a nonempty set W of “worlds,” a preorder (i.e., a reflexive and transitive binary relation) ≤ on W , and a propositional valuation V : W → ℘(P) mapping each world w to the set V (w) of propositional letters true at w. We call ≤ a plausibility relation on W . In terms of ≤, we ∗Funded by an Innovational Research Incentives Scheme Veni grant from the Netherlands Organisation for Scientific Research (NWO) hosted by the Institute for Logic, Language, Information and Computation (ILLC) at the University of Amsterdam. †Funded in part by an Innovational Research Incentives Scheme Vidi grant from the Netherlands Organisation for Scientific Research (NWO) and by the European Research Council under the European Community’s Seventh Framework Programme (FP7/2007-2013) / ERC Grant agreement no. 283963. Both grants were hosted by the Institute for Logic, Language, Information and Computation (ILLC) at the University of Amsterdam.\nar X\niv :1\n50 3.\n08 14\n1v 1\n[ cs\n.L O\n] 2\n7 M\nar 2\n01 5\ndefine the converse relation ≥, the strict version <, the strict converse relation >, and the various negations of these (denoted by writing a slash through the symbol to be negated) as usual. ' denotes the relation ' := (≥ ∩ ≤) of equi-plausibility. A pointed plausibility model is a pair (M,w) consisting of a plausibility model M and the point w, itself a world in M . Notation: for each w ∈W , we define the set\nw↓ := {x ∈W | x ≤ w} .\nx ≤ y read, “x is no less plausible than y.” According to this reading, if we think of ≤ as a “less than or equal to” relation, then it is the “lesser” elements that are more plausible. Therefore, if ≤ is a well-order and S is a nonempty set of worlds, minS is the set of worlds that are the most plausble in S. While it may at first seem counterintuitive to the uninitiated, this convention of “lesser is more plausible” is nevertheless standard in Belief Revision Theory.1\nWe think of the plausibility relation as describing the judgments of an unnamed agent: for each pair of worlds (x, y), she either judges one world to be more plausible than the other or the two to be of equal plausibility. Plausibility models for multiple agents have a number of plausibility relations, one for each agent. For present purposes, we restrict attention to the single-agent case, though we say more about the multi-agent situation later.\nDefinition 2.2 (Plausibility model terminology). Let M = (W,≤, V ) be a plausibility model.\n• To say M is finite means W is finite.\n• To say M is connected means that for each x ∈W , we have cc(x) = W , where\ncc(x) := {y ∈ x | x(≥ ∪≤)+y}\nis the connected component of x and (≥∪≤)+ is the transitive closure of ≥∪≤.2 A connected component is a subset S ⊆W for which there exists an x ∈W such that cc(x) = S.\n• To say M is well-founded means ≤ is well-founded: for each nonempty S ⊆W , the set\nminS := {x ∈ S | ∀y ∈ S : y 6< x}\nof minimal elements of S is nonempty.\n• To say that a set S ⊆W of worlds is smooth in M means that for each world x ∈ S, either x ∈ min(S) or there exists y ∈ min(S) such that y < x. Given a collection Γ ⊆ ℘(W ) of sets of worlds, to say that M is smooth with respect to Γ means that every S ∈ Γ is smooth in M . To say that M is smooth means that M is smooth with respect to ℘(W ).\n• To say that M is total means that ≤ is total on W : for each (x, y) ∈W ×W , we have x ≤ y or y ≤ x.\n• To say M is well-ordered (equivalently, that M is a well-order) means that ≤ is well-ordered (i.e., it is total and well-founded).\n• To say that M is locally total means that ≤ is total on each connected component : for each w ∈ W and (x, y) ∈ cc(w)× cc(w), we have x ≤ y or y ≤ x.\n1This convention stems from the notion of “Grove spheres” [6]: given a well-order, worlds are arranged so that they sit on the surface of a number of concentric spheres. Worlds of strictly greater plausibility are assigned to spheres with strictly shorter radii, and equi-plausible worlds are assigned to the same sphere. In this way, the most plausible worlds sit on the surface of the innermost sphere, which has the minimum radius. Similarly, if we restrict attention to a nonempty set S of worlds, then we “recenter” the sphere around S. By this we mean that we create a new system of spheres consisting of just those worlds in S. After doing so, the most plausible worlds again sit on the surface of the innermost sphere, which again has the minimum radius.\n2The transitive closure of a binary relation R is the smallest extension R+ ⊇ R satisfying the property that xR+y and yR+z together imply xR+z.\n• To say M is locally well-ordered (equivalently, that M is a local well-order) means that ≤ is locally well-ordered (i.e., it is well-founded and total on each connected component).\nTo say that a pointed plausibility model (M,w) satisfies one of the model-applicable adjectives above means that M itself satisfies the adjective in question.\nTheorem 2.3 (Relationships between terminology). Let M = (W,≤, V ) be a plausibility model and S ⊆W .\n1. If M is finite, then M is well-founded.\n2. If M is locally well-ordered, and S is a connected component, then\nminS = {x ∈ S | ∀y ∈ S : x ≤ y} .\n3. If M is well-ordered, then minS = {x ∈ S | ∀y ∈ S : x ≤ y}.\n4. M is well-founded iff M is smooth.\n5. M is well-ordered iff M is smooth and total.\n6. M is locally well-ordered iff M is smooth and locally total.\nProof. See the appendix.\nFrom now on, in this paper we will restrict ourselves to locally well-ordered plausibility models, unless otherwise specified."
    }, {
      "heading" : "3 Conditional Doxastic Logic",
      "text" : ""
    }, {
      "heading" : "3.1 Language and semantics",
      "text" : "Definition 3.1 (LCDL). Let P be a fixed set of propositional letters. The language of Conditional Doxastic Logic consists of the set of LCDL formulas ϕ formed by the following grammar:\nϕ ::= ⊥ | p | (ϕ→ ϕ) | Bϕϕ p ∈P\nThe logical constant > (for truth) and the various familiar Boolean connectives are defined by the usual abbreviations. Other important abbreviations: B(ϕ|ψ) denotes Bψϕ, and Bϕ denotes B>ϕ.\nThe formula Bψϕ is read, “Conditional on ψ, the agent believes ϕ.” Intuitively, this means that each of the most plausible ψ-worlds satisfies ϕ. The forthcoming semantics will clarify this further. The basic idea is that a belief conditional on ψ is a belief the agent would hold were she to minimally revise her beliefs so that she comes to believe ψ.\nDefinition 3.2 (LCDL-truth). Let M = (W,≤, V ) be a locally well-ordered plausibility model. We define a binary satisfaction relation |= between locally well-ordered pointed plausibility models (M,w) (written without surrounding parentheses) and LCDL-formulas and we define a function J−K : LCDL → ℘(W ) as follows.\n• JϕKM := {v ∈W |M,v |= ϕ}. The subscript M may be suppressed.\n• M,w 6|= ⊥.\n• M,w |= p iff p ∈ V (w) for p ∈P.\n• M,w |= ϕ→ ψ iff M,w 6|= ϕ or M,w |= ψ.\n• M,w |= Bψϕ iff for all x ∈ cc(w), we have\nx↓ ∩ JψK = ∅ or ∃y ∈ x↓ ∩ JψK : y↓ ∩ JψK ⊆ JϕK .\nBψϕ holds at w iff for every world connected to w that has an equally or more plausible ψ-world y, the ψ-worlds that are equally or more plausible than y satisfy ϕ.\nWe extend the above so that we may have sets S ⊆ LCDL of formulas on the right-hand side:\nM,w |= S means M,w |= ϕ for each ϕ ∈ S .\nAlso, we will have occasion to use the following notion of local consequence: given a set S ∪ {ϕ} ⊆ LCDL of formulas and writing P∗ to denote the class of pointed plausibility models,\nS |=` ϕ means ∀(M,w) ∈ P∗ : M,w |= S implies M,w |= ϕ .\nFinally, we write M |= ϕ to mean that M, v |= ϕ for each world v in M (“ϕ is valid within M”).\nRemark 3.3 (Knowledge). Baltag and Smets [4] read the abbreviation\nKϕ := B¬ϕ⊥\nas “the agent knows ϕ.” This notion of “knowledge” is based on the rejection of a proposed belief revision. In particular, Kϕ = B¬ϕ⊥ says that the most plausible ¬ϕ-worlds are ⊥-worlds. The propositional constant ⊥ for falsehood is true nowhere, so this amounts to us saying that the agent does not consider any ¬ϕ-worlds possible. Hence all the worlds she considers possible are ϕ-worlds. It is in this sense that we say she “knows” that ϕ is true: she will not revise her beliefs by ¬ϕ (on pain of contradiction). It is easy to see that the semantics ensures that K so-defined is an S5 modal operator: knowledge is closed under classical implication, what is known is true, it is known what is known, it is known what is not known, and all validities are known.\nIn well-founded plausibility models, belief in ϕ conditional on ψ is equivalent to having ϕ true at the most plausible ψ-worlds that are within the connected component of the actual world. And if the models are well-ordered, then we can omit mention of the connected component.\nTheorem 3.4 (LCDL-truth in well-founded models). Let M = (W,≤, V ) be a plausibility model.\n(a) If M is well-founded: M,w |= Bψϕ ⇔ minJψK ∩ cc(w) ⊆ JϕK.\n(b) If M is well-ordered: M,w |= Bψϕ ⇔ minJψK ⊆ JϕK.\nProof. See the appendix for the proof of (a). For (b), if M is well-ordered, then ≤ is total and therefore cc(w) = W for each w ∈W . Apply (a).\nThe intended models for CDL are the well-ordered (and hence well-founded) plausibility models.\nDefinition 3.5 (LCDL-validity). To say that a LCDL-formula ϕ is valid, written |= ϕ, means that we have M |= ϕ for each well-ordered plausibility model M .\nAs per Theorem 3.4, restricting validity to the well-orders allows us to read Bψϕ as follows: “the most plausible ψ-worlds satisfy ϕ.” While the intended models for CDL are well-ordered, and validity is defined accordingly (as per Definition 3.5), the following theorem shows that locally well-ordered plausibility models would suffice.\nTheorem 3.6 (LCDL-validity with respect to local well-orders). Let PL be the class of locally well-ordered plausibility models. For each ϕ ∈ LCDL, we have:\n|= ϕ iff ∀M ∈ PL, M |= ϕ .\nProof. Right to left (“if”): obvious. Left to right (“only if”): assume |= ϕ and take M = (W,≤, V ) ∈ PL and a world w ∈W . Let M ′ be the sub-model of M = (W ′,≤′, V ′) obtained by restricting to cc(w):\nW ′ = cc(w), ≤′=≤ ∩(W ′ ×W ′), V ′(v) = V (v) for v ∈W ′.\nSince M ∈ PL, it follows that M ′ is well-ordered and therefore, since |= ϕ, we have M ′, w |= ϕ. It follows by a straightforward induction on the construction of LCDL-formulas θ that M\n′, w |= θ iff M,w |= θ. Hence M,w |= ϕ. Since w ∈ W and M ∈ PL were chosen arbitrarily, we conclude that M |= ϕ for each M ∈ PL.\n3.2 Board’s theory BRSIC and CDL0\nThe Hilbert theory of Conditional Doxastic Logic was first studied by Board [5] under the name BRSIC. Baltag and Smets [4] subsequently developed various alternative axiomatizations and extensions and introduced the name Conditional Doxastic Logic. The single-agent version of Board’s theory BRSIC is equivalent to what we call CDL0.\nDefinition 3.7 (CDL0 theory). CDL0 is defined in Table 1.\nCDL0 is actually a simplification of BRSIC. In particular, BRSIC is a multi-agent theory for a nonempty set A of agents using a language similar to LCDL except that it has as primitives both conditional belief Bψa ϕ for each agent a ∈ A and unconditional belief Baϕ for each agent a ∈ A. Since the BRSIC axiom Baϕ ↔ B>a ϕ (“Triv”) requires that unconditional belief be equivalent to conditional belief based on a tautological conditional, we have decided upon a streamlined language that contains conditional belief only. This allowed us to define away Board’s axiom Triv in the following way (in Definition 3.1): let Baϕ abbreviate B>a ϕ. We have also renamed some of Board’s axioms and rules: his Taut is now called (CL), his Dist is now called (K), his IE(a) is now called (IEa), his IE(b) is now called (IEb), his TPI is now called (PI), his\nNPI is now called (NI), his RE is now called (MN), and all of his other axiom names have been enclosed in parenthesis. Finally, what we call (WCon) is the contrapositive of what Board called WCon. Restricting to a single-agent setting and thereby dropping subscripted agent names, we obtain the theory CDL0.\nRemark 3.8 (Multi-agent CDL0). A multi-agent version of CDL0 is obtained by making trivial modifications to the language, axiomatization, and semantics of CDL0. In particular, for a nonempty set A of agents, the multi-agent language L ACDL is like the single-agent language LCDL except that each conditional belief operator Bψ is replaced by a number of operators Bψa , one for each agent a ∈ A. The multi-agent theory CDLA0 is obtained by adding a metavariable agent subscript a to each of the belief operators in Table 1. The models of CDLA0 are multi-agent plausibility models: these are like single-agent plausibility models presented above (in Definition 2.1) except that the preorder ≤ is replaced by a preorder ≤a for each agent a ∈ A. The definition of truth for L ACDL on these models is like that in Definition 3.2 except that the meaning of M,w |= B ψ a ϕ is changed so as to refer to the preorder ≤a. Validity is defined with respect to the class of multi-agent plausibility models satisfying the property that each ≤a is locally well-ordered.\nSo, in essence, the multi-agent version consists of multiple single agent versions such that each agent’s conditional beliefs are always restricted to the worlds connected (for that agent) to the given world w currently under consideration. It is clear that restricting to one agent a yields a framework that is equivalent to the version of CDL0 we have presented here.\nWe note that the multi-agent version allows us to describe what one agent conditionally believes about what another agent conditionally believes. This is feature of interest in a wide variety of applications. However, from the technical perspective, the difference between the single- and multi-agent frameworks does not amount to too much in the way of mathematical shenanigans. It therefore suffices to indicate, as we have here, how the multi-agent version is obtained from the single-agent version and then restrict our study to the single-agent version. Of course, one may consult Board [5] for the fully specified account of the multi-agent theory BRSIC.\n3.3 The theory CDL\nIt will be our task in this paper to develop a version of Conditional Doxastic Logic with justifications in the tradition of Justification Logic [2]. We will say more about this later, but for now it suffices to say that justifications in this tradition are meant to encode the individual reasoning steps that the agent uses to support her belief in one statement based on justifications she has for beliefs in other statements. In this way, justifications are supposed to present a stepwise explanation for how the agent derives complex beliefs from more basic ones. It is in this sense that justifications are “proof-like.”\nIn order to make this precise, we require an axiomatization of Conditional Doxastic Logic that is more perspicious than is CDL0 with regard to the ways in which conditional beliefs obtain. In particular, (IEa), (IEb), and (LE) are powerful principles that in fact encode a number of more basic principles and, as such, these powerful principles compress a number of reasoning steps into a small number of postulates. This is especially obvious with (LE): a belief conditional ψ may be replaced by a provably equivalent conditional ψ′ in one step, which does not reflect the complexity of the derivation that was used to prove the equivalence ψ ↔ ψ′. From the point of view of the Justification Logic tradition, wherein justifications should explain in a stepwise fashion how one conditional belief follows from another, this is undesirable. Intuitively, if the agent believes ϕ conditional on ψ, then the reason she believes ϕ conditional on a provably equivalent ψ′ depends crucially on the reasoning as to why ψ′ is in fact equivalent to ψ. If π1 and a more complex π2 are proofs of this equivalence, then an agent who bases her belief on the more complex π2 should have a correspondingly more complex justification witnessing her belief. We therefore require an alternative but equivalent axiomatization of the theory CDL0 that makes such stepwise reasoning operations more explicit. The exact criteria we seek for such a theory are not precisely defined but are based on the authors’ experience in working in the Justification Logic tradition. We call the theory we have settled upon CDL, and later we\nwill explain how this theory gives rise to a theory of Conditional Doxastic Logic with justifications.\nDefinition 3.9 (CDL theory). CDL is defined in Table 2.\nThe scheme (CL) of Classical Logic and the rule (MP) of Modus Ponens tell us that CDL is an extension of Classical Propositional Logic. The rule (MN) of Modal Necessitation tells us that derivable formulas hold in all conditional belief states.\nScheme (K) is just Kripke’s axiom for our conditional belief operator Bψ. The scheme (Succ) of Success says that every belief revision is always successful: if the agent revises her belief based on the information that ψ, then she will always arrive in a belief state in which ψ is one of her beliefs.\nMaking use of the definition of knowledge Kϕ := B¬ϕ⊥ from Remark 3.3, we can look at the following special case of the scheme (KM) of Knowledge Monotonicity :\nB¬ψ⊥ → B¬ψ∧¬ϕ⊥ .\nSince ¬¬ψ is equivalent to ψ and ¬(¬ψ ∧¬ϕ) is equivalent to ψ ∨ϕ, we may interpret the above instance of (KM) as telling us that knowledge is closed under disjunction: if ψ is known, then so is ψ ∨ ϕ. But another interpretation perhaps better explains the word “Monotonicity” in the name of this scheme. Returning now to the official formulation\nBψ⊥ → Bψ∧ϕ⊥\nof (KM), this scheme tells us that if we can conclude that a belief state conditional on ψ is contradictory, then conjunctively adding any further information ϕ yields a belief state conditional on ψ ∧ ϕ that is still contradictory. Accordingly, the belief state is unchanged by the conjunctive addition of any further conditional information, and so the belief state is trivially “monotonic” in the conjunctive addition of conditional information.\nThe scheme (RM) of Rational Monotonicity permits a more subtle kind of conjunctive addition. This scheme,\n¬Bψ¬ϕ→ (Bψχ→ Bψ∧ϕχ) ,\nsays that if ϕ is consistent with the belief state conditional on ψ, then we may conjunctively add ϕ to our conditional without losing any beliefs from the original belief state. This is a non-trivial monotonicity: incorporating the information ϕ by forming the conditional ψ ∧ ϕ yields a belief state that includes all the beliefs from the belief state conditional on ψ, but it may also include more.\nThe scheme (Inc) of Inclusion says that a belief state conditional on ψ includes every χ implied by ϕ whenever the belief state conditional on the conjunction ψ ∧ϕ includes χ. The scheme (Comm) of Commutativity says that the belief state conditional on a conjunction is invariant to the ordering of the conjuncts. The schemes (PI) of Positive Introspection and (NI) or Negative Introspection tell us that conditional beliefs are identical in all belief states. The scheme (WCon) of Weak Consistency tells us that belief revision is consistent with the actual state of affairs: if a revision by ψ yields a contradictory belief state, then ψ cannot be true.\nRemark 3.10 (Classical reasoning (CR), modal reasoning (MR)). When discussing derivation in CDL, we will often suppress elementary reasoning steps familiar from the study of normal modal logics. Toward this end, “classical reasoning,” which may be denoted by (CR), refers to a derivation with one or more steps that makes use solely of (CL) and (MP). “Modal reasoning,” which may be denoted by (MR), refers to a derivation with one or more steps that makes use solely of (CL), (K), (MP), and (MN).\nTheorem 3.11 (CDL-theorems). The following schemes of (Cut), Cautious Monotonicity (CM), (Taut), (And), (Or), Positive Reduction (PR), and Negative Reduction (NR) are all derivable in CDL:\n(Cut) Bψϕ→ (Bψ∧ϕχ→ Bψχ) (CM) Bψϕ→ (Bψχ→ Bψ∧ϕχ)\n(Taut) Bϕ↔ B>ϕ (And) Bψϕ1 → (Bψϕ2 → Bψ(ϕ1 ∧ ϕ2))\n(Or) Bψ1ϕ→ (Bψ2ϕ→ Bψ1∨ψ2ϕ) (PR) BϕBψχ↔ (Bϕ⊥ ∨Bψχ) (NR) Bϕ¬Bψχ↔ (Bϕ⊥ ∨ ¬Bψχ)\nAlso, the following rules of (Left) Logical Equivalence (LE), Right Weakening (RW), and Supraclassicality (SC) are all derivable in CDL:\nψ ↔ ψ′ (LE) Bψχ↔ Bψ′χ χ→ χ′ (RW) Bψχ→ Bψχ′\nψ → χ (SC)\nBψχ\nProof. See the appendix.\nThe following result shows that CDL and CDL0 derive the same theorems and therefore that these theories are identical.\nTheorem 3.12 (CDL-CDL0 equivalence). For each ϕ ∈ LCDL:\n`CDL ϕ iff `CDL0 ϕ .\nProof. See the appendix.\nThat CDL is sound and complete with respect to the class of well-ordered plausibility follows by Theorem 3.12 and the results in Board’s work [5]. However, we provide a full proof of this in the appendix because the details will be useful when we consider a justified version of CDL.\nTheorem 3.13 (CDL soundness and completeness; [5]). For each ϕ ∈ LCDL:\n`CDL ϕ iff |= ϕ .\nProof. See the appendix."
    }, {
      "heading" : "4 AGM Belief Revision",
      "text" : "The most influential theory of belief change is due to Alchourrón, Gärdenfors, and Makinson [1]. Their theory, commonly called to the “AGM theory,” takes the view that an agent’s belief state (or “database”) is represented by a deductively closed set of sentences T called a “belief set.” The agent is understood to believe exactly those sentences in her belief set T , and various operators on T are used to describe various kinds of changes in her belief state. Of particular interest is the revision operator, now often denoted using the symbol “ ∗ ”. This operator takes new information in the form of a sentence ψ and produces another belief set T ∗ ψ that contains ψ. Intuitively, the revision operation assumes that the incoming information ψ is completely trustworthy and so it should be incorporated into the database. However, simply adding ψ and taking the deductive closure, forming the expansion\nT + ψ := Cn(T ∪ {ψ}) (1)\nusing an assumed consequence-closure operator Cn(−) underlying the setting, might lead to an inconsistent belief set. By this it is meant that T + ψ might be logically inconsistent according to the logic governing Cn(−). Therefore, we cannot simply equate revision with expansion but must do something more clever so that the revised belief set T ∗ ψ not only contains ψ but is also consistent whenever ψ is consistent.\nInstead of providing an exact procedure for computing revision, the AGM approach is “postulate based”: a number of axiomatic postulates are provided, some intuitive justification is given as to why a revision operator should satisfy each of the postulates, and any operation on belief sets that satisfies all of the postulates is said to be an AGM revision operator. So in principle, there are many revision operators, and each is to be studied from an axiomatic point of view using the AGM revision postulates.\nFollowing the exposition of AGM theory from [7] (but with some minor modifications), we begin with a set P of propositional letters (usually countable). The set LCPL of formulas (the “propositional formulas” or “formulas of Classical Propositional Logic”) consists of those expressions that can be built up from the propositional letters and the Boolean constants ⊥ (falsehood) and > (truth) using the usual Boolean connectives. A deductive theory is assumed, and this theory is specified in terms of a Tarskian consequence operator: for any set S of formulas, Cn(S) is the set of logical consequences of S. It is assumed that Cn(−) satisfies the following conditions:\n• Inclusion: S ⊆ Cn(S),\n• Monotony (also sometimes called “Monotonicity”): S ⊆ S′ implies Cn(S) ⊆ Cn(S′),\n• Iteration: Cn(S) = Cn(Cn(S)), and\n• Supraclassicality: Cn(S) contains each classical tautology in LCPL.\nIt is usually assumed that Cn(−) also satisfies the following conditions:\n• Deductive Consistency: ⊥ /∈ Cn(∅); and\n• Compactness: ϕ ∈ Cn(S) iff there exists a finite S′ ⊆ S such that ϕ ∈ Cn(S′).\nThe alternative notation S ` ϕ is used to express ϕ ∈ Cn(S). A belief base is a set of formulas in the language, and a belief set is a deductively closed belief base (i.e., Cn(S) = S). Note that the phrase “belief state” (a.k.a., “database”) is an intuitive notion meant to describe the agent’s situation with regard to her beliefs. This intuitive notion is formalized either by a belief base (not necessarily deductively closed) or a belief set (necessarily deductively closed). A belief base T ′ gives rise to a belief set T by applying the consequence operator: T := Cn(T ′).\nA revision operator is meant to take an existing belief set T and some incoming information ψ and produce a new belief set T ∗ ψ that incorporates the incoming information ψ (i.e., ψ ∈ T ∗ ψ), is consistent\nwhenever the incoming information ψ is consistent (i.e., T ∗ ψ 0 ⊥ if ψ is consistent), and is obtained from T by way of a “minimal change.” The latter is an intuitive (and non-formalized) guiding principle that is used to persuade the reader that certain proposed postulates are desirable. From a formal perspective, it can be safely ignored.\nThe AGM revision postulates are reproduced in Table 3. Postulates 1–6 are called the Gärdenfors postulates (or, more elaborately, the “basic Gärdenfors postulates for revision”). Postulates 7–8 are called the supplementary postulates.\nGrove [6] proposed a possible worlds modeling of the AGM postulates. Modulo certain details we gloss over, his proposal essentially amounts to this: represent the agent’s belief set using the minimal worlds of a well-ordered plausibility model and define revision in terms of belief conditionalization.\nTheorem 4.1 (AGM revision and Grove spheres; adapted from [6]). Let Cn(−) be the consequence function CPL(−) of Classical Propositional Logic over the language LCPL. For each well-ordered plausibility model M , each belief set T ⊆ LCPL, and each propositional formula ψ ∈ LCPL, define\nM↓ := {ϕ ∈ LCPL | min(W ) ⊆ JϕKM} , T ∗M ψ := {ϕ ∈ LCPL | minJψKM ⊆ JϕKM} , BCPL := {L ⊆ LCPL | CPL(L) = L} .\nNote that BCPL is the collection of all propositional belief sets. For a propositional formula or set of propositional formulas X ∈ LCPL ∪ ℘(LCPL), to say X is consistent means ⊥ /∈ CPL(X) (or equivalently, that CPL(X) 6= LCPL), and to say X is inconsistent means it is not consistent. To say that a plausibility model M is a system of spheres means that M is well-ordered and the function\nM↓ ∗M (−) : LCPL → BCPL\nmapping propositional formulas ψ ∈ LCPL to belief sets M↓ ∗M ψ ∈ BCPL satisfies the AGM revision postulates. To say that M is a Grove system for a belief set T ∈ BCPL means that M is a system of spheres and M↓ = T .\n(a) Each consistent belief set T ∈ BCPL has a Grove system.\n(b) Suppose for a function ∗ : BCPL ×LCPL → BCPL and each (T, ψ) ∈ BCPL ×LCPL we have:\n(i) if T is inconsistent, then T ∗ ψ = M↓∗ ∗M∗ ψ for some fixed system of spheres M∗; and (ii) if T is consistent, then T ∗ ψ = T ∗MT ψ for some fixed Grove system MT for T .\nIt follows that ∗ is an AGM revision operator.\nProof. See the appendix.\nThis suggests that we may view CDL as a version of AGM belief revision in which the revision process itself can be described in the language [5, 4]. In particular, for propositional formulas ϕ and ψ, the formula Bϕ, which is our abbreviation for B>ϕ, says that the agent believes ϕ before the revision takes place; and the formula Bψϕ says that the agent believes ϕ after revision by ψ. So by restricting to propositional ϕ and ψ, we can use conditional belief formulas Bψϕ to describe a version of the AGM revision process directly in the language of LCDL. This leads us to the following overview of what the axiomatic theory CDL (Table 2) has to say about the CDL-based version of AGM revision.\n• (CL) and (MP) indicate that we use a classical meta-theory.\n• The principles we have grouped together under the name “modal reasoning”—(CL), (MP), (K), and (MN)—together correspond to AGM Closure and AGM Extensionality. In addition, it follows by modal reasoning that our underlying “consequence operator” satisfies Inclusion, Monotony, Iteration, and Supraclassicality.\n• (Succ) corresponds to AGM Success.\n• Under the assumption of (Succ), scheme (KM) corresponds to consequence of AGM Consistency: inconsistency of revision by ψ implies inconsistency of ψ and therefore of ψ ∧ ϕ, and so inconsistency of revision by ψ ∧ ϕ follows via (Succ).\n• Under the assumption of (Succ), scheme (RM) corresponds to AGM Subexpansion. And if ϕ = >, then (Succ) and (RM) together correspond to AGM Vacuity.\n• (Inc) corresponds to AGM Subexpansion. And, if ϕ = >, then (Inc) corresponds to AGM Inclusion.\n• (Comm) corresponds to a special case of AGM Extensionality (i.e., commutativity of conjunction).\n• (PI) and (NI) do not corresponds to principles in the AGM setting (belief sets are subset of LCPL).\n• (WCon) corresponds to AGM Consistency."
    }, {
      "heading" : "5 Justified Conditional Doxastic Logic",
      "text" : "Though CDL may be viewed as a version of AGM revision in which Boolean combinations of revisions are expressible in the language, one key aspect that is missing: the reasons as to why revisions result in a state in which certain formulas are believed. This is a deficit present also in AGM revision: while a revision by ψ may lead to a belief set that includes ϕ, it is not immediately clear why it is that ϕ ought to obtain. What is missing is some language-describable reason that explains how it is ϕ came about as a result of the revision. It shall be our task in this section to study how we might “fill in” these reasons in a theory based on CDL. Our approach follows the general paradigm of Justification Logic [2], where modal operators are replaced by syntactically structured objects called terms. Terms are meant to suggest “reasons” in the sense that the\nsyntactic structure of a term accords with certain derivational principles in the underlying logic. Our goal is to adapt this methodology to CDL. In particular, for a term t, we introduce new formulas\nt :ψϕ\nwith the intended meaning that, whenever the agent revises her belief state by incorporating the formula ψ, then t will be a reason justifying her belief of ϕ in the resulting belief state. Intuitively, the formula t :ψϕ tells us two things. First, it tells us that the agent believes ϕ conditional on ψ, which was the information conveyed in CDL by the formula Bψϕ. Second, something new: the formula t :ψϕ tells us that the reason encoded by t supports ϕ. Taken together, t :ψϕ tells us that the agent has a reason-based belief of ϕ after revising by ψ.\nTerms will be built up using a simple grammar. At the base of this grammar are the “certificates,” which are terms of the form cϕ for some formula ϕ. Intuitively, whenever we have one or more reasons in support of ϕ, the certificate cϕ picks out the “best” one. So whenever ϕ has any support at all, we are always guaranteed that cϕ names a particular reason in support of ϕ. As such, the theory we eventually define will derive the principle\nt :ψϕ→ cϕ :ψϕ ,\nwhich says that the certificate cϕ supports ϕ after a revision by ψ whenever there is some reason t that support ϕ after the same revision. In essence, certificates allow us to “forget” the details of a complex argument in support of some assertion, remembering only that we at some point found such an argument.\nThough a certificate cϕ must support the formula ϕ it certifies, as per the above-mentioned derivable principle, we do not prevent cϕ from supporting other formulas as well. For example, it is consistent with the theory we will develop for us to have cϕ :\nψχ for some χ 6= ϕ. As such, though we require certificates to provide “best evidence” for the formulas they certify, we do not require that this be the only evidence that they provide.\nOther terms are formed from certificates using one of two operators. The first is the Application operator “ · ” from Justification Logic. This operator is used to indicate that terms are to be combined using a single step of the rule of Modus Ponens. In particular, the logic we will develop will derive the following principle:\nt :ψ(ϕ1 → ϕ2)→ (s :ψϕ1 → (t · s) :ψϕ2) .\nThis says that if t supports an implication after the revision by ψ and s supports the antecedent after the same revision, then the combination t · s supports the consequence after that revision. This is the reasonexplicit version of the principle (K) of CDL. The difference is that the present version tells us something about how we obtained the consequent: the form of t · s, with t to the left and s to the right, indicates that t supports an implication and s supports the antecedent, and hence we were able to derive the consequent via one step of Modus Ponens in virtue of the fact that we use a single instance of the Application operator “ · ” to combine t with s to form t · s.\nThe second term-combining operator we introduce is the Sum operator “+” from Justification Logic. This operator allows us to combine to reasons in a way that preserves support. In particular, the logic we develop will derive the following principle:\n(t :ψϕ ∨ s :ψϕ)→ (t+ s) :ψϕ .\nThis says that t+ s supports ϕ whenever at least one of t or s does so. As such, the sum t+ s combines the supported statements of t and of s without performing logical inference.\nFormulas of the language will be built up from the language of Classical Propositional Logic (based on propositional letters, the constant ⊥ for falsehood, and material implication) by adding formulas of the form t :ψϕ, where t is a term and ϕ and ψ are other formulas. Intuitively, t :ψϕ says that t supports the agent’s belief of ϕ after she revises her beliefs by incorporating ψ.\nThe theory we shall define is called Justified Conditional Doxastic Logic or JCDL. In addition to the derivable principles mentioned above, JCDL has a number of additional principles that make explicit the revision-based principles of CDL. In particular, we will see that every CDL-principle gives rise to a corresponding JCDL-principle, and the other way around as well. We explain this in more detail after the main definitions are in place."
    }, {
      "heading" : "5.1 Language and axiomatics",
      "text" : "Definition 5.1 (LJCDL). Let P be a fixed set of propositional letters. The language of Justified Conditional Doxastic Logic consists of the set LJCDL of formulas ϕ and set TJCDL of terms t formed by the following grammar:\nϕ ::= p | ⊥ | (ϕ→ ϕ) | t :ϕϕ p ∈P\nt ::= cϕ | (t · t) | (t+ t)\nStandard abbreviations for Boolean constants and connectives are used, and parentheses are dropped when doing so will cause no confusion. We adopt the following key abbreviation:\nḂψϕ denotes cϕ : ψϕ .\nWe may write c(ϕ) as an abbreviation for cϕ when convenient. Also, we let t :ϕ abbreviate t : ∅ϕ, and we let Ḃϕ abbreviate Ḃ∅ϕ.\nRoughly speaking, it will be useful to think of Ḃψϕ as the JCDL-analog of the CDL-expression Bψϕ. We will see that every CDL-principle gives rise to a JCDL-principle obtained by replacing modal operators “Bψ ” by reason-based operators “ t :ψ ”. Accordingly, if Bψϕ is CDL-derivable, then a corresponding t :ψ ′ ϕ′ will be derivable, where ψ′ corresponds to ψ and ϕ′ corresponds to ϕ). So using the certificate cϕ′ for ϕ ′, it will follow that Ḃψ ′ ϕ′ is derivable as well. It is in this sense that Ḃψ ′ ϕ′ may be thought of as the JCDL-analog of the CDL-principle Bψϕ.\nDefinition 5.2 (JCDL theory). The theory JCDL is defined in Table 4.\n(CL) and (MP) tell us that JCDL is an extension of Classical Propositional Logic. (eK) is our reason-explicit analog of the CDL-scheme (K); it tells us that reason support is closed under the rule of Modus Ponens using the Application operator “ · ”. (eSucc) is our reason-explicit analog of CDL (Succ); it tells us that certificates are used to certify the success of belief revisions. (eKM) is our reasonexplicit version of (KM); it tells us that a reason supporting a contradiction conditional on some ψ continues to do so no matter what additional information we conjunctively add to the conditional.\n(eRM) is our reason-explicit version of (RM). The antecedent ¬Ḃψ¬ϕ is just lnotc¬ϕ :ψ¬ϕ. Since the certificate c¬ϕ will always stand in for some argument relevant to ¬ϕ, the antecedent ¬Ḃψ¬ϕ tells us that ϕ is consistent with the belief state obtained after revision by ψ. And (eRM) tells us that if this is so and t is a reason to believe χ after revision by ψ, then it follows that t is still a reason to believe χ even after we revise by the conjunction ψ ∧ ϕ. Notice that the reason t for χ does not change; it is only the revision formula itself that changes.\n(eInc) is our reason-explicit version of (Inc); it tells us that that a belief of ϕ → ψ is certified after revising by ψ so long as there is a reason t for believing ψ after revising by ψ ∧ ϕ. (eComm) tells us that reasons are invariant to the order of conjuncts in revisions; this is the reason-explicit analog of (Comm). (ePI) and (eNI) are the reason-explicit versions of (PI) and (NI), respectively; these tell us that all support and negated support statements are certified. (eWCon) is the reason-explicit analog of (WCon); it tells us that if t is a reason supporting a belief in ⊥ after revision by ψ, then ¬ψ must have been true.\n(eA) is particular to JCDL. This scheme tells us that if t supports a belief in ϕ conditional on ψ and ϕ is also certified conditional on some other χ, then t must itself support ϕ conditional on χ as well. This\ntells us that if a reason supports a belief of ϕ after some revision, it does so no matter the particulars of the revision. Said another way, reason support depends only on the statement supported (and not on the revision).\n(eMN) says that every derivable formula is “certified” (i.e., supported by its certificate). This corresponds to the CDL-principle (MN). But while all derivable principles are certified, intuitively such certification omits a great deal of information; in particular, it is not clear from which axioms a given principle follows and how it is that it follows by way of the rules of the theory. Toward this end, it will be useful to consider a restriction of (eMN) in which we apply this rule only to axioms, possibly multiple times in a row. An axiom to which we apply (eMN) zero or more times in a row will be called a “possibly necessitated axiom.” We will see that if we remove (eMN) from the theory, then all JCDL-theorems can be derived from the possibly necessitated axioms using (MP) as the only rule. The trick to this will be to eliminate from JCDL-derivations uses of (eMN) that are “troublesome necessitations”: these are the derivable consequences of (eMN) that are not themselves possibly necessitated axioms. If we can show that all such “troublesome necessitations” can be eliminated, then the result follows. This will be our task now.\nThe terms that can be formed from certificates of possibly necessitated axioms using the Application operator “ · ” will be called the “logical terms.” These terms play a special role: every JCDL-theorem ϕ gives rise to a logical term t that supports ϕ (i.e., t :ψϕ is derivable for each ψ).\nDefinition 5.3 (Necessitations, logical terms). A necessitation is a LJCDL-formula of the form\nḂψnḂψn−1Ḃψn−2 · · · Ḃψ1︸ ︷︷ ︸ zero or more of these ϕ (2)\nfor some integer n ≥ 0. A possibly necessitated axiom is a LJCDL-formula of the form (2) for which n ≥ 0 and ϕ is a JCDL-axiom. The set T LJCDL of logical terms is the smallest set that contains certificates cϕ for each possibly necessitated axiom ϕ and is closed under the term-forming operation t, s 7→ t · s.\nDefinition 5.4 (Troublesome necessitations, notation π `nJCDL ϕ). A JCDL-derivation is finite nonempty sequence of LJCDL-formulas, each of which is either a JCDL-axiom or follows by a JCDL-rule from formulas occurring earlier in the sequence. A line of a JCDL-derivation π is an element of the sequence π. A troublesome necessitation is a line ϕ of a JCDL-derivation that neither is a possibly necessitated axiom nor follows from earlier lines by (MP). Clearly, a troublesome necessitation must follow by applying (eMN) to an earlier line that is not itself a possibly necessitated axiom. For n ∈ N, we write π `nJCDL ϕ to mean that π is a JCDL-derivation that contains at most n troublesome necessitations and whose last line is ϕ. For n ∈ N, we write `nJCDL ϕ to mean that there exists a JCDL-derivation π such that π `nJCDL ϕ. Obviously, `JCDL ϕ implies `nJCDL ϕ for some n ∈ N.\nThe following lemma shows that every JCDL-theorem can be derived from the possibly necessitated axioms using (MP) as the only rule of inference.\nLemma 5.5 (Elimination of troublesome necessitations). For each ϕ ∈ LJCDL, we have:\nπ `nJCDL ϕ ⇒ ∃π∗ ⊇ π, π∗ `0JCDL ϕ . (3)\nProof. See the appendix.\n“Theorem Internalization” is a property of Justification Logics whereby every theorem ϕ of the logic is witnessed by supporting term. Since certificates trivially support JCDL-theorems by (eMN), the usual formulation of Theorem Internalization is trivialized in our setting. However, we can prove a stronger variant: every JCDL-theorem ϕ is witnessed by a logical supporting term. This stronger version tells us that all JCDL-theorems are witnessed by terms that refer only to possibly necessitated axioms and combinations of these using rule (MP).\nTheorem 5.6 (JCDL Theorem Internalization). For each ψ ∈ LJCDL, we have:\n`JCDL ϕ ⇒ ∃t ∈ T LJCDL, `JCDL t :ψϕ .\nProof. See the appendix.\n5.2 Relationship to CDL\nIn our motivation of JCDL, we have described the formula t :ψϕ as an analog of a corresponding LCDLformula Bψϕ. Up to this point, the idea was mere intuition. We now make this intuition precise by defining two mappings. The first, called “forgetful projection,” maps LJCDL-formulas to LCDL-formulas by replacing each “ t :ψ ” prefix by the prefix “Bψ ”. The second, called “trivial realization,” maps LCDL-formulas to LJCDL-formulas by replacing each prefix “B\nψ ” by the prefix “ Ḃψ ”. We will see that these operations preserve derivability of schemes.\nDefinition 5.7 (The forgetful projection). The forgetful projection is the function\n(−)◦ : LJCDL → LCDL\ndefined by:\nq◦ := q for q ∈P ∪ {⊥} (ϕ→ ψ)◦ := ϕ◦ → ψ◦\n(t :ψϕ)◦ := Bψ ◦ ϕ◦\nThe forgetful projection of ψ ∈ LJCDL is the ψ◦ ∈ LCDL. Extend the function (−)◦ to sets Γ ⊆ LJCDL by Γ◦ := {ϕ◦ | ϕ ∈ Γ}. We further extend the function (−)◦ to schemes. In particular, let S be a fixed set of schematic variables (i.e., “metavariables” or placeholders for formulas) that includes all schematic variables used in this paper and that has cardinality min{|P|, ω}. For each of our languages L ∈ {LCDL,LJCDL}, let L (S) be the set of formula schemes that can be formed using the formula formation grammar of L but with schematic variables in S used in place of propositional letters in P. Define TJCDL(S) similarly. Using Φ and Ψ as metavariables ranging over members of LJCDL(S) and T as a metavariable ranging over members of TJCDL(S), let"
    }, {
      "heading" : "X◦ := X for X ∈ S ∪ {⊥}",
      "text" : "(Φ→ Ψ)◦ := Φ◦ → Ψ◦\n(T :ΨΦ)◦ := BΨ ◦ Φ◦\nExtend the function (−)◦ to sets Γ ⊆ LJCDL(S) by Γ◦ := {Φ◦ | Φ ∈ Γ}.\nDefinition 5.8 (Realizations and the trivial realization). A realization of a formula ϕ ∈ LCDL is a formula ψ ∈ LJCDL for which ψ◦ = ϕ and `JCDL ψ. The trivial realization is the function (−)t : LCDL → LJCDL defined by:\nqt := q for q ∈P ∪ {⊥} (ϕ→ ψ)t := ϕt → ψt\n(Bψϕ)t := Ḃψ t ϕt\nWe extend the function (−)t to sets Γ ⊆ LCDL by Γt := {ϕt | ϕ ∈ Γ}. As in Definition 5.7 and using the notation from that definition, we extend the function (−)t to schemes:\nXt := X for X ∈ S ∪ {⊥}\n(Φ→ Ψ)t := Φt → Ψt\n(BΨΦ)t := ḂΨ t Φt\nFinally, we apply (−)t to sets Γ ⊆ LCDL(S) by defining Γt := {Φt | Φ ∈ Γ}. For some object Z in the domain of (−)t we say that Zt is the trivial realization of Z.\nThe trivial realization of a formula or scheme of CDL is obtained by replacing each “B ” with “Ḃ ”. Note that while the word “realization” in the phrase “trivial realization” suggests that the trivial realization of a formula or scheme is indeed a realization (i.e., we obtain something derivable in JCDL), this does not come automatically (i.e., by definition) because the trivial realization is a mere syntactic translation and so it must be proved that this translation satisfies the requisite property before the conclusion can be drawn. However, the following theorem guarantees that the trivial realization is indeed a realization. The theorem also tells us that the forgetful projection maps JCDL-theorems to CDL-theorems.\nTheorem 5.9 (Projection and realization for schemes). We use the notation from Definitions 5.7 and 5.8. For each Γ ∪ {ϕ} ⊆ LJCDL(S) and each ∆ ∪ {ψ} ⊆ LCDL(S), we have:\n1. Γ `JCDL ϕ implies Γ◦ `CDL ϕ◦, and\n2. ∆ `CDL ψ implies ∆t `JCDL ψt.\nProof. See the appendix.\nTheorem 5.9 tells us that JCDL really is an explicit analog of CDL: every JCDL-derivable statement gives rise to a CDL-derivable statement (by forgetful projection), and every CDL-derivable statement gives rise to a JCDL-derivable statement (by trivial realization). This link makes precise our intuition that the LCDL-formula B ψϕ should correspond to the LJCDL-formula Ḃ ψϕ.\nThough Theorem 5.9 is stated with respect to schemes, we have the analogous result for formulas as well.\nTheorem 5.10 (Projection and realization for formulas). We use the notation from Definitions 5.7 and 5.8. For each Γ ∪ {ϕ} ⊆ LJCDL and each ∆ ∪ {ψ} ⊆ LCDL, we have:\n1. Γ `JCDL ϕ implies Γ◦ `CDL ϕ◦, and\n2. ∆ `CDL ψ implies ∆t `JCDL ψt.\nProof. Replace each distinct propositional letter with a distinct schematic variable, apply Theorem 5.9, and take the instances of the resulting derivable schemes obtained by substituting the original propositional variables back into their corresponding positions.\nUsing Theorem 5.9, the CDL-principles from Theorem 3.11 translate into JCDL-principles.\nTheorem 5.11 (JCDL-theorems). The following schemes of (eCut), Explicit Cautious Monotonicity (eCM), (eTaut), (eAnd), (eOr), Explicit Positive Reduction (ePR), and Explicit Negative Reduction (eNR) are all derivable in JCDL:\n(eCut) Ḃψϕ→ (Ḃψ∧ϕχ→ Ḃψχ) (eCM) Ḃψϕ→ (Ḃψχ→ Ḃψ∧ϕχ)\n(eTaut) Ḃϕ↔ Ḃ>ϕ (eAnd) Ḃψϕ1 → (Ḃψϕ2 → Ḃψ(ϕ1 ∧ ϕ2))\n(eOr) Ḃψ1ϕ→ (Ḃψ2ϕ→ Ḃψ1∨ψ2ϕ) (ePR) ḂϕḂψχ↔ (Ḃψ⊥ ∨ Ḃψχ)\n(eNR) Ḃϕ¬Ḃψχ↔ (Ḃϕ⊥ ∨ ¬Ḃψχ)\nAlso, the following rules of Explicit (Left) Logical Equivalence (eLE), Explicit Right Weakening (eRW), and Explicit Supraclassicality (eSC) are all derivable in JCDL:\nψ ↔ ψ′ (eLE) Ḃψχ↔ Ḃψ′χ χ→ χ′ (eRW) Ḃψχ→ Ḃψχ′\nψ → χ (eSC)\nḂψχ\nProof. Apply Theorems 3.11 and 5.9(2)."
    }, {
      "heading" : "5.3 Semantics",
      "text" : "One of the main possible worlds semantics for Justification Logic is the semantics due to Fitting (see [2] for details). Here we adapt the traditional Fitting semantics for use in our language LJCDL.\nDefinition 5.12 (Fitting models). A Fitting model is a structure M = (W,≤, V, A) for which (W,≤, V ) is a locally well-ordered plausibility model and A is an admissibility function: a function\nA : (TJCDL ×LJCDL)→ ℘(W )\nthat maps each term-formula pair (t, ϕ) to a set A(t, ϕ) ⊆W of worlds subject to the following restrictions:\n• Certification: A(cϕ, ϕ) = W , which says formulas are certified by their certificates;\n• Application: A(t, ϕ1 → ϕ2) ∩A(s, ϕ1) ⊆ A(t · s, ϕ2), which says the Application operator encodes instances of (MP);\n• Sum: A(t, ϕ) ∪A(s, ϕ) ⊆ A(t+ s, ϕ), which says the Sum operator encodes support aggregation without logical inference; and\n• Admissibility Indefeasibility: if x ∈ A(t, ϕ) and y ∈ cc(x), then y ∈ A(t, ϕ), which says admissibility is constant within each connected component. Using the notion of “knowledge” from Remark 3.3, this tells us that the agent knows her admissibility function.\nThe notion of pointed Fitting model is similar to the corresponding definition found in Definition 2.2; we also apply the terminology from that definition to Fitting models in the obvious way.\nIf A is an admissibility function, then w ∈ A(t, ϕ) says that, from the perspective of world w, term t has the proper “syntactic shape” to be a reason in support of ϕ. This does not, however, guarantee that t does indeed support ϕ. For this we shall require something more.\nDefinition 5.13 (LJCDL-truth). LetM = (W,≤, V, A) be a Fitting model. We extend the binary satisfaction relation |= from Definition 3.2 to one between pointed Fitting models (M,w) (written without surrounding parentheses) and LJCDL-formulas and we extend the function J−K from Definition 3.2 to include a function J−K : LJCDL → ℘(W ) as follows.\n• JϕKM := {v ∈W |M,v |= ϕ}. The subscript M may be suppressed.\n• M,w 6|= ⊥.\n• M,w |= p iff p ∈ V (w) for p ∈P.\n• M,w |= ϕ→ ψ iff M,w 6|= ϕ or M,w |= ψ.\n• M,w |= t :ψϕ iff w ∈ A(t, ϕ) and\n∀x ∈ cc(w) : x↓ ∩ JψK = ∅ or ∃y ∈ x↓ ∩ JψK : y↓ ∩ JψK ⊆ JϕK . (4)\nSo to have t :ψϕ true at a world w, we must have two things. First, from the perspective of w, term t must have the correct “syntactic shape” for an argument in support of ϕ; that is, we must have w ∈ A(t, ϕ). Second, we must satisfy the condition (4), which is the same condition we had for truth of a LCDL-formula Bψϕ. So, taken together, to have t :ψϕ true at world w means that t has the “shape” of an argument for ϕ and the agent believes ϕ after revising her beliefs by ψ. The following theorem states this precisely.\nTheorem 5.14 (JCDL-truth in terms of belief formulas). Let M = (W,≤, V, A) be a Fitting model.\nM,w |= t :ψϕ iff w ∈ A(t, ϕ) and M,w |= Ḃψϕ .\nProof. Left to right (“only if”): assume M,w |= t :ψϕ. By Definition 5.13, we have w ∈ A(t, ϕ) and (4). Since we have w ∈ A(cϕ, ϕ) by the Certification property of admissibility functions and we have Ḃψϕ = cϕ :ψϕ by definition, it follows from by (4) and w ∈ A(cϕ, ϕ) by Definition 5.13 that M,w |= Ḃψϕ.\nRight to left (“if”): assume w ∈ A(t, ϕ) and M,w |= Ḃψϕ. Applying Definition 5.13 and the definition Ḃψϕ = cϕ :\nψϕ, it follows that (4). So since we have w ∈ A(t, ϕ) and (4), it follows by Definition 5.13 that M,w |= t :ψϕ.\nIn well-founded Fitting models, belief in ϕ conditional on ψ is equivalent to having ϕ true at the most plausible ψ-worlds that are within the connected component of the actual world.\nTheorem 5.15 (JCDL-truth in well-founded models). Let M = (W,≤, V, A) be a Fitting model.\n(a) If M is well-founded: M,w |= t :ψϕ ⇔ w ∈ A(t, ϕ) and minJψK ∩ cc(w) ⊆ JϕK.\n(b) If M is well-ordered: M,w |= t :ψϕ ⇔ w ∈ A(t, ϕ) and minJψK ⊆ JϕK.\nProof. (a), left to right (“only if”): assume M,w |= t :ψϕ. By Definition 5.13, we have w ∈ A(t, ϕ) and (4). Use the argument in the proof of Theorem 3.4 to conclude that minJψK ∩ cc(w) ⊆ JϕK. (a), right to left (“if”): assume w ∈ A(t, ϕ) and minJψK ∩ cc(w) ⊆ JϕK. Use the argument in the proof of Theorem 3.4 to conclude that (4). Applying Definition 5.13, it follows that M,w |= t :ψϕ.\n(b): M is well-ordered, then cc(w) = W and M is well-founded. Apply (a).\nAnd so in well-founded Fitting models, we can see that formulas Ḃψϕ really do play the semantic analog of LCDL-belief formulas.\nTheorem 5.16 (JCDL-truth in well-founded models in terms of belief formulas). Let M be a Fitting model.\n(a) If M is well-founded: M,w |= Ḃψϕ ⇔ minJψK ∩ cc(w) ⊆ JϕK.\n(b) If M is well-ordered: M,w |= Ḃψϕ ⇔ minJψK ⊆ JϕK.\nProof. By the Certification (Definition 5.12) and Theorems 5.14 and 5.15.\nSimilar to LCDL, the intended semantic objects for LJCDL are the well-ordered models of the appropriate type (in this case Fitting models, as opposed to simple plausibility models).\nDefinition 5.17 (LJCDL-validity). To say that a LJCDL-formula ϕ is valid, written |= ϕ, means that M |= ϕ for each well-ordered Fitting model M . Though we use the same symbol “|=” for LJCDL-validity as we did for LCDL-validity, it will be clear from context which notion is meant.\nAnd as for CDL, locally well-ordered plausibility models would suffice.\nTheorem 5.18 (LJCDL-validity with respect to local well-orders). Let FL be the class of locally well-ordered Fitting models. For each ϕ ∈ LJCDL, we have:\n|= ϕ iff ∀M ∈ FL, M |= ϕ .\nProof. As in the proof of Theorem 3.6.\nSoundness and completeness of JCDL with respect to its intended semantics (i.e., well-ordered Fitting models) makes use of many components of the proof of Theorem 3.13, itself essentially due to [5].\nTheorem 5.19 (JCDL soundness and completeness). For each ϕ ∈ LJCDL:\n`JCDL ϕ iff |= ϕ .\nProof. See the appendix."
    }, {
      "heading" : "6 Conclusion",
      "text" : "We saw earlier that CDL is a version of AGM revision in which Boolean combinations of revisions are expressible in the language. Since JCDL is a reason-explicit analog of CDL (as per Theorem 5.9), we are led to the following suggestion: JCDL is a version of AGM revision in which Boolean combinations of reasonexplicit revisions are expressible in the language. In essence, a formula ϕ that is part of the belief state after revision by ψ may be witnessed by a specific reason t whose syntactic structure tracks the genesis of ϕ stepwise from basic principles. This suggests we think of JCDL as a theory of revisable justified belief. It would be interesting to see if there is some explicit version of the AGM revision principles that matches up with JCDL in the way that standard AGM matches up with CDL. However, we leave this issue for future work."
    }, {
      "heading" : "A Technical results",
      "text" : "A.1 Results for plausibility models\nProof of Theorem 2.3. Item 1 is obvious. Item 2 is a well-known result from order theory, but we reprove it anyway for completeness purposes. So assume M is locally well-ordered and ∅ 6= S = cc(w) ⊆ W for some w ∈W . Define\nS′ := {x ∈ S | ∀y ∈ S : x ≤ y} .\nWe wish to prove that minS = S′. Proceeding, take x ∈ minS. If y ∈ S as well, then it follows from x ∈ minS by the definition of minS that y 6< x, from which we obtain x ≤ y because S is a connected component and ≤ is total on each connected component. Since y ∈ S was chosen arbitrarily, it follows that x ∈ S′. Hence minS ⊆ S′. To show the inclusion holds in the other direction, take x ∈ S′. If y ∈ S, then it follows from x ∈ S′ by the definition of S′ that x ≤ y, from which we obtain y 6< x by the definition of 6<. Since y ∈ S was chosen arbitrarily, it follows that x ∈ minS. Hence S′ ⊆ minS.\nFor Item 3, it follows from the fact that ≤ is well-ordered that W is a connected component. Further, since ≤ is well-ordered, it is also locally well-ordered. The result therefore follows by Item 2.\nFor Item 4, let us first assume that M is well-founded. We wish to prove that each S ∈ ℘(W ) is smooth in M . So take S ∈ ℘(W ). Since ∅ is smooth in M , let us assume further that S 6= ∅. Now take x ∈ S. Since x ∈ x↓ ∩ S by the reflexivity of ≤, it follows that x↓ ∩ S 6= ∅. Therefore, since M is well-founded, it follows that min(x↓ ∩ S) 6= ∅. That is, there exists y ∈ min(x↓ ∩ S). But then y ≤ x and x 6< y, from which it follows that y ' x or y < x. And if y ' x, then it follows from y ∈ min(x↓ ∩ S) by the transitivity of ≤ that x ∈ min(x↓ ∩ S). So either we have x ∈ min(x↓ ∩ S) or we have y ∈ min(x↓ ∩ S) and y < x. Further,\nfor each m ∈ min(x↓ ∩ S) and z ∈ S − (x↓ ∩ S), we have by the transitivity of ≤ that z 6< m. And for each m ∈ min(x↓ ∩ S) and z ∈ (x↓ ∩ S), we have by the definition of min(x↓ ∩ S) that z 6< m. But then m ∈ min(x↓ ∩ S) implies m ∈ minS. Taken together, we have shown that for each x ∈ S, either x ∈ minS or there exists y ∈ minS such that y < x. It follows that S is smooth in M . Since we have shown that every S ∈ ℘(W ) is smooth in M , it follows that M is smooth.\nFor the converse of Item 4, we assume that M is smooth. We wish to prove that M is well-founded. So take a nonempty S ⊆ W . Since S is nonempty, we have x ∈ S. But M is smooth and so S is smooth in M , and so it follows that x ∈ minS or there exists y ∈ minS such that y < x. In either case, we have minS 6= ∅. So M is well-founded.\nItems 5 and 6 follow from Item 4 by Definition 2.2.\nA.2 Results for CDL\nProof of Theorem 3.4(a). Assume M is well-founded and M,w |= Bψϕ. The latter means\n∀x ∈ cc(w) : x↓ ∩ JψK = ∅ or ∃y ∈ x↓ ∩ JψK : y↓ ∩ JψK ⊆ JϕK . (5)\nIf minJψK ∩ cc(w) = ∅, then minJψK ∩ cc(w) ⊆ JϕK. So let us assume further that minJψK ∩ cc(w) 6= ∅. Take z ∈ minJψK∩ cc(w). Since we then have z ∈ z↓ ∩ JψK by the reflexivity of ≤ and the definition of minJψK, it follows by (5) that ∃y ∈ z↓ ∩ JψK : y↓ ∩ JψK ⊆ JϕK . Now z ∈ cc(w) and y ∈ z↓ ∩ JψK, so it follows that y ∈ cc(w) and therefore that y ∈ JψK ∩ cc(w). From this we obtain by z ∈ minJψK ∩ cc(w) that y 6< z. But y ∈ z↓, and therefore we have y ≤ z and z ≤ y. As a result, z ∈ y↓ ∩ JψK ⊆ JϕK. Since z ∈ minJψK ∩ cc(w) was chosen arbitrarily, we have proved that minJψK ∩ cc(w) ⊆ JϕK.\nConversely, assume M is well-founded and minJψK ∩ cc(w) ⊆ JϕK. To show that we have M,w |= Bψϕ, we must show that (5) obtains. For this it suffices for us to take x ∈ cc(w) satisfying x↓ ∩ JψK 6= ∅ and prove that ∃y ∈ x↓ ∩ JψK : y↓ ∩ JψK ⊆ JϕK . (6) Proceeding, since x↓ ∩ JψK 6= ∅ and M is well-founded, it follows that there exists y ∈ min(x↓ ∩ JψK). Since minJψK∩ cc(w) ⊆ JϕK, if we can show that for every z ∈ y↓ ∩ JψK we have z ∈ minJψK∩ cc(w), then it would follow that y↓ ∩ JψK ⊆ JϕK and therefore that (6), completing the argument. So take z ∈ y↓ ∩ JψK. It follows by z ∈ y↓, y ∈ x↓, and x ∈ cc(w) that z ∈ cc(w). So to show that z ∈ minJψK ∩ cc(w), all that remains is to prove that z ∈ minJψK, and for this it suffices to prove that u ∈ z↓∩ JψK implies u 6< z. So take u ∈ z↓∩ JψK. Since u ∈ z↓, z ∈ y↓, and y ∈ x↓, we have\nu ≤ z ≤ y ≤ x .\nBy the transitivity of ≤, it follows that u ≤ y and u ≤ x. Hence u ∈ x↓ ∩ JψK. Since y ∈ min(x↓ ∩ JψK), it follows that u 6< y. But from u 6< y and u ≤ y, it follows by the definition of 6< that y ≤ u. And from z ≤ y ≤ u, it follows by the transitivity of ≤ that z ≤ u. Applying the definition of 6<, we obtain u 6< z.\nProof of Theorem 3.11. We reason in CDL. For (Cut), assume Bψϕ and Bψ∧ϕχ. It follows from Bψ∧ϕχ by (Inc) that Bψ(ϕ→ χ). But from Bψ(ϕ→ χ) and Bψϕ we obtain by (MR) that Bψχ.\nFor (CM), we reason by cases under the assumption Bψϕ. First: if ¬Bψ¬ϕ, then we obtain Bψχ → Bψ∧ϕχ by (RM) and (CR). Second: if Bψ¬ϕ, then it follows by our assumption Bψϕ and (MR) that Bψ⊥; applying (KM) and (CR) yields Bψ∧ϕ⊥, from which we obtain Bψ∧ϕχ by (MR).\n(Taut) obtains by (CR) since Bϕ = B>ϕ. (And) obtains by (MR). For (Or), we assume Bψ1ϕ and Bψ2ϕ. Take i ∈ {1, 2}. By (Succ) and (MR) we obtain Bψi(ψ1 ∨ ψ2). From Bψi(ψ1 ∨ ψ2) and our assumption Bψiϕ, we obtain by (CM) and (Comm) that B(ψ1∨ψ2)∧ψiϕ. From\nthis it follows by (Inc) that Bψ1∨ψ2(ψi → ϕ). Since we have this for each i ∈ {1, 2}, it follows by (MR) that Bψ1∨ψ2((ψ1 ∨ ψ2)→ ϕ). Since Bψ1∨ψ2(ψ1 ∨ ψ2) by (Succ), we obtain the result Bψ1∨ψ2ϕ by (MR).\nFor (PR), we have the following:\n1. Bϕ¬Bψχ→ (BϕBψχ→ Bϕ⊥) (MR) 2. (BϕBψχ ∧ ¬Bϕ⊥)→ ¬Bϕ¬Bψχ (CR), 1 3. ¬Bψχ→ Bϕ¬Bψχ (NI) 4. ¬Bϕ¬Bψχ→ Bψχ (CR), 3 5. (BϕBψχ ∧ ¬Bϕ⊥)→ Bψχ (CR), 2, 4 6. BϕBψχ→ (Bϕ⊥ ∨Bψχ) (CR), 5 7. Bψχ→ BϕBψχ (PI) 8. Bϕ⊥ → BϕBψχ (MR) 9. (Bϕ⊥ ∨Bψχ)→ BϕBψχ (CR), 7, 8\n10. BϕBψχ↔ (Bϕ⊥ ∨Bψχ) (CR), 6, 9\nTo obtain the proof for (NR), replace each occurrence of Bψχ in the above proof with ¬Bψχ and change the reason for line 7 from (PI) to (NI). It is straightforward to verify that this operation yields a derivation of (NR).\nFor (LE), assume ψ ↔ ψ′. We have Bψψ by (Succ). Applying (MR) to our assumption, we obtain Bψ(ψ → ψ′). Hence Bψψ′ by (MR). By similar reasoning, we obtain Bψ′ψ. Now by (CM), Bψψ′, (Comm), and (CR), we obtain Bψχ→ Bψ′∧ψχ. By Bψ′ψ, (Cut), and (CR), we obtain Bψ′∧ψχ→ Bψ′χ. But then it follows by (CR) that Bψχ → Bψ′χ. A similar argument shows that Bψ′χ → Bψχ. By (CR), we conclude that Bψχ↔ Bψ′χ.\n(RW) follows by (MR). For (SC), from ψ → ϕ we obtain Bψ(ψ → ϕ) by (MN); however, we have Bψψ by (Succ), and so it follows by (MR) that Bψϕ.\nProof of Theorem 3.12. Left to right: it suffices to show that CDL derives (IEa), (IEb), and (LE).\n• (IEa): `CDL Bψϕ→ (Bψ∧ϕχ↔ Bψχ). By (CM), (Cut), and (CR).\n• (IEb): `CDL ¬Bψ¬ϕ→ (Bψ∧ϕχ↔ Bψ(ϕ→ χ)). Reasoning in CDL, by (Inc) and (CR) we have\n¬Bψ¬ϕ→ (Bψ∧ϕχ→ Bψ(ϕ→ χ)) ,\nand so it suffices by (CR) to prove that\n¬Bψ¬ϕ→ (Bψ(ϕ→ χ)→ Bψ∧ϕχ) . (7)\nProceeding, we have ¬Bψ¬ϕ→ (Bψ(ϕ→ χ)→ Bψ∧ϕ(ϕ→ χ)) (8)\nby (RM). We also have Bψ∧ϕ(ψ∧ϕ) by (Succ) and therefore Bψ∧ϕϕ by (MR). But then we obtain (7) from (8) and Bψ∧ϕϕ by (MR). The result follows.\n• (LE): if `CDL ψ ↔ ψ′, then `CDL Bψχ↔ Bψ ′ χ.\nBy Theorem 3.11.\nThis completes the left-to-right direction. Right to left: it suffices to show that CDL0 derives (KM), (RM), (Inc), and (Comm).\n• (KM): `CDL0 Bψ⊥ → Bψ∧ϕ⊥. We reason in CDL0. We have B\nψ⊥ → (Bψϕ ∧ Bψ⊥) by (MR). Applying (IEa) and (CR), we obtain Bϕ⊥ → Bψ∧ϕ⊥.\n• (RM): `CDL0 ¬Bψ¬ϕ→ (Bψχ→ Bψ∧ϕχ). Reasoning in CDL0, we assume ¬Bψ¬ϕ and Bψχ. It follows from Bψχ by (MR) that Bψ(ϕ → χ). From this and our assumption ¬Bψ¬ϕ, we obtain Bψ∧ϕχ by (IEb) and (CR).\n• (Inc): `CDL0 Bψ∧ϕχ→ Bψ(ϕ→ χ). We reason in CDL0 by cases. First: if ¬Bψ¬ϕ, then we obtain Bψ∧ϕχ→ Bψ(ϕ→ χ) by (IEb). Second: if Bψ¬ϕ, then we obtain Bψ(ϕ→ χ) by (MR) and therefore Bψ∧ϕχ→ Bψ(ϕ→ χ) by (CR).\n• (Comm): `CDL0 Bψ∧ϕχ→ Bϕ∧ψχ. By (LE) and (CR).\nProof of Theorem 3.13. We use the notation and concepts from Remark 3.8. Let\nLCDLa := L {a} CDL and CDLa := CDL {a} 0 .\nWe write χa for the LCDLa-formula obtained from the LCDL0-formula χ by recursively replacing each occurrence of a modal operator Bθ in χ by Bθa. Obviously, (χ a)′ = χ and (θ′)a = θ.\nIt was shown by Board [5] that we have `CDLa χ iff |= {a} CDLa\nχ. By Remark 3.8, this is equivalent to the statement that\n∀χ ∈ LCDLa : `CDLa χ iff |= χ′ . (9)\nBy induction on derivation length, it is easy to see that the operation χ 7→ χa maps CDL0-theorems to CDLa-theorems and the operation χ 7→ χ′ maps CDLa-theorems to CDL0-theorems. So `CDL0 ϕ iff `CDL0 ϕa. Applying (9) and the fact that (ϕa)′ = ϕ, we obtain `CDL0 ϕ iff |= ϕ. Applying Theorem 3.12, we obtain `CDL ϕ iff |= ϕ.\nProof of Theorem 3.13. The argument can be obtained by combining the ideas from the various proofs in [5]. However, this requires restricting to the single-agent case and combining multiple arguments, so it is not so transparent how the argument should go. In the interest of making the argument clear and so that we have some constructions available for us later when we turn to the JCDL case, we provide a full proof here. However, the argument is truly due to [5].\nFor soundness, we proceed by induction on the length of derivation. In the induction base, we must show that each axiom scheme is wf-valid. (CL) is straightforward, so we proceed with the remaining schemes. Let M be an arbitrary well-founded plausibility model. We make tacit use of Theorem 3.4.\n• (K) is valid: |= Bψ(ϕ1 → ϕ2)→ (Bψϕ1 → Bψϕ2). Assume (M,w) satisfies Bψ(ϕ1 → ϕ2) and Bψϕ1. Then minJψK ⊆ Jϕ1 → ϕ2K and minJψK ⊆ Jϕ1K. Hence minJψK ⊆ Jϕ2K. So (M,w) satisfies Bψϕ2.\n• (Succ) is valid: |= Bψψ. We have minJψK ⊆ JψK by the definition of minJψK. So (M,w) satisfies Bψψ.\n• (KM) is valid: |= Bψ⊥ → Bψ∧ϕ⊥. Suppose (M,w) satisfies Bψ⊥. Then minJψK ⊆ J⊥K = ∅. Since M is well-founded, it follows that JψK = ∅. But then Jψ ∧ ϕK = ∅, from which it follows that minJψ ∧ ϕK = ∅ ⊆ J⊥K. So (M,w) satisfies Bψ∧ϕ⊥.\n• (RM) is valid: |= ¬Bψ¬ϕ→ (Bψχ→ Bψ∧ϕχ). Suppose (M,w) satisfies ¬Bψ¬ϕ and Bψχ. It follows that minJψK * J¬ϕK and minJψK ⊆ JχK. Hence minJψK ∩ JϕK 6= ∅. We prove that minJψ ∧ ϕK ⊆ minJψK ∩ JϕK. Proceeding, take x ∈ minJψ ∧ ϕK. Since minJψK ∩ JϕK 6= ∅, there exists y ∈ minJψK ∩ JϕK. Hence y ∈ Jψ ∧ ϕK. Since x ∈ minJψ ∧ ϕK and ≤ is total, we have x ≤ y. But x ∈ JψK and y ∈ minJψK, and therefore it follows from x ≤ y that x ∈ minJψK as well. Since x ∈ JϕK, we have x ∈ minJψK∩JϕK. Conclusion: minJψ ∧ ϕK ⊆ minJψK∩JϕK. So since minJψK ⊆ JχK, it follows that\nminJψ ∧ ϕK ⊆ minJψK ∩ JϕK ⊆ JχK ∩ JϕK ⊆ JχK .\nThat is, minJψ ∧ ϕK ⊆ JχK. So (M,w) satisfies Bψ∧ϕχ.\n• (Inc) is valid: |= Bψ∧ϕχ→ Bψ(ϕ→ χ). Suppose (M,w) satisfies Bψ∧ϕχ. Then minJψ ∧ ϕK ⊆ JχK. We prove that minJψK ⊆ Jϕ→ χK. Proceeding, take x ∈ minJψK. If x /∈ JϕK, then x ∈ Jϕ→ χK. So let us assume further that x ∈ JϕK and therefore that x ∈ Jψ ∧ ϕK. Now take any y ∈ Jψ ∧ ϕK. Since y ∈ JψK, if we had y < x, then it would follow that x /∈ minJψK, contradicting our choice of x. Hence y ∈ Jψ ∧ ϕK implies y 6< x, from which it follows by x ∈ Jψ ∧ ϕK that x ∈ minJψ ∧ ϕK. But we have minJψ ∧ ϕK ⊆ JχK and hence x ∈ JχK, from which we obtain x ∈ Jϕ→ χK. Conclusion: (M,w) satisfies Bψ(ϕ→ χ).\n• (Comm) is valid: |= Bψ∧ϕχ→ Bϕ∧ψχ. Suppose (M,w) satisfies Bψ∧ϕχ. Then minJψ ∧ ϕK ⊆ JχK. Since Jψ ∧ ϕK = Jϕ ∧ ψK, it follows that minJϕ ∧ ψK ⊆ JχK. But then (M,w) satisfies Bϕ∧ψχ.\n• (PI) is valid: |= Bψχ→ BϕBψχ. Suppose (M,w) satisfies Bψχ. Hence minJψK ⊆ JχK, which implies that (M,v) satisfies Bψχ for any given v ∈ cc(w) = W . That is, JBψχK = W . Therefore, minJϕK ⊆ JBψχK. Conclusion: (M,w) satisfies BϕBψχ.\n• (NI) is valid: |= ¬Bψχ→ Bϕ¬Bψχ. Suppose (M,w) satisfies ¬Bψχ. Then minJψK * JχK. It follows that M,v |= ¬Bψχ for each v ∈ cc(w) = W . Therefore, J¬BψχK = W , from which it follows that minJϕK ⊆ J¬BψχK. Conclusion: (M,w) satisfies Bϕ¬Bψχ.\n• (WCon) is valid: |= Bψ⊥ → ¬ψ. Suppose (M,w) satisfies Bψ⊥. It follows that minJψK ⊆ J⊥K = ∅. Since ≤ is well-founded, it follows that JψK = ∅. But this implies J¬ψK = W . So (M,w) satisfies ¬ψ.\nThis completes the induction base. For the induction step, we must show that validity is preserved under the rules of (MP) and (MN). The argument for (MP) is standard, so let us focus on (MN). We assume |= ϕ for the CDL-derivable ϕ (this is the “induction hypothesis”), and we prove that |= Bψϕ. Proceeding, since we have |= ϕ by the induction hypothesis, it follows that JϕK = W and hence that minJψK ⊆ JϕK. But then (M,w) satisfies Bψϕ. Soundness has been proved.\nSince CDL is sound with respect to the class of well-ordered plausibility models we note that CDL is consistent (i.e., 0CDL ⊥). In particular, take any pointed plausibility model (M,w) containing only the\nsingle world w. Since there is only one world, M is well-ordered. Further, by soundness, we have that `CDL ϕ to M,w |= ϕ. Therefore, since M,w 6|= ⊥ by Definition 3.2, it follows that 0CDL ⊥. That is, CDL is consistent. We make use of this fact tacitly in what follows.\nFor completeness, we write ` without any subscript in the remainder of this proof as an abbreviation for `CDL. Take θ such that 0 ¬θ. We shall prove that θ is satisfiable at a locally well-ordered pointed plausibility model and then apply Theorem 3.6 to draw the desired conclusion. Our construction is based on the completeness constructions given in [5]. Proceeding, provability will always be taken with respect to CDL, the language is assumed to be LCDL, and we make tacit use of Theorem 3.11. To say that a set of formulas is consistent means that for no finite subset does the conjunction provably imply ⊥. For sets S and S′ of formulas, to say that S is maximal consistent in (or “maxcons in”) S′ means that S ⊆ S′, S is consistent, and extending S by adding any formula in S′ not already present would yield a set that is inconsistent (i.e., not consistent). Given a formula ϕ, we write sub(ϕ) to denote the set of sub-formulas of ϕ, including ϕ itself. We extend this definition to sets of formulas: for a set S of formulas, sub(S) := ⋃ ϕ∈S sub(ϕ). Given a set S of formulas, we write ⊕S to denote the Boolean closure of S (with respect to the language): this is the smallest extension of S that contains all Boolean constants that are primitive to the language (i.e., ⊥) and is closed under all Boolean operations that are primitive to the language (i.e., implication). Since our language is Boolean complete (i.e., every Boolean constant and every Boolean connective is definable in terms of the Boolean constants and Boolean connectives primitive to the language), it follows that the Boolean closure ⊕S of S is the smallest extension of S that contains all definable Boolean constants (i.e., ⊥ and >) and is closed under all definable Boolean connectives (e.g., implication, conjunction, disjunction, and negation). For a set S of formulas, we define:\n±S := S ∪ {¬ϕ | ϕ ∈ S} , B0S := S ,\nBi+1S := ±{Bψϕ | ψ ∈ S and ϕ ∈ BiS} , BωS := ⋃ 0<i<ω BiS ,\nC0 := ± sub({θ,⊥,>}) , C1 := ⊕C0 , B := BωC1 ,\nC := C1 ∪B .\nNotice that 0 is excluded in the definition of BωS. Further, C0 is finite. Since 0 ¬θ, we may extend {¬θ} to a set wθ that is maxcons in C. We then define:\nW := {x ⊆ C | x is maxcons in C} , x̄ := ∧ (x ∩ C0) for x ∈W , xψ := {ϕ | Bψϕ ∈ x} for x ∈W and ψ ∈ C1 , ≤ := {(x, y) ∈W ×W | ∃ψ ∈ (x ∩ y ∩ C1), yψ ⊆ x} ,\nV (x) := P ∩ x for x ∈W , M := (W,≤, V ) .\nNotice that for x ∈W , we have x̄ ∈ C1, from which it follows by the maximal consistency of x in C ⊇ C1 that x̄ ∈ x. Further, it follows by the definition x̄ = ∧ (x ∩C0) and the fact that x is maximal consistent in C = C1 ∪B that for each ψ ∈ C1 = ⊕C0, we have ` x̄→ ψ or ` x̄→ ¬ψ. Finally, if x ≤ y and x 6= y, then it follows by the maximal consistency of x and of y in C that x̄ /∈ y and ȳ /∈ x and therefore that ` x̄→ ¬ȳ and ` ȳ → ¬x̄. We make tacit use of the facts mentioned in this paragraph in what follows.\nWe prove that W is finite. First a definition due to [8]: to say a set S of formulas is logically finite means that S has a finite basis, which is a finite S′ ⊆ S satisfying the property that for every χ ∈ S, there exists\nχ′ ∈ S′ such that ` χ ↔ χ′. It can be shown by a normal form argument that if S is logically finite, then there can be only finitely many sets that are maximal consistent in S. So to prove that W is finite, it suffices to prove that C is logically finite. Proceeding, since C1 was obtained as the Boolean closure of the finite set C0, it follows by a normal form argument that C1 has a finite basis C ′ 1. So for B\nψϕ ∈ B1C1, since we have that ψ ∈ C1 and ϕ ∈ B0C1 = C1, there exists ψ′ ∈ C ′1 and ϕ′ ∈ C ′1 such that\n` ψ ↔ ψ′ and ` ϕ↔ ϕ′ .\nApplying (LE) and modal reasoning, it follows that\n` Bψϕ↔ Bψ′ϕ′ .\nSince Bψ ′ ϕ′ ∈ B1C ′1 and ¬Bψ ′ ϕ′ ∈ B1C ′1, it follows by classical reasoning that B1C ′1 is a finite basis for B1C1. Therefore, there exists a finite basis B ′ 1 for ⊕B1C ′1. We prove by induction on positive i < ω that the set B′1 is also a finite basis for BiC1. The induction base case i = 1 (for B1C1) has already been handled. So let us proceed with the induction step: we assume B′1 is a finite basis for BjC1 for each non-negative integer j that does not exceed some fixed i ≥ 1 (this is the “induction hypothesis”), and we prove that B′1 is a finite basis for Bi+1C1. Proceeding, take χ ∈ Bi+1C1. Since i ≥ 1, we have i+ 1 ≥ 2 and therefore χ has one of the forms BψBδϕ, Bψ¬Bδϕ, ¬BψBδϕ, or Bψ¬Bδϕ for some ϕ ∈ Bi−1C1. We have by (PR), (NR), and classical reasoning that the following “reductive equivalences” obtain:\n` BψBδϕ↔ (Bψ⊥ ∨Bδϕ) , ` ¬BψBδϕ↔ (¬Bψ⊥ ∧ ¬Bδϕ) , ` Bψ¬Bδϕ↔ (Bψ⊥ ∨ ¬Bδϕ) , ` ¬Bψ¬Bδϕ↔ (¬Bψ⊥ ∧Bδϕ) .\nBψ⊥ and ¬Bψ⊥ are members of B1C1, and Bδϕ and ¬Bδϕ are members of BiC1. Since i + 1 > 1 and i + 1 > i, we may apply the induction hypothesis: there exist members (Bψ⊥)′, (¬Bψ⊥)′, (Bδϕ)′, and (¬Bδϕ)′ of B′1 such that the following “inductive equivalences” obtain:\n` Bψ⊥ ↔ (Bψ⊥)′ , ` ¬Bψ⊥ ↔ (¬Bψ⊥)′ , ` Bδϕ↔ (Bδϕ)′ , ` ¬Bδϕ↔ (¬Bδϕ)′ .\nLet us call the four formulas appearing on the right sides of the inductive equivalences the “reduced formulas.” Each reduced formula is a member of the finite basis B′1 for ⊕B1C1, and therefore each reduced formula is also a member of ⊕B1C1. Since ⊕B1C1 is closed under all definable Boolean operations and B′1 is a finite basis for ⊕B1C1, it follows that any Boolean combination of the reduced formulas is also a member of ⊕B1C1 and therefore that any such Boolean combination is provably equivalent to a formula in B′1. But then it follows by the inductive equivalences and classical reasoning that the right side of each reductive equivalence is provably equivalent to a Boolean combination of reduced formulas, and the latter combination is itself provably equivalent to a formula in B′1. It follows that our original formula χ ∈ Bi+1C must be provably equivalent to a formula in B′1 as well. Therefore, B ′ 1 is indeed a finite basis for Bi+1C1. This completes the induction step. We conclude that B′1 is a finite basis for BiC1 for each i ≥ 1. As a result, it follows that B′1 is a finite basis for B = BωC1 = ⋃ 0<i<ω BiC1. But then C ′ 1 ∪ B′1 is a finite basis for C = C1 ∪ B. Conclusion: W is finite. Suppose we are given x ∈ W and ϕ ∈ x. If ` ϕ → ψ and ψ ∈ C, then it follows by the maximal consistency of x in C that ψ ∈ C. It is tedious to repeatedly verify membership assertions in C and state that the reason the result follows is by the fact that x is maximal consistent in C. Therefore, we adopt the convention that we shall generally only write that ` ϕ→ ψ and ϕ ∈ x together imply ψ ∈ x. In so doing, we\ntacitly indicate (and the reader should verify) that ψ ∈ C, x is maximal consistent in C, and so the result follows by the maximal consistency of x in C. The reader will always know when such tacit use takes place (and requires verification), since this use occurs every time it is stated that a membership assertion ψ ∈ x obtains as a logical consequence of some collection of assumptions that does not include the assumption ψ ∈ x itself. Finally, for convenience in the remainder of the proof, we shall say that a set is “maximal consistent” to mean that it is maximal consistent in C.\nAgreement Lemma: for each {x, y} ⊆ W , if ψ ∈ C1 and xψ ⊆ y, then x ∩ B = y ∩ B. We prove this now. Proceeding, assume ψ ∈ C1 and xψ ⊆ y. If Bχϕ ∈ x, then BψBχϕ ∈ x by (PI) and therefore Bχϕ ∈ y by xψ ⊆ y. So Bχϕ ∈ x implies Bχϕ ∈ y. Now suppose Bχϕ ∈ y. If we had Bχϕ /∈ x, it would follow by maximal consistency that ¬Bχϕ ∈ x, hence Bψ¬Bχϕ ∈ x by (NI), and hence ¬Bχϕ ∈ y, contradicting the consistency of y because Bχϕ ∈ y. So Bχϕ ∈ y implies Bχϕ ∈ x. Conclusion: the Agreement Lemma obtains. Note that we obtain from this lemma by the definition of ≤ that that x ≤ y implies x∩B = y ∩B.\nWe prove that ≤ is reflexive. By the definition of ≤, it suffices to prove that xx̄ ⊆ x. Proceeding, since Bx̄ϕ ∈ x implies Bx̄ϕ ∈ B = ⋃ 0<i<ω BiC1, all we need do is prove by induction on i ≥ 1 that Bx̄ϕ ∈ x∩BiC1 implies ϕ ∈ x.\n• Induction base: Bx̄ϕ ∈ x ∩B1C1. We have ϕ ∈ C1 and hence ` x̄ → ϕ or ` x̄ → ¬ϕ. If ` x̄ → ¬ϕ, then it follows by (SC) that Bx̄¬ϕ ∈ x. Since we also have Bx̄ϕ ∈ x, we obtain by modal reasoning that Bx̄⊥ ∈ x, from which it follows by (WCon) that ¬x̄ ∈ x, a contradiction. Therefore it follows that ` x̄→ ϕ and hence ϕ ∈ x.\n• Induction step: we assume the result for i = 1, . . . , k and we prove the result for i = k + 1. Assume Bx̄ϕ ∈ x∩Bk+1C1. Since k ≥ 2, it follows that ϕ = Bψχ or ϕ = ¬Bψχ. Therefore, by (PR) or (NR) we have Bx̄⊥∨ϕ ∈ x. As in the induction base, it follows by (WCon) that Bx̄⊥ /∈ x. Therefore, ϕ ∈ x.\nConclusion: ≤ is reflexive. We prove that ≤ is transitive. Proceeding, assume x ≤ y ≤ z. This means there exists a ∈ (x ∩ y ∩ C1) and b ∈ (y ∩ z ∩ C1) such that ya ⊆ x and zb ⊆ x. It follows that a ∨ b ∈ (x ∩ z ∩ C1), and so to conclude x ≤ z, it suffices for us to prove that za∨b ⊆ x. Proceeding, we take an arbitrary Ba∨bϕ ∈ x and we seek to prove that ϕ ∈ z. We consider two cases.\n• Case: Ba∨b¬a ∈ z. Since Ba∨b(a ∨ b) ∈ z by (Succ), it follows by the assumption of this case and modal reasoning that Ba∨bb ∈ z. Applying the latter and the assumption of the case again, we obtain by (CM) that B(a∨b)∧b¬a ∈ z, from which it follows by (LE) that Bb¬a ∈ z. But zb ⊆ y and therefore ¬a ∈ y. Since a ∈ y, we have reached a contradiction. So this case cannot obtain, and so there is nothing more to prove.\n• Case: ¬Ba∨b¬a ∈ z. From the assumption of this case and Ba∨bϕ ∈ z we obtain by (RM) that B(a∨b)∧aϕ ∈ z. Applying (LE), it follows that Baϕ ∈ z. Hence BbBaϕ ∈ z by (PI). Since zb ⊆ y, it follows that Baϕ ∈ y. Since ya ⊆ x, we obtain ϕ ∈ x.\nConclusion: ≤ is transitive. We prove that ≤ is total on each connected component. Proceeding, suppose we have w ∈ W and (x, y) ∈ cc(w) × cc(w). Since x ∈ cc(w) and y ∈ cc(w), it follows that v ≤ w or w ≤ v for each v ∈ {x, y}. Applying the definition of ≤ and the Agreement Lemma, we obtain x ∩ B = y ∩ B. We wish to prove that x ≤ y or y ≤ x. We consider two cases.\n• Case: Bx̄∨ȳ¬x̄ ∈ x ∩ y. By (Succ), we have Bx̄∨ȳ(x̄ ∨ ȳ) ∈ x ∩ y. Applying the assumption of this case and modal reasoning, we obtain Bx̄∨ȳȳ ∈ x ∩ y. We shall now prove that y ≤ x. Proceeding, take an arbitrary Bx̄∨yϕ ∈ x. It follows from this by Bx̄∨ȳȳ ∈ x and (CM) that B(x̄∨ȳ)∧ȳϕ ∈ x. Applying (LE), we obtain Bȳϕ ∈ x. Since x ∩ B = y ∩ B, we have Bȳϕ ∈ y. But we saw in the argument for reflexivity that yȳ ⊆ y and therefore ϕ ∈ y. So we have proved that for an arbitrary Bȳϕ ∈ y, we obtain ϕ ∈ y. That is, we have shown that xx̄∨ȳ ⊆ y. Since x̄ ∨ ȳ ∈ (x ∩ y ∩ C1), it follows that y ≤ x.\n• Case: ¬Bx̄∨ȳ¬x̄ ∈ x ∩ y. We prove that x ≤ y. Proceeding, take an arbitrary Bx̄∨ȳϕ ∈ y. It follows from this by the assumption of this case and (RM) that B(x̄∨ȳ)∧x̄ϕ ∈ y. Applying (LE), Bx̄ϕ ∈ y. Since y ∩B = x ∩B, we obtain Bx̄ϕ ∈ x. But we saw in the argument for reflexivity that xx̄ ⊆ x and therefore ϕ ∈ x. So we have proved that for an arbitrary Bx̄∨ȳϕ ∈ y, we obtain ϕ ∈ x. That is, yx̄∨ȳ ⊆ x. Since x̄∨ ȳ ∈ (x∩y∩C1), it follows that x ≤ y.\nConclusion: ≤ is total on each connected component. Since wθ ∈ W , it follows that W is nonempty. Therefore, ≤ is a reflexive and transitive binary relation over the nonempty finite set W , and ≤ is total on each connected component. It follows from the finiteness of W that ≤ is well-founded. Therefore, M is a locally well-ordered plausibility model. We now prove a few lemmas that will be of assistance.\nConsistency Lemma: for each x ∈ W , if ψ ∈ x, then xψ is consistent. We prove this now. Proceeding, suppose xψ is not consistent. It follows that there exists a nonempty {χ1, . . . , χn} ⊆ xψ such that ` ( ∧ i≤n χi) → ⊥. By modal reasoning, ` ( ∧ i≤nB\nψχi) → Bψ⊥. Since χi ∈ xψ and hence Bψχi ∈ x for each i ≤ n, it follows that Bψ⊥ ∈ x. Applying (WCon), ¬ψ ∈ x, which contradicts the consistency of x because we assumed ψ ∈ x. Conclusion: xψ is consistent.\nMinimality Lemma: for each ψ ∈ C1 and x ∈ [ψ], where\n[ψ] := {x ∈W | ψ ∈ x} ,\nwe have x ∈ min[ψ] iff ¬Bψ¬x̄ ∈ x.\n• Left to right: for ψ ∈ C1 and x ∈ [ψ], we prove x ∈ min[ψ] implies ¬Bψ¬x̄ ∈ x. Assume ψ ∈ C1 and x ∈ min[ψ]. Toward a contradiction, suppose Bψ¬x̄ ∈ x. Applying the Consistency Lemma, xψ is consistent and so may be extended to a maximal consistent y ∈ W . Since Bψψ ∈ x by (Succ), it follows that ψ ∈ y. And since Bψ¬x̄ ∈ x, it follows that ¬x̄ ∈ y and therefore that y 6= x. But then ψ ∈ (x ∩ y ∩ C1) and yψ ⊆ x, from which it follows that y ≤ x. Since y ∈ [ψ], y ≤ x, and x ∈ min[ψ], it follows that x ≤ y. That is, there exists δ ∈ (x ∩ y ∩ C1) such that yδ ⊆ x. Now if we had Bψ¬δ ∈ x, then it would follow that ¬δ ∈ y, contradicting the fact that δ ∈ y. Hence ¬Bψ¬δ ∈ x. Since Bψ¬x̄ ∈ x as well, it follows by (RM) and (Comm) that Bδ∧ψ¬x̄ ∈ x. Applying (Inc), Bδ(ψ → ¬x̄) ∈ x. Since x ≤ y implies x ∩ B = y ∩ B, it follows that Bδ(ψ → ¬x̄) ∈ y, from which it follows by yδ ⊆ x that ψ → ¬x̄ ∈ x. Since ψ ∈ x, we obtain ¬x̄ ∈ x, a contradiction. Our assumption Bψ¬x̄ ∈ x must have been incorrect, and so we must have ¬Bψ¬x̄ ∈ x after all.\n• Right to left: for ψ ∈ C1 and x ∈ [ψ], we prove ¬Bψ¬x̄ ∈ x implies x ∈ min[ψ]. Assume ψ ∈ C1, x ∈ [ψ] and, ¬Bψ¬x̄ ∈ x. It suffices to show that for each y ∈ [ψ] ∩ cc(x), we have x ≤ y. Proceeding, take an arbitrary y ∈ [ψ] ∩ cc(x). It follows that y ∩ B = x ∩ B and that ψ ∈ (x ∩ y ∩ C1). So from ¬Bψ¬x̄ ∈ x we obtain ¬Bψ¬x̄ ∈ y. Now take an arbitrary Bψϕ ∈ y. It follows from this and ¬Bψ¬x̄ ∈ y by (RM) that Bψ∧x̄ϕ ∈ y. Since ψ ∈ x ∩ C1, we have ` x̄→ ψ and therefore it follows by (LE) that Bx̄ϕ ∈ y. Since x ∩ B = y ∩ B, we obtain Bx̄ϕ ∈ x. However, we\nsaw in the argument for reflexivity that xx̄ ⊆ x, so it follows that ϕ ∈ x. That is, we have shown that ψ ∈ (x∩ y ∩C1) and yψ ⊆ x. Hence x ≤ y. Since y ∈ [ψ]∩ cc(x) was chosen arbitrarily and x ∈ [ψ], it follows that x ∈ min[ψ].\nThis completes the proof of the Minimality Lemma. Truth Lemma: for each ϕ ∈ C1, we have [ϕ] = JϕKM . We prove this now. The proof is by induction on the construction of formulas in C1. The induction base case and Boolean induction step cases are standard, so we only consider the induction step case for formulas Bψϕ ∈ C1. Note: by the definition of C1, we have Bψϕ ∈ C1 iff Bψϕ ∈ C0. Further, from Bψϕ ∈ C0, it follows by the definition of C0 that ψ ∈ C0 and ϕ ∈ C0.\n• Induction step Bψϕ (left to right): if x ∈W and Bψϕ ∈ x ∩ C1, then M,x |= Bψϕ. Assume Bψϕ ∈ x ∩ C1. If minJψK ∩ cc(x) = ∅, then, since M is well-founded, the result follows immediately by Theorem 3.4. So assume minJψK∩ cc(x) 6= ∅ and take an arbitrary y ∈ minJψK∩ cc(x). Applying the induction hypothesis, y ∈ min[ψ], from which it follows by the Minimality Lemma that ¬Bψ¬ȳ ∈ y. Since y ∈ cc(x) implies x ∩ B = y ∩ B, it follows that ¬Bψ¬ȳ ∈ x. It follows from this by the assumption and (RM) that Bψ∧ȳϕ ∈ x. Since ψ ∈ y ∩ C1, we have ` ȳ → ψ and therefore it follows from Bψ∧ȳϕ ∈ x by (LE) that Bȳϕ ∈ x. Since x∩B = y∩B, we have Bȳϕ ∈ y. But as we saw that yȳ ⊆ y in the argument for reflexivity, it follows that ϕ ∈ y and hence that y ∈ [ϕ]. Applying the induction hypothesis, y ∈ JϕK. Since y ∈ minJψK ∩ cc(x) was chosen arbitrarily, we have shown that minJψK ∩ cc(x) ⊆ JϕK. Since M is well-founded, it follows by Theorem 3.4 that M,w |= Bψϕ.\n• Induction step Bψϕ (right to left): if x ∈W , Bψϕ ∈ C1, and M,x |= Bψϕ, then Bψϕ ∈ x. Assume Bψϕ ∈ C1 and M,x |= Bψϕ. Since M is well-founded, it follows by Theorem 3.4 that minJψK ∩ cc(x) ⊆ JϕK. By the induction hypothesis, min[ψ] ∩ cc(x) ⊆ [ϕ]. We wish to prove that Bψϕ ∈ x. We consider two cases. Case: min[ψ] ∩ cc(x) = ∅. Since M is well-founded, it follows that [ψ] ∩ cc(x) = ∅. Toward a contradiction, assume Bψ⊥ /∈ x. Now if xψ were not consistent, then there would exist {χ1, . . . , χn} ⊆ xψ such that ` ( ∧ i≤n χi) → ⊥, from which it would follow by modal reasoning and the fact that\nBψχi ∈ x for each i ≤ n that Bψ⊥ ∈ x, contradicting our assumption that Bψ⊥ /∈ x. So xψ is consistent after all, and we may extend this set to some y ∈ W . Since Bψψ ∈ x by (Succ), it follows that ψ ∈ y and therefore that y ∈ [ψ]. But [ψ] ∩ cc(x) = ∅, and so we must have that y /∈ cc(x). However, xψ ⊆ y, so it follows by the Agreement Lemma that x∩B = y∩B and hence xx̄∨ȳ = yx̄∨ȳ. If xx̄∨ȳ were not consistent, then there would exist {χ1, . . . , χn} ⊆ xx̄∨ȳ such that ` ( ∧ i≤n χi)→ ⊥, from which it would follow by modal reasoning and the fact that Bx̄∨ȳχi ∈ x for each i ≤ n that Bx̄∨ȳ⊥ ∈ x, from which we would obtain by (WCon) that ¬(x̄ ∨ ȳ) ∈ x and hence that ¬x̄ ∈ x, a contradiction. So xx̄∨ȳ = yx̄∨ȳ is consistent and so may be extended to some z ∈W . By (Succ), Bx̄∨ȳ(x̄ ∨ ȳ) ∈ x ∩ y and therefore x̄ ∨ ȳ ∈ z. But then x̄ ∨ ȳ ∈ (x ∩ y ∩ z ∩ C1), xx̄∨ȳ ⊆ z, and yx̄∨ȳ ⊆ z; that is, z ≤ x and z ≤ y, from which it follows that y ∈ cc(x), a contradiction. Therefore our original assumption that Bψ⊥ /∈ x must have been incorrect, and so we must have Bψ⊥ ∈ x after all. Applying modal reasoning, we obtain Bψϕ ∈ x, as desired. Case: min[ψ] ∩ cc(x) 6= ∅. It follows that there exists y ∈ min[ψ] ∩ cc(x). Toward a contradiction, assume Bψϕ /∈ y. If yψ ∪ {¬ϕ} were not consistent, then we would have a finite {χ1, . . . , χn} ⊆ yψ such that ` ( ∧ i≤n χi)→ ϕ, from which it would follow by modal reasoning and the fact that Bψχi ∈ y for each i ≤ n that Bψϕ ∈ y, contradicting the consistency of y by our assumption that Bψϕ /∈ y. So yψ ∪ {¬ϕ} is indeed consistent and may be extended to some z ∈ W . Since we have Bψψ ∈ y by (Succ), it follows that ψ ∈ z ∩ y ∩ C1. So since yψ ⊆ z, it follows that z ≤ y. But then z ≤ y, ψ ∈ z, and y ∈ min[ψ]∩ cc(x), so it follows that z ∈ min[ψ]∩ cc(x). Since min[ψ]∩ cc(x) ⊆ [ϕ], it follows that ϕ ∈ z. However, by the construction of z as a maximal consistent extension of yψ ∪{¬ϕ}, we also have\n¬ϕ ∈ z. So z is inconsistent, a contradiction. It follows that our assumption ¬Bψϕ ∈ y must have been incorrect and therefore we must have Bψϕ ∈ y after all. Since y ∈ cc(x), we have x ∩B = y ∩B and therefore that Bψϕ ∈ x, as desired.\nThis completes the proof of the Truth Lemma. Since ¬θ ∈ wθ ∩ C1, it follows by the Truth Lemma that M,wθ 6|= θ. But then we have shown that 0 θ implies M 6|= θ for our locally well-founded model M ∈ PL. Applying Theorem 3.6, 0 θ implies 6|= ϕ. By contraposition, we have that |= θ implies ` θ. So completeness obtains.\nA.3 Results for AGM revision\nProof of Theorem 4.1. For (a), assume T ∈ BCPL is consistent. To say a S is maximal CPL-consistent means that S ⊆ LCPL, S is consistent, and adding to S any ψ ∈ LCPL not already present would result in a set that is inconsistent. We make tacit use of various well-known facts about maximal consistent sets. Let S be the collection of all maximal CPL-consistent sets. Let {ψi}0<i<ω be an enumeration of LCPL. Define ω+ := ω − {0} and S + ψ := CPL(S ∪ {ψ}). Take\nW := {(S, 0) ∈ S× {0} | T ⊆ S} ∪ {(S, i) ∈ S× ω+ | ¬ψi ∈ T − CPL(∅) and CPL(ψi) ⊆ S} ,\n≤ := {((S, i), (S′, i′)) ∈W ×W | i ≤ i′} , V := {((S, i), P ) ∈W × ℘(P) | P = S ∩P} , M := (W,≤, V ) .\nSince T is consistent, it follows that there exists S ∈ S such that S ⊇ T , which implies (S, 0) ∈W . Therefore W 6= ∅. Similarly, if i ∈ ω+ and ¬ψi ∈ CPL(T )− CPL(∅), then it follows that ψi is consistent and therefore there exists S ∈ S such that S ⊇ CPL(ψi), which implies (S, i) ∈ W . The relation ≤ on W is a well-order because the relation ≤ on ω is a well-order. So M is a well-ordered plausibility model.\nTruth Lemma: for each ϕ ∈ LCPL and (S, i) ∈ W , we have M, (S, i) |= ϕ iff ϕ ∈ S. The proof is by induction on the construction of ϕ ∈ LCPL. Induction base: if ϕ = ⊥, then ⊥ /∈ S since S is consistent and M, (S, i) 6|= ⊥ by Definition 3.2. Induction base: if ϕ = p ∈ P, then the result follows by the definition of V and Definition 3.2. Induction step: if ϕ = ϕ1 → ϕ2, then the result follows by the induction hypothesis and Definition 3.2. The lemma follows.\nTheory Lemma: for each ψ ∈ LCPL, we have\nM↓ ∗M ψ =  T + ψ if ¬ψ /∈ T, CPL(ψ) if ¬ψ ∈ T − CPL(∅), LCPL if ¬ψ ∈ CPL(∅).\nWe prove this now by a case distinction. Proceeding, for each W ′ ⊆W , define\nT (W ′) := {ϕ ∈ LCDL | ∀w ∈W ′ : M,w |= ϕ} .\n• Case: ¬ψ /∈ T . Let Sψ := {S ∈ S | S ⊇ T ∪ {ψ}}. It follows by the assumption of this case that Sψ 6= ∅ and hence Sψ × {0} ⊆ W . By the Truth Lemma and the definition of ≤, it follows that minJψKM = Sψ × {0}. Now notice that since S ∈ Sψ is maximal CPL-consistent, it follows that for each S′ ⊆ S we have CPL(S′) ⊆ S. Therefore, since T ∪ {ψ} ⊆ S for each S ∈ Sψ, it follows that T + ψ ⊆ S for each S ∈ Sψ. So T + ψ ⊆ ⋂ Sψ. Now if we had some ϕ ∈ ⋂ Sψ such that ϕ /∈ T + ψ, then it would\nfollow that ϕ /∈ CPL(T ∪{ψ}) and therefore we could extend T ∪{ψ,¬ϕ} to a maximal CPL-consistent\nS ∈ Sψ having ϕ /∈ S, contradicting the fact that ϕ ∈ ⋂ Sψ. Therefore it must be the case that⋂\nSψ ⊆ T + ψ. Hence T + ψ = ⋂ Sψ. But then we have\nT (Sψ × {0}) = ⋂ Sψ = T + ψ ,\nwhere the leftmost equality follows by the Truth Lemma. Since minJψKM = Sψ × {0}, it follows by the definition of ∗M that M↓ ∗M ψ = T + ψ.\n• Case: ¬ψ ∈ T − CPL(∅). Define Sψ := {S ∈ S | ψ ∈ S}. It follows by the definition of W that there exists j ∈ ω+ and S ∈ Sψ such that ψj = ψ and (S, j) ∈ W . So let i ∈ ω+ be the least positive integer satisfying the property that there exists (S, i) ∈W with ψ ∈ S. By the Truth Lemma, the definition of ≤, and our choice of i, it follows that minJψKM = Sψ ×{i}. Since S ∈ Sψ is maximal CPL-consistent, it follows that for each S′ ⊆ S we have CPL(S′) ⊆ S. Therefore, since ψ ∈ S for each S ∈ Sψ, it follows that CPL(ψ) ⊆ S for each S ∈ Sψ. So CPL(ψ) ⊆ ⋂ Sψ. If we had some ϕ ∈ ⋂ Sψ such that ϕ /∈ CPL(ψ), then we\ncould extend {ψ,¬ϕ} to a maximal CPL-consistent S ∈ Sψ having ϕ /∈ S, contradicting the fact that ϕ ∈ ⋂ Sψ. Therefore it must be the case that ⋂ Sψ ⊆ CPL(ψ). Hence CPL(ψ) = ⋂ Sψ. But then we have T (Sψ × {i}) = ⋂ Sψ = CPL(ψ) ,\nwhere the leftmost equality follows by the Truth Lemma. Since minJψKM = Sψ × {i}, it follows by the definition of ∗M that M↓ ∗M ψ = CPL(ψ).\n• Case: ¬ψ ∈ CPL(∅). It follows from ¬ψ ∈ CPL(∅) by the soundness of Classical Propositional Logic that 6|= ψ and therefore minJψKM = ∅. Hence minJψKM ⊆ JϕKM for each ϕ ∈ LCPL. Applying the definition of ∗M , it follows that M↓ ∗M ψ = LCPL.\nThe lemma follows. We now prove that M is a Grove system for T . First, since M↓ = L0, it follows by the Theory Lemma that M↓ = T . Second, we have already seen that M is a well-ordered plausibility model. So all that remains is to prove that M↓ ∗M (−) satisfies the AGM revision postulates. So given an arbitrary ψ ∈ LCPL, we check each postulate in turn.\n• Closure: M↓ ∗M ψ = CPL(M↓ ∗M ψ). By the Theory Lemma, M↓ ∗M ψ is either T +ψ, CPL(ψ), or LCPL. However, for each of these sets S, we have CPL(S) = S.\n• Success: ψ ∈M↓ ∗M ψ. By the Theory Lemma, M↓ ∗M ψ is either T + ψ, CPL(ψ), or LCPL. However, each of these sets contains ψ.\n• Inclusion: M↓ ∗M ψ ⊆M↓ + ψ. By the Theory Lemma, M↓ ∗M ψ is T + ψ if ¬ψ /∈ T , is CPL(ψ) if ¬ψ ∈ T − CPL(∅), and is LCPL if ¬ψ ∈ CPL(∅). Further M↓ = T . Inclusion obviously follows for the case ¬ψ /∈ T . for the case ¬ψ ∈ T − CPL(∅), Inclusion follows because CPL(ψ) ⊆ T + ψ = CPL(T ∪ {ψ}). For the case ¬ψ ∈ CPL(∅), Inclusion follows because T + ψ = CPL(T ∪ {ψ}) = LCPL.\n• Vacuity: if ¬ψ /∈M↓, then M↓ ∗M ψ = M↓ + ψ. Since M↓ = T , the result follows by the Theory Lemma.\n• Consistency: if ¬ψ /∈ CPL(∅), then ⊥ /∈ CPL(M↓ ∗M ψ). If ¬ψ /∈ CPL(∅), then either ¬ψ /∈ T or ¬ψ ∈ T − CPL(∅). Applying the Theory Lemma, M↓ ∗M ψ is either T + ψ or CPL(ψ). Since T is consistent and we assumed ψ is consistent, each of T + ψ and CPL(ψ) is consistent. Hence ⊥ /∈ CPL(M↓ ∗M ψ).\n• Extensionality: if (ψ ↔ ψ′) ∈ CPL(∅), then M↓ ∗M ψ = M↓ ∗M ψ′. Assume (ψ ↔ ψ′) ∈ CPL(∅). It follows that T + ψ = T + ψ′ and CPL(ψ) = CPL(ψ′). The result therefore follows by the Theory Lemma.\n• Superexpansion: M↓ ∗M (ψ ∧ ϕ) ⊆ (M↓ ∗M ψ) + ϕ. Case: ¬(ψ ∧ ϕ) /∈ T . By the Theory Lemma, M↓ ∗M (ψ ∧ ϕ) = T + (ψ ∧ ϕ). Since T is a theory, it follows from the assumption of this case that ¬ψ /∈ T . Applying the Theory Lemma, M↓∗M ψ = T+ψ. The result follows because\nT + (ψ ∧ ϕ) = CPL(T ∪ {ψ ∧ ϕ}) = CPL(CPL(T ∪ {ψ}) ∪ {ϕ}) = (T + ψ) + ϕ .\nCase: ¬(ψ∧ϕ) ∈ T −CPL(∅). By the Theory Lemma, M↓ ∗M (ψ∧ϕ) = CPL(ψ∧ϕ). If ¬ψ /∈ T , then it follows by the Theory Lemma that M↓ ∗M ψ = T + ψ and hence\nCPL(ψ ∧ ϕ) ⊆ CPL(T ∪ {ψ,ϕ}) = CPL(CPL(T ∪ {ψ}) ∪ {ϕ}) = (T + ψ) + ϕ .\nAnd if ¬ψ ∈ T − CPL(∅), then it follows by the Theory Lemma that M↓ ∗M ψ = CPL(ψ) and hence CPL(ψ ∧ ϕ) = CPL({ψ} ∪ {ϕ}) = CPL(ψ) + ϕ. Finally, if ¬ψ ∈ CPL(∅), then it follows by the Theory Lemma that M↓ ∗M ψ = LCPL, from which we obtain\nCPL(ψ ∧ ϕ) = LCPL = LCPL + ϕ .\nCase: ¬(ψ ∧ϕ) ∈ CPL(∅). By the Theory Lemma, M↓ ∗M (ψ ∧ϕ) = LCPL. If ¬ψ /∈ T , then it follows by the Theory Lemma that M↓ ∗M ψ = T +ψ; however, since ϕ∧ψ ∈ (T +ψ) +ϕ, it follows from the assumption of the case that (T + ψ) + ϕ = LCPL, which implies the result. And if ¬ψ ∈ T − CPL(∅), then it follows by the Theory Lemma that M↓ ∗M ψ = CPL(ψ); however, since ϕ ∧ ψ ∈ CPL(ψ) + ϕ, it follows from the assumption of the case that CPL(ψ) +ϕ = LCPL, which implies the result. Finally, if ¬ψ ∈ CPL(∅), then it follows by the Theory Lemma that M↓ ∗M ψ = LCPL and the result follows because LCPL + ϕ = LCPL.\n• Subexpansion: if ¬ϕ /∈ CPL(M↓ ∗M ψ), then (M↓ ∗M ψ) + ϕ ⊆M↓ ∗M (ψ ∧ ϕ). Suppose ¬ϕ /∈ CPL(M↓ ∗M ψ). We consider a few cases. Case: ¬ψ /∈ T . By the Theory Lemma, CPL(M↓ ∗M ψ) = CPL(T +ψ) = T +ψ. If ¬(ψ∧ϕ) /∈ T , then it follows by the Theory Lemma that M↓ ∗M (ψ ∧ ϕ) = T + (ψ ∧ ϕ), from which we obtain the result because\n(T + ψ) + ϕ = CPL(CPL(T ∪ {ψ})∪ {ϕ}) = CPL(T ∪ {ψ} ∪ {ϕ}) = CPL(T ∪ {ψ ∧ ϕ}) = T + (ψ ∧ ϕ) .\nAnd if ¬(ψ ∧ ϕ) ∈ T − CPL(∅), then we have (T + ψ) + ϕ = LCPL by the definition of +; however, we originally assumed that ¬ϕ /∈ CPL(M↓ ∗M ψ) = T + ψ, which implies (T + ψ) + ϕ 6= LCPL, a contradiction that allows us to conclude that the hypothesis ¬(ψ ∧ ϕ) ∈ T − CPL(∅) cannot obtain under the assumption of this case. Finally, if ¬(ψ∧ϕ) ∈ CPL(∅), then it follows by the Theory Lemma that M↓ ∗M (ψ ∧ ϕ) = LCDL, which trivially implies the result.\nCase: ¬ψ ∈ T − CPL(∅). By the Theory Lemma, CPL(M↓ ∗M ψ) = CPL(CPL(ψ)) = CPL(ψ). Since T is a theory, it follows from the assumption of this case that ¬(ψ ∧ ϕ) ∈ T − CPL(∅). Applying the Theory Lemma, M↓ ∗M (ψ ∧ ϕ) = CPL(ψ ∧ ϕ). But then the result follows because\nCPL(ψ) + ϕ = CPL(CPL(ψ) ∪ {ϕ}) = CPL({ψ} ∪ {ϕ}) = CPL(ψ ∧ ϕ) .\nCase: ¬ψ ∈ CPL(∅). By the Theory Lemma CPL(M↓ ∗M ψ) = CPL(LCPL) = LCPL. It follows from the assumption of this case that ¬(ψ ∧ϕ) ∈ CPL(∅). Applying the Theory Lemma, M↓ ∗M ψ = LCPL. The result follows.\nConclusion: M is a Grove system for T . For (b), if T is inconsistent, then since M∗ is a system of spheres, it follows that T ∗ (−) = M↓∗ ∗M (−) satisfies the AGM revision postulates. And if T is consistent, then since T ∗ψ = T ∗MT ψ and MT is a Grove system for T , we have M↓ = T and that M is a system of spheres; therefore, T ∗MT (−) = T ∗ (−) satisfies the AGM revision postulates. Conclusion: ∗ is an AGM revision operator.\nA.4 Results for JCDL\nProof of Lemma 5.5. For this argument, a derivation is a JCDL-derivation. We wish to establish the following result:\nπ `nJCDL ϕ ⇒ ∃π∗ ⊇ π, π∗ `0JCDL ϕ . (10)\nThe proof of (10), an adaptation of [3, Lemma 4.6] to the present setting, is by induction on n with a sub-induction on the length |π| of π.\n• Induction base: n = 0. Take π∗ = π.\n• Induction step: assume the result holds for all m < n (this is the “induction hypothesis”), and prove it holds for n by a sub-induction on |π|.\nSub-induction base: |π| = 1. Since π contains a single line, ϕ is an axiom and therefore π `0JCDL ϕ. Take π∗ = π.\nSub-induction step: assume the result holds for all derivations π′ having |π′| < |π| (this is the “subinduction hypothesis”), and prove it holds for π. Proceeding, assume π `nJCDL ϕ. If π `0JCDL ϕ, we are done. So let us assume further that π 00JCDL ϕ. Therefore\nπ = θ1, . . . , θ|π|−1, ϕ\ncontains at least one troublesome necessitation. It follows that there exists a shortest prefix π′ of π whose last line is a troublesome necessitation: we have\nπ′ = θ1, . . . , θ|π′|−1, Ḃ δθm\nwith |π′| the minimum value such that Ḃδθm neither is not a possibly necessitated axiom nor follows from a previous line by (MP). We consider two cases.\nCase: |π′| < |π|. By the sub-induction hypothesis, there exists π′∗ ⊇ π′ such that π′∗ `0JCDL Ḃδθm. Let σ be the suffix of π such that π′σ = π, where we have denoted sequence concatenation by juxtaposition. Since π′∗ is a derivation and π ′ ∗ ⊇ π′, it follows that π′∗σ is a derivation and this derivation has the same last line as π. Therefore, since we chose π′ as the shortest prefix π′ of π whose last line is a troublesome necessitation, we have π′∗σ `n−1JCDL ϕ. Applying the induction hypothesis, it follows that there exists a derivation π∗ ⊇ π′∗σ ⊇ π′σ = π such that π∗ `0JCDL ϕ.\nCase: π′ = π. Hence ϕ = Ḃδθm. Since the shortest prefix of π whose last line is a troublesome necessitation is π itself, it follows that π `1JCDL Ḃδθm. But then θm is not a troublesome necessitation. Moreover, θm is not a possibly necessitated axiom (since if it were, Ḃ\nδθm would not be a troublesome necessitation, contrary to our assumption implying that it is). So θm must follow by way of (MN) from lines θn → θm and θn appearing earlier in π than line m. That is,\nπ = σ, θm, τ,Xθm\nwith both θn → θm and θn in σ\nwhere σ and τ denote sequences of formulas (and we note that τ may be empty). By (eMN), we have derivations\nπ1 = σ, Ḃδθn with |π1| ≤ m < |π| π2 = σ, Ḃδ(θn → θm) with |π2| ≤ m < |π|\nsuch that π1 `1JCDL Ḃδθn and π2 `1JCDL Ḃδ(θn → θm). Applying the sub-induction hypothesis to π1 and to π2, there exist π1∗ ⊇ π1 and π2∗ ⊇ π2 such that π1∗ `0JCDL Ḃδθn and π2∗ `0JCDL Ḃδ(θn → θm). Recalling the abbreviation Ḃδχ = cχ : δχ and making use of an instance of (eK), the sequence\nπ∗ = π 1 ∗, π 2 ∗, θm, τ,\nḂδ(θn → θm)→ (Ḃδθn → (cθn→θm · cθn) :δθm), Ḃδθn → (cθn→θm · cθn) :δθm, (cθn→θm · cθn) :δθm\nis a derivation satisfying π∗ ⊇ π and π∗ `0JCDL ϕ.\nThis completes the proof that (10) holds.\nProof of Theorem 5.6. In light of Lemma 5.5, to prove the statement of the present theorem, it suffices to prove the following: if `0JCDL ϕ, then there exists a logical term t such that `0JCDL t :δϕ. This we prove by induction on the length of derivation.\n• Induction base and induction step for (eMN): ϕ is a possibly necessitated axiom. It follows that `0JCDL cϕ :δϕ for the logical term cϕ.\n• Induction step for (MP): we assume `0JCDL ϕ → ψ and `0JCDL ϕ along with the following “induction hypothesis”: there exist logical terms t and s such that `0JCDL t :δ(ϕ → ψ) and `0JCDL s :δϕ. But then it follows by the induction hypothesis, (eK), and two applications of (MP) that `0JCDL (t · s) :δψ for the logical term t · s.\nThe result follows.\nProof of Theorem 5.9. For Item 1, we prove by induction on the length of derivation in JCDL from hypotheses Γ that\nΓ `JCDL ϕ implies Γ◦ `CDL ϕ◦ .\n• Induction base for hypotheses: if ϕ ∈ Γ, then ϕ◦ ∈ Γ◦. So Γ◦ `CDL ϕ◦.\n• Induction base for axioms: ϕ is an axiom. But for each axiom scheme (eX) of JCDL for which there is a “matching” axiom scheme (X) of CDL, the forgetful projection of an instance of the JCDL axiom is an instance of the matching CDL scheme. Regarding the three remaining JCDL schemes (eSum), (eCert), and (eA) that have no matching CDL scheme: each of (eSum) and (eCert) is mapped to an instance of the CDL-theorem p → p, and (eA) is mapped to an instance of the CDL-theorem q → (p → p). Conclusion: Γ◦ `CDL ϕ◦.\n• Induction step for (MP): we assume the result holds for JCDL-theorems ϕ → ψ and ϕ derived from hypotheses Γ, and we prove that Γ◦ `CDL ψ◦. By our assumption, ϕ◦ → ψ◦ and ϕ◦ are CDL-theorems derived from hypotheses Γ◦. Applying (MP), ψ◦ as a CDL-theorem derived from hypotheses Γ◦.\n• Induction step for (eMN): we assume the result holds for the JCDL-theorem ϕ derived from hypotheses Γ, and we prove that the result holds for the JCDL-theorem Ḃψϕ derived from hypotheses Γ; that is, we prove that Γ◦ `CDL (Ḃψϕ)◦. By our assumption, ϕ◦ is a CDL-theorem derived from hypotheses Γ◦. Applying (MN) and the definition of the forgetful projection, Bψ ◦ ϕ◦ = (Ḃψϕ)◦ is a CDL-theorem\nderived from hypotheses in Γ◦.\nThis completes the proof of Item 1. For Item 2, we by induction on the length of derivation in CDL from hypotheses ∆ that\n∆ `CDL ψ implies ∆t `JCDL ψt .\n• Induction base for hypotheses: If ψ ∈ ∆, then ψt ∈ ∆t. So ∆t `CDL ψt.\n• Induction base for axiom scheme: ψ is an axiom scheme of CDL, so we consider each possibility.\n– (CL)t is an instance of (CL) and therefore a JCDL-derivable from hypotheses ∆t. – (K)t is the scheme Ḃγ t (ϕt1 → ϕt2)→ (Ḃγ t ϕt1 → Ḃγ t ϕt2). This has the form\nḂδ(χ1 → χ2)→ (Ḃδχ1 → Ḃδχ2) .\nApplying (eK), we obtain\n∆t `JCDL Ḃδ(χ1 → χ2)→ (Ḃδχ1 → (cχ1→χ2 · cχ1) :δχ2) .\nApplying (eCert) and classical reasoning,\n∆t `JCDL Ḃδ(χ1 → χ2)→ (Ḃδχ1 → Ḃδχ2) .\nThat is, ∆t `JCDL (K)t. – For X ∈ {Succ,RM, Inc,Comm,PI,NI}: (X)t is a schematic instance of (eX). – Similar to the argument for (K)t:\n∗ (KM)t follows by (eKM) and (eCert), and ∗ (WCon)t follows by (eWCon) and (eCert).\n• Induction step for (MP): we assume the result holds for the CDL-theorems ϕ1 → ϕ2 and ϕ1 derived from hypotheses ∆, and we prove the result holds for the CDL-theorem ϕ2 derived from hypothesis ∆. By our assumption,\n(ϕ1 → ϕ2)t = ϕt1 → ϕt2 and ϕt1 is a JCDL-theorem derivable from hypotheses ∆t. So it follows by (MN) that ϕt2 is a JCDL-theorem derivable from hypotheses ∆t as well.\n• Induction step for (MN): we assume the result holds for the CDL-theorem ϕ derived from hypotheses ∆, and we prove the result holds for the CDL-theorem Bγϕ derived from hypotheses ∆; that is, we prove that ∆t `JCDL (Bγϕ)t. By our assumption, the formula ϕt is a JCDL-theorem derived from hypotheses ∆t, but then it follows by (eMN) that Ḃγ t ϕt = (Ḃγϕ)t. is a JCDL-theorem derived from\nhypotheses ∆t.\nThis completes the proof of Item 2.\nProof of Theorem 5.19. This proof uses much of the work from the proof of Theorem 3.13 (the “old proof”). In utilizing portions of the argument from the old proof in the present argument (the “new proof”), we adopt the following conventions (the “JCDL-conventions”):\n• the language (and set of formulas) is assumed to be LJCDL;\n• occurrences of “B ” from the old proof are replaced by occurrences of “Ḃ ”;\n• truth or validity for CDL is replaced by truth or validity for JCDL;\n• use of Theorem 3.4 or 3.4 is replaced by use of Theorem 5.16;\n• use of Theorem 3.6 is replaced by Theorem 5.18;\n• derivability in CDL is replaced by derivability in JCDL\n• use of the non-subscripted turnstile ` denotes `JCDL;\n• use of Theorem 3.11 is replaced by Theorem 5.11; and\n• use of a derivable principle (X) of CDL (perhaps by tacit use of Theorem 3.11) is replaced by use of the corresponding derivable principle (eX) of JCDL (with corresponding tacit use of Theorem 5.11 when appropriate).\nHaving established the above JCDL-conventions and the “old/new proof” terminology, we proceed. For soundness, we proceed by induction on the length of derivation. In the induction base, we must show that each axiom scheme is valid. (CL) is straightforward, so we proceed with the remaining schemes. Let (M,w) be an arbitrary well-ordered pointed Fitting model. We make tacit use of Theorems 2.3(3) and 5.15.\n(eCert) is valid |= t :ψϕ→ Ḃψϕ. Assume (M,w) satisfies t :ψϕ. Then w ∈ A(t, ϕ) and minJψK ⊆ JϕK. Applying Theorem 5.16, (M,w) satisfies Bψϕ.\n(eK) is valid: |= t :ψ(ϕ1 → ϕ2)→ (s :ψϕ1 → (t · s):ψϕ2). Assume (M,w) satisfies t :ψ(ϕ1 → ϕ2) and s :ψϕ1. Then w ∈ A(t, ϕ1 → ϕ2) ∩ A(s, ϕ1), minJψK ⊆ Jϕ1 → ϕ2K, and minJψK ⊆ Jϕ1K. Hence minJψK ⊆ Jϕ2K and, by Application (Definition 5.12), w ∈ A(t · s, ϕ2). Conclusion: (M,w) satisfies (t · s):ψϕ2.\n(eSum) is valid: |= (t :ψϕ ∨ s :ψϕ)→ (t+ s) :ψϕ. Assume (M,w) satisfies t :ψϕ ∨ s :ψϕ. Then w ∈ A(t, ϕ) ∪ A(s, ϕ) and minJψK ⊆ JϕK. By Sum (Definition 5.12), w ∈ A(t+ s, ϕ). Conclusion: (M,w) satisfies (t+ s) :ψϕ.\n(eSucc) is valid: |= Ḃψψ. We have minJψK ⊆ JψK. Applying Theorem 5.16, (M,w) satisfies Ḃψψ.\n(eKM) is valid: |= t :ψ⊥ → t :ψ∧ϕ⊥. Assume (M,w) satisfies t :ψ⊥. Then w ∈ A(t,⊥) and minJψK ⊆ J⊥K. It follows from the latter by the old proof that minJψ ∧ ϕK ⊆ J⊥K. Conclusion: (M,w) satisfies t :ψ∧ϕ⊥.\n(eRM) is valid: |= ¬Ḃψ¬ϕ→ (t :ψχ→ t :ψ∧ϕχ).\nAssume (M,w) satisfies ¬Ḃψ¬ϕ and t :ψχ.\nSince ¬Ḃψ¬ϕ = ¬c¬ϕ :ψ¬ϕ, it follows by Certification (Definition 5.12) that minJψK * JϕK. And it follows from t :ψχ that w ∈ A(t, χ) and minJψK ⊆ JχK. By the old proof, we have by minJψK * JϕK and minJψK ⊆ JχK that minJψ ∧ ϕK ⊆ JχK. Since w ∈ A(t, χ), we conclude that (M,w) satisfies t :ψ∧ϕχ.\n(eInc) is valid: |= t :ψ∧ϕχ→ Ḃψ(ϕ→ χ). Suppose (M,w) satisfies t :ψ∧ϕχ. Then w ∈ A(t, χ) and minJψ ∧ ϕK ⊆ JχK. It follows from the latter by the old proof that minJψK ⊆ Jϕ→ χK. Conclusion: (M,w) satisfies Ḃψ(ϕ→ χ).\n(eComm) is valid: |= t :ψ∧ϕχ→ t :ϕ∧ψχ. Suppose (M,w) satisfies t :ψ∧ϕχ. Then w ∈ A(t, χ) and minJψ ∧ ϕK ⊆ JχK. Hence minJϕ ∧ ψK ⊆ JχK. Conclusion: (M,w) satisfies t :ϕ∧ψχ.\n(ePI) is valid: |= t :ψχ→ Ḃϕ(t :ψχ). Suppose (M,w) satisfies t :ψχ. Then w ∈ A(t, χ) and minJψK ⊆ JχK. The latter implies that (M,v) satisfies Ḃψχ for any given v ∈ W . Since M is well-ordered, we have v ∈ cc(w) for each v ∈ W , and therefore it follows from w ∈ A(t, χ) by Admissibility Indefeasibility (Definition 5.12) that A(t, χ) = W . But then for each v ∈ W , we have v ∈ A(t, χ) and M, v |= Ḃψχ. Applying Theorem 5.14, we have for each v ∈ W that M,v |= t :ψχ. Therefore, Jt :ψχK = W , from which it follows that minJϕK ⊆ Jt :ψχK. Applying Theorem 5.16, we conclude that (M,w) satisfies Ḃϕ(t :ψχ).\n(eNI) is valid: |= ¬t :ψχ→ Ḃϕ(¬t :ψχ). Suppose (M,w) satisfies ¬t :ψχ. Then w /∈ A(t, ϕ) or minJψK * JχK.\nCase: w /∈ A(t, ϕ). Since M is well-ordered, we have v ∈ cc(w) for each v ∈ W , and so it follows from w /∈ A(t, ϕ) by Admissibility Indefeasibility (Definition 5.12) that A(t, ϕ) = ∅. Therefore, J¬t :ψχK = W , from which it follows that minJϕK ⊆ J¬t :ψχK. Applying Theorem 5.16, we conclude that (M,w) satisfies Ḃϕ(¬t :ψχ).\nCase: minJψK * JχK. It follows that M, v |= ¬t :ψχ for each v ∈ cc(w) = W . Therefore, J¬t :ψχK = W , from which it follows that minJϕK ⊆ J¬t :ψχK. Applying Theorem 5.16, we conclude that (M,w) satisfies Ḃϕ(¬t :ψχ).\n(eWCon) is valid: |= t :ψ⊥ → ¬ψ. Suppose (M,w) satisfies t :ψ⊥. By the old proof, J¬ψK = W . So (M,w) satisfies ¬ψ.\n(eA) is valid: |= t :ψϕ→ (Ḃχϕ→ t :χϕ). Suppose (M,w) satisfies t :ψϕ and Ḃχϕ. Then w ∈ A(t, ϕ) and minJχK ⊆ JϕK. Conclusion: (M,w) satisfies t :χϕ.\nThis completes the induction base. For the induction step, we must show that validity is preserved under the rules of (MP) and (eMN). The argument for (MP) is standard, so let us focus on (eMN). We assume |= ϕ for the JCDL-derivable ϕ (this is the “induction hypothesis”), and we prove that |= Ḃψϕ. Proceeding, since |= ϕ, it follows that JϕK = W and hence that minJψK ⊆ JϕK. By Certification (Definition 5.12, A(cϕ, ϕ) = W . But then (M,w) satisfies cϕ :\nψϕ = Ḃψϕ. Soundness has been proved. Since JCDL is sound with respect to the class of well-ordered Fitting models we note that JCDL is consistent (i.e., 0JCDL ⊥). In particular, take any pointed Fitting model (M,w) containing only the single world w. It is simple to construct such a model: take\nM := ({w}, {(w,w)}, {(w, ∅)}, A) ,\nwhere A is the “total” admissibility function defined by setting A(t, ϕ) := W for all (t, ϕ) ∈ TJCDL×LJCDL. It is obvious that the requisite properties from Definition 5.12 obtain. Since there is only one world, M is well-ordered. Further, by soundness, we have that `JCDL ϕ implies M,w |= ϕ. Therefore, since M,w 6|= ⊥ by Definition 5.13, it follows that 0JCDL ⊥. That is, JCDL is consistent. We make use of this fact tacitly in what follows.\nFor completeness, take a formula θ such that 0 ¬θ. Define consistency, inconsistency, maximal consistency in (“maxcons in”) a set of formulas, the set sub(ϕ) of subformulas of ϕ (including ϕ itself), the set sub(S) containing all subformulas of each formula in the set S (including the formulas themselves), and the Boolean closure ⊕S as in the old proof (but of course using the JCDL-conventions). For a set S of formulas, we define:\n~BS := S ∪ {Ḃψϕ | t :ψϕ ∈ S} , ±S := S ∪ {¬ϕ | ϕ ∈ S} , Ḃ0S := S ,\nḂi+1S := ±{Ḃψϕ | ψ ∈ S and ϕ ∈ ḂiS} , ḂωS := ⋃ 0<i<ω ḂiS ,\nC0 := ± ~B sub({θ,⊥,>}) , C1 := ⊕C0 , Ḃ := ḂωC1 ,\nC := C1 ∪ Ḃ , T0 := ±{t :ψϕ ∈ LJCDL | t :ψϕ ∈ C0} .\nKey differences from the old proof:\n• the new operator ~BS adds the “certified version” Ḃψϕ = cϕ :ψϕ of each formula t :ψϕ in S,\n• C0 has been changed by adding the operator ~B,\n• every “B ” in the old proof has been replaced by “Ḃ ”,\n• we use the JCDL-conventions (e.g., we are working in the language of JCDL), and\n• the set T0 (used later) is new.\nWe then define:\nW := {x ⊆ C | x is maxcons in C} , x̄ := ∧ (x ∩ C0) for x ∈W , xψ := {ϕ | Ḃψϕ ∈ x} for x ∈W and ψ ∈ C1 , ≤ := {(x, y) ∈W ×W | ∃ψ ∈ (x ∩ y ∩ C1), yψ ⊆ x} ,\nV (x) := P ∩ x for x ∈W , x̂ := ∧ (x ∩ T0) for x ∈W ,\nA(t, ϕ) := {x ∈W | ∃ψ ∈ LJCDL, ` x̂→ t :ψϕ} , M := (W,≤, V, A) .\nKey differences from the old proof:\n• every “B ” in the old proof has been replaced by “Ḃ ”,\n• the mapping taking a world x ∈W to a formula x̂ is new,\n• the function A of type (TJCDL ×LJCDL)→ ℘(W ) is new, and\n• M has been expanded to contain A.\nThe arguments in the old proof (modulo the JCDL-conventions) are used to prove W is finite and nonempty, ≤ is reflexive and transitive, ≤ is total on each connected component, and ≤ is well-founded. We prove the following result particular to the new proof:\ny ∈ cc(x) ⇒ (∀t :ψϕ ∈ C1, t :ψϕ ∈ x iff t :ψϕ ∈ y) . (11)\nProceeding, suppose y ∈ cc(x). Since ≤ is total on each connected component, we may assume without loss of generality that x ≤ y. (The case where y ≤ x is argued similarly.) Now x ≤ y implies there exists δ ∈ (x ∩ y ∩ C1) such that yδ ⊆ x. For the left-to-right direction: suppose t :ψϕ ∈ x ∩ C1. If we had t :ψϕ /∈ y, then it would follow by maximal consistency that ¬t :ψϕ ∈ y, hence Ḃδ(¬t :ψϕ) ∈ y by (eNI), hence ¬t :ψϕ ∈ x by yδ ⊆ x, thereby contradicting the consistency of x. So it must be the case that t :ψϕ ∈ y after all. Now for the right-to-left direction: suppose t :ψϕ ∈ y ∩ C1. It follows by (ePI) that Ḃδ(t :ψϕ) ∈ y. Since yδ ⊆ x, we obtain t :ψϕ ∈ x. So (11) indeed obtains.\nIn order to conclude that M is a Fitting model, we must prove that A satisfies the properties required of an admissibility function (Definition 5.12). We state and prove these in turn.\n• Certification: A(cϕ, ϕ) = W . Take an arbitrary x ∈ W . We have ` x̂ → Ḃϕϕ by (Succ). Since Ḃϕϕ = cϕ :ϕϕ, it follows that ` x̂ → cϕ :ϕϕ. Applying the definition of A, we obtain x ∈ A(cϕ, ϕ). Since x ∈ W was chosen arbitrarily, we conclude that A(cϕ, ϕ) = W .\n• Application: A(t, ϕ1 → ϕ2) ∩A(s, ϕ1) ⊆ A(t · s, ϕ2). Assume x ∈ A(t, ϕ1 → ϕ2) ∩ A(s, ϕ1). Applying the definition of A, this means there exists ψ1 ∈ LJCDL and ψ2 ∈ LJCDL such that ` x̂ → t :ψ1(ϕ1 → ϕ2) and ` x̂ → s :ψ2ϕ1. Now we have each of ` Bϕ1∧ϕ2(ϕ1 → ϕ2) and ` Bϕ1∧ϕ2ϕ1 by (Succ) and modal reasoning. So it follows that\n` x̂→ t :ψ1(ϕ1 → ϕ2) ∧Bϕ1∧ϕ2(ϕ1 → ϕ2) ∧ s :ψ2ϕ1 ∧Bϕ1∧ϕ2ϕ1 .\nApplying (eA), we obtain ` x̂→ t :ϕ1∧ϕ2(ϕ1 → ϕ2) ∧ s :ϕ1∧ϕ2ϕ1 ,\nfrom which it follows by (eK) that ` x̂→ (t · s) :ϕ1∧ϕ2ϕ2. Applying the definition of A, it follows that x ∈ A(t · s, ϕ2).\n• Sum: A(t, ϕ) ∪A(s, ϕ) ⊆ A(t+ s, ϕ). Suppose x ∈ A(t, ϕ) ∪ A(s, ϕ). Applying the definition of A, this means there exists ψt ∈ LJCDL such that ` x̂→ t :ψtϕ or there exists ψs ∈ LJCDL such that ` x̂→ s :ψsϕ. Applying (eSum), it follows that ` x̂→ (t+s) :ψϕ for some ψ ∈ {ψt, ψs}. But then we obtain by the definition of A that x ∈ A(t+s, ϕ).\n• Admissibility Indefeasibility: if x ∈ A(t, ϕ) and y ∈ cc(x), then y ∈ A(t, ϕ). Suppose x ∈ A(t, ϕ) and y ∈ cc(x). It follows from x ∈ A(t, ϕ) by the definition of A that there exists ψ ∈ LJCDL such that ` x̂ → t :ψϕ. But y ∈ cc(x), and so it follows by (11) that ŷ = x̂. Therefore ` ŷ → t :ψϕ, from which it follows by the definition of A that y ∈ A(t, ϕ).\nSo A satisfies the properties required of an admissibility function. Since W is nonempty, A satisfies the properties of an admissibility function, and ≤ is a locally wellordered, it follows that M is a locally well-ordered Fitting model. The arguments in the old proof (modulo the JCDL-conventions) are then used to prove that the Consistency Lemma holds and that the Minimality Lemma holds.\nBy the old proof (modulo the JCDL-conventions), all of the induction base and step cases of the Truth Lemma hold, except for the induction step case for formulas t :ψϕ. What remains is to check this remaining case. Before we do this, note: by the definition of C1 as the Boolean closure of C0, it follows from t :\nψϕ ∈ C1 that t :ψϕ ∈ C0 and therefore t :ψϕ ∈ T0. We now proceed with the argument.\n• Induction step t :ψϕ (left to right): if x ∈W and t :ψϕ ∈ x ∩ C1, then M,x |= t :ψϕ. Assume t :ψϕ ∈ x ∩ C1. By (eCert) and the definition of C1, it follows that Ḃψϕ ∈ x ∩ C1. Using the old proof (modulo the JCDL-conventions and using Theorem 5.16 in place of Theorem 3.4), we obtain M,x |= Ḃψϕ. Also, since t :ψϕ ∈ x∩C1 implies t :ψϕ ∈ x∩ T0, it follows that ` x̂→ t :ψϕ, from which we obtain x ∈ A(t, ϕ) by the definition of A. So since x ∈ A(t, ϕ) and M,x |= Ḃψϕ, it follows by Theorem 5.14 that M,x |= t :ψϕ.\n• Induction step t :ψϕ (right to left): if x ∈W , t :ψϕ ∈ C1, and M,x |= t :ψϕ, then t :ψϕ ∈ x. Assume t :ψϕ ∈ C1 and M,x |= t :ψϕ. By Theorem 5.14, it follows that M,x |= Ḃψϕ and x ∈ A(t, ϕ). Using the old proof (modulo the JCDL-conventions and using Theorem 5.16 in place of Theorem 3.4), it follows from M,x |= Ḃψϕ that Ḃψϕ ∈ x. Applying the definition of A, it follows from x ∈ A(t, ϕ) that there exists χ ∈ LJCDL such that ` x̂ → t :χϕ. But then we have ` x̂ → t :χϕ ∧ Ḃψϕ. Applying (eA), we obtain ` x̂ → t :ψϕ. Since t :ψϕ ∈ C1 implies t :ψϕ ∈ T0, it follows from ` x̂ → t :ψϕ by the maximal consistency of x in C ⊇ T0 that t :ψϕ ∈ x.\nThis completes the proof of the Truth Lemma. We then apply the argument as in the old proof (modulo the JCDL-conventions and using Theorem 5.18 in place of Theorem 3.6) to conclude that JCDL is complete with respect to the class of well-ordered Fitting models."
    } ],
    "references" : [ {
      "title" : "On the logic of theory change: partial meet contraction and revision functions",
      "author" : [ "C.E. Alchourrón", "P. Gärdenfors", "D. Makinson" ],
      "venue" : "Journal of Symbolic Logic,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 1985
    }, {
      "title" : "The logic of justified belief, explicit knowledge, and conclusive evidence",
      "author" : [ "Alexandru Baltag", "Bryan Renne", "Sonja Smets" ],
      "venue" : "Annals of Pure and Applied Logic,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2014
    }, {
      "title" : "A qualitative theory of dynamic interactive belief revision",
      "author" : [ "Alexandru Baltag", "Sonja Smets" ],
      "venue" : "TLG 3: Logic and the Foundations of Game and Decision Theory (LOFT 7),",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2008
    }, {
      "title" : "Dynamic interactive epistemology",
      "author" : [ "Oliver Board" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2004
    }, {
      "title" : "Two modellings for theory change",
      "author" : [ "Adam Grove" ],
      "venue" : "Journal of Philosophical Logic,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 1988
    }, {
      "title" : "Logic of belief revision",
      "author" : [ "Sven Ove Hansson" ],
      "venue" : "The Stanford Encyclopedia of Philosophy,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2011
    }, {
      "title" : "Qualitative probability in a modal setting",
      "author" : [ "Krister Segerberg" ],
      "venue" : "Proceedings of the Second Scandinavian Logic Symposium,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 1971
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "Conditional Doxastic Logic is Baltag and Smets’ [4] name for a single-agent version of Board’s [5] multi-agent theory of conditional belief BRSIC.",
      "startOffset" : 48,
      "endOffset" : 51
    }, {
      "referenceID" : 3,
      "context" : "Conditional Doxastic Logic is Baltag and Smets’ [4] name for a single-agent version of Board’s [5] multi-agent theory of conditional belief BRSIC.",
      "startOffset" : 95,
      "endOffset" : 98
    }, {
      "referenceID" : 0,
      "context" : "As we will see, CDL has a certain relationship with the “AGM theory” of belief revision due to due to Alchourrón, Gärdenfors, and Makinson [1].",
      "startOffset" : 139,
      "endOffset" : 142
    }, {
      "referenceID" : 4,
      "context" : "” These are very close to Grove’s “system of spheres” for AGM theory [6].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 4,
      "context" : "This convention stems from the notion of “Grove spheres” [6]: given a well-order, worlds are arranged so that they sit on the surface of a number of concentric spheres.",
      "startOffset" : 57,
      "endOffset" : 60
    }, {
      "referenceID" : 2,
      "context" : "Baltag and Smets [4] read the abbreviation",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 3,
      "context" : "The theory CDL0, a single-agent variant of Board’s theory BRSIC [5]",
      "startOffset" : 64,
      "endOffset" : 67
    }, {
      "referenceID" : 3,
      "context" : "The Hilbert theory of Conditional Doxastic Logic was first studied by Board [5] under the name BRSIC.",
      "startOffset" : 76,
      "endOffset" : 79
    }, {
      "referenceID" : 2,
      "context" : "Baltag and Smets [4] subsequently developed various alternative axiomatizations and extensions and introduced the name Conditional Doxastic Logic.",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 3,
      "context" : "Of course, one may consult Board [5] for the fully specified account of the multi-agent theory BRSIC.",
      "startOffset" : 33,
      "endOffset" : 36
    }, {
      "referenceID" : 3,
      "context" : "12 and the results in Board’s work [5].",
      "startOffset" : 35,
      "endOffset" : 38
    }, {
      "referenceID" : 3,
      "context" : "13 (CDL soundness and completeness; [5]).",
      "startOffset" : 36,
      "endOffset" : 39
    }, {
      "referenceID" : 0,
      "context" : "The most influential theory of belief change is due to Alchourrón, Gärdenfors, and Makinson [1].",
      "startOffset" : 92,
      "endOffset" : 95
    }, {
      "referenceID" : 5,
      "context" : "Following the exposition of AGM theory from [7] (but with some minor modifications), we begin with a set P of propositional letters (usually countable).",
      "startOffset" : 44,
      "endOffset" : 47
    }, {
      "referenceID" : 5,
      "context" : "The AGM revision postulates (as presented in [7])",
      "startOffset" : 45,
      "endOffset" : 48
    }, {
      "referenceID" : 4,
      "context" : "Grove [6] proposed a possible worlds modeling of the AGM postulates.",
      "startOffset" : 6,
      "endOffset" : 9
    }, {
      "referenceID" : 4,
      "context" : "1 (AGM revision and Grove spheres; adapted from [6]).",
      "startOffset" : 48,
      "endOffset" : 51
    }, {
      "referenceID" : 3,
      "context" : "This suggests that we may view CDL as a version of AGM belief revision in which the revision process itself can be described in the language [5, 4].",
      "startOffset" : 141,
      "endOffset" : 147
    }, {
      "referenceID" : 2,
      "context" : "This suggests that we may view CDL as a version of AGM belief revision in which the revision process itself can be described in the language [5, 4].",
      "startOffset" : 141,
      "endOffset" : 147
    }, {
      "referenceID" : 3,
      "context" : "13, itself essentially due to [5].",
      "startOffset" : 30,
      "endOffset" : 33
    }, {
      "referenceID" : 3,
      "context" : "It was shown by Board [5] that we have `CDLa χ iff |= {a} CDLa χ.",
      "startOffset" : 22,
      "endOffset" : 25
    }, {
      "referenceID" : 3,
      "context" : "The argument can be obtained by combining the ideas from the various proofs in [5].",
      "startOffset" : 79,
      "endOffset" : 82
    }, {
      "referenceID" : 3,
      "context" : "However, the argument is truly due to [5].",
      "startOffset" : 38,
      "endOffset" : 41
    }, {
      "referenceID" : 3,
      "context" : "Our construction is based on the completeness constructions given in [5].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 6,
      "context" : "First a definition due to [8]: to say a set S of formulas is logically finite means that S has a finite basis, which is a finite S′ ⊆ S satisfying the property that for every χ ∈ S, there exists",
      "startOffset" : 26,
      "endOffset" : 29
    } ],
    "year" : 2015,
    "abstractText" : "The theory CDL of Conditional Doxastic Logic is the single-agent version of Board’s multi-agent theory BRSIC of conditional belief. CDL may be viewed as a version of AGM belief revision theory in which Boolean combinations of revisions are expressible in the language. We introduce a theory JCDL of Justified Conditional Doxastic Logic that replaces conditional belief formulas Bφ by expressions t :φ made up of a term t whose syntactic structure suggests a derivation of the belief φ after revision by ψ. This allows us to think of terms t as reasons justifying a belief in various formulas after a revision takes place. We show that JCDL-theorems are the exact analogs of CDL-theorems, and that this result holds the other way around as well. This allows us to think of JCDL as a theory of revisable justified belief.",
    "creator" : "LaTeX with hyperref package"
  }
}