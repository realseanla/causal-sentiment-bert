{
  "name" : "1704.08464.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Consensus of rankings",
    "authors" : [ "Zhiwei Lin", "Yi Li", "Xiaolian Guo" ],
    "emails" : [ "z.lin@ulster.ac.uk", "yili@ntu.edu.sg", "guo-x3@email.ulster.ac.uk" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n70 4.\n08 46\n4v 1\n[ cs\nRankings are widely used in many information systems. In information retrieval, a ranking is a list of ordered documents, in which a document with lower position has higher ranking score than the documents behind it.\nThis paper studies the consensus measure for a given set of rankings, in order to understand the degree to which the rankings agree and the extent to which the rankings are related. The proposed approach, without the need for pairwise comparison between rankings, allows to measure the consensus in a set of rankings, with respect to the length of common patterns, the number of common patterns for a given length, and the number of all common patterns. The experiments show that the proposed approach can be used to compare the search engines in terms of closeness of the returned results when semantically related key words are sent to them."
    }, {
      "heading" : "1 Introduction",
      "text" : "Rankings are widely used in information retrieval, recommender and decision making systems [1, 4, 5]. A ranking is a list of ordered items, in which an item\n∗z.lin@ulster.ac.uk †yili@ntu.edu.sg ‡guo-x3@email.ulster.ac.uk\nwith higher ranking score is placed ahead of the items with lower ranking scores. Information retrieval is a typical example of using rankings, where a ranking result is returned as a sequence of ordered documents after a query is issued. The auto suggestions, important part of search engines nowadays, produce a ranking list of search terms after one or two keystrokes, in order to provide better search experience.\nThe problem of consensus measure of rankings is the study of quantifying the degree to which the rankings agree according to certain common patterns. Formally, given a set R = {r1, · · · , rN} of N rankings, the consensus measure is to quantify and evaluate the commonality hidden in the rankings. The consensus measure of rankings is very useful and important in many information systems. For example, for human, we know that the terms of “007\", “James Bond\" and many others are conceptually close and related, and they are often used interchangeably. After the queries of those terms are sent to a search engine, we would expect that the search engine return similar results to some extent. Therefore, the degree of “conceptual closeness and relatedness” has to be quantified or measured, in order to compare different search engines, with a given set of related search terms.\nSome pairwise comparison approaches have been used, including the Kendall τ and Spearman ρ [3, 6]. Both evaluate the dissimilarity between two rankings rx and ry, i.e, τ(rx, ry) and ρ(rx, ry). However, it has been proved that both of them are not a valid consensus measure as they violate some of the properties of the consensus measure, as pointed out by Elzinga et al. [2]. This paper investigates the consensus measure of rankings for the degree to which the rankings agree, without the pairwise comparison in Kendall τ or Spearman ρ.\nThe contribution of the paper lies in the algorithms for the consensus measure with (1) κ(R) – the number of common patterns within the rankings of R; (2) κp(R) – the number of common patterns of lengths p in R; (3) ℓ(R) – the length of the longest common patterns in R; and (4) κ̂p(R) and κ̂(R) – an approach to measuring the degree of consensus, based on not only the number of sub-patterns and the lengths of the common patterns, but also the gaps of the items in the original rankings. We did experiments to show how the proposed can be used for comparing different search engines results."
    }, {
      "heading" : "2 Ranking sequences and patterns",
      "text" : "A ranking is often presented as a sequence of ordered items, in which an item with lower position in the sequence is more preferred than the items behind it [2]. Formally, let Σ = {σ1, · · · , σn} be a set of n items, a ranking r is an\nordered sequence r = (σi1 , σi2 , . . . , σim) of m (m ≤ n) distinct items drawn from Σ. The length of r is denoted by |r|. For notational simplicity, we shall simply write a ranking as a sequence of r = σi1σi2 · · ·σim in the rest of the paper.\nFor a ranking r = r1 · · · rk, where rj ∈ Σ for 1 ≤ j ≤ k, we can define the embedded patterns with respect to subsequences. A sequence r′ = r′1 · · · r ′ m is called a subsequence of r, denoted by r′ ⊑ r, if r′ can be obtained by deleting k −m items from r. r′ 6⊑ r is used to denote that r′ is not a subsequence of r. For example, bde ⊑ abcde, and bac 6⊑ abcde.\nA ranking sequence with no items is an empty sequence. We use S(r) to denote the set of all possible non-empty subsequences of r, and use S(r : σ) to denote the set of all subsequences terminating with σ (i.e., the final item of the subsequence is σ). Then, S(r) = ⋃ σ S(r : σ), where the union is taken over the set of the sequence items of r. Alternatively, S(r) can be partitioned into subsets Sp(r), in which Sp(r) consists of all subsequences of length p. For example, if r = abcde, then S(r : d) = {d, ad, bd, cd, abd, acd, bcd, abcd}, where each subsequence terminates with d, and S3(r) = {abc, abd, abe, bcd, bce, bde, cde}, in which each subsequence has length 3.\nThe degree to which rankings agree lies in the common patterns or subsequences which are embedded by the rankings. Given a set of N rankings R = {r1, . . . , rN}, consider S(R) = S(r1) ∩ · · · ∩ S(rN ), each element x ∈ S(R) is a common subsequence of r1, . . . , rm, for which we also use the notation x ⊑ R. Similar to S(r : σ) and Sp(r), we also define S(R : σ) to denote the subsets of all common subsequences terminating with σ, and Sp(R) to denote the subsets of all common subsequences of length p, respectively. Therefore, it holds that S(R) = ⋃ σ∈Σ S(R : σ) and S(R) = ⋃ 1≤p≤l Sp(R), where l = min{|r| : r ∈ R}. It is clear that S(R) accommodates all common patterns (subsequences), which are subsumed by each ranking r ∈ R. Let κ(R) denote the number of all common subsequences of R, i.e, κ(R) = |S(R)|. The more common patterns S(R) has or the bigger κ(R) is, the better consensus R has. We can also define κp(R) = |Sp(R)|, in order to measure the consensus in R, with respect to the number of subsequences of a given length p. The length of the longest common subsequences of rankings in R is denoted by ℓ(R) and ℓ(R) = max{|z| : z ∈ S(R)}."
    }, {
      "heading" : "3 Consensus measure of rankings",
      "text" : "The proposed κ(R), κp(R) and ℓ(R) enable us to examine the extent of consensus within R from three different perspectives. In order to build a\nconsensus measure for a set of rankings R, we start with an example of calculating κp(R) for R = {r1 = bdcea, r2 = abcde, r3 = bdce}. Pick 1 r2 ∈ R and form a lower triangle matrix A of size |r2|×|r2|, where for i ≥ j, Aij = 1 if the ith item and the jth item both occur in the same order in all rankings in R, and Aij = 0 otherwise. The matrix A we obtain is as follows.\nA5×5 =\n \na b c d e\na 0 0 0 0 0 b 0 1 0 0 0 c 0 1 1 0 0 d 0 1 0 1 0 e 0 1 1 1 1\n \n(1)\nIn the matrix, A43 = 0 because cd is not a subsequence of r1 and r3, and all the values in the first column are 0 because a does not occur in r3.\nThe matrix A induces a directed acyclic graph (DAG) G = (V,E) on the diagonal elements of A as follows, where V = {A11, . . . , A55} is the set of vertices and E the set of edges. For 1 ≤ i, j ≤ |r|, we add an edge from Aii to Ajj if the following conditions all hold: (1) i < j; (2) Aii = Ajj = 1; (3) if Aji 6= 0. The induced DAG for our matrix A is shown in Figure 1. There are five directed edges, i.e, E = {(A22, A33), (A22, A44), (A22, A55), (A33, A55), (A44, A55)}, suggesting that the number of common subsequences of length 2 is κ2(R) = 5 and that the common subsequences of length 2 are bc, bd, be, ce, de, all occurring in r1, r2 and r3. Note that A33 and A44 have both incoming and outgoing edges. If we traverse from A22, via either A33 or A44, to node A55, we can obtain 3-long subsequences bce, bde and κ3(R) = 2. Therefore, together with the 4 singletons b, c, d, e (κ1(R) = 4), we have κ(R) = κ1(R) + κ2(R) + κ3(R) = 4 + 5 + 2 = 11.\nThis process of finding patterns with various lengths not only allows us to calculate κp(R), but also makes it easy for us to calculate the number of all common patterns κ(R) and the length of the longest common subsequences ℓ(R). For simpler presentation of our algorithm, we introduce the following indicator function\nδ(x) =\n{ 1 x > 0;\n0 otherwise. (2)\nNow we present the lemma for calculating κp(R).\nLemma 1. Given a set R = {r1, · · · , rN} of N rankings over a set of items Σ, where each ranking rk = rk1 · · · rkm is naturally associated with a mapping\n1The algorithm will work regardless of the choice of ranking.\nfunction ηk : Σ → [0, |Σ|] defined as\nηk(σ) =\n{ 0, σ 6⊑ rk;\nj, σ = rkj . (3)\nLet rx = rx1rx2 · · · rxn be an arbitrary ranking from R, n = |rx|, and A = (Aij)n×n, where\nAij =   \n0, i < j;∏N k=1 δ (ηk(rxi)) , i = j;∏N k=1 δ ( ηk(rxi)− ηk(rxj) ) AiiAjj, i > j.\n(4)\nand let K = (Kpi)n×n, where for p > i, Kpi = 0, and for p ≤ i\nKpi = { Aii, p = 1;∑i−1\nj=1Kp−1jAij , p > 1. (5)\nThen, κp(R) = ∑ 1≤i≤nKpi.\nProof. Recall that Sp(R), by definition, can be decomposed into disjoint union as\nSp(R) = ⋃\nσ∈Σ\nSp(R : σ).\nNote that Sp(R : σ) = ∅ if σ 6⊑ rx, the decomposition above is in fact\nSp(R) = ⋃\n1≤i≤n\nSp(R : rxi).\nRecall that κp(R) = |Sp(R)|, it suffices to show that Kpi = |Sp(R : rxi)|. Let y = rx1rx2 · · · rxi be the possible longest subsequence of rx which terminates with rxi. Since |y| = i, we know that any common subsequences terminating with rxi has length at most i. Therefore for p > i there are no p-long subsequences terminating with rxi, and thus Sp(R : rxi) = ∅, which agrees with our definition that Kpi = 0 for p > i.\nFor p ≤ i we shall prove by induction on p. Consider the base case where p = 1. If Sp(R : rxi) 6= ∅, singleton subsequence rxi is the only subsequence in Sp(R : rxi), that is, |Sp(R : rxi)| = 1. The fact that rxi ∈ Sp(R : rxi) also implies that rxi ⊑ R, which means that rxi ⊑ rk for all k and thus Aii = 1 by definition. If Sp(R : rxi) = ∅, then there exists k such that rxi 6⊑ rk and thus δ(ηk(rxi)) = 0 and Eii = 0. Therefore it indeed holds that K1i = Aii.\nNow consider the indutive step for p > 1. Observe that each y ∈ Sp(R : rxi) has the form y = zrxi for some z ∈ Sp−1(R : rxj), provided that rxjσxi ⊑ R. Clearly if j ≥ i, then σxjσxi 6⊑ rx and hence σxjσxi 6⊑ R. Therefore, we obtain that\nSp(R : σxi) = ⋃\n1≤j<i\n{ zrxi : ( z ∈ Sp−1(R : rxj ) ) ∧ (rxjrxi ⊑ R) } . (6)\nNote that the second constraint rxjrxi ⊑ R is equivalent to ( ηk(σxi)− ηk(σxj ) ) AiiAjj > 0\nfor all rk ∈ R, which agrees with the definition of Aij , that is, rxjrxi ⊑ R if and only if Aij = 1. It is the induction hypothesis thatKp−1,i = |Sp(R : rxi)|. It follows from (6) that\nKpi =\ni−1∑\nj=1\n|Sp−1(R : σxj )|Aij = i−1∑\nj=1\nKp−1,jAij,\nwhich is exactly the recurrence relation of Kpi in our definition\nLemma 1 shows that once we calculate K, we simply sum up each row in order to obtain κp(R). Algorithm 1 shows the pseudocode for computing K, which uses an additional matrix M (on Line 2) to record the position for rxi in rk for 1 ≤ k ≤ N . The calculation of matrix M takes O(Nn) time. The loop starting from Line 4 runs in time O(Nn2) as calculating each individual Aij loops over all N rows ofM. The loop starting from Line 14 to calculateK runs in time O(n3). The overall running time is therefore O(max{Nn2, n3}).\nWe observe that, in matrix K, from its top to the bottom row, if the pth row does not contain non-zero elements, then p − 1 is the length of the longest common subsequences in R. The following corollaries of Lemma 1 provides algorithms for calculating ℓ(R) and κp(R) once K is obtained.\nCorollary 1. Under the assumptions in Lemma 1, the length ℓ(R) of the longest subsequences in S(R) can be obtained by\nmax {p : there exists i ∈ [1, n] s.t. Kpi > 0} .\nCorollary 2. Under the assumptions in Lemma 1, the number of all common subsequences of R is κ(R) = ∑\n1≤p≤ℓ(R) ∑n i=1Kpi.\nProof. Note that S(R) = ⋃ℓ(R) p=1 Sp(R), thus κ(R) = |S(R)| = ∑ℓ(R)\np=1 |Sp(R)| =∑ 1≤p≤ℓ(R) ∑n i=1Kpi by Lemma 1.\nWith κp(R), we are able to give more weight to those longer patterns and penalize the shorter patterns in S(R) by using\nℓ(R)∑\np=1\nαpκp(R) (7)\nAlgorithm 1: Pseudo code for calculating K (Lemma 1)\nData: A set of rankings R = {r1, . . . , rN} Result: K\n1 Pick an arbitrary rx ← rx1 · · · rxn ∈ R; 2 Initialize M = (Mki)N×n, with Mki = ηk(rxi) ; 3 Initialize A = (Aij)n×n to be zero matrix; 4 for i ← 1 to n do 5 Aii ← ∏N\nk=1 δ(Mki); 6 for j ← 1 to i do 7 Aij ← ∏N\nk=1(Mki −Mkj)AiiAjj ; 8 end\n9 end\n10 Initialize K = (Kpi)n×n to be zero matrix; 11 for i ← 1 to n do 12 K1i = Aii; 13 end 14 for p ← 2 to n do 15 for i ← p to n do 16 Kpi ← ∑i−1 j=1Kp−1,jAij ; 17 end\n18 end 19 return K\nwhere 0 ≤ αp ≤ 1, ∑ℓ(R) p=1 αp = 1.\nExample 1. Let R = {r1 = bdcea, r2 = abcde, r3 = bdce}, based on the matrix A in Equation (1), we have\nK5×5 =\n \na b c d e\n1 0 1 1 1 1 2 0 0 1 1 3 3 0 0 0 0 2 4 0 0 0 0 0 5 0 0 0 0 0\n \nand ℓ(R) = 3 as the fourth row is the first zero row."
    }, {
      "heading" : "3.1 Gap-weighted consensus measure κ̂(R)",
      "text" : "If we examine Figure 1, we can find that pattern bc and be are very different in terms of the gaps between them in r2, though both are of length 2. For example, the gap for bc in r1 is 1 as there is only one item d placed between b and c. The following table summarizes the gaps for bc and be in the 3 rankings.\nr1 r2 r3\nbc 1 0 1 be 2 2 2\nThe gaps between two items σi and σj in rankings suggest the strength of preference for one item σi over another item σj . The bigger the gap, the less preference of σj than that of σi. The gap size is an important factor in consensus evaluation, and it makes sense to “penalize” the bigger gaps.\nThe following lemma makes use of the gap information for evaluating consensus in rankings.\nLemma 2. Under the same assumptions in Lemma 1, let 0 < λ ≤ 1, and K̂ = ( K̂pi ) n×n , where\nK̂p,i = { Eii, p = 1;∑i−1\nj=1 K̂p−1jλ gAij , p > 1.\n(8)\nand g = ∑N\nk=1 |ηk(σxi)− ηk(σxj )|. Then the gap weighted consensus measure κ̂p(R) with respect to a given\nlength p is\nκ̂p(R) = ∑\n1≤i≤n\nK̂p,i\nand the gap weighted consensus measure κ̂(R) is\nκ̂(R) = ∑\n1≤p≤ℓ(R)\nκ̂p(R)\nLemma 1 and Corollary 2 are special cases of Lemma 2 when λ = 1. Similar to Equation (7), we can also have ∑ℓ(R) p=1 αpκ̂p(R)."
    }, {
      "heading" : "BF 0,68,9,59,11,5,3,69,79,70,21,4,36,32,76,40,60,51,80,81,42,29,82,83,73",
      "text" : ""
    }, {
      "heading" : "4 Experiments",
      "text" : "This section presents the results of applying the proposed algorithms to compare the search rankings with Google and Bing. The key words used are “Bond films”, “Bond Movies”, “007 films”, “007 movies”, “James Bond films” and “James Bond movies”, as these key words refer to an identical concept. We generate each ranking with the top 25 unique links from the search engines after each key word is sent. Table 1 shows 12 rankings from the two search engines, in which each search engine has 6 rankings corresponding to\nthe 6 key words. In the 12 rankings, we obtain altogether 98 distinct links, from which Bing returns 59 distinct links and Google returns 60 distinct links.\nThe aim of this experiment is to use the proposed measure to evaluate the search results in terms of “relatedness” or “closeness”, with the given conceptually related key words. Table 2 shows the results, from which we can find that the six rankings from Bing search have 8 links in common (κ1(R) = 8) while the Google’s rankings share 7 common links (κ1(R) = 7). The links, which exist in all the six rankings, have been highlighted with boxes in Table 1.\nFrom Table 2, we find that for the given keywords, Google returns more related results than Bing search. For example, ℓ(R) = 4 means that Google’s results have at least a pattern with 4 links, occurring in all its 6 rankings in the same order. When p > 1, both κp(R) and κ̂p(R) consistently suggest that the 6 rankings from Google has higher consensus than Bing’s rankings."
    }, {
      "heading" : "5 Conclusion",
      "text" : "This paper addresses the consensus measure for a given set of rankings, in order to understand the degree to which the rankings agree and the extent to which the rankings are related. We propose an approach to measuring the consensus in a set of rankings, with respect to the length of common patterns, the number of common patterns for a given length, and the number of all common patterns. We use the search results from Google and Bing with the given key words in the experiment, which shows how the proposed approach can be used to evaluate search quality in terms of closeness and relatedness when conceptually related key words are used.\nThe future work includes how to extract the common patterns and how to make use the proposed approach for rank aggregation."
    } ],
    "references" : [ {
      "title" : "Probabilistic ranking of database query results",
      "author" : [ "S. Chaudhuri", "G. Das", "V. Hristidis", "G. Weikum" ],
      "venue" : "In Proceedings of the Thirtieth International Conference on Very Large Data Bases - Volume",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2004
    }, {
      "title" : "Concordance and consensus",
      "author" : [ "C.H. Elzinga", "H. Wang", "Z. Lin", "Y. Kumar" ],
      "venue" : "Information Sciences 181,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2011
    }, {
      "title" : "A new measure of rank correlation",
      "author" : [ "M.G. Kendall" ],
      "venue" : "Biometrika 30,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 1938
    }, {
      "title" : "Introduction to Information Retrieval",
      "author" : [ "C.D. Manning", "P. Raghavan", "H. Schütze" ],
      "venue" : null,
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2008
    }, {
      "title" : "Managing experts behavior in large-scale consensus reaching processes with uninorm aggregation operators",
      "author" : [ "F.J. Quesada", "I. Palomares", "L. Martínez" ],
      "venue" : "Appl. Soft Comput",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2015
    }, {
      "title" : "The proof and measurement of association between two things",
      "author" : [ "C. Spearman" ],
      "venue" : "The American Journal of Psychology 15,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 1904
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Rankings are widely used in information retrieval, recommender and decision making systems [1, 4, 5].",
      "startOffset" : 91,
      "endOffset" : 100
    }, {
      "referenceID" : 3,
      "context" : "Rankings are widely used in information retrieval, recommender and decision making systems [1, 4, 5].",
      "startOffset" : 91,
      "endOffset" : 100
    }, {
      "referenceID" : 4,
      "context" : "Rankings are widely used in information retrieval, recommender and decision making systems [1, 4, 5].",
      "startOffset" : 91,
      "endOffset" : 100
    }, {
      "referenceID" : 2,
      "context" : "Some pairwise comparison approaches have been used, including the Kendall τ and Spearman ρ [3, 6].",
      "startOffset" : 91,
      "endOffset" : 97
    }, {
      "referenceID" : 5,
      "context" : "Some pairwise comparison approaches have been used, including the Kendall τ and Spearman ρ [3, 6].",
      "startOffset" : 91,
      "endOffset" : 97
    }, {
      "referenceID" : 1,
      "context" : "[2].",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 1,
      "context" : "A ranking is often presented as a sequence of ordered items, in which an item with lower position in the sequence is more preferred than the items behind it [2].",
      "startOffset" : 157,
      "endOffset" : 160
    } ],
    "year" : 2017,
    "abstractText" : "Rankings are widely used in many information systems. In information retrieval, a ranking is a list of ordered documents, in which a document with lower position has higher ranking score than the documents behind it. This paper studies the consensus measure for a given set of rankings, in order to understand the degree to which the rankings agree and the extent to which the rankings are related. The proposed approach, without the need for pairwise comparison between rankings, allows to measure the consensus in a set of rankings, with respect to the length of common patterns, the number of common patterns for a given length, and the number of all common patterns. The experiments show that the proposed approach can be used to compare the search engines in terms of closeness of the returned results when semantically related key words are sent to them.",
    "creator" : "LaTeX with hyperref package"
  }
}