{
  "name" : "1302.6214.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "application for numerical data is offered. Keywords: clustering, algorithm Cobweb, numerical data, fuzzy membership function.\nАлгоритм концептуальной кластеризации Cobweb. В задачах кла-\nстеризации одной из проблем является обоснование количества необходимых категорий (кластеров). В алгоритме Cobweb для корректного определения количества кластеров, глубины иерархии и принадлежности категории\nновых экземпляров используются эвристика − глобальная метрика качества. В алгоритме Cobweb реализован инкрементальный алгоритм обучения, не требующий представления всех обучающих примеров до начала обучения.\nАлгоритм осуществляет разделение на кластеры основываясь на по-\nнятии полезности разбиения (category utility) [1]:\n∑∑∑ n =k j i kijjijjkijj )C|v=)P(Av=A|)P(Cv=P(A=CU 1 ; (1)\nгде Ck – k-ый кластер, n – количество кластеров, Aj – j-ый параметр\nобразца, vij – i-ое значение j-го параметра. Значение P(Aj = υij | Ck) называется предсказуемостью (predictability). Это вероятность того, что у образца свойство Ai принимает значение υij, при условии, что он относится к категории Ck. Величина P(Ck | Aj = υij) называется предиктивностью (predictiveness). Это вероятность того, что образец относится к категории Ck, при условии, что свойство Aj принимает значение υij. Значение P(Aj = υij) – это весовой коэффициент, усиливающий влияние наиболее распространенных свойств. Благодаря совместному учету этих значений высокая полезность разбиения на категории (CU) означает высокую вероятность того, что объекты из одной категории обладают одинаковыми свойствами, и низкую вероятность наличия этих свойств у объектов из других категорий.\nКритерий полезности категории был определен при исследовании\nчеловеческой категоризации. Он учитывает влияние категорий базового уровня и другие аспекты структуры человеческих категорий [1].\nПри предъявлении нового образца алгоритм Cobweb оценивает по-\nлезность разбиений при отнесении образца к одной из существующих категории, а также полезность возможных модификаций иерархии категорий.\nВ начале работы алгоритма вводится единственная категория, свой-\nства которой совпадают со свойствами первого образца. Для каждого очередного образца алгоритм начинает свою работу с корневой категории и движется далее по дереву. На каждом уровне выполняется оценка эффективности категоризации на основе полезности разбиения. При этом оцениваются результаты следующих модификаций дерева категорий [1]:\n1) отнесение образца к наилучшей из существующих категорий; 2) добавление новой категории, содержащей единственный образец; 3) слияние двух категорий в одну с добавлением текущего образца; 4) разбиение существующей категории на две и отнесение текущего\nобразца к лучшей из вновь созданных категорий.\nа) В1 б) В2\nРисунок 1. Варианты разбиения образцов с равными параметрами\nТаблица 1\nP(Aj=vij) P(Aj=vij|Ck) P(Ck|Aj=vij) CU k j vij\nВ1 В2 В1 В2 В1 В2 В1 В2\n-2 1/4 1/4 0 1/2 0 1 0 1/8 -1 1/4 1/4 0 0 0 0 0 0\n1 0 0 0 0 0 0 0 0 A1\n2 1/2 1/2 1 1/2 1 1/2 1/2 1/8 -2 1/2 1/2 0 1/2 0 1/2 0 1/8 -1 0 0 0 0 0 0 0 0 1 1/4 1/4 1/2 0 1 0 1/8 0 C1 A2\n2 1/4 1/4 1/2 1/2 1 1 1/8 1/8 -2 1/4 1/4 1/2 0 1 1 1/8 0 -1 1/4 1/4 1/2 1/2 1 0 1/8 0\n1 0 0 0 0 0 0 0 0 A1\n2 1/2 1/2 0 1/2 0 1/2 0 1/8 -2 1/2 1/2 1 1/2 1 1/2 1/2 1/8 -1 0 0 0 0 0 0 0 0 1 1/4 1/4 0 1/2 0 1 0 1/8 C2 A2\n2 1/4 1/4 0 0 0 0 0 0\n1,500 0,875\nАлгоритм эффективен и выполняет кластеризацию на разумное чис-\nло классов. В нем используется вероятностное представление принад-\n-2,5 -2 -1,5 -1 -0,5 0 0,5 1 1,5 2 2,5\n-2,5\n-2\n-1,5\n-1\n-0,5\n0\n0,5\n1\n1,5\n2\n2,5\nA1\nA 2\n-2,5 -2 -1,5 -1 -0,5 0 0,5 1 1,5 2 2,5\n-2,5\n-2\n-1,5\n-1\n-0,5\n0\n0,5\n1\n1,5\n2\n2,5\nA1\nA 2\nлежности, и получаемые категории являются гибкими и робастными [1].\nРассмотрим работу алгоритма на примере. На рис. 1 представлены\nварианты разбиения. Результаты работы алгоритма, приведенные в табл. 1, показывают предпочтительность разбиения В1 перед В2.\nа) прямоугольная\nб) на основе нормального распределения\nРисунок 2. Функции принадлежности отсчетов\nНедостатком данного варианта алгоритма является возможность ра-\nботы только с качественными данными (перечислимыми значениями), например, перечень цветов: желтый, красный, синий. Если нет совпадений значений параметров образцов, то близость или удаленность образцов на координатной плоскости параметров никак не влияет на результат.\nАлгоритм кластеризации Cobweb для количественных данных.\nДля работы с количественными данными (диапазон значений) возможна модификация алгоритма: передискретизация значений на числовых осях параметров (рис. 2а, прямоугольная функция принадлежности), то есть сведение количественных данных к качественным. Однако при таком подходе значения параметров, находящиеся на числовой оси параметров рядом, но на границе функций принадлежности, могут попасть в разные отсчеты (vij).\nВ данной работе для устранения недостатков описанных вариантов\nалгоритма Cobweb предлагается использовать нечеткую функцию принадлежности на основе формулы нормального распределения [2] (рис. 2б):\n( )  \n\n\n  \n − −\n2\nj\n2\n2σ exp),,(\nijmj va =jimf ; (2)\nгде amj – m-ное значение параметра Aj (случайной величины); vij – i-е\nзначение центра отсчета параметра Aj (мат. ожидание); σj 2 – дисперсия Aj.\nДля замены вероятностей предлагается использовать формулы:\n∑ k\nl\n=mk\nkijj jimf l =)C|v=(AP 1\n),,( 1\n(3)\n∑\n∑ l\n=m\nk l\n=m\nijjk\njimf\njimf\n=)v=A|(CP\n1\n1\n),,(\n),,(\n(4)\n∑ l =m ijj jimf l =)v=(AP 1 ),,( 1\n(5)\nгде lk – количество элементов в кластере Ck; l – общее количество\nэлементов. Эвристика полезности разбиения с учетом изменений:\n∑∑∑ n =k q j= d =i kijjijjkijj )C|v=(AP)v=A|(CP)v=(AP=CU 1 1 1\n(6)\nгде n-количество элементов в кластере, q – количество свойств, d –\nколичество отсчетов параметра Aj.\nЗначения vij представляют собой узлы некоторой сетки размером d:\ndi d\nAA i=v jj ij ..1; )min()max( )5.0( = − − (7)\nа) В1 б) В2\nРисунок 3. Варианты разбиения образцов с неравными параметрами\nТаблица 2\n)v=(AP ijj )C|v=(AP kijj )v=A|(CP ijjk CU k j vij\nВ1 В2 В1 В2 В1 В2 В1 В2\n-2 0,006 0,500 0,007 0,618 0,404 0,404 0,000 0,125 -1 0,006 0,500 0,007 0,618 0,404 0,404 0,000 0,125\n1 0,073 0,309 0,084 0,352 0,438 0,438 0,003 0,048 A1\n2 0,073 0,309 0,084 0,352 0,438 0,438 0,003 0,048 -2 0,803 0,309 0,916 0,352 0,438 0,438 0,323 0,048 -1 0,803 0,309 0,916 0,352 0,438 0,438 0,323 0,048 1 0,803 0,500 0,993 0,618 0,404 0,404 0,323 0,125 C1 A2\n2 0,803 0,500 0,993 0,618 0,404 0,404 0,323 0,125 -2 0,803 0,309 0,993 0,382 0,404 0,404 0,323 0,048 -1 0,803 0,309 0,993 0,382 0,404 0,404 0,323 0,048\n1 0,803 0,568 0,916 0,648 0,438 0,438 0,323 0,161 A1\n2 0,803 0,568 0,916 0,648 0,438 0,438 0,323 0,161 -2 0,073 0,568 0,084 0,648 0,438 0,438 0,003 0,161 -1 0,073 0,568 0,084 0,648 0,438 0,438 0,003 0,161 1 0,006 0,309 0,007 0,382 0,404 0,404 0,000 0,048 C2 A2\n2 0,006 0,309 0,007 0,382 0,404 0,404 0,000 0,048\n2,592 1,526\n-2,5 -2 -1,5 -1 -0,5 0 0,5 1 1,5 2 2,5\n-2,5\n-2\n-1,5\n-1\n-0,5\n0\n0,5\n1\n1,5\n2\n2,5\nA1\nA 1\n-2,5 -2 -1,5 -1 -0,5 0 0,5 1 1,5 2 2,5\n-2,5\n-2\n-1,5\n-1\n-0,5\n0\n0,5\n1\n1,5\n2\n2,5\nA1\nA 2\nРассмотрим пример работы модифицированного алгоритма (на рис. 3).\nРезультаты работы алгоритма, при размере сетки (количестве отсчетов) d = 4\nи σj = 1 для данного примера приведены в табл. 2.\nНа рис. 4 представлена экранная форма программного обеспечения,\nкоторое было разработано для проверки предложенного метода.\nРисунок 4. Экранная форма программы\nСписок литературы\n1. Д. Ф. Люгер. Искусственный интеллект: стратегии и методы решения слож-\nных проблем. – М. Издательский дом «Вильямс», 2003.\n2. Гурман В.Е. Теория вероятностей и математическая статистика: Учебное по-\nсобие для вузов. – 9-е изд. – М.: Высш. шк., 2003. – 479с."
    } ],
    "references" : [ {
      "title" : "Люгер. Искусственный интеллект: стратегии и методы решения сложных проблем",
      "author" : [ "Ф. Д" ],
      "venue" : "М. Издательский дом «Вильямс»,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2003
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Алгоритм осуществляет разделение на кластеры основываясь на понятии полезности разбиения (category utility) [1]:",
      "startOffset" : 108,
      "endOffset" : 111
    }, {
      "referenceID" : 0,
      "context" : "Он учитывает влияние категорий базового уровня и другие аспекты структуры человеческих категорий [1].",
      "startOffset" : 97,
      "endOffset" : 100
    }, {
      "referenceID" : 0,
      "context" : "При этом оцениваются результаты следующих модификаций дерева категорий [1]: 1) отнесение образца к наилучшей из существующих категорий; 2) добавление новой категории, содержащей единственный образец; 3) слияние двух категорий в одну с добавлением текущего образца; 4) разбиение существующей категории на две и отнесение текущего образца к лучшей из вновь созданных категорий.",
      "startOffset" : 71,
      "endOffset" : 74
    }, {
      "referenceID" : 0,
      "context" : "4 лежности, и получаемые категории являются гибкими и робастными [1].",
      "startOffset" : 65,
      "endOffset" : 68
    } ],
    "year" : 2013,
    "abstractText" : "Аннотация. Предлагается модификация алгоритма концептуальной кластеризации Cobweb с целью применения его для количественных данных. Ключевые слова: кластеризация, алгоритм Cobweb, количественные данные, нечеткая функция принадлежности. Korobeynikov A.V., cand.tech.sci., director, Ltd «IzhTeleMed»; Islamgaliev I.I., software engineer, JSC «Sarapul Electric Generators» MODIFICATION OF CONCEPTUAL CLUSTERING ALGORITHM COBWEB FOR NUMERICAL DATA USING FUZZY MEMBERSHIP FUNCTION Abstract. Modification of a conceptual clustering algorithm Cobweb for the purpose of its application for numerical data is offered.",
    "creator" : "PScript5.dll Version 5.2.2"
  }
}