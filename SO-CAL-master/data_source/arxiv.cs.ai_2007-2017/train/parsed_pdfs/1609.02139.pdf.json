{
  "name" : "1609.02139.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "SER4",
    "authors" : [ "Robin Allesiardo", "Raphaël Féraud", "Odalric-Ambrym Maillard" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "√ NKδ−1 log(Kδ−1)), where δ is the probability of failure\nof the algorithm, and an expected cumulative regret of O(∆−1 √ NTK log(TK)) after T time steps."
    }, {
      "heading" : "1 Introduction",
      "text" : "The theoretical framework of the multi-armed bandit problem formalizes the fundamental exploration/exploitation dilemma that appears in decision making problems facing partial information. At a high level, a set of K arms is available to a player. At each turn, she has to choose one arm and receives a reward corresponding to the played arm, without knowing what would have been the received reward had she played another arm. The player faces the dilemma of exploring, that is playing an arm whose mean reward is loosely estimated in order to build a better estimate or exploiting, that is playing a seemingly best arm based on current mean estimates in order to maximize her cumulative reward. The accuracy of the player policy at time horizon T is typically measured in terms of sample complexity or of regret. The sample complexity is the number of plays required to find an approximation of the best arm with high probability.\nar X\niv :1\n60 9.\n02 13\n9v 1\n[ cs\n.A I]\nIn that case, the player can stop playing after identifying this arm. The regret is the difference between the cumulative rewards of the player and the one that could be acquired by a policy assumed to be optimal.\nThe stochastic multi-armed bandit problem assumes the rewards to be generated independently from stochastic distribution associated with each arm. Stochastic algorithms usually assume distributions to be constant over time like with the Thompson Sampling (TS) [13], UCB [2] or Successive Elimination (SE) [4]. Under this assumption of stationarity, TS and UCB achieve optimal upper-bounds on the cumulative regret with logarithmic dependencies on T . SE algorithm achieves near optimal sample complexity.\nIn the adversarial multi-armed bandit problem, rewards are chosen by an adversary. This formulation can model any form of non-stationarity. The EXP3 algorithm [3, 11] achieves an optimal regret ofO( √ T ) against an oblivious opponent that chooses rewards before the beginning of the game, with respect to the best policy that pulls the same arm over the totality of the game. This weakness is partially overcomed by EXP3.S [3], a variant of EXP3, that forgets the past adding at each time step a proportion of the mean gain and achieves controlled regret with respect to policies that allow arm switches during the run.\nThe switching bandit problem introduces non-stationarity within the stochastic bandit problem by allowing means to change at some time-steps. Discounted UCB [10] and sliding-window UCB [6] are adaptations of UCB to the switching bandit problem and achieve a regret bound of O( √ MT log T ), where M − 1 is the number of distribution changes. EXP3.R [1] combines EXP3 with a switch detector based on Hoeffding inequality [8] in order to detect switches of best arm. This detector does not require mean rewards to be constant on the tested interval. This use of the Hoeffding inequality on nonidentical distributions is extented to SE in this paper to allow the algorithm to achieve efficient theoretical guarantees on non-stationary distributions of rewards. EXP3.R achieves a regret bound of O(N √ T log T ), where N − 1 is the number of times when the best arm changes. As this is always smaller (and potentially much smaller) than the number of distribution changes (N ≤M ), EXP3.R appears to be a strong competitor. It is also worth citing META-EVE [7] that associates UCB with a mean change detector, reseting the algorithm when a change is detected. While no analysis is provided, it has demonstrated strong empirical performances.\nStochastic and Adversarial. Several variants combining stochastic and adversarial rewards have been proposed by Seldin & Slivkins [12]. For instance, in the setting with contaminated rewards, rewards are mainly drawn from stationary distributions except for a minority of rewards of means chosen in advance by an adversary. In order to guarantee their proposed algorithm EXP3++ achieves logarithmic guarantees, the adversary is constrained in the sense it cannot lowered the gap between arms more than a factor 1/2. They also proposed another variant called adversarial with gap [12] which assumes the existence of a round after which an arm persists to be the best. This work is motivated by the desire to create generic algorithms able to perform bandit tasks\nwith various reward types, stationary, adversary or mainly stationary. However, despite achieving good performances on a wide range of problems, each one needs a specific parametrization (i.e. an instance of EXP3++ parametrized for stationnary rewards may not perform well if rewards are choosen by an adversary).\nOur contribution. We consider a formalization of the bandit problem where rewards are drawn from stochastic distributions of arbitrary means defined before the beginning of the game. In this non-stationary stochastic bandit context, our first contribution is to introduce and analyze a randomized version of SUCCESSIVE ELIMINATION. We show that the seemingly minor modification – a randomized round-robin procedure – leads to a dramatic improvement of the performance over the original SUCCESSIVE ELIMINATION algorithm. We show for instance in Theorem 1 and Corollary 1 that the proposed SUCCESSIVE ELIMINATION WITH RANDOMIZED ROUND-ROBIN (SER3) algorithm achieves a controlled sample complexity and cumulative regret in situations where SUCCESSIVE ELIMINATION may even suffers from a linear regret in the time horizon T , as supported by numerical experiments (see Section 5). Our second contribution is to identify a notion of gap that generalizes the gap from stochastic bandits to the non-stationary case, and derive gap-dependent (also known as problem-dependent) sample complexity and regret bounds, instead of the more classical and less informative problem-free bounds.\nThis paper is organized as follows. Section 3 starts with the case of non-stationary stochastic bandits when the best arm does not change during the game. We show that the sample complexity of SER3 is controlled as O( K∆2 log K δ∆ ) where ∆ generalizes the usual notion of stochastic gap from the stationary case. This comes under a mild assumption (see assumption 1). In Section 4, we then extend the setting to a full-blown switching problem when the best arm is allowed to change over time. We naturally extend the definition of sample complexity to allow the optimal arm to change over time (see Definition 1), and introduce the RANDOMIZED SUCCESSIVE ELIMINATION WITH RESETS (SER4) algorithm. We show in Theorem 2 and Corollary 2 that this algorithm achieves an expected sample complexity of O( √ NK log(K/δ)/(δ∆2)) where N − 1 is the number of arm switches assumed to be known. Corollary 3 extend this result to the expected cumulative regret with an upper-bound of O(∆−1 √ NTK log(TK)). These results do not assume any constraint on the behavior of the stochastic distributions and provide a gap-dependent performance bound in the challenging setting of non-stationary stochastic bandits competing against switching best arms. We finally illustrate the proposed approaches on synthetic problems in Section 5."
    }, {
      "heading" : "2 Setting",
      "text" : "We consider a generalization of the adversarial setting where the adversary chooses before the beginning of the game a sequence of distributions instead of directly choosing a sequence of rewards. This generalizes the setting since choosing arbitrarily a reward yk(t) is equivalent to drawing this reward from a distribution of mean yk(t) and a variance of zero.\nThe problem. Let [K] = 1, ...,K be a set of K arms. The reward ykt(t) ∈ [0, 1] obtained by the player after playing the arm kt is drawn from a distribution of mean µkt(t) ∈ [0, 1]. The instantaneous gap between arms k and k′ at time t is:\n∆k,k′(t) def = µk(t)− µk′(t) . (1)\nLet k∗(t) be the arm played by the optimal policy at time t. The notion of sample complexity. In the literature [9], the sample-complexity of an algorithm is the number of samples needed by this algorithm to find a policy achieving a specific level of performance with high probability. We denote δ ∈ (0, 0.5] the probability of failure. For instance, for the best arm identification in the stochastic stationary bandit (that is when ∀k∀t , µk(t) = µk(t + 1) and k∗(t) = k∗(t + 1)), the sample complexity is the number of sample needed to find, with a probability at least 1 − δ, an arm k∗ of mean reward maxk∈[K] µk. In section 3.1 we define the best arm in the stochastic non-stationary bandit problem without switches and in section 4 we propose a new definition of the sample complexity for the best arm identification problem with switches.\nAnalysis in sample complexity are useful for building hierarchical models of contextual bandits in a greedy way [5], reducing the exploration space.\nThe notion of regret. We define the pseudo cumulative regret as the difference of mean rewards between the arms chosen by the optimal policy and those chosen by the player:\nT∑\nt=1\nµk∗(t)(t)− µkt(t) . (2)\nUsually, in the stochastic bandit setting, the distributions of rewards are stationary and the instantaneous gap ∆k,k′(t) = µk(t)− µk′(t) is the same for all the time-steps."
    }, {
      "heading" : "3 Best Arm Identification in Non-stationary Stochastic Bandits.",
      "text" : "In this section, we present the algorithm SUCCESSIVE ELIMINATION WITH RANDOMIZED ROUND-ROBIN (SER3, see algorithm 1), a randomized version of SUCCESSIVE ELIMINATION which tackles the best arm identification problem when rewards are non-stationary."
    }, {
      "heading" : "3.1 A modified Successive Elimination algorithm",
      "text" : "We elaborate on several notions required to understand the behavior of the algorithm and to relax the constrain of stationarity. The elimination mechanism The elimination mechanism was introduced by SUCCESSIVE ELIMINATION [4]. Estimators of the rewards are built by sequentially sampling the arms. After τmin turns of round-robin, the elimination mechanism starts to occur. A lower-bound of the reward of the best empirical arm is computed and compared with an upper-bound of the reward of all other arms. If the lower-bound is higher than one of\nthe upper-bounds, then the associated arm is eliminated and stop being considered by the algorithm. Processes of sampling and elimination are repeated until the elimination of all arms except one.\nAlgorithm 1 SUCCESSIVE ELIMINATION WITH RANDOMIZED ROUND-ROBIN (SER3)\ninput: δ ∈ (0, 0.5], ∈ [0, 1), τmin = log Kδ output: an -approximation of the best arm S1 = [K], ∀k, µ̂k(0) = 0, t = 1, τ = 1 While |Sτ | > 1 Shuffle Sτ For each k ∈ Sτ do Play k µ̂k(τ) = τ−1 τ µ̂k(τ − 1) + yk(t) τ\nt = t+ 1 End for kmax = arg maxk∈S µ̂k(τ) If τ ≥ τmin Remove from Sτ+1 all k such as:\nµ̂max(τ)− µ̂k(τ) + ≥ √ 2\nτ log\n( 4Kτ2\nδ\n)"
    }, {
      "heading" : "End if",
      "text" : "τ = τ + 1\nEnd while\nHoeffding inequality. SUCCESSIVE ELIMINATION assumes that the rewards are drawn from stochastic distributions that are identical over time (rewards are identically distributed). However, the Hoeffding inequality used by this algorithm does not require stationarity and only requires independence. We remember the Hoeffding inequality:\nLemma 1 (Hoeffding inequality [8]). If X1, X2, ..., Xτ are τ independent random variables and 0 ≤ Xi ≤ 1 for all (i = 1, 2, ..., τ), then for τ > 0\nP (∣∣∣∣∣ t∑\ni=1\nXi τ − E\n[ t∑\ni=1\nXi τ ]∣∣∣∣∣ ≥ τ ) ≤ 2 exp ( −2 2ττ ) .\nThus we can use this inequality to calculate confidence bounds of empirical means computed with rewards drawn from non identical distributions.\nRandomization of the Round-Robin. We illustrate the need of randomization with an example tricking a deterministic algorithm (see figure 1).\nThe best arm seem to be k = 1 as µ1(t) is greater than µ2(t) at every time-step t. However, by sampling the arms with a deterministic policy playing sequentially k = 1 and then k = 2, after t = 6 the algorithm has only sampled rewards from a distribution of mean 0.6 for k = 1 and of mean 0.8 for k = 2. After enough time following this pattern, an elimination algorithm will eliminate the first arm. Our algorithm SER3 adds a shuffling of the arm set after each round-robin cycle to SUCCESSIVE ELIMINATION and avoids this behavior.\nUniqueness of the best arm. The best arm identification task assumes a criteria identifying the best arm without ambiguity. We define the optimal arm as:\nk∗ = arg max k∈[K]\nT∑\nt=1\nµk(t) . (3)\nAs an efficient algorithm will find the best arm before the end of the run, we use assumption 1 to ensure its uniqueness at every time-step. First, we define some notations. A run of SER3 is a succession of round-robin. The set [τ ] = {(t1, |S1|), ..., (tτ , |Sτ |)} is a realization of SER3 and ti is the timestep when the round-robin ith of size |Si| starts (ti = 1 + ∑i−1 j=1 |Sj |). As arms are only eliminated, |Si| ≥ |Si+1|. We denote T(τ) the set containing all possible realizations of τ round-robin steps. Now, we can introduce assumption 1 that ensures the best arm is the same at any time-step.\nAssumption 1 (Positive mean-gap). For any k ∈ [K]− {k∗} and any [τ ] ∈ T(τ) with τ ≥ τmin, we have:\n∆∗k ([τ ]) = 1\nτ\nτ∑\ni=1\nti+|Si|−1∑\nj=ti\n∆k∗,k(j)\n|Si| > 0 . (4)\nAssumption 1 is quite weak (see e.g. figure 2(b)) and can tolerate a large noise when τ is high. As the optimal arm must distinguish itself from others, instantaneous gaps are more constrained at the beginning of the game. It is quite similar to the assumption used by Seldin & Slivkins [12] to be able to achieve logarithmic expected regret on moderately contaminated rewards, i.e., the adversary does not lower the averaged gap too much. Another analogy can be done with the adversarial with gap setting [12], τmin representing the time needed for the optimal arm to accumulate enough rewards and to distinguish itself from the suboptimal arms.\nFigure 2(a) illustrates assumption 1. In this example the mean of the optimal arm k∗ is lower than the second one on time-steps t ∈ {5, 6, 7}. Thus even if the instantaneous gap\nis negative during these time-steps, the mean gap ∆∗k ([τ ]) stays positive. The parameter τmin protects the algorithm from local noise at the initialization of the algorithm. In order to ease the reading of the results, we here assume τmin = log Kδ .\nAssumption 1 can be seen as a sanity-check assumption ensuring that the best-arm identification problem indeed makes sense. In section 4, we consider the more general switching bandit problem. In this case, assumption 1 may not be verified (see figure 2(b)), and is naturally extended by dividing the game in segments wherein assumption 1 is satisfied."
    }, {
      "heading" : "3.2 Analysis",
      "text" : "The sample-complexity is the number of observations needed to find an -optimal arm with high probability. All theoretical results are provided for = 0 and therefore\naccept only k∗ as the optimal arm. All proofs are provided in the appendix.\nTheorem 1. For K ≥ 2, δ ∈ (0, 0.5], and τmin = log Kδ , the sample-complexity of SER3 is upper bounded by:\nO\n( K\n∆2 log(\nK δ∆ )\n)\nwhere ∆ = min[τ ],k 1τ ∑τ i=1 ∑ti+|Si|−1 t=ti ∆k∗,k(t) |Si| .\nGuarantee on the sample complexity can be transposed in guarantee on the cumulative regret. In that case, when only one arm remains in the set, the player continues to play this last arm until the end of the game.\nCorollary 1. For K ≥ 2, and δ = 1/T , and τmin = log(KT ), the expected cumulative regret of SER3 is upper bounded by:\nmin ( O ( K − 1\n∆ log(\nKT\n∆ )\n) , O (√ TK log T\nK\n))\nThese guarantees are the same as the original SUCCESSIVE ELIMINATION performed with a deterministic round-robin on arms with stationary rewards. Indeed, when reward distributions are stationary, we have for all t and all [τ ]:\n1\nτ\nτ∑\ni=1\nti+|Si|−1∑\nt=ti\n∆k∗,k(t)\n|Si| = ∆k∗,k(t) = ∆k∗,k(t+ 1) . (5)\nHowever, in a non-stationary environment satisfying assumption 1 SUCCESSIVE ELIMINATION will eliminate the optimal arm if the adversary knows the order of its round-robin before the beginning of the run and exploits this knowledge against the learner, thus resulting in a linear cumulative regret.\nRemark: These logarithmic guarantees result from assumption 1 that allows to stop the exploration of eliminated arms. They do not contradict the lower bound for non-stationary bandit whose scaling is in Ω( √ T ) [6] as it is due to the cost of the constant exploration for the case where the best arm changes."
    }, {
      "heading" : "4 Non-stationary Stochastic Multi-armed Bandit with Best Arm Switches",
      "text" : "The switching bandit problem has been proposed by Garivier et al. [6] and assumes means to be stationary between switches. In particular, the algorithm SW-UCB is built on this assumption. The setting has been extended by Allesiardo and Féraud with EXP3.R [1] to allow mean rewards to change at every time-steps. We follow this setting and consider that a best arm switch occurs when the arm with the highest mean change.\nAlgorithm. In order to allow the algorithm to choose another arm when a switch occurs, at each turn, estimators of SER3 are reseted with a probability ϕ ∈ [0, 1] and\na new task of best arm identification is started. We name this algorithm SUCCESSIVE ELIMINATION WITH RANDOMIZED ROUND-ROBIN AND RESETS (SER4).\nThe sample complexity of the best arm identification problem with switches. The optimal policy is the sequence of couples (optimal arm, time when the switch occurred):\n{(k∗1 , 1), ..., (k∗N , TN )} , (6) with k∗n 6= k∗n+1 and ∆k∗n,k(t) > 0 for any k ∈ [K] − {k∗n} and any t ∈ [Tn, Tn+1). The optimal policy starts playing the arm k∗n at the time-step Tn. Time-steps Tn when switches occur are unknown to the player.\nThe cost of switches. A cost associated to the number of iterations after a switch when the player does not know the optimal arm and does not sample is added to the usual sample complexity.\nDefinition 1. Let A be an algorithm. The sample-complexity of A performing a best arms identification task for a segmentation {Tn}n=1..N of [1 : T ], with T1 = 1 < T2 < · · · < TN < T , is ∑N n=1 ∑Tn+1−1 t=Tn\n(s(t) + 1Jkt 6=k∗nK), where s(t) is a binary variable equal to 1 if and only if the time-step t is used by the sampling process of A, kt is the arm identified as optimal by A at time t, k∗n is the optimal arm over the segment n and TN+1 = T + 1.\nPerformance analysis. We now provide the performance guarantees of the SER4 algorithm, both in terms of sample complexity and in cumulative regret.\nTheorem 2. For K ≥ 2, δ = 1/T , τmin = log Kδ and ϕ ∈ (0, 1], the expected sample complexity of SER4 w.r.t. the randomization of resets is upper bounded by:\nO\n( ϕK\nδ∆2 log(\nK δ∆ ) + N ϕ\n)\nwith a probability of at least 1− δ.\nWe tune ϕ in order to minimize the sample complexity.\nCorollary 2. For K ≥ 2, δ = 1/T , τmin = log Kδ , ∆ ≥ 1KT and ϕ = √\nNδ K log(Kδ ) ,\nthe expected sample complexity of SER4 w.r.t. the randomization of resets is upper bounded by:\nO\n  1\n∆2\n√ NK log(Kδ )\nδ\n  .\nRemark 2: transposing Theorem 1 for the case where ∈ [ 1KT , 1] is straightforward. This allows to tune the bound by setting ϕ = √ (Nδ)/(K log(TK)).\nThis result can also be transposed in bound on the expected cumulative regret. We consider that the algorithm continues to play the last arm of the set until a reset occurs.\nCorollary 3. For K ≥ 2, and δ = 1/T , τmin = log(KT ), ∆ ≥ 1KT and ϕ =√ N\nTK log(KT ) , the expected cumulative regret of SER4 w.r.t. the randomization of\nresets is upper bounded by:\nO\n(√ NTK log(KT )\n∆\n) . (7)\nRemark 3: A similar dependency in √ T∆−1 appears also in EXP3.R (see Corrolary 1 in [1]) and in SW-UCB (see Theorem 1 in [6]), and is standard in this type of results."
    }, {
      "heading" : "5 Numerical Experiments",
      "text" : "We compare our algorithms with the state-of-the-art. For each problem, K = 20 and T = 107. The instantaneous gap between the optimal arm and the others is constant, ∆ = 0.05, i.e. the mean of the optimal arm is µ∗(t) = µ(t)+∆. During all experiments, probabilities of failure of SUCCESSIVE ELIMINATION (SE), SER3 and SER4 are setted to δ = 0.05. Constant explorations of all algorithms of the EXP3 family are setted to γ = 0.05. Results are averaged over 50 runs. On problems 1 and 2, variances are low (in the order of 103) and thus not showed. On problem 3, variances are plotted as the grey areas under the curves.\nProblem 1: Sinusoidal means. The index of the optimal arm k∗ is drawn before the game and does not change. The mean of all suboptimal arm is µ(t) = cos(2πt/K)/5 + 0.5.\nThis problem challenges SER3 against SE, UCB and EXP3. SER3 achieves a low cumulative regret, successfully eliminating sub-optimal arms at the beginning of the run. Contrarily, SE is tricked by the periodicity of the sinusoidal means and eliminates the optimal arm. The deterministic policy of UCB is not adapted to the non-stationarity of rewards and thus the algorithm suffers from an high regret. The unbiased estimators of EXP3 enable the algorithm to quickly converge on the best arm. However, EXP3 suffers from a linear regret due to its constant exploration until the end of the game.\nProblem 2: Decreasing means with positive gap. The optimal arm k∗ does not change during the game. The mean of all suboptimal arms is µ(t) = 0.95 − min(0.45, 10−7t).\nOn this problem, SER3 is challenged against SE, UCB and EXP3. SER3 achieves a low cumulative regret, successfully eliminating sub-optimal arms at the beginning of the run. Contrarily to problem 1, mean rewards evolve slowly and SUCCESSIVE ELIMINATION (SE) achieves the same level of performance than SER3. Similarly to problem 1, UCB achieves an high cumulative regret. The cumulative regret of EXP3 is low at the end of the game but would still increase linearly with time.\nProblem 3: Decreasing means with arm switches. At every turn, the optimal arm k∗(t) changes with a probability of 10−6. In expectation, there are 10 switches by run. The mean of all suboptimal arms is µ(t) = 0.95−min(0.45, 10−7(t[mod 106]).\nOn problem 3, SER4 is challenged against SW-UCB, EXP3.S, EXP3.R and META-EVE. The probability of reset of SER4 is ϕ = 5−5. The size of the window of SW-UCB is 105. The historic considered by EXP3.R is H = 4 · 105 and the regularization parameter of EXP3.S is α = 10−5.\nSER4 obtains the lowest cumulative regret, confirming the random resets approach to overcome switches of best arm. SW-UCB suffers from the same issues as UCB in previous problems and obtains a very high regret. Constant changes of mean cause META-EVE to reset very frequently and to obtain a lower regret than SW-UCB. EXP3.S and EXP3.R achieves both low regrets but EXP3.R suffers from the large size of historic needed to detect switches with a gap of ∆. We can notice that the randomization of resets in SER4, while allowing to achieves the best performances on this problem, involve an highest variance. Indeed, on some runs, a reset may occur latelly after a best arm switch whereas the use of windows or regularization parameters will be more consistant."
    }, {
      "heading" : "6 Conclusion",
      "text" : "We studied the benefit of random shuffling in the design of sequential elimination bandit algorithms. We showed that the use of random shuffling extends their range of application to a new class of best arm identification problems involving non-stationary distributions, without requiring new parameter, while achieving the same level of guarantees than SE with stationary distributions. We introduced SER3 and extended it to the switching bandit problem with SER4 by adding a probability of restarting the best arm identification task. Up to our knowledge, we proved the first sample complexity based upper-bound for the best arm identification problem with arm switches. The upper-bound over the cumulative regret of SER4 depends only of the number N − 1 of arm switches, as opposed to the number of distribution changes M − 1 in SW-UCB (M ≥ N can be of order T in our setting)."
    }, {
      "heading" : "A Technical results",
      "text" : ""
    }, {
      "heading" : "A.1 Proof of Theorem 1",
      "text" : "The proof consists of three main steps. The first step makes explicit the conditions leading to the elimination of an arm from the set. The second step shows that the optimal arm will not be eliminated with high probability. Finally, the third step shows that a sub-optimal arm will be eliminated after at most a critical number of steps τ∗, which then allows to derive an upper-bound on the sample complexity.\nStep 1. Conditions for the elimination of an arm. From Hoeffding’s inequality, for any deterministic round-robin length τ and arm k we have:\nP (|µ̂k − E[µ̂k]| ≥ τ ) ≤ 2 exp ( −2 2ττ ) .\nwhere E denotes the expectation with respect to the distribution Dy . By setting\nt =\n√ 1\n2τ log\n( 4Kτ2\nδ\n) , we have:\nP (|µ̂k − E[µ̂k(τ)]| ≥ t) ≤ 2 exp  −2 √ 1\n2τ log\n( 4Kτ2\nδ\n)2 τ2   = δ\n2Kτ2 .\nApplying Hoeffding’s inequality for each round-robin size τ ∈ N?, applying a standard union bound and using that ∑∞ τ=1 1/τ\n2 = π2/6, the following inequality holds simultaneously for any τ with a probability at least 1− δπ212K :\nµ̂k(τ)− τ ≤ E[µ̂k] ≤ µ̂k(τ) + τ . (8) Let Si ⊂ {1, . . . ,K} be the set containing all the arms that are not eliminated by the algorithm at the start of the ith round-robin. By construction of the algorithm, an arm k′ remains in the set of selected arms as long as for each arm k ∈ Sτ − {k′}:\nµ̂k(τ)− τ < µ̂k′(τ) + τ and τ ≥ τmin (9) Combining (8) and the left inequality of (9), it holds on an event Ω of high probability\nE[µ̂k(τ)]− 2 τ < E[µ̂k′(τ)] + 2 τ . (10) We denote tτ , the time-step where the τ th round-robin starts (tτ = 1 + ∑τ−1 i=1 |Si|). Let us remind that T(τ) is the set containing all possible realizations of τ sequences of round-robin. Each arm k is played one time during each round-robin phase and thus τ observations per arm are available after τ th round-robin phases. The empirical mean reward µ̂k(τ) of each arm k after the τ th round-robin is:\nµ̂k(τ) = ∑\nr∈T(τ)\n1Jr=[τ ]K τ\ntτ+|Sτ |−1∑\nj=1\nyk(j)1Jk=kjK . (11)\nDecomposing the second sum in round-robin phases and taking the expectation with respect to the reward distribution Dy we have:\nEDy [µ̂k(τ)] = ∑\nr∈T(τ)\n1Jr=[τ ]K τ\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)1Jk=kjK . (12)\nTaking the expectation of equation (12) with respect to the randomization of the round-robin we have:\nE[µ̂k(τ)] = ∑\nr∈T(τ)\n1Jr=[τ ]K τ\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)\n|Si| . (13)\nNow, under the event Ω for which (10) holds for k and k′, we deduce by using (13) that\n∑\nr∈T(τ)\n1Jr=[τ ]K τ\n  τ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)\n|Si| −\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk′(j)\n|Si|\n  < 4 τ . (14)\nLet us introduce the following mean-gap quantity\n∆k,k′([τ ]) = ∑\nr∈T(τ)\n1Jr=[τ ]K τ\n  τ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)\n|Si| −\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk′(j)\n|Si|\n  .\nReplacing the value of t in (14), it comes\n∆k,k′([τ ]) < 4\n√ 1\n2τ log\n( 4Kτ2\nδ\n) ,\n∆k,k′([τ ]) 2 <\n8 τ log\n( 4Kτ2\nδ\n) . (15)\nAn arm will be eliminated if (15) becomes false and if τ ≥ τmin. Step 2. The optimal arm is not eliminated.\nFor k′ = k∗ and k 6= k∗, by assumption 1 (∆k,k∗([τ ]) is negative after τmin), (15) is always true for τ ≥ τmin, implying that the optimal arm will always remain in the set with a probability of at least 1− δK for all τ .\nStep 3. The elimination of sub-optimal arms. If the arm k′ still remain in the set, it will be eliminated if inequality (15) is not satisfied and if τ∗ ≥ τmin.\nLet us consider k = k∗, k′ 6= k∗, and define the quantity\n∆k([τ ]) = ∑\nr∈T(τ)\n1Jr=[τ ]K τ\n  τ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)\n|Si| −\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk′(j)\n|Si|\n  .\nLet us also introduce for convenience the critical value\nτ∗ = 64\n∆k([τ ])2 log\n( 4K\nδ∆k([τ ])\n) .\nNotice that τ∗ ≥ τmin, satisfying one of the two conditions needed to eliminate an arm.\nWe introduce the following quantity\nC(t) def =\n8 τ log\n( 4Kτ2\nδ\n) .\nFor τ = τ∗, we derive the following bound\nC(τ∗) = ∆k([τ ])\n2\n8 log 4Kδ∆k([τ ])\n( log 4K\nδ + 2 log\n64K2\n∆k([τ ])2 + 2 log log\n4K\nδ∆k([τ ])\n) ,\n= ∆k([τ ])\n2\n8 log 4Kδ∆k([τ ])\n( log 4K\nδ − 4 log ∆k([τ ]) + 12 log 2 + 2 log log\n4K\nδ∆k([τ ])\n) ,\n≤ ∆k([τ ]) 2\n8 log 4Kδ∆k([τ ])\n( 4 log 4K\nδ∆k([τ ]) + 12 log 2 + 2 log log\n4K\nδ∆k([τ ])\n) .\nWe remark that for X > 13 we have\n12 log 2 + 2 log logX < 4 logX .\nHence, provided that for K ≥ 2, δ ∈ (0, 0.5] and ∆k([τ ]) > 0, we have 4Kδ∆k([τ ]) > 13 and\nC(τ∗) ≤ ∆k([τ ]) 2\n8 log 4Kδ∆k([τ ])\n( 8 log 4K\nδ∆k([τ ])\n)\n≤ ∆k([τ ])2 . (16)\nAs C(τ∗) is strictly decreasing with regard to t, (16) is true for all τ > τ∗ , invalidating (15) and involving the elimination of the suboptimal arms k with a probability at least 1− δ/K.\nWe conclude the proof by summing over all the arms, taking the union bound and lower-bounding all ∆k([τ ]) by\n∆ = min [τ ]∈T(τ),k\n∑\nr∈T(τ)\n1Jr=[τ ]K τ\n  τ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk(j)\n|Si| −\nτ∑\ni=1\nti+|Sτ |−1∑\nj=ti\nµk′(j)\n|Si|\n  .\n(17)"
    }, {
      "heading" : "A.2 Proof of Corollary 1",
      "text" : "We first provide the proof of the distribution dependent upper-bound.\nThe cumulated pseudo regret of the algorithm is:\nR(T ) = ∑\nk 6=k∗\nτ∑\ni=1\nti+|Si|−1∑\nt=ti\n∆k∗,k(t)1Jk=ktK . (18)\nTaking in each round-robin the expectation of the corresponding random variable kt with respect to the randomization of the round-robin (denoted by Ekt ), it comes:\nE[R(T )] = E [ ∑\nk 6=k∗\nτ∑\ni=1\nti+|Si|−1∑\nt=ti\nEkt [∆k∗,k(t)1Jk=ktK] ]\n= E [ ∑\nk 6=k∗\nτ∑\ni=1\nti+|Si|−1∑\nt=ti\n∆k∗,k(t)\n|Si|\n] .\nE[R(T )] = E [ ∑\nk 6=k∗ τ\n1\nτ\nτ∑\ni=1\nti+|Si|−1∑\nt=ti\n∆k∗,k(t)\n|Si| ︸ ︷︷ ︸\n∆∗k\n] = E [ ∑\nk 6=k∗ τ∆∗k\n] . (19)\nThe penultimate step of the proof of Theorem 1 allows us to upper-bound τ with the previously introduced critical value τ∗ on an event of high probability 1− δ, while the cumulative regret is controlled by the trivial upper bound T on the complementary event of probability not higher than δ, leading to:\nE[R(T )] ≤ ∑\nk 6=k∗\n64 ∆2k log\n( 4K\nδ∆k\n) ∆k + δT . (20)\nWe conclude the proof of the distribution dependent upper-bound by setting δ = 1/T and :\nE[R(T )] = O ( K − 1\n∆ log(\nKT\n∆ )\n) , (21)\nwith ∆ = min[τ ],k 1τ ∑τ i=1 ∑ti+|Si|−1 t=ti ∆k∗,k(t) |Si| .\nWe now upper-bound the regret in the worst case in order to derive a distribution independent bound. To this end, we consider a sequence that ensures that, with high probability, no suboptimal arm is eliminated by the algorithm at the end of the T rounds, while maximizing the instantaneous regret. According to (10) an arm is not eliminated as long as\nE[µ̂k(τ)]− E[µ̂k′(τ)] < 4 τ . (22)\nBy injecting (22) in (19) and replacing τ by its value √ 2 τ log ( 4Kτ2 δ ) we obtain:\nE[R(T )] < ∑\nk 6=k∗ τ4\n√ 2\nτ log\n( 4Kτ2\nδ\n) + δT . (23)\nThe non-elimination of sub-optimal arms involves τ = TK and by setting δ = 1 T we\nobtain the distribution independent upper-bound:\nE[R(T )] < (K − 1) T K 4\n√ K\nT log(\n4T 3\nK ) + 1 , (24)\nE[R(T )] = O (√ TK log T\nK\n) . (25)"
    }, {
      "heading" : "A.3 Proof of Theorem 2",
      "text" : "In order to prove Theorem 2, we consider the following quantities:\n• The expected number of times when the estimators are reseted: Nreset = ϕT .\n• The sample complexity needed to find the best arm between each reset is SSER3 = O ( K ∆2 log( K δ∆ ) ) .\n• The time before a reset, that follows a negative binomial distribution of parameters r = 1 and p = 1− ϕ. Its expectation is upper-bounded by 1/ϕ.\n• The number of arm switches: N − 1.\nThe sample complexity of SER4 is the total number of time-steps spent sampling an arm added to the time between each switch and reset.\nTaking the expectation with respect to the randomization of resets, we obtain an upper-bound on the expected number of suboptimal plays given by\nO\n( ϕTK\n∆2 log\n( K\nδ∆\n) + N\nϕ\n) . (26)\nThe first term is the expectation of the total number of time-steps required by the algorithm in order to find the best arms at its initialization and then after each reset of the algorithm. The second term is the expected total number of steps lost by the algorithm when not reseting the algorithm after the N − 1 arm switches.\nWe obtain the final statement of the Theorem by setting T = 1δ ."
    }, {
      "heading" : "A.4 Proof of Corollary 3",
      "text" : "Converting Corollary 2 into a distribution dependent upper-bound on the cumulative regret is straightforward by setting δ = 1T , replacing the sample complexity in the proof of Theorem 2 by the cumulative regret and using the upper-bound of Corollary 1.\nE[R(T )] = O ( ϕTK\n∆ log\n( KT\n∆\n) + N\nϕ\n) . (27)\nSetting ϕ = √\nN TK log(KT ) and assuming ∆ ≥ 1KT we obtain the final statement of\nthe theorem:\nE[R(T )] = O\n(√ NTK log(KT )\n∆\n) . (28)\nWe also derive below a distribution independent upper-bound. We introduce some notations, Nreset is the number of resets, τ reseti is the number of round-robin phases between the ith and the (i+ 1)th resets and Ln is the number of timesteps before a reset after the nth arm switch.\nWhen the resets are fixed, the expected cumulative regret is:\nE[R(T )] < E [Nreset+1∑\ni=1\n(K − 1)τ reseti 4 √ 2\nτ reseti log(\n4(τ reseti ) 2\nδ ) +\nN∑\nn=1\nLn + δT\n] , (29)\nE[R(T )] < E [Nreset+1∑\ni=1\n(K − 1)4 √ 2τ reseti log( 4(τ reseti ) 2\nδ )\n︸ ︷︷ ︸ f(τ reseti )\n] +E [ N∑\nn=1\nLn\n] + δT . (30)\nAt this point, we note that {τ reseti }i is an i.i.d sequence of random variables and that Nreset is a random stopping time with respect to this sequence. Moreover, f is a concave function. We can thus apply Wald’s equation followed by Jensen’s inequality and deduce that\nE[ Nreset+1∑\ni=1\nf(τ reseti )] ≤ E[Nreset + 1]E[f(τ reset1 )]\n≤ E[Nreset + 1]f(E[τ reset1 ]) .\nWe upper-bound log( 4(τ reset i ) 2 δ ) by log( 4T 2 δK2 ) and set δ = 1 T . As E[Nreset] = ϕT ,\nE[τ reset1 ] = 1ϕK and E[Ln] ≤ 1ϕ , we have\nE[R(T )] < 4(ϕT + 1)\n√ 2\nϕ K log\n( 4T 3\nK2\n) + N\nϕ + 1 . (31)\nThe previous equation makes appear a trade-off in ϕ, and we set ϕ = √ N\nT 2/3 .\nFinally we have shown that\nE[R(T )] = O ( T 2/3 √ NK log T\nK\n) . (32)"
    } ],
    "references" : [ {
      "title" : "EXP3 with Drift Detection for the Switching Bandit Problem",
      "author" : [ "Allesiardo", "Robin", "Féraud", "Raphaël" ],
      "venue" : "IEEE International Conference on Data Science",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2015
    }, {
      "title" : "Finite-time Analysis of the Multiarmed Bandit Problem",
      "author" : [ "Auer", "Peter", "Cesa-Bianchi", "Nicolò", "Fischer", "Paul" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2002
    }, {
      "title" : "The Nonstochastic Multiarmed Bandit Problem",
      "author" : [ "Auer", "Peter", "Cesa-Bianchi", "Nicolò", "Freund", "Yoav", "Schapire", "Robert E" ],
      "venue" : "SIAM J. Comput.,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2002
    }, {
      "title" : "Action Elimination and Stopping Conditions for the Multi-Armed Bandit and Reinforcement Learning Problems",
      "author" : [ "Even-Dar", "Eyal", "Mannor", "Shie", "Mansour", "Yishay" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2006
    }, {
      "title" : "Random Forest for the Contextual Bandit Problem. AISTATS",
      "author" : [ "Féraud", "Raphaël", "Allesiardo", "Robin", "Urvoy", "Tanguy", "Clérot", "Fabrice" ],
      "venue" : null,
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2016
    }, {
      "title" : "On Upper-Confidence Bound Policies for Non-stationary Bandit Problems. Pages 174–188",
      "author" : [ "Garivier", "Aurélien", "Moulines", "Eric" ],
      "venue" : null,
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2011
    }, {
      "title" : "Multi-armed Bandit, Dynamic Environments and Meta-Bandits",
      "author" : [ "C. Hartland", "N. Baskiotis", "S. Gelly", "O. Teytaud", "M. Sebag" ],
      "venue" : "Online Trading of Exploration and Exploitation Workshop,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2006
    }, {
      "title" : "On the Complexity of Best Arm Identification in Multi-Armed Bandit Models",
      "author" : [ "Kaufmann", "Emilie", "Cappé", "Olivier", "Garivier", "Aurélien. Jan" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2016
    }, {
      "title" : "Discounted UCB. In: 2nd PASCAL Challenges Workshop",
      "author" : [ "L. Kocsis", "C. Szepesvári" ],
      "venue" : null,
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2006
    }, {
      "title" : "Explore no more: improved high-probability regret bounds for non-stochastic bandits",
      "author" : [ "Neu", "Gergely" ],
      "venue" : null,
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2015
    }, {
      "title" : "One Practical Algorithm for Both Stochastic and Adversarial Bandits",
      "author" : [ "Seldin", "Yevgeny", "Slivkins", "Aleksandrs" ],
      "venue" : "In: 31th Intl. Conf. on Machine Learning (ICML)",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Stochastic algorithms usually assume distributions to be constant over time like with the Thompson Sampling (TS) [13], UCB [2] or Successive Elimination (SE) [4].",
      "startOffset" : 123,
      "endOffset" : 126
    }, {
      "referenceID" : 3,
      "context" : "Stochastic algorithms usually assume distributions to be constant over time like with the Thompson Sampling (TS) [13], UCB [2] or Successive Elimination (SE) [4].",
      "startOffset" : 158,
      "endOffset" : 161
    }, {
      "referenceID" : 2,
      "context" : "The EXP3 algorithm [3, 11] achieves an optimal regret ofO( √ T ) against an oblivious opponent that chooses rewards before the beginning of the game, with respect to the best policy that pulls the same arm over the totality of the game.",
      "startOffset" : 19,
      "endOffset" : 26
    }, {
      "referenceID" : 9,
      "context" : "The EXP3 algorithm [3, 11] achieves an optimal regret ofO( √ T ) against an oblivious opponent that chooses rewards before the beginning of the game, with respect to the best policy that pulls the same arm over the totality of the game.",
      "startOffset" : 19,
      "endOffset" : 26
    }, {
      "referenceID" : 2,
      "context" : "S [3], a variant of EXP3, that forgets the past adding at each time step a proportion of the mean gain and achieves controlled regret with respect to policies that allow arm switches during the run.",
      "startOffset" : 2,
      "endOffset" : 5
    }, {
      "referenceID" : 8,
      "context" : "Discounted UCB [10] and sliding-window UCB [6] are adaptations of UCB to the switching bandit problem and achieve a regret bound of O( √ MT log T ), where M − 1 is the number of distribution changes.",
      "startOffset" : 15,
      "endOffset" : 19
    }, {
      "referenceID" : 5,
      "context" : "Discounted UCB [10] and sliding-window UCB [6] are adaptations of UCB to the switching bandit problem and achieve a regret bound of O( √ MT log T ), where M − 1 is the number of distribution changes.",
      "startOffset" : 43,
      "endOffset" : 46
    }, {
      "referenceID" : 0,
      "context" : "R [1] combines EXP3 with a switch detector based on Hoeffding inequality [8] in order to detect switches of best arm.",
      "startOffset" : 2,
      "endOffset" : 5
    }, {
      "referenceID" : 6,
      "context" : "It is also worth citing META-EVE [7] that associates UCB with a mean change detector, reseting the algorithm when a change is detected.",
      "startOffset" : 33,
      "endOffset" : 36
    }, {
      "referenceID" : 10,
      "context" : "Several variants combining stochastic and adversarial rewards have been proposed by Seldin & Slivkins [12].",
      "startOffset" : 102,
      "endOffset" : 106
    }, {
      "referenceID" : 10,
      "context" : "They also proposed another variant called adversarial with gap [12] which assumes the existence of a round after which an arm persists to be the best.",
      "startOffset" : 63,
      "endOffset" : 67
    }, {
      "referenceID" : 0,
      "context" : "The reward ykt(t) ∈ [0, 1] obtained by the player after playing the arm kt is drawn from a distribution of mean μkt(t) ∈ [0, 1].",
      "startOffset" : 20,
      "endOffset" : 26
    }, {
      "referenceID" : 0,
      "context" : "The reward ykt(t) ∈ [0, 1] obtained by the player after playing the arm kt is drawn from a distribution of mean μkt(t) ∈ [0, 1].",
      "startOffset" : 121,
      "endOffset" : 127
    }, {
      "referenceID" : 7,
      "context" : "In the literature [9], the sample-complexity of an algorithm is the number of samples needed by this algorithm to find a policy achieving a specific level of performance with high probability.",
      "startOffset" : 18,
      "endOffset" : 21
    }, {
      "referenceID" : 4,
      "context" : "Analysis in sample complexity are useful for building hierarchical models of contextual bandits in a greedy way [5], reducing the exploration space.",
      "startOffset" : 112,
      "endOffset" : 115
    }, {
      "referenceID" : 3,
      "context" : "The elimination mechanism The elimination mechanism was introduced by SUCCESSIVE ELIMINATION [4].",
      "startOffset" : 93,
      "endOffset" : 96
    }, {
      "referenceID" : 10,
      "context" : "It is quite similar to the assumption used by Seldin & Slivkins [12] to be able to achieve logarithmic expected regret on moderately contaminated rewards, i.",
      "startOffset" : 64,
      "endOffset" : 68
    }, {
      "referenceID" : 10,
      "context" : "Another analogy can be done with the adversarial with gap setting [12], τmin representing the time needed for the optimal arm to accumulate enough rewards and to distinguish itself from the suboptimal arms.",
      "startOffset" : 66,
      "endOffset" : 70
    }, {
      "referenceID" : 5,
      "context" : "They do not contradict the lower bound for non-stationary bandit whose scaling is in Ω( √ T ) [6] as it is due to the cost of the constant exploration for the case where the best arm changes.",
      "startOffset" : 94,
      "endOffset" : 97
    }, {
      "referenceID" : 5,
      "context" : "[6] and assumes means to be stationary between switches.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 0,
      "context" : "R [1] to allow mean rewards to change at every time-steps.",
      "startOffset" : 2,
      "endOffset" : 5
    }, {
      "referenceID" : 0,
      "context" : "In order to allow the algorithm to choose another arm when a switch occurs, at each turn, estimators of SER3 are reseted with a probability φ ∈ [0, 1] and",
      "startOffset" : 144,
      "endOffset" : 150
    }, {
      "referenceID" : 0,
      "context" : "R (see Corrolary 1 in [1]) and in SW-UCB (see Theorem 1 in [6]), and is standard in this type of results.",
      "startOffset" : 22,
      "endOffset" : 25
    }, {
      "referenceID" : 5,
      "context" : "R (see Corrolary 1 in [1]) and in SW-UCB (see Theorem 1 in [6]), and is standard in this type of results.",
      "startOffset" : 59,
      "endOffset" : 62
    } ],
    "year" : 2016,
    "abstractText" : "We consider a non-stationary formulation of the stochastic multi-armed bandit where the rewards are no longer assumed to be identically distributed. For the best-arm identification task, we introduce a version of SUCCESSIVE ELIMINATION based on random shuffling of the K arms. We prove that under a novel and mild assumption on the mean gap ∆, this simple but powerful modification achieves the same guarantees in term of sample complexity and cumulative regret than its original version, but in a much wider class of problems, as it is not anymore constrained to stationary distributions. We also show that the original SUCCESSIVE ELIMINATION fails to have controlled regret in this more general scenario, thus showing the benefit of shuffling. We then remove our mild assumption and adapt the algorithm to the best-arm identification task with switching arms. We adapt the definition of the sample complexity for that case and prove that, against an optimal policy with N −1 switches of the optimal arm, this new algorithm achieves an expected sample complexity ofO(∆−2 √ NKδ−1 log(Kδ−1)), where δ is the probability of failure of the algorithm, and an expected cumulative regret of O(∆−1 √ NTK log(TK)) after T time steps.",
    "creator" : "LaTeX with hyperref package"
  }
}