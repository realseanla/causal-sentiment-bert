{
  "name" : "1202.3703.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Factored Filtering of Continuous-Time Systems",
    "authors" : [ "E. Busra Celikkaya", "Christian R. Shelton" ],
    "emails" : [ "celikkae@cs.ucr.edu", "cshelton@cs.ucr.edu", "willmlam@ics.uci.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "We consider filtering for a continuous-time, or asynchronous, stochastic system where the full distribution over states is too large to be stored or calculated. We assume that the rate matrix of the system can be compactly represented and that the belief distribution is to be approximated as a product of marginals. The essential computation is the matrix exponential. We look at two different methods for its computation: ODE integration and uniformization of the Taylor expansion. For both we consider approximations in which only a factored belief state is maintained. For factored uniformization we demonstrate that the KL-divergence of the filtering is bounded. Our experimental results confirm our factored uniformization performs better than previously suggested uniformization methods and the mean field algorithm."
    }, {
      "heading" : "1 Continuous-Time Markov Systems",
      "text" : "We are interested in monitoring (alternatively tracking or filtering) a continuous-time finite-state homogeneous Markovian stochastic system. This implies that evidence and events can arrive at any real-valued time (asynchronously) and be either instantaneous or have real-valued time durations. The system is stationary and has discrete states which means that a sample (trajectory) for the system consists of a series of times at which the system jumped from one state to another.\nSuch models are common in the queueing theory and verification literatures. The algorithms developed there almost exclusively focus on steady-state properties of the system. A singular exception is the work of Sutton and Jordan (2008) which applied Gibbs sampling to queueing models. By contrast, the continuous\ntime Bayesian network (Nodelman et al., 2002) literature has focused on finite-time properties, so we compare against those algorithms.\nIn verification, continuous-time models can be used to compute the probability a system will function by a given time, such as in continuous stochastic logic (Baier et al., 2003). Other problems of interest include state estimation in asynchronous systems, such as distributed computer systems (Xu and Shelton, 2010), robotics (Ng et al., 2005), social networks (Fan and Shelton, 2009), or phylogenetic trees (Cohn et al., 2009)."
    }, {
      "heading" : "1.1 Parameterization",
      "text" : "Such a Markovian system is described by an initial distribution over the state space and an intensity (or rate) matrix, often denoted Q. The diagonal element qii = −qi where qi ≥ 0 is the rate of leaving state i. This means that the density of the duration of the process remaining in state i for exactly a duration ∆t is an exponential distribution: qieqi∆t. The non-diagonal elements, qij ≥ 0 are the rates of transitioning from state i to state j. qi = ∑ j qij in a closed system. (The rate of leaving a state is equal to the sum of the rates of moving to any other state.) The probability of transitioning to state j immediately upon leaving state i is qij/qi. Note that the diagonal elements of Q are non-positive and the non-diagonal elements are non-negative. The sum of each row is 0.\nMonitoring such a system consists of keeping track of the probability distribution over the state at the current time t, given all evidence prior to t. We would like a recursive solution in which evidence before t can be discarded once the distribution (or its estimate) at t has been computed. As an initial problem, we will be interested in tracking in the absence of any evidence. We will cover how to incorporate evidence in Section 5.\nTo simplify notation, we will assume that we have the distribution at time 0 and wish to propagate this dis-\ntribution to time t. If p is the distribution at time 0, represented as a row vector, then p′, the distribution at t also represented as a row vector, is\np′ = peQt\nwhere eQt is the matrix exponential of Qt. For a few hundred states, this computation is tractable. Yet, the number of states of a system grows exponentially with the number of properties required to describe the system’s state. Very quickly it becomes impossible to represent the matrix Q or even the result p′ exactly. It should be noted that almost any useful structure that might be imposed on Q is destroyed by the matrix exponential. Kronecker-sum constructions of Q are the sole exception, but they represent processes with completely independent sub-processes and are therefore not interesting on their own.\nPrevious results have looked at sparse representations of p and p′ (Sidje et al., 2007). These work well for systems with very tightly coupled components in which there are only a few joint assignments to the system properties that have large probability at any one time. By contrast, in this work we are interested in systems with many (relatively) weakly interacting components. Therefore, instead of approximating p and p′ with sparse vectors, we will approximate them with factored representations.\nIn order to have a factored representation, any state must be able to be described as a set of properties or variables. We let Xi represent variable i (out of n); an assignment to Xi is denoted xi; and therefore a joint assignment (a complete state) x = (x1, . . . , xn). We will, therefore, be considering the case of calculating p′ = peQt when p is approximated as p̂(x) = ∏ i p̂i(xi)\nand p′ is similarly approximated as p̂′(x) = ∏\ni p̂ ′ i(xi).\nExample. Our running example will use a 4-state system described by the rate matrix\nQ = 264−4 1 3 02 −7 0 54 0 −5 1 0 6 2 −8 375 . If the distribution at t = 0 is p = [ 0.4 0.1 0.2 0.3 ] , the marginal distribution at t = 0.5 is\np′ = pe0.5Q = p 2640.4313 0.1443 0.3098 0.11470.2958 0.2648 0.2221 0.21730.4106 0.1406 0.3305 0.1183 0.2886 0.2622 0.2293 0.2199 375 = [0.3708 0.1910 0.2810 0.1572] ."
    }, {
      "heading" : "2 Matrix Exponential Calculations",
      "text" : "Moler and Loan (2003) give an excellent description of the numeric difficulties in calculating the matrix expo-\nnential. We concentrate here on two of the principal methods for calculating peQt."
    }, {
      "heading" : "2.1 ODE",
      "text" : "One method is to rewrite f(t) = peQt as the ordinary differential equation\nḟ(t) = f(t)Q f(0) = p\nand solve using ODE integration methods. The most common ODE solver is the Runge-Kutta-Fehlberg (RKF) method which which adapts the step size to the current error, thereby allowing for quick progress at times of slow system change. The fundamental calculation is the multiplication of a current estimate of the distribution by Q to calculate the time derivative."
    }, {
      "heading" : "2.2 Uniformization",
      "text" : "Uniformization is a transformation of a continuoustime Markovian system into a discrete-time one. However, it does not correspond to constructing either the embedded Markov chain of the continuous-time process, nor to time-slicing the system at regular intervals. It is equivalent to sampling the intervals between potential state changes from an exponential with rate α and then sampling a suitable Markov chain just at these time points (with stochastic matrix M), so that the resulting distribution over trajectories matches the original continuous-time Markov system.\nMathematically we can construct α and M as follows. We express the rate matrix Q as\nQ = α(M − I)\nso that—provided α ≥ maxi qi—M is a stochastic matrix: all elements are on [0, 1] and the rows sum to 1. Ideally α should be as small as possible as it represents the rate of the process sampling the intervals. Note that while the continuous-time process never has a “self-transition” explicitly, M does have non-zero diagonal elements (corresponding to those states whose rates of leaving are not maximal).\nThis can be applied to the matrix exponential calculation as\neQt = eα(M−I)t = eαtMe−αt .\nIn the context of the matrix exponential, this transformation is usually performed to remove the negative elements in the resulting Taylor expansion and thereby stabilize the calculation. We wish to calculate\npeQt = pe−αteαtM = e−αt ∞∑ k=0 (αt)k k! pMk . (1)\nGiven that M is a stochastic matrix, p′ is a infinite mixture of distributions p, pM, pM2, . . . with weights e−αt, e−αtαt, e−αt αt2 , . . . . Each distribution corresponds to k steps of the Markov chain of M and the weights are the probabilities that exactly k steps happen in a time period of t. These distributions are calculated recursively, so the important subcalculation is the multiplication of a state distribution by M .\nExample. Uniformization on the Q matrix results in α = 8 and\nM = 2640.5 0.125 0.375 00.25 0.125 0 0.6250.5 0 0.375 0.125 0 0.75 0.25 0 375 ."
    }, {
      "heading" : "2.3 Approximate Versions",
      "text" : "Both of these methods involve the calculation of state distributions and their multiplication by either Q or M . We will use v to denote any state distribution vector generated during the course of such a calculation. For the ODE method, v is a particular point and vQ is its time derivative. For uniformization, v is an element of the sum and vM is the next element.\nWhile we might assume that the problem specification is compact and thereby assume that p and Q have compact representations, for a system with many variables, it is usually not possible to express intermediate v values exactly, as structure that may exist in p and Q does not exist in v. Therefore, the most direct method for constructing an approximate filtering algorithm is to keep v restricted to a smaller representation.\nIn the case for uniformization, Sidje et al. (2007) proposed keeping a sparse representation for v (by dropping elements less than a given threshold). If Q has a sparse representation (only a small fraction of any row are non-zero) and any given row can be generated as needed, this results in an algorithm with nonexponential running time (in n, the number of variables). We call this method sparse uniformization.\nSparse uniformization works well for problems in which the distribution to be tracked is highly peaked. However, in problems in which the variables may be more loosely coupled (and therefore an assignment to one does not necessarily dictate a joint assignment to all), this approximation will either be poor, or it will require a large number of states to be tracked, thereby defeating the quick runtime.\nFor such systems, a factored representation of v (as suggested above) is more suitable. This naturally suggests two approximate algorithms. First, we might force the RKF integrator to project v to the space of factored distributions. Second, we might force the\nuniformization method to project v to the space of factored distributions. We call these factored RKF and factored uniformization."
    }, {
      "heading" : "2.4 Notation",
      "text" : "We will concentrate on approximate calculations of vM (vQ is similar). We consider one subcalculation in the form v′ = vM . Let v̂ be the current approximation of v in factored form: v̂(x) = ∏ i v̂i(xi). Similarly, let v̂′ = v̂M , the result of multiplying v̂ by M , which is not necessarily completely factored. Finally let ṽ be the projection of v̂′ to the set of factored distributions.\nLetM⊥ be the operator that both multiplies byM and projects to the space of factored distributions. Thus ṽ = v̂M⊥ and is a factored distribution (v̂′ is not).\nWe abuse notation and let any vector also stand for the distribution it embodies. Further, for any vector v, we let vi be the marginal distribution of v over the variable xi (even if v is not factored), v−i be the marginal distribution over all variables except xi, vui be the marginal distribution over all of xi’s parents, and vi|−i be the distribution over xi conditioned on all the other variables."
    }, {
      "heading" : "3 Factored Rate Matrix",
      "text" : "For either factored approximate method, we need to be able to calculate the projection of vM (or vQ) onto the space of factored distributions without explicitly generating vM as an exponentially large vector.\nWhile our methods are applicable to Petri nets (Petri, 1962), edge-valued decision diagrams (Wan et al., 2011), and other compact representation of the rate matrix, we focus on using a continuous time Bayesian network (CTBN) to representQ. We note that a correspondence between CTBNs and Petri nets has already been established (Raiteri and Portinale, 2009)."
    }, {
      "heading" : "3.1 Continuous Time Bayesian Network",
      "text" : "A continuous time Bayesian network (CTBN) (Nodelman et al., 2002) has an initial distribution described by a Bayesian network that is not of direct importance to this work. It has a factored representation of the matrix Q. Each variable’s dynamics depend only on a subset of the other variables (which we denote as parents). Let U i be the parents of Xi. Then for every assignment ui to U i there exists an intensity matrix QXi|ui of dimension equal to the number of states of Xi. It describes the rates of change for Xi when its parents equal ui. If we let δ(x,x′) be the set of variable indexes for which the assignments in x and x′\ndiffer, the complete Q matrix is\nQ(x,x′)=  ∑ kQXk|uk(xk, x ′ k) if x=x ′ QXj |uj (xj , x ′ j) if δ(x,x\n′)={j} 0 otherwise.\nSo Q is sparse (mostly zeros) with non-zero elements on the diagonal and where only one variable changes. It has the form of a sum of factors (compared with a Bayesian network’s product of factors).\nExample. The Q matrix of our example can be represented by a CTBN of two variables: A (with values a0 and a1) and B (with values b0 and b1). A has no parents and is the parent of B. If we let\nQA = » −1 1 2 −2 – , QB|a0 = » −3 3 4 −4 – , QB|a1 = » −5 5 6 −6 – then the full system has the previous Q matrix if the global states are ordered a0b0, a1b0, a0b1, a1b1.\nTo construct the uniformized matrix M , we would like to select α to be the maximally negative diagonal element. In practice this could be a difficult optimization problem. So, instead we select α = ∑n i=1 αi where αi = −minui minxi QXi|ui(xi, xi), the maximally negative diagonal element for Xi for any ui. We let MXi|ui = QXi|ui/αi + I be the stochastic matrix we obtain for Xi with parent assignment ui using uniformization constant αi. The stochastic matrixM can then be described as\nM(x,x′)=  ∑ k M̃Xk|uk(xk, x ′ k) if x=x ′ M̃Xj |uj (xj , x ′ j) if δ(x,x\n′)={j} 0 otherwise.\nwhere M̃Xi|ui = αi α MXiui + α−αi α I. The stochastic matrix M cannot be described as a dynamic Bayesian network (DBN): it has an additive structure, not a multiplicative one, and does not allow the transition of multiple variables. However, M can be described as a mixture of particularly simple DBN transition models: M = ∑ i αi α Mi where\nMi(x,x′)=  MXi|ui(xi, x ′ i) if x=x ′ MXi|ui(xi, x ′ i) if δ(x,x\n′)={i} 0 otherwise.\nIn particular, it describes a mixture in which with probability αiα variable i transitions according to MXi|Ui and all other variables remain the same. The ith mixture DBN has a structure in which all variables x′j , where j 6= i, have only xj (the same node in the previous slice) as a parent. Variable x′i has the same parents as in the CTBN, with the addition of xi. No intra-slice arcs exist.\nExample. αA = 2, αB = 6 and so α = 8 (as before). We can decompose the same M as before into\nMA= » 0.5 0.5 1 0 – ,MB|a0 = » 0.5 0.5 0.67 0.33 – ,MB|a1 = » 0.17 0.83 1 0 – which can be viewed as a Markov chain in which with probability 28 A transitions according to MA, otherwise B transitions according to MB|a0 or MB|a1 ."
    }, {
      "heading" : "3.2 Calculating Factored vM",
      "text" : "Given the mixture-of-DBN interpretation above of M , it is not surprising that ṽ = v̂M⊥ can be calculated in one step without constructing v̂M . As Q has the same structure, the same method works for it too.\nAs projection onto a particular variable, xj , is linear, if M⊥j is the composition of M and the projection onto xj , then M⊥j = ∑ i αi α Mi⊥j where Mi⊥j is the composition of Mi and projection operation onto xj . Furthermore, in Mi only variable i can change:\nṽj = v̂M⊥j = ∑ i αi α v̂Mi⊥j = (1− αj α )v̂j + αj α v̂Mj⊥j .\nMj⊥j is the marginal over xj after a transition according to Mj . No other variable changes, so this is the expectation of MXj |Uj over v̂’s distribution over U j :\nṽj = v̂j [ (1− αj\nα )I + αj α ∑ uj v̂uj (uj)MXj |uj ] = v̂j [∑ uj v̂uj (uj)M̃Xj |uj ] (2)\nTo calculate v̂Q and project onto xj , Equation 2 holds if we change M̃Xj |uj to QXj |uj . Example. Starting distribution p marginals v̂A =[ 0.6 0.4 ] and v̂B = [ 0.5 0.5 ] . Multiplying this factored approximation by M and then projecting can be done by multiplying vA by M̃A and vB by 0.6M̃B|a0 + 0.4M̃B|a1 :\nM̃A= » .875 .125 .25 .75 – , M̃B|a0= » .625 .375 .5 .5 – , M̃B|a1= » .375 .625 .75 .25 – ."
    }, {
      "heading" : "4 Bounds for Factored Uniformization",
      "text" : "While we have not found a suitable way of bounding the approximation error for factored RKF, we can derive bounds similar to those of the BK algorithm (Boyen and Koller, 1998) for discrete-time stochastic processes to bound the error in propagation and projection through a single M matrix. However, because the process is a mixture of processes in which only a single component changes, the BK result for compound processes does not carry over.\nWe then use this bound to bound the error of the entire Taylor expansion and thereby the factored uniformization method."
    }, {
      "heading" : "4.1 Divergence Bound for Single Step",
      "text" : "We first concentrate on bounding the error of a single multiplication by M . We wish to show that the KL-divergence between v′ = vM and v̂′ = v̂M is no greater than that between v and v̂.\nWe begin with a simple property of the KL-divergence. The proof is omitted, but is a consequence of the fact that entropy does not increase upon conditioning.\nLemma 1. If q(x) = ∏\ni q(xi) is a factored distribution and p(x) is a (non-factored) distribution over the same sample space, and x−i is the set of all variables except xi,∑\niDKL(p(xi | x−i)‖q(xi)) ≥ DKL(p(x)‖q(x)) .\nWe require a mixing rate definition from Boyen and Koller (1998):\nDefinition 2. The mixing rate of a stochastic matrix M is defined as γ , mini1,i2 ∑ j min(Mi1,j ,Mi2,j).\nWe can then state that M is a contraction mapping with respect to the KL-divergence:\nTheorem 3. Let γi be the minimum (over ui) mixing rate of the stochastic matrix MXi|uiand γ = mini αiγi α . Then, DKL(v′‖v̂′) ≤ (1− γ)DKL(v‖v̂) .\nProof. If we let v′(i) = vMi and v̂′(i) = v̂Mi, then\nDKL(vM‖v̂M) = DKL( ∑ i αi α v ′(i)‖ ∑ i αi α v̂ ′(i))\n≤ ∑\ni αi α DKL(v ′(i)‖v̂′(i)) = ∑\ni αi α ( DKL(v ′(i) −i ‖v̂ ′(i) −i ) +DKL(v ′(i) i|−i‖v̂ ′(i) i|−i) ) ≤ ∑\ni αi α ( DKL(v−i‖v̂−i) + (1−γi)DKL(vi|−i‖v̂i|−i) ) = ∑\ni αi α ( DKL(v‖v̂)− γiDKL(vi|−i‖v̂i|−i) ) ≤ DKL(v‖v̂)− γ ∑ iDKL(vi|−i‖v̂i) ≤ DKL(v‖v̂)− γDKL(v‖v̂)\nThe first inequality is from the convexity of the KL-divergence (Cover and Thomas, 1991, Theorem 2.7.2). The next inequality holds because Mi does not change any variables except xi and the conditional KL-divergence of xi contracts by γi (Boyen and Koller, 1998, Theorem 3). The final inequality is due to the lemma above.\nNote that unlike in BK, the global contraction rate (γ) does not depend on the in- or out-degree of model, but it is inversely proportional to n. This appears\nunfortunate, but the next section demonstrates that it is not a problem for the contraction rate of the entire Taylor expansion.\nWe upper-bound the increase from projection:\nDKL(vM‖v̂M⊥)−DKL(vM‖v̂M) ≤ .\nAs a crude upper bound, ≤ −(n−1) ln η where η is the smallest marginal probability. As shown by Boyen and Koller (1999), better bounds can be placed by more careful analysis or considering the average case.\nTaken together this means that after a single multiplication and projection, the KL-divergence error of our estimate can be bounded as\nDKL(vM‖v̂M⊥) ≤ (1− γ)DKL(v‖v̂) + . (3)\nExample. We have γA = 0.5, γB|a0 = 0.5, γB|a1 = 0.17. Therefore γ = min(0.5× 28 , 0.17× 6 8 ) = 0.125. Therefore the KL-divergence between the true answer and the factored approximation contracts by 1 − 0.125 = 0.825 for each multiplication by M ."
    }, {
      "heading" : "4.2 Bound on Approximate Taylor Expansion",
      "text" : "Our goal is not to bound the error on a single step, but rather the error of our entire approximation to the matrix exponential. Equation 3 implies that\nDKL(vMk‖v̂Mk⊥) ≤ (1−γ)kDKL(v‖v̂) + k−1∑ i=0 (1−γ)i\n= (1−γ)kDKL(v‖v̂) + 1−(1−γ) k\nγ (4)\nIf we combine the bound from Equation 4 with the Taylor expansion of Equation 1, we can obtain a bound on the KL-divergence between the true matrix exponential, and an approximation of the Taylor expansion in which each vector of probabilities is approximated by a factored form and only the first l terms are evaluated (and then renormalized): Theorem 4. Let α, , and γ be as defined above. Let p be an arbitrary distribution over the state space of the process. Let p̂ be an arbitrary factored distribution over the same. Further, let p′ = peQt be the distribution at time t in the future, and let p̂′ =\n1 1−Rl ∑l k=0 e −αt (αt)k k! p̂M k ⊥ be the approximation of p ′ constructed by uniformization of a Taylor expansion truncated to l terms in which each matrix multiplication is projected back to the space of factored distributions. Rl = ∑∞ k=l+1 e −αt (αt)k k! . Then\nDKL(p′‖p̂′) ≤ e−γαtDKL(p‖p̂)+ γ (1−e−γαt)+Rl(δ+ γ )\nwhere δ = maxx − ln p̂′x, the maximum negative log probability over any joint assignment in the final approximate calculation.\nProof. For compactness of presentation, let βk = e−αt (αt) k\nk! , γ̄ = (1− γ), and R̄l = (1−Rl). Then\nDKL(p′‖p̂′) = DKL( ∑∞ k=0βkpM k‖ 1\nR̄l\n∑l k=0βkp̂M k ⊥)\n≤ R̄lDKL( 1R̄l ∑l k=0βkpM k‖ 1 R̄l ∑l k=0βkp̂M k ⊥)\n+RlDKL( 1Rl ∑∞ k=l+1e −αtβkpM k‖ 1 R̄l ∑l k=0βkp̂M k ⊥)\n≤ ∑l\nk=0βkDKL(pM k‖p̂Mk⊥) +Rlδ ≤ ∑l\nk=0βk[γ̄ kDKL(p‖p̂) + (1− γ̄k)/γ] +Rlδ\n≤ e−γαtDKL(p‖p̂) + γ (1− e −γαt) +Rl(δ + γ̄\nl\nγ ) .\nThe first inequality is due to the convexity of the KLdivergence in only the first argument. The second is due to the convexity of the KL-divergence in both arguments, and that the KL-divergence is bounded by the negative log of smallest probability of the second argument. The third is due to Theorem 3. The final is due to bounding a finite Taylor expansion of an exponential by the exponential.\nNote that Rl goes to zero as l grows. In the remaining terms, γ almost always appears multiplied by α. In the previous section, we commented on how γ is inversely proportional to n. However, α is proportional to n and they exactly cancel out. Thus if l is large enough, we can let γ′ = mini αiγi and conclude\nDKL(p′‖p̂′) ≤ e−γ ′tDKL(p‖p̂) +\nα γ′ (1− e−γ ′t) . (5)\nThus the contraction rate for the full approximation is not a function of n. It is unclear how α scales with n.\nWe are then left with two error terms. The first decays with t and the second grows with t (but is bounded). The resulting distribution p̂′ is a mixture of factored distributions. So, if filtering is to continue past time t, p̂′ must be projected back to the space of factored distributions, introducing another similar additive error. This may happen either because evidence arrives at t and requires conditioning, or because we may wish to subdivide a propagation from 0 to t into m propagations of length t/m. Equation 5 implies this is not helpful for accuracy (if one considers applying the bound recursively m times over intervals of length t/m). However, our experimental results show that some interval subdivision is helpful.\nExample. γ′ = γα = 1. For large l, the KLDivergence between the true distribution and the factored approximation before (DKL) and after propagation to t = 0.5 (D′KL) is related by\nD′KL ≤ 0.61DKL + (8 /1)(1− 0.61)\nwhere we note that e−1×0.5 ≈ 0.61. If the smallest possible marginal probability is 0.01, then a crude upperbound on is − ln 0.01 = 4.6."
    }, {
      "heading" : "5 Adding Evidence",
      "text" : "So far, we have discussed only how to filter without evidence. In a continuous-time process, evidence can take on two forms. First, it can be point evidence. That is, at time t we observe the values of certain variables, but for no duration. We propagate to the time of the evidence, condition the distribution on the evidence, and then continue. In this case, conditioning on the evidence in expectation reduces the error (Boyen and Koller, 1998, Fact 1).\nThe second form of evidence is interval evidence: a variable remains in a particular state from t1 to t2. In this case, at t1 we condition on the evidence (same as for point evidence, above). From t1 until t2, we monitor using a modified Q matrix in which all transitions where the evidence variable changes are set to 0 (but the diagonal elements remain unchanged). The resulting p̂ sums to the probability of the interval evidence, but it can be normalized to yield the conditional distribution of the state. The normalization makes the analysis difficult. However, we conjecture that interval evidence will also not increase the error in expectation.\nFinally we note that the sparse uniformization method can have serious difficulties with evidence if none of the maintained states are consistent with the evidence.\nExample. Given the previous distribution p for t = 0, and B = b0 on t = [0.5, 1), we propagate p to t = 0.5 using Equation 1 (bounded), with Equation 2 to calculate the projected multiplications. We get the factored distribution p̂A = [ 0.65 0.35 ] , p̂B = [ 0.56 0.44 ] .\nWe condition on B = b0 by setting p̂B = [ 1 0 ] . Then we similarly propagate to t = 1, but using\nQA = » −1 1 2 −2 – , QB|a0 = » −3 0 0 0 – , QB|a1 = » −5 0 0 0 – for which αA = 2, αB = 5, and α = 7:\nMA= » 0.5 0.5 1 0 – ,MB|a0 = » 0.4 0 0 1 – ,MB|a1 = » 0 0 0 1 – ."
    }, {
      "heading" : "6 Experimental Results",
      "text" : "We employed two synthetic networks and a network built from a real data set in our evaluations. Since exact filtering is intractable for large models, we limited the number of variables to allow for calculations of the true approximation errors.\nThe synthetic networks we use are the ring and toroid dynamic Ising networks of 20 binary variables from ElHay et al. (2010). The ring network is bidirectional, while the toroid is directed. Nodes try to track their parents with a coupling parameter, β, indicating the\nstrength of the influence, and a rate parameter τ that is inversely proportional to the expected time between switching. We set τ = 4 and β = 1. We set both networks to have a deterministic starting distribution. For the toroid the first 5 variables are in state 0 and the remaining variables are in state 1. The ring network’s initial distribution is the reverse.\nThe real network we used was constructed from the British Household Panel Survey (BHPS) data set (Economic & Social Research Council, 2003). The data set records major life changes from a set of roughly 8,000 British citizens in areas including household organization, employment, income, wealth and health. We use the same network model as in Fan et al. (2010) and Nodelman et al. (2005) which chooses 4 variables: employment (student, employed, unemployed), children (0, 1,≥2), married (not married, married) and smoking (non-smoker, smoker) and adds a hidden binary variable for each (Figure 1a). The structure and parameters of both the initial distribution and the dynamics were learned by the structural EM algorithm (Nodelman et al., 2005) and we used the learned network model for our experiments."
    }, {
      "heading" : "6.1 KL-Divergence Bound",
      "text" : "Our first experiment tested the theoretic error bound. Figure 1 shows the KL-divergence between the true marginals and the marginals computed by factored uniformization for the BHPS network and the toroid network. The bound on the KL-divergence of the full distribution is also a bound on any marginal, and experimentally the errors on the marginals grow initially and then asymptote, as per Theorem 4."
    }, {
      "heading" : "6.2 Approximation Comparison",
      "text" : "We then compared our factored uniformization method (UF) to other approximations. In particular, we compared to factored RKF (RKFF), as explained in Section 2.1, sparse uniformization (US), and the mean field (MF) approach of Cohn et al. (2009) for CTBNs. For the purpose of comparison, the MF method was\nextended to accept evidence on subsets of variables.\nWe varied an error tolerance parameter for each method to map the trade-off between error and runtime. For UF, we varied the uniformization-specific parameter θ that determines the number of intervals of propagation (see Sidje et al., 2007). We fixed the number of terms of the Taylor series expansion (l) to a value that performed reasonably. Similarly, for sparse uniformization we varied θ and fixed l to a wellperforming value. MF and RKFF both use RKF for integration, so we varied the error tolerance of RKF.\nThe evidence for the ring and toroid networks was set to be relatively unexpected: for t ∈ [0.5, 1.0) x0 = 1 and x1 = 0. For the ring, we queried the distribution of x10 (far from the evidence) and x19 (adjacent to the evidence) at time t = 1. For the toroid, we queried the distribution of x6 (adjacent to the evidence) and x13 (a node more the in middle) at t = 1. For the BHPS network, we chose evidence where employment is observed to be in the student state continuously from year 1 to year 5. We queried the marginal distribution of the variables smoking and children at t = 5 years.\nFigure 2 shows the KL-divergence between the true and approximated marginals of the query variable for each of the three networks for each query. These results are typical of other query marginals. In general, factored uniformization (UF) performs the best, especially for smaller running times (with US occasionally being the method of choice for longer running times). However, when the query node is close to the evidence, RKFF performs better (x10 for the ring and x13 for the toroid network are examples). The advantage of US for longer running times is predictable as it approaches the true value as more states are retained. Finally, note that for the BHPS query over the children variable, US has infinite KL-divergence (and hence does not appear on the plot). This is because all of the retained states have this variable equal to 0. While this is certainly the most common value at t = 5, it does not have probability 1 under the true distribution and thus the KL-divergence between the true distribution and the approximation of US is infinite."
    }, {
      "heading" : "7 Conclusion",
      "text" : "We have demonstrated approximate continuous-time filtering based on uniformization. It is simple to implement, and we have proven bounds on the KLdivergence of its error. The approximation can be made more accurate by lumping together variables into joint marginals. The bounds are similar in style to those of BK and also depend on the mixing time of the individual components (adjusted for the continuoustime nature of the system). Our experimental results demonstrate that the theoretic bounded error holds in practice. Furthermore, our method gives superior time-accuracy trade-offs for most of the examples tested in this paper."
    } ],
    "references" : [ {
      "title" : "Model checking algorithms for continuous-time Markov chains",
      "author" : [ "C. Baier", "B. Haverkort", "H. Hermanns", "Katoen", "J.-P." ],
      "venue" : "IEEE Trans. on Soft. Eng., 29(6):524– 541.",
      "citeRegEx" : "Baier et al\\.,? 2003",
      "shortCiteRegEx" : "Baier et al\\.",
      "year" : 2003
    }, {
      "title" : "Tractable inference for complex stochastic processes",
      "author" : [ "X. Boyen", "D. Koller" ],
      "venue" : "UAI, pages 33–42.",
      "citeRegEx" : "Boyen and Koller,? 1998",
      "shortCiteRegEx" : "Boyen and Koller",
      "year" : 1998
    }, {
      "title" : "Exploiting the architecture of dynamic systems",
      "author" : [ "X. Boyen", "D. Koller" ],
      "venue" : "AAAI, pages 313–320.",
      "citeRegEx" : "Boyen and Koller,? 1999",
      "shortCiteRegEx" : "Boyen and Koller",
      "year" : 1999
    }, {
      "title" : "Mean field variational approximation for continuous-time Bayesian networks",
      "author" : [ "I. Cohn", "T. El-Hay", "R. Kupferman", "N. Friedman" ],
      "venue" : "UAI.",
      "citeRegEx" : "Cohn et al\\.,? 2009",
      "shortCiteRegEx" : "Cohn et al\\.",
      "year" : 2009
    }, {
      "title" : "Elements of Information Theory",
      "author" : [ "T.M. Cover", "J.A. Thomas" ],
      "venue" : "John Wiley & Sons, Inc.",
      "citeRegEx" : "Cover and Thomas,? 1991",
      "shortCiteRegEx" : "Cover and Thomas",
      "year" : 1991
    }, {
      "title" : "Continuous-time belief propagation",
      "author" : [ "T. El-Hay", "I. Cohn", "N. Friedman", "R. Kupferman" ],
      "venue" : "ICML, pages 343–350.",
      "citeRegEx" : "El.Hay et al\\.,? 2010",
      "shortCiteRegEx" : "El.Hay et al\\.",
      "year" : 2010
    }, {
      "title" : "Learning continuoustime social network dynamics",
      "author" : [ "Y. Fan", "C.R. Shelton" ],
      "venue" : "UAI.",
      "citeRegEx" : "Fan and Shelton,? 2009",
      "shortCiteRegEx" : "Fan and Shelton",
      "year" : 2009
    }, {
      "title" : "Importance sampling for continuous time Bayesian networks",
      "author" : [ "Y. Fan", "J. Xu", "C.R. Shelton" ],
      "venue" : "JMLR, 11(Aug):2115–2140.",
      "citeRegEx" : "Fan et al\\.,? 2010",
      "shortCiteRegEx" : "Fan et al\\.",
      "year" : 2010
    }, {
      "title" : "Nineteen dubious ways to compute the exponential of a matrix, twentyfive years later",
      "author" : [ "C. Moler", "C.V. Loan" ],
      "venue" : "SIAM Review, 45(1):3–49.",
      "citeRegEx" : "Moler and Loan,? 2003",
      "shortCiteRegEx" : "Moler and Loan",
      "year" : 2003
    }, {
      "title" : "Continuous time particle filtering",
      "author" : [ "B. Ng", "A. Pfeffer", "R. Dearden" ],
      "venue" : "IJCAI, pages 1360–1365.",
      "citeRegEx" : "Ng et al\\.,? 2005",
      "shortCiteRegEx" : "Ng et al\\.",
      "year" : 2005
    }, {
      "title" : "Continuous time Bayesian networks",
      "author" : [ "U. Nodelman", "C.R. Shelton", "D. Koller" ],
      "venue" : "UAI, pages 378–387.",
      "citeRegEx" : "Nodelman et al\\.,? 2002",
      "shortCiteRegEx" : "Nodelman et al\\.",
      "year" : 2002
    }, {
      "title" : "Expectation maximization and complex duration distributions for continuous time Bayesian networks",
      "author" : [ "U. Nodelman", "C.R. Shelton", "D. Koller" ],
      "venue" : "UAI, pages 421–430.",
      "citeRegEx" : "Nodelman et al\\.,? 2005",
      "shortCiteRegEx" : "Nodelman et al\\.",
      "year" : 2005
    }, {
      "title" : "Kommunikation mit Automaten",
      "author" : [ "C.A. Petri" ],
      "venue" : "PhD thesis, University of Bonn.",
      "citeRegEx" : "Petri,? 1962",
      "shortCiteRegEx" : "Petri",
      "year" : 1962
    }, {
      "title" : "A GSPN semantics for continuous time Bayesian networks with immediate nodes",
      "author" : [ "D.C. Raiteri", "L. Portinale" ],
      "venue" : "Technical Report TR-INF-2009-03-03-UNIPMN, U. of Piemonte Orientale CS Dept.",
      "citeRegEx" : "Raiteri and Portinale,? 2009",
      "shortCiteRegEx" : "Raiteri and Portinale",
      "year" : 2009
    }, {
      "title" : "Inexact uniformization method for computing transient distributions of Markov chains",
      "author" : [ "R.B. Sidje", "K. Burrage", "S. MacNamara" ],
      "venue" : "SIAM Journal of Scientific Computation, 29(6):2562–2580.",
      "citeRegEx" : "Sidje et al\\.,? 2007",
      "shortCiteRegEx" : "Sidje et al\\.",
      "year" : 2007
    }, {
      "title" : "Probabilistic inference in queueing networks",
      "author" : [ "C.A. Sutton", "M.I. Jordan" ],
      "venue" : "SysML.",
      "citeRegEx" : "Sutton and Jordan,? 2008",
      "shortCiteRegEx" : "Sutton and Jordan",
      "year" : 2008
    }, {
      "title" : "Approximate steady-state analysis of large Markov models based on the structure of their decision diagram encoding",
      "author" : [ "M. Wan", "G. Ciardo", "A.S. Miner" ],
      "venue" : "Performance Evaluation, 68(5):463–486.",
      "citeRegEx" : "Wan et al\\.,? 2011",
      "shortCiteRegEx" : "Wan et al\\.",
      "year" : 2011
    }, {
      "title" : "Intrusion detection using continuous time Bayesian networks",
      "author" : [ "J. Xu", "C.R. Shelton" ],
      "venue" : "JAIR, 39:745–774.",
      "citeRegEx" : "Xu and Shelton,? 2010",
      "shortCiteRegEx" : "Xu and Shelton",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 10,
      "context" : "By contrast, the continuous time Bayesian network (Nodelman et al., 2002) literature has focused on finite-time properties, so we compare against those algorithms.",
      "startOffset" : 50,
      "endOffset" : 73
    }, {
      "referenceID" : 13,
      "context" : "A singular exception is the work of Sutton and Jordan (2008) which applied Gibbs sampling to queueing models.",
      "startOffset" : 36,
      "endOffset" : 61
    }, {
      "referenceID" : 0,
      "context" : "In verification, continuous-time models can be used to compute the probability a system will function by a given time, such as in continuous stochastic logic (Baier et al., 2003).",
      "startOffset" : 158,
      "endOffset" : 178
    }, {
      "referenceID" : 17,
      "context" : "Other problems of interest include state estimation in asynchronous systems, such as distributed computer systems (Xu and Shelton, 2010), robotics (Ng et al.",
      "startOffset" : 114,
      "endOffset" : 136
    }, {
      "referenceID" : 9,
      "context" : "Other problems of interest include state estimation in asynchronous systems, such as distributed computer systems (Xu and Shelton, 2010), robotics (Ng et al., 2005), social networks (Fan and Shelton, 2009), or phylogenetic trees (Cohn et al.",
      "startOffset" : 147,
      "endOffset" : 164
    }, {
      "referenceID" : 6,
      "context" : ", 2005), social networks (Fan and Shelton, 2009), or phylogenetic trees (Cohn et al.",
      "startOffset" : 25,
      "endOffset" : 48
    }, {
      "referenceID" : 3,
      "context" : ", 2005), social networks (Fan and Shelton, 2009), or phylogenetic trees (Cohn et al., 2009).",
      "startOffset" : 72,
      "endOffset" : 91
    }, {
      "referenceID" : 14,
      "context" : "Previous results have looked at sparse representations of p and p′ (Sidje et al., 2007).",
      "startOffset" : 67,
      "endOffset" : 87
    }, {
      "referenceID" : 14,
      "context" : "In the case for uniformization, Sidje et al. (2007) proposed keeping a sparse representation for v (by dropping elements less than a given threshold).",
      "startOffset" : 32,
      "endOffset" : 52
    }, {
      "referenceID" : 12,
      "context" : "While our methods are applicable to Petri nets (Petri, 1962), edge-valued decision diagrams (Wan et al.",
      "startOffset" : 47,
      "endOffset" : 60
    }, {
      "referenceID" : 16,
      "context" : "While our methods are applicable to Petri nets (Petri, 1962), edge-valued decision diagrams (Wan et al., 2011), and other compact representation of the rate matrix, we focus on using a continuous time Bayesian network (CTBN) to representQ.",
      "startOffset" : 92,
      "endOffset" : 110
    }, {
      "referenceID" : 13,
      "context" : "We note that a correspondence between CTBNs and Petri nets has already been established (Raiteri and Portinale, 2009).",
      "startOffset" : 88,
      "endOffset" : 117
    }, {
      "referenceID" : 10,
      "context" : "A continuous time Bayesian network (CTBN) (Nodelman et al., 2002) has an initial distribution described by a Bayesian network that is not of direct importance to this work.",
      "startOffset" : 42,
      "endOffset" : 65
    }, {
      "referenceID" : 1,
      "context" : "While we have not found a suitable way of bounding the approximation error for factored RKF, we can derive bounds similar to those of the BK algorithm (Boyen and Koller, 1998) for discrete-time stochastic processes to bound the error in propagation and projection through a single M matrix.",
      "startOffset" : 151,
      "endOffset" : 175
    }, {
      "referenceID" : 1,
      "context" : "We require a mixing rate definition from Boyen and Koller (1998):",
      "startOffset" : 41,
      "endOffset" : 65
    }, {
      "referenceID" : 1,
      "context" : "As shown by Boyen and Koller (1999), better bounds can be placed by more careful analysis or considering the average case.",
      "startOffset" : 12,
      "endOffset" : 36
    }, {
      "referenceID" : 11,
      "context" : "The structure and parameters of both the initial distribution and the dynamics were learned by the structural EM algorithm (Nodelman et al., 2005) and we used the learned network model for our experiments.",
      "startOffset" : 123,
      "endOffset" : 146
    }, {
      "referenceID" : 7,
      "context" : "We use the same network model as in Fan et al. (2010) and Nodelman et al.",
      "startOffset" : 36,
      "endOffset" : 54
    }, {
      "referenceID" : 7,
      "context" : "We use the same network model as in Fan et al. (2010) and Nodelman et al. (2005) which chooses 4 variables: employment (student, employed, unemployed), children (0, 1,≥2), married (not married, married) and smoking (non-smoker, smoker) and adds a hidden binary variable for each (Figure 1a).",
      "startOffset" : 36,
      "endOffset" : 81
    }, {
      "referenceID" : 3,
      "context" : "1, sparse uniformization (US), and the mean field (MF) approach of Cohn et al. (2009) for CTBNs.",
      "startOffset" : 67,
      "endOffset" : 86
    } ],
    "year" : 2011,
    "abstractText" : "We consider filtering for a continuous-time, or asynchronous, stochastic system where the full distribution over states is too large to be stored or calculated. We assume that the rate matrix of the system can be compactly represented and that the belief distribution is to be approximated as a product of marginals. The essential computation is the matrix exponential. We look at two different methods for its computation: ODE integration and uniformization of the Taylor expansion. For both we consider approximations in which only a factored belief state is maintained. For factored uniformization we demonstrate that the KL-divergence of the filtering is bounded. Our experimental results confirm our factored uniformization performs better than previously suggested uniformization methods and the mean field algorithm. 1 Continuous-Time Markov Systems We are interested in monitoring (alternatively tracking or filtering) a continuous-time finite-state homogeneous Markovian stochastic system. This implies that evidence and events can arrive at any real-valued time (asynchronously) and be either instantaneous or have real-valued time durations. The system is stationary and has discrete states which means that a sample (trajectory) for the system consists of a series of times at which the system jumped from one state to another. Such models are common in the queueing theory and verification literatures. The algorithms developed there almost exclusively focus on steady-state properties of the system. A singular exception is the work of Sutton and Jordan (2008) which applied Gibbs sampling to queueing models. By contrast, the continuous time Bayesian network (Nodelman et al., 2002) literature has focused on finite-time properties, so we compare against those algorithms. In verification, continuous-time models can be used to compute the probability a system will function by a given time, such as in continuous stochastic logic (Baier et al., 2003). Other problems of interest include state estimation in asynchronous systems, such as distributed computer systems (Xu and Shelton, 2010), robotics (Ng et al., 2005), social networks (Fan and Shelton, 2009), or phylogenetic trees (Cohn et al., 2009). 1.1 Parameterization Such a Markovian system is described by an initial distribution over the state space and an intensity (or rate) matrix, often denoted Q. The diagonal element qii = −qi where qi ≥ 0 is the rate of leaving state i. This means that the density of the duration of the process remaining in state i for exactly a duration ∆t is an exponential distribution: qiei. The non-diagonal elements, qij ≥ 0 are the rates of transitioning from state i to state j. qi = ∑ j qij in a closed system. (The rate of leaving a state is equal to the sum of the rates of moving to any other state.) The probability of transitioning to state j immediately upon leaving state i is qij/qi. Note that the diagonal elements of Q are non-positive and the non-diagonal elements are non-negative. The sum of each row is 0. Monitoring such a system consists of keeping track of the probability distribution over the state at the current time t, given all evidence prior to t. We would like a recursive solution in which evidence before t can be discarded once the distribution (or its estimate) at t has been computed. As an initial problem, we will be interested in tracking in the absence of any evidence. We will cover how to incorporate evidence in Section 5. To simplify notation, we will assume that we have the distribution at time 0 and wish to propagate this distribution to time t. If p is the distribution at time 0, represented as a row vector, then p′, the distribution at t also represented as a row vector, is",
    "creator" : "TeX"
  }
}