How can we deploy a high-accuracy system starting with zero training examples?
We consider an "on-the-job" setting, where as inputs arrive, we use crowdsourcing to resolve uncertainty where needed and output our prediction when confident.
As the model improves over time, the reliance on crowdsourcing queries decreases.
We cast our setting as a stochastic game based on Bayesian decision theory, which allows us to balance latency, cost, and accuracy objectives in a principled way.
Computing the optimal policy is intractable, so we develop an approximation based on Monte Carlo Tree Search.
We tested our approach across three datasets---named-entity recognition, sentiment classification, and image classification.
On the NER task we obtained a 6--7 fold reduction in cost compared to full human annotation.
We also achieve a 17 percent F$_1$ improvement over having a single human label the whole set, and a 28 percent F$_1$ improvement over online learning.
