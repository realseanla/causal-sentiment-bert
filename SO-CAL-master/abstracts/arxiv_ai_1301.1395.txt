Previous research into the relation between ASP and classical logic has identified at least two different ways in which the former extends the latter.
First, ASP program typically contain sets of rules that can be naturally interpreted as inductive definitions, and the language FO(ID) has shown that such inductive definitions can elegantly be added to classical logic in a modular way.
Second, there is of course also the well-known epistemic component of ASP, which was mainly emphasized in the early papers on stable model semantics.
To investigate whether this kind of knowledge can also, and in a similarly modular way, be added to classical logic, the language of Ordered Epistemic Logic was presented in recent work.
However, this logic views the epistemic component as entirely separate from the inductive definition component, thus ignoring any possible interplay between the two.
In this paper, we present a language that extends the inductive definition construct found in FO(ID) with an epistemic component, making such interplay possible.
The eventual goal of this work is to discover whether it is really appropriate to view the epistemic component and the inductive definition component of ASP as two separate extensions of classical logic, or whether there is also something of importance in the combination of the two.
