We propose a technique for learning representations of parser states in transition-based dependency parsers.
Our primary innovation is a new control structure for sequence-to-sequence neural networks---the stack LSTM.
Like the conventional stack data structures used in transition-based parsing, elements can be pushed to or popped from the top of the stack in constant time, but, in addition, an LSTM maintains a continuous space embedding of the stack contents.
This lets us formulate an efficient parsing model that captures three facets of a parser's state: (i) unbounded look-ahead into the buffer of incoming words, (ii) the complete history of actions taken by the parser, and (iii) the complete contents of the stack of partially built tree fragments, including their internal structures.
Standard backpropagation techniques are used for training and yield state-of-the-art parsing performance.
